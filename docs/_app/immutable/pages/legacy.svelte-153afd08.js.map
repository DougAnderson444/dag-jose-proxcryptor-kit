{"version":3,"mappings":"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","names":["tag","create_if_block_2","create_if_block_1"],"sources":["../../../../../../src/lib/templates/Basic/Profile.svelte","../../../../../../src/lib/templates/Contacts/ContactCard.svelte","../../../../../../src/lib/templates/Contacts/GetTags.svelte","../../../../../../src/lib/TagAccess.svelte","../../../../../../src/lib/graphics/ShareIcon.svelte","../../../../../../src/lib/templates/ShareTagWith.svelte","../../../../../../src/lib/stores.js","../../../../../../src/lib/Common.svelte","../../../../../../src/lib/DAGJose.svelte","../../../../../../src/lib/TagValue.svelte","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/stores.js","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/components/ScannerBorders.svelte","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/assets/scan.svg","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/components/Results.svelte","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/utils/use-usermedia.svelte","../../../../../../node_modules/qrcode-scanner-svelte/src/lib/components/Scanner.svelte","../../../../../../src/lib/graphics/scanIcon.svelte","../../../../../../src/lib/components/nav/SearchResults.svelte","../../../../../../src/lib/components/nav/Search.svelte","../../../../../../src/lib/templates/Contacts/ShowContacts.svelte","../../../../../../src/lib/templates/Contacts/Contacts.svelte","../../../../../../src/lib/components/index.js","../../../../../../src/lib/components/ShowRoot.svelte","../../../../../../src/lib/App.svelte","../../../../../../src/routes/legacy.svelte"],"sourcesContent":["<script>\r\n\t// Basic template to show how to interact with the proxcryptor Parent component\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\r\n\t// Component props passed in from Parent Component\r\n\t// will also reactively update if updated in parent\r\n\texport let decryptedData;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst tag = 'Profile';\r\n\tlet schema;\r\n\tlet value;\r\n</script>\r\n\r\n<div transition:slide={{ delay: 100, duration: 400, easing: quintOut }}>\r\n\t<h3>{tag}</h3>\r\n\t<slot>\r\n\t\t<textarea bind:value />\r\n\t</slot>\r\n\r\n\t<div class=\"submit\">\r\n\t\t<button\r\n\t\t\ton:click|preventDefault={() => dispatch('handleSubmit', { tag, data: { value, schema } })}\r\n\t\t\t>Post</button\r\n\t\t>\r\n\t</div>\r\n</div>\r\n\r\n{#if decryptedData}\r\n\t{@html JSON.stringify(decryptedData, null, 2)}\r\n{/if}\r\n","<article class=\"contact-card\">\r\n\t<h2>\r\n\t\t<slot name=\"handle\">\r\n\t\t\t<span class=\"missing\">Unknown handle</span>\r\n\t\t</slot>\r\n\t</h2>\r\n\r\n\t<div class=\"address\">\r\n\t\t<slot name=\"publicKey\">\r\n\t\t\t<span class=\"missing\">Unknown publicKey</span>\r\n\t\t</slot>\r\n\t</div>\r\n\r\n\t<div class=\"email\">\r\n\t\t<slot name=\"latest\">\r\n\t\t\t<span class=\"missing\">Unknown latest value</span>\r\n\t\t</slot>\r\n\t</div>\r\n</article>\r\n\r\n<style>\r\n\t.contact-card {\r\n\t\tmin-width: 300px;\r\n\t\tborder: 1px solid #aaa;\r\n\t\tborder-radius: 2px;\r\n\t\tbox-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 1em;\r\n\t\tbackground: lemonchiffon;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0 0 0.2em 0;\r\n\t\tmargin: 0 0 1em 0;\r\n\t\tborder-bottom: 1px solid #008000;\r\n\t}\r\n\r\n\t.address,\r\n\t.email {\r\n\t\tpadding: 0 0 0 1.5em;\r\n\t\tbackground: 0 0 no-repeat;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tmargin: 0 0 0.5em 0;\r\n\t\tline-height: 1.2;\r\n\t}\r\n\r\n\t/* .address {\r\n\t\tbackground-image: url(/tutorial/icons/map-marker.svg);\r\n\t}\r\n\t.email {\r\n\t\tbackground-image: url(/tutorial/icons/email.svg);\r\n\t} */\r\n\t.missing {\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { getTagNodes } from '$lib/utils';\r\n\r\n\texport let rootCID;\r\n\r\n\tlet tagNodes;\r\n\r\n\t$: if (rootCID) processRootCID();\r\n\r\n\tasync function processRootCID() {\r\n\t\ttagNodes = await getTagNodes({ rootCID, ipfsNode: globalThis.ipfsNode });\r\n\t}\r\n</script>\r\n\r\n{#if tagNodes}\r\n\t{#await tagNodes}\r\n\t\tLoading tags\r\n\t{:then tagNodes}\r\n\t\t{#each tagNodes as tagNode}\r\n\t\t\t<slot {tagNode} />\r\n\t\t{/each}\r\n\t{/await}\r\n{/if}\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let tag;\r\n\texport let pubKey;\r\n\texport let checkAccess;\r\n\r\n\tlet accessCode;\r\n\tlet checked;\r\n\r\n\t$: if (!!tag && !!pubKey) doCheck();\r\n\r\n\tasync function doCheck() {\r\n\t\tconsole.log(`Checking access to ${tag} for `, { pubKey });\r\n\t\taccessCode = await checkAccess(tag, pubKey);\r\n\t\tchecked = true;\r\n\t}\r\n\r\n\tonMount(async () => {});\r\n</script>\r\n\r\n<div>\r\n\t{#if checked && accessCode}\r\n\t\t✔️ You have has access to their {tag}\r\n\t{:else}\r\n\t\t✖️ You have no access to {tag}\r\n\t{/if}\r\n</div>\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" viewBox=\"0 0 477.8 477.8\"\r\n\t><path\r\n\t\td=\"M367.75 288.5c-25 0-47.8 9.7-64.7 25.5l-65.2-39.4c3.7-11.2 5.7-23.1 5.7-35.6 0-12.4-2-24.4-5.7-35.6l65.3-39.5c16.9 15.8 39.7 25.5 64.7 25.5 52.3 0 94.7-42.4 94.7-94.7S420.15 0 367.85 0s-94.7 42.4-94.7 94.7c0 8.7 1.2 17.2 3.4 25.2l-65.3 39.5c-20.7-21.3-49.8-34.6-81.9-34.6-63 0-114.1 51.1-114.1 114.1S66.35 353 129.35 353c32.1 0 61.1-13.3 81.9-34.6l65.3 39.5c-2.2 8-3.4 16.5-3.4 25.2 0 52.3 42.4 94.7 94.7 94.7s94.7-42.4 94.7-94.7-42.5-94.6-94.8-94.6zM92.15 239c0 9.4-7.6 17-17 17s-17-7.6-17-17c0-39.3 32-71.3 71.3-71.3 9.4 0 17 7.6 17 17s-7.6 17-17 17c-20.6.1-37.3 16.8-37.3 37.3z\"\r\n\t/></svg\r\n>\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: 1em;\r\n\t\theight: auto;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport '$lib/search.css';\r\n\timport ShareIcon from '$lib/graphics/ShareIcon.svelte';\r\n\r\n\t//pass in props about what is being shared\r\n\texport let tag;\r\n\texport let setAccess;\r\n\texport let contacts;\r\n\r\n\t// export let contacts = []; // a @handle: pubkey mapping\r\n\r\n\tlet target;\r\n\tlet value;\r\n\tlet promiseToAllow;\r\n\tlet shared;\r\n\r\n\t$: if (value && contacts && contacts.length) {\r\n\t\tconsole.log({ contacts });\r\n\t\tlet match = contacts?.find((contact) => contact.handle === value);\r\n\t\ttarget = match || null;\r\n\t}\r\n\tfunction handleGrantAccess(_event) {\r\n\t\t// take value and add to this tag's reKey list\r\n\t\tpromiseToAllow = setAccess(tag, target.pubKey);\r\n\t}\r\n</script>\r\n\r\n<div>\r\n\t<div class=\"share\">\r\n\t\t<div class=\"share-item\">\r\n\t\t\t<ShareIcon />\r\n\t\t</div>\r\n\r\n\t\t<input class=\"share-item\" bind:value placeholder=\"Share {tag} with:\" />\r\n\t</div>\r\n\t<div>\r\n\t\t{#if target}\r\n\t\t\t✔️ Matched {target.handle} <button on:click={handleGrantAccess}>Grant Access</button>\r\n\t\t{:else if value}\r\n\t\t\t✖️ No matches for {value}\r\n\t\t{/if}\r\n\t</div>\r\n\r\n\t{#if promiseToAllow}\r\n\t\t{#await promiseToAllow}\r\n\t\t\tGranting access...\r\n\t\t{:then _}\r\n\t\t\tAccess Granted to {value}\r\n\t\t{/await}\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.share {\r\n\t\tpadding: 1em 0;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t}\r\n\t.share-item {\r\n\t\tmargin: 0.5em;\r\n\t}\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n","import { writable } from 'svelte/store';\r\n\r\nexport const rootCID = writable(null);\r\nexport const ipfsNode = writable(null);\r\nexport const CID = writable(null);\r\n\r\nexport const contacts = writable([]);\r\n","<script>\r\n\timport ShareTagWith from '$lib/templates/ShareTagWith.svelte';\r\n\timport { contacts } from '$lib/stores';\r\n\r\n\texport let getTagNode;\r\n\texport let decrypt;\r\n\texport let tag;\r\n\texport let rootCID;\r\n\texport let setAccess;\r\n\r\n\tlet tagNode;\r\n\tlet decryptedData = [];\r\n\tlet currentRoodCID;\r\n\tlet ready;\r\n\r\n\t// refresh on changes in tag or rootCID\r\n\t$: if (tag && rootCID && currentRoodCID !== rootCID) refreshedRootCID(); // trigger refresh whenever rootCID changes\r\n\r\n\texport async function refreshedRootCID() {\r\n\t\tconsole.log({ tag });\r\n\t\tready = false;\r\n\t\tcurrentRoodCID = rootCID;\r\n\t\ttagNode = await getTagNode(tag);\r\n\t\tconsole.log(tag, { tagNode });\r\n\t\tif (tagNode && tagNode.hasOwnProperty('encryptedData')) decryptedData = await decrypt(tagNode);\r\n\t\tready = true;\r\n\t}\r\n</script>\r\n\r\n{#if ready && tagNode && decryptedData}\r\n\t{#await decryptedData}\r\n\t\tDecrypting...\r\n\t{:then decryptedData}\r\n\t\t<!-- TODO: if no contacts, redirect to Contacts component so they can be decrypted  -->\r\n\t\t<ShareTagWith {tag} {setAccess} contacts={$contacts} />\r\n\r\n\t\t<slot {decryptedData} {refreshedRootCID} />\r\n\t{/await}\r\n{:else}\r\n\t<!-- No existing {tag} data yet: just show data entry portion, no data display (there's nothing to display yet) -->\r\n\t<slot decryptedData={null} {refreshedRootCID} />\r\n{/if}\r\n","<script lang=\"ts\">\r\n\t/*\r\n\tAll this component does is connect IPLD + proxcryptor + Saving Component Template so they can work together\r\n\t*/\r\n\timport { onMount, setContext } from 'svelte';\r\n\timport Basic from './templates/Basic/Profile.svelte';\r\n\timport Contacts from './templates/Contacts/_Contacts.svelte';\r\n\r\n\timport Common from './Common.svelte';\r\n\r\n\texport let rootCID;\r\n\texport let proxcryptor; // pass in a proxy re-encryptor prop\r\n\texport let ipfsNode; // pass in an instance of ipfs\r\n\texport let CID; // pass in https://github.com/multiformats/js-multiformats#interfaces\r\n\texport let tag;\r\n\r\n\tconst ROOT_CID = '__ROOT_CID__'; // Database key\r\n\r\n\tlet loaded = false;\r\n\r\n\t// functions\r\n\tlet handleRootCIDUpdate;\r\n\tlet loadRootCID;\r\n\r\n\tlet joseCryptor;\r\n\tlet setJoseCryptor;\r\n\tlet decryptFromTagNode;\r\n\r\n\tlet setAccess, checkAccess;\r\n\r\n\tlet getTagNodes;\r\n\r\n\texport let refreshedRootCID;\r\n\r\n\t//  onSubmitted gets bound to, and overwritten by active component\r\n\texport let onSubmitted = () => {}; // optional callback by child component to run after tx submitted\r\n\r\n\tonMount(async () => {\r\n\t\tconst { ImmortalDB } = await import('immortal-db');\r\n\r\n\t\tconst { DagJoseCryptor } = await import('./dagjosecryptor');\r\n\r\n\t\t// parse and use cached root CIDs, if saved\r\n\t\tloadRootCID = async () => {\r\n\t\t\tif (rootCID) return true;\r\n\t\t\tlet res = await ImmortalDB.get(ROOT_CID);\r\n\r\n\t\t\tif (!res) {\r\n\t\t\t\trootCID = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\trootCID = CID.asCID(res) || CID.parse(res);\r\n\t\t\tconsole.log('rootCID set in loadRootCID');\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tawait loadRootCID();\r\n\r\n\t\t// use the portal proxcryptor to encrypt the DAG JOSEs\r\n\t\tsetJoseCryptor = async () => {\r\n\t\t\tjoseCryptor = new DagJoseCryptor(ipfsNode, proxcryptor, rootCID); //refesh when updated\r\n\t\t\tif (!rootCID) loaded = true;\r\n\t\t};\r\n\r\n\t\thandleRootCIDUpdate = async () => {\r\n\t\t\trootCID = joseCryptor.rootCID;\r\n\t\t\tconsole.log('Updating rootCID', { rootCID: rootCID.toString() });\r\n\t\t\tImmortalDB.set(ROOT_CID, rootCID.toString());\r\n\t\t\tloaded = true;\r\n\t\t};\r\n\t});\r\n\r\n\t// set the cryptor once the proxcryptor is connected and available\r\n\t$: if (proxcryptor && setJoseCryptor) setJoseCryptor();\r\n\r\n\t// update the rootCID as req'd\r\n\t$: if (joseCryptor && joseCryptor.rootCID && handleRootCIDUpdate) handleRootCIDUpdate();\r\n\r\n\tlet decrypt = async (data) => await joseCryptor.selfDecrypt(data);\r\n\r\n\tconst handleSubmit = async function (event) {\r\n\t\tlet tag = event.detail.tag || null;\r\n\t\tlet schema = event.detail.data.schema || '';\r\n\t\tlet value = event.detail.data.value || null;\r\n\r\n\t\tif (!tag || !value) return; // TODO: Handle missing vals better\r\n\r\n\t\tconsole.log('Put: ', { tag, value });\r\n\r\n\t\tawait joseCryptor.put(value, tag, schema);\r\n\t\tjoseCryptor = joseCryptor; // refresh UI?\r\n\r\n\t\tonSubmitted(); // update selected component\r\n\t\trefreshedRootCID();\r\n\t};\r\n\r\n\t// save access function to a svelte store so it can be used by any component, any time\r\n\t// allows access to tag by someone's PublicKey\r\n\tsetAccess = async (tag: string, targetPublicKey: Uint8Array) => {\r\n\t\t// allow access to this tag by this public key\r\n\t\tawait joseCryptor.setTagReKeys(tag, targetPublicKey);\r\n\t\tjoseCryptor = joseCryptor; // triggers this.rootCID to fire\r\n\t};\r\n\r\n\tcheckAccess = async (tag: string, targetPublicKey: Uint8Array) => {\r\n\t\t// pass in someone's pubkey to see if they've got access to this tag data\r\n\t\treturn await joseCryptor.checkAccess(tag, targetPublicKey);\r\n\t};\r\n\r\n\tdecryptFromTagNode = async (tagNode) => {\r\n\t\treturn await joseCryptor.decryptFromTagNode(tagNode);\r\n\t};\r\n\r\n\tgetTagNodes = async () => {\r\n\t\tif (!ipfsNode || !rootCID) return;\r\n\r\n\t\tconst root = await ipfsNode.dag.get(rootCID);\r\n\t\tconst promises = Object.entries(root.value).map(async ([key, val]) => {\r\n\t\t\tif (key === 'prev' || !val) return null;\r\n\t\t\tlet fields = await ipfsNode.dag.get(val);\r\n\t\t\treturn fields.value; // https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/DAG.md#ipfsdaggetcid-options\r\n\t\t});\r\n\r\n\t\tconst result = await Promise.all(promises);\r\n\t\treturn result.filter((r) => r); // filter out null values\r\n\t};\r\n\r\n\tasync function getTagNode(tag, root = rootCID) {\r\n\t\tif (!root || !ipfsNode || !tag) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst cid = (await ipfsNode.dag.get(root, { path: `/${tag}`, localResolve: true })).value;\r\n\t\t\tlet tagNode = (await ipfsNode.dag.get(cid, { localResolve: true })).value;\r\n\t\t\treturn tagNode;\r\n\t\t} catch (error) {\r\n\t\t\t// tag may not exist yet, or maybe the user is typing\r\n\t\t\tconsole.warn(`${tag} no DAG data`);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script>\r\n\t\tglobal = globalThis; // for solana web3 repo\r\n\t</script>\r\n</svelte:head>\r\n\r\n<div class=\"main\">\r\n\t{#if proxcryptor && loaded}\r\n\t\t<div class=\"\">\r\n\t\t\t<slot\r\n\t\t\t\t{handleSubmit}\r\n\t\t\t\t{decrypt}\r\n\t\t\t\t{getTagNodes}\r\n\t\t\t\t{getTagNode}\r\n\t\t\t\t{checkAccess}\r\n\t\t\t\t{setAccess}\r\n\t\t\t\t{decryptFromTagNode}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{:else}\r\n\t\tConnect with the Wallet to save encrypted messages.\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.main {\r\n\t\twidth: 100%;\r\n\t\t/* max-width: var(--column-width); */\r\n\t\tmargin-top: var(--column-margin-top);\r\n\t\tpadding: var(--column-margin-top);\r\n\t\tline-height: 1;\r\n\t\tbackground-color: #e0ede0;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let decryptFromTagNode;\r\n\texport let tagNode;\r\n\r\n\tlet data;\r\n\tlet checked;\r\n\r\n\t$: if (tagNode) getData();\r\n\r\n\tasync function getData() {\r\n\t\tconsole.log(`Decrypting data on ${tagNode.tag} `);\r\n\t\tdata = await decryptFromTagNode(tagNode);\r\n\t\tchecked = true;\r\n\t}\r\n\r\n\tonMount(async () => {});\r\n</script>\r\n\r\n<div>\r\n\t{#if data}\r\n\t\t{#await data}\r\n\t\t\taccessing tagNode...\r\n\t\t{:then data}\r\n\t\t\t{data}\r\n\t\t{/await}\r\n\t{:else}\r\n\t\t✖️ You have no access to {tagNode.tag}\r\n\t{/if}\r\n</div>\r\n","import { writable } from 'svelte/store';\n\nexport const stream = writable(null);\nexport const error = writable(null);\nexport const status = writable(null);\n","<div>\n\t<div class=\"scanner-border scanner-border--top-left\" />\n\t<div class=\"scanner-border scanner-border--top-right\" />\n\t<div class=\"scanner-border scanner-border--bottom-left\" />\n\t<div class=\"scanner-border scanner-border--bottom-right\" />\n</div>\n\n<style>\n\t:root {\n\t\t--border-thickness: 3px;\n\t\t--border-radius: 40%;\n\t\t--border-offset: 5%;\n\t\t--border-color: #cbf3f0;\n\t}\n\n\t.scanner-border {\n\t\tposition: absolute;\n\n\t\twidth: 20%;\n\t\theight: 20%;\n\t}\n\n\t.scanner-border--top-left {\n\t\ttop: var(--border-offset);\n\t\tleft: var(--border-offset);\n\n\t\tborder-top: var(--border-thickness) solid var(--border-color);\n\t\tborder-left: var(--border-thickness) solid var(--border-color);\n\t\tborder-top-left-radius: var(--border-radius);\n\t}\n\n\t.scanner-border--top-right {\n\t\ttop: var(--border-offset);\n\t\tright: var(--border-offset);\n\n\t\tborder-top: var(--border-thickness) solid var(--border-color);\n\t\tborder-right: var(--border-thickness) solid var(--border-color);\n\t\tborder-top-right-radius: var(--border-radius);\n\t}\n\n\t.scanner-border--bottom-left {\n\t\tbottom: var(--border-offset);\n\t\tleft: var(--border-offset);\n\n\t\tborder-bottom: var(--border-thickness) solid var(--border-color);\n\t\tborder-left: var(--border-thickness) solid var(--border-color);\n\t\tborder-bottom-left-radius: var(--border-radius);\n\t}\n\n\t.scanner-border--bottom-right {\n\t\tright: var(--border-offset);\n\t\tbottom: var(--border-offset);\n\n\t\tborder-right: var(--border-thickness) solid var(--border-color);\n\t\tborder-bottom: var(--border-thickness) solid var(--border-color);\n\t\tborder-bottom-right-radius: var(--border-radius);\n\t}\n</style>\n","export default \"__VITE_ASSET__002b6a9a__\"","<script lang=\"ts\">\n\timport scanIcon from '../assets/scan.svg';\n\n\texport let active: boolean;\n\texport let decodedData: string;\n\texport let onNewScan: () => void;\n\n\tlet data, regex;\n\n\t$: if (active) {\n\t\tconst urlExp =\n\t\t\t/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/g;\n\t\tregex = new RegExp(urlExp);\n\t}\n</script>\n\n<slot {decodedData}>\n\t<div class=\"results\">\n\t\t<div class=\"results__data\">\n\t\t\t{#if !decodedData || decodedData === ''}\n\t\t\t\t<span class=\"results__empty\">Scan a QR Code to send data here. </span>\n\t\t\t{:else if decodedData?.match(regex)}\n\t\t\t\t<a class=\"results__link\" href={decodedData} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t{decodedData}\n\t\t\t\t</a>\n\t\t\t{:else if decodedData}\n\t\t\t\t{decodedData};\n\t\t\t{/if}\n\t\t</div>\n\t\t<div class=\"results__button-container\">\n\t\t\t<button type=\"button\" class=\"results__button\" on:click={onNewScan}>\n\t\t\t\t<img class=\"results__scan-icon\" src={scanIcon} alt=\"New Scan\" />\n\t\t\t\t<span>New Scan</span>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</slot>\n\n<style>\n\t.results {\n\t\twidth: 100%;\n\t\tmax-width: 500px;\n\t}\n\n\t.results__data {\n\t\tmargin: 50px 0 80px 0;\n\t\tpadding: 20px 20px 27px 20px;\n\n\t\tword-break: break-all;\n\n\t\tborder: 2px dashed #3d3d3d;\n\t\tborder-radius: 20px;\n\n\t\tfont-size: 1.3rem;\n\t}\n\n\t.results__empty {\n\t\tcolor: #959595;\n\n\t\tfont-style: italic;\n\t}\n\n\t.results__button-container {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\t.results__button {\n\t\tdisplay: flex;\n\n\t\talign-items: center;\n\n\t\tpadding: 14px 16px;\n\n\t\tcursor: pointer;\n\t\ttransition-duration: 300ms;\n\t\ttransition-property: background-color, transform;\n\n\t\tcolor: white;\n\n\t\tborder: 0;\n\t\tborder-radius: 8px;\n\t\tbackground-color: #23cd00;\n\n\t\tfont-size: 1.5rem;\n\t\tfont-weight: 500;\n\t}\n\n\t.results__button:hover {\n\t\tbackground-color: #39b300;\n\t}\n\n\t.results__scan-icon {\n\t\twidth: 1.5rem;\n\t\tmargin-right: 10px;\n\t}\n\n\t.results__link,\n\t.results__link:visited {\n\t\ttransition: color 200ms;\n\n\t\tcolor: #7094ff;\n\t}\n\n\t.results__link:hover,\n\t.results__link:active {\n\t\tcolor: #486cd9;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { stream, error, status } from '../stores.js';\n\n\tlet mounted;\n\n\tonMount(() => {\n\t\tmounted = true;\n\n\t\treturn () => {\n\t\t\tconsole.log('stop Component destroyed');\n\n\t\t\t// stopMedia();\n\t\t};\n\t});\n\n\tconst isMediaStream = (\n\t\tcandidate: MediaStream | MediaSource | Blob | null\n\t): candidate is MediaStream => candidate !== null && 'getTracks' in candidate;\n\n\ttype UseUserMediaStatusType = 'pending' | 'resolved' | 'rejected' | 'stopped';\n\n\tinterface UseUserMediaType {\n\t\tstopMediaStream: () => void;\n\t\tstartMediaStream: () => void;\n\t}\n\n\tfunction setStatus(params: string) {\n\t\tconsole.log(`Setting status ${params}`);\n\n\t\t$status = params;\n\t}\n\n\texport const useUserMedia = (): UseUserMediaType => {\n\t\t$stream = null;\n\t\t$error = null;\n\t\t$status = 'stopped';\n\n\t\tfunction setError(params: string) {\n\t\t\tconsole.log('Setting erro');\n\t\t\t$error = params;\n\t\t}\n\n\t\tfunction setStream(params: MediaStream) {\n\t\t\tconsole.log(`Setting stream`, { params });\n\t\t\t$stream = params;\n\t\t}\n\n\t\tconst startMediaStream = (): void => {\n\t\t\tsetStatus('pending');\n\n\t\t\tnavigator.mediaDevices\n\t\t\t\t.getUserMedia({\n\t\t\t\t\taudio: false,\n\t\t\t\t\tvideo: {\n\t\t\t\t\t\tfacingMode: 'environment'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((userStream) => {\n\t\t\t\t\tsetStream(userStream);\n\t\t\t\t\tsetStatus('resolved');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tsetError(err);\n\t\t\t\t\tsetStatus('rejected');\n\t\t\t\t});\n\t\t};\n\n\t\tconst stopMediaStream = stopMedia;\n\t\treturn { stopMediaStream, startMediaStream };\n\t};\n\n\tfunction stopMedia(): void {\n\t\tconsole.log('stopping media stream');\n\n\t\tif (isMediaStream($stream)) {\n\t\t\t$stream.getTracks().forEach((track) => {\n\t\t\t\ttrack.stop();\n\t\t\t\t$stream.removeTrack(track);\n\t\t\t});\n\n\t\t\tconsole.log({ streams: $stream });\n\n\t\t\tsetStatus('stopped');\n\t\t}\n\t}\n</script>\n","<script lang=\"ts\">\n\timport { onMount, createEventDispatcher } from 'svelte';\n\timport { stream, error, status } from '../stores.js';\n\n\timport jsQR from 'jsqr';\n\n\timport ScannerBorders from './ScannerBorders.svelte';\n\timport Results from './Results.svelte';\n\n\timport UserMedia from '../utils/use-usermedia.svelte';\n\n\texport let result = null; // : string\n\texport let stopMediaStream = null;\n\tlet startMediaStream;\n\n\tconst dispatch = createEventDispatcher();\n\n\t$: active = !result;\n\n\tlet video: HTMLVideoElement = null;\n\tlet canvas: HTMLCanvasElement = null;\n\tlet useUserMedia;\n\tlet mounted;\n\n\tonMount(() => {\n\t\tmounted = true;\n\n\t\t({ stopMediaStream, startMediaStream } = useUserMedia());\n\n\t\treturn () => {\n\t\t\tconsole.log('Component destroyed');\n\t\t\tstopMediaStream();\n\t\t\tvideo.srcObject = null;\n\t\t};\n\t});\n\n\tconst startCapturing = (): void => {\n\t\tif (!canvas || !video) return;\n\n\t\tconst context = canvas.getContext('2d');\n\n\t\tif (!context) return;\n\n\t\tconst { width, height } = canvas;\n\n\t\tcontext.drawImage(video, 0, 0, width, height);\n\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst qrCode = jsQR(imageData.data, width, height);\n\n\t\tif (qrCode === null) {\n\t\t\tconsole.log('timeout');\n\t\t\tsetTimeout(startCapturing, 750);\n\t\t} else {\n\t\t\tresult = qrCode.data;\n\t\t\tdispatch('successfulScan', qrCode.data);\n\n\t\t\tstopMediaStream();\n\t\t\tvideo.srcObject = null;\n\t\t}\n\t};\n\n\tconst handleCanPlay = (): void => {\n\t\tconsole.log('canplay');\n\t\tif (canvas === null || canvas === null || video === null || video === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = video.videoWidth;\n\t\tcanvas.height = video.videoHeight;\n\n\t\tif ($error !== null) {\n\t\t\t// TODO: show dialog to user with an error\n\t\t} else {\n\t\t\tstartCapturing();\n\t\t}\n\t};\n\n\t$: if ($status === 'resolved' && video !== null && $stream) {\n\t\tconsole.log('Resolve, stream');\n\t\tvideo.srcObject = $stream;\n\t\tvideo.play().catch(console.error);\n\t}\n\n\t$: if (active && $status === 'stopped' && startMediaStream) {\n\t\tstartMediaStream();\n\t}\n</script>\n\n<UserMedia bind:useUserMedia />\n\n<div class={`scanner ${active ? '' : 'scanner--hidden'}`}>\n\t<div class=\"scanner__aspect-ratio-container\">\n\t\t<canvas bind:this={canvas} class=\"scanner__canvas\" />\n\t\t<!-- svelte-ignore a11y-media-has-caption -->\n\t\t<video bind:this={video} on:canplay={handleCanPlay} class=\"scanner__video\">\n\t\t\t<!-- <track kind=\"captions\" /> -->\n\t\t</video>\n\t\t<ScannerBorders />\n\t</div>\n\n\t<div class=\"scanner-tip\">\n\t\t<div>Scan a QR code with your camera to see what it says.</div>\n\t</div>\n</div>\n\n<slot {result}>\n\t<Results active={result !== null} decodedData={result} onNewScan={() => (result = null)} />\n</slot>\n\n<style>\n\t.scanner {\n\t\twidth: 100%;\n\t\tmax-width: 500px;\n\t}\n\n\t.scanner--hidden {\n\t\tdisplay: none;\n\t}\n\n\t.scanner__aspect-ratio-container {\n\t\tposition: relative;\n\n\t\toverflow: hidden;\n\n\t\tpadding-bottom: 100%;\n\n\t\tborder-radius: 10%;\n\t}\n\n\t.scanner__video {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\n\t\twidth: 100%;\n\t\theight: 100%;\n\n\t\tborder-radius: inherit;\n\n\t\toutline: none;\n\t\tobject-fit: cover;\n\t}\n\n\t.scanner__canvas {\n\t\tdisplay: none;\n\t}\n\n\t.scanner-tip {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\n\t\tmargin-top: 15px;\n\n\t\tfont-size: 0.8rem;\n\t}\n</style>\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\texport let scan;\r\n\tfunction handleClick(e) {\r\n\t\tscan = true;\r\n\t\tdispatch('click', true);\r\n\t}\r\n</script>\r\n\r\n<div on:click={handleClick}>\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"150\" viewBox=\"0 0 39.69 39.69\"\r\n\t\t><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"2.65\"\r\n\t\t\td=\"M7.36 33A18.2 18.2 0 0 1 6.65 7.3a18.2 18.2 0 0 1 25.71-.71 18.2 18.2 0 0 1 .72 25.7 18.2 18.2 0 0 1-25.71.74\"\r\n\t\t/><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\td=\"M13.87 8.51c0-.27.1-.5.29-.68.28-.27.32-.27 5.22-.27h4.95l.27.29c.16.17.26.44.26.68v.4H13.87zM14.14 29.02a1.07 1.07 0 0 1-.27-.68v-.4H20.76l.05.69.04.67h-3.22c-3.2 0-3.22 0-3.5-.28zM17.94 13.53h.98v1.06h-.98z\"\r\n\t\t/><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26\"\r\n\t\t\td=\"M17.41 13.53h.98v1.06h-.98zM19.8 13.52h.98v1.06h-.98zM17.41 16.08h.98v1.06h-.98zM19.78 16.08h.98v1.06h-.98z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26458\"\r\n\t\t\td=\"M18.08 33.81c-.4-.03-.9-.12-1.1-.19-.34-.11-.4-.16-.66-.64a10.5 10.5 0 0 1-.98-1.9c0-.11.2-.12 3.11-.12h3.12l.2.2c.18.17.23.18.4.1a.8.8 0 0 0 .3-.34c.13-.27.11-.39-.15-1.1-.12-.32-.13-.25.18-1.45.1-.38.66-.96 1.93-1.98 1.87-1.5 2.22-1.98 2.22-2.98 0-.36-.04-.52-.22-.82-.25-.45-.44-.57-1.86-1.2-1.16-.51-1.67-.82-1.95-1.16-.2-.23-.25-.4-.15-.56.07-.1 1.1-.25 1.74-.25.62 0 1.61.19 2.2.4.95.36 2.1 1.2 2.35 1.71.4.78.39 1.92-.03 4.65-.39 2.57-.55 3.2-1.1 4.27-.93 1.82-2.56 2.84-5.18 3.25-.85.14-3.32.2-4.37.11z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26458\"\r\n\t\t\td=\"M14.19 29.04c-.18-.18-.24-.32-.28-.65l-.05-.42h6.95v.54c0 .3.02.6.05.66.04.1-.28.11-3.2.11H14.4Z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"1.0001124\"\r\n\t\t\td=\"M17.56 16.61v-.36h.7v.73h-.7zM19.91 16.62v-.38h.69V17h-.69ZM19.94 14.04v-.38h.7v.76h-.7ZM17.56 14.07v-.38h.7v.76h-.7Z\"\r\n\t\t/><g\r\n\t\t\t><path\r\n\t\t\t\td=\"M16 34.56c.8-.8.59-.83 1.18-.8 11.36 1.14 11.05-4.42 11.72-8.48.38-2.25.28-3.5-.41-4.24-5.51-1.7-6.34-2.86-2.26 1.3.3.37.41.67.41 1.14 0 .55-.2.99-.72 1.57-.94 1.06-3.5 2.51-3.5 3.46 0 .47-.42.85-.12 1.41.3.57.29.96-.06 1.24-.3.23-.26.18-.5-.1l-.14-.17h-6.33v.17c0 .35 1.02 1.88 1.32 2.48 2.4.76 1.93 1.4-.58 1.02-.67-4.3-6.2-7.49-6.23-8.68-.03-1.18.94-1.37.94-1.37l-1.18-.96c-.56-1.84.41-1.91 1.1-2.2-.89-1.06-1.27-1.87-.42-2.74.83-.64 1.21-.63 2.04-.08l.04-5.7c.04-5.16 0-5.07.32-5.67.3-.55.92-.98 1.58-1.1.43-.09 9.95-.08 10.39 0a2.4 2.4 0 0 1 1.58 1.13c.3.51.29.43.29 6.37v5.52l.3.1A4.67 4.67 0 0 1 29.22 21c.44.72.62 1.49.57 2.44-.04.64-.4 2.84-.63 3.9-1.17 5.8-.13 7.57-13.16 7.21zm4.9-5.5a6.58 6.58 0 0 1-.03-.7v-.43h-7v.96l.22.22.22.22h6.63zm-8.69-3.36c-.3-.46-1.07-1.04-1.63-.4-.56.65 0 .98.6 1.64.46.5.56.58 1.12 1.06-.03-.84-.05-1.72-.09-2.3zm13.27-3.2c-2.2-1.86-5.66-3.09-1.41-3.79l.88.03v-8.27H13.87v15.95h7.49c1.28-2.73 3.93-2.86 4.12-3.93zm-10.5-3.36c-.33.1-.35-.38-.35-1.38 0-.75.02-.92.1-1.08.2-.36.7-.5 1.06-.28.29.17.36.34.4.87l.03.47h.41c.25 0 .48.03.57.08.5.26.57.88.14 1.26l-.2.17h-.98c-.9 0-1-.17-1.18-.11zm5.87-.1c-.19-.2-.21-.25-.21-.5 0-.56.3-.8 1-.8h.45v-.45c0-.52.08-.73.35-.9.36-.21.89-.08 1.08.28.06.13.08.37.08 1.11.12 1.42-.71 1.47-1.54 1.47h-.99Zm-5.87-4.73c-.3-.18-.35-.38-.35-1.38 0-1.41.07-1.48 1.48-1.48.7 0 .97.02 1.09.08.49.26.57.86.17 1.24-.16.15-.2.17-.67.19l-.5.02v.31c0 .5-.08.74-.3.95-.17.15-.24.18-.47.18a.9.9 0 0 1-.45-.11zm7.46 0c-.25-.16-.32-.3-.35-.84l-.03-.48-.47-.03c-.51-.03-.66-.08-.84-.31-.16-.2-.16-.64 0-.87.21-.3.35-.33 1.38-.33.83 0 .96.02 1.12.11.32.2.35.34.35 1.39 0 .83-.01.96-.1 1.12a.78.78 0 0 1-1.06.24zm-10.2 8.82.01-.78-.82-.5c-.77-.3-2.07.61-1.25 1.64.6.48 1.45.93 2.07 1.27l-.01-1.63zm0-3.21v-.85c-.38-.43-1.3-1.07-1.93.13-.64 1.2.68 1.83 1.94 2.1zm12.7-11.28c0-.46-.08-.7-.3-.9l-.2-.18H14.31l-.22.22-.22.22v.96h11.08v-.32z\"\r\n\t\t\t/><path\r\n\t\t\t\tstroke=\"#000\"\r\n\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\tstroke-width=\".26458\"\r\n\t\t\t\td=\"M11.38 27.08c-.93-.95-1.06-1.15-.94-1.45.28-.66.93-.74 1.48-.16l.26.27.05 1.08c.03.59.03 1.07 0 1.07-.02 0-.4-.36-.85-.81zM11.48 24.28c-1.03-.6-1.3-.82-1.44-1.15-.19-.48.02-.89.6-1.18.36-.18.65-.14 1.12.15l.43.27v1.15l-.01 1.16-.7-.4zM11.57 21.07c-.9-.32-1.37-.76-1.37-1.27 0-.56.57-1.25 1.02-1.25.21 0 .58.17.81.38.16.15.16.2.16 1.24 0 .6-.02 1.08-.05 1.08a6.2 6.2 0 0 1-.57-.18z\"\r\n\t\t\t/><path\r\n\t\t\t\tstroke=\"#000\"\r\n\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\tstroke-width=\".0740824\"\r\n\t\t\t\td=\"M14.1 29.04c-.2-.21-.23-.29-.23-.66v-.41h6.94v.32c0 .17.02.47.05.65l.04.34h-6.56Z\"\r\n\t\t\t/></g\r\n\t\t></svg\r\n\t>\r\n</div>\r\n{#if scan}\r\n\t<slot />\r\n{/if}\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: auto;\r\n\t\theight: 4em;\r\n\t\tdisplay: block;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Modal from '$lib/graphics/Modal.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let handle;\r\n\texport let pubKey;\r\n\texport let source;\r\n\r\n\texport let handleAddContact;\r\n</script>\r\n\r\n<Modal modal={true}>\r\n\t<div class=\"SearchResults\">\r\n\t\t<h1 contenteditable=\"true\" bind:innerHTML={handle}>{handle}</h1>\r\n\t\t<div class=\"pubkey\" style=\"font-size: .6em\">\r\n\t\t\t{pubKey}\r\n\t\t</div>\r\n\t\t<div class=\"buttons\" />\r\n\t\t<button on:click={handleAddContact(pubKey.toString(), handle)}>Add Contact</button>\r\n\t\t<button>Grant Access to Tag(s)</button>\r\n\t\t<button>Request Access</button>\r\n\t</div>\r\n</Modal>\r\n\r\n<style>\r\n\th1 {\r\n\t\tborder: 1px dashed grey;\r\n\t\tpadding: 0.5em;\r\n\t\tbackground-color: antiquewhite;\r\n\t}\r\n\t.pubkey {\r\n\t\tpadding: 0px;\r\n\t}\r\n\tdiv.SearchResults {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-evenly;\r\n\t\tmargin: 1.62em;\r\n\t\talign-items: stretch;\r\n\t}\r\n\t.buttons {\r\n\t}\r\n\tbutton {\r\n\t\tpadding: 1.62em;\r\n\t\tmargin: 1.62em;\r\n\t\tbackground-color: rgb(46, 199, 61);\r\n\t\twidth: auto;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport SearchResults from './SearchResults.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let handle = 'DougAnderson44';\r\n\texport let value = 'DougAnderson44';\r\n\texport let pubKey;\r\n\texport let handleAddContact;\r\n\r\n\tlet SNSWrapper;\r\n\tlet valid;\r\n\tlet inputElement;\r\n\r\n\t$: value && handleInput();\r\n\t$: pubKey && handleValidate(pubKey);\r\n\r\n\tonMount(async () => {\r\n\t\tconst Buffer = await import('buffer'); // Solana Web3.js uses Buffers instead of UInt8Array =/\r\n\t\tglobal.Buffer = Buffer.Buffer;\r\n\r\n\t\tconst process = await import('process');\r\n\t\tglobal.process = process;\r\n\r\n\t\t({ SNSWrapper } = await import('@douganderson444/svelte-solana-name-service'));\r\n\r\n\t\tlet params = new URLSearchParams(location.search);\r\n\t\tif (params.has('add')) {\r\n\t\t\tpubKey = params.get('add');\r\n\t\t\tinputElement.focus();\r\n\t\t}\r\n\t});\r\n\r\n\tfunction handleInput() {\r\n\t\thandle = value; // trigger check registry\r\n\t\t// in the meantime, check whether this is a valid public key\r\n\t\thandleValidate(value);\r\n\t}\r\n\r\n\tfunction handleValidate(value) {\r\n\t\t// console.log(`Validating`, { value });\r\n\r\n\t\tif (!value) return; // TODO: Handle better\r\n\t\t// <!-- defined by schema -->\r\n\t\tconst valBytes = validatePubKey(value.toString());\r\n\t\t// console.log({ valBytes });\r\n\t\tif (valBytes) {\r\n\t\t\t// console.log('Valid', { value: value.toString() });\r\n\t\t\tvalid = true;\r\n\t\t\tpubKey = value.toString();\r\n\t\t} else valid = false;\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<!-- font awesome css  -->\r\n\t<link\r\n\t\trel=\"stylesheet\"\r\n\t\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\"\r\n\t\tintegrity=\"sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==\"\r\n\t\tcrossorigin=\"anonymous\"\r\n\t\treferrerpolicy=\"no-referrer\"\r\n\t/>\r\n</svelte:head>\r\n{#if SNSWrapper}\r\n\t<!-- Pass in handle, get pubKey back  -->\r\n\t<svelte:component this={SNSWrapper} {handle} bind:pubKey />\r\n{/if}\r\n\r\n<div class=\"sb-example-1\">\r\n\t<div class=\"search\">\r\n\t\t<input\r\n\t\t\tclass=\"searchTerm\"\r\n\t\t\tbind:value\r\n\t\t\tplaceholder=\"@handle or Public Key\"\r\n\t\t\tbind:this={inputElement}\r\n\t\t\ton:input={handleInput}\r\n\t\t\ton:change={handleInput}\r\n\t\t\ton:focus={handleInput}\r\n\t\t/>\r\n\t\t<button type=\"submit\" class=\"searchButton\" on:click={() => {}}>\r\n\t\t\t<i class=\"fa fa-search\" />\r\n\t\t</button>\r\n\t</div>\r\n\t<div class=\"validity\">\r\n\t\t{valid ? '✔️ Valid ' + pubKey.toString() : ''}\r\n\t</div>\r\n</div>\r\n\r\n{#if pubKey && valid}\r\n\t<SearchResults {handle} {pubKey} source={null} {handleAddContact} />\r\n{/if}\r\n\r\n<style>\r\n\t.validity {\r\n\t\tmargin: 0.25em 0;\r\n\t}\r\n\tinput {\r\n\t\tpadding: 0.3em;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\t.sb-example-1 {\r\n\t\twidth: 100%;\r\n\t}\r\n\t.sb-example-1 .search {\r\n\t\twidth: 100%;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.sb-example-1 .searchTerm {\r\n\t\twidth: 100%;\r\n\t\tborder: 3px solid #2ec73d;\r\n\t\tborder-right: none;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 5px 0 0 5px;\r\n\t\toutline: none;\r\n\t\tcolor: #9dbfaf;\r\n\t}\r\n\t.sb-example-1 .searchTerm:focus {\r\n\t\tcolor: #2ec73d;\r\n\t}\r\n\t.sb-example-1 .searchButton {\r\n\t\twidth: 40px;\r\n\t\theight: 50px;\r\n\t\tborder: 1px solid #2ec73d;\r\n\t\tbackground: #2ec73d;\r\n\t\ttext-align: center;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 0 5px 5px 0;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 20px;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount, tick, createEventDispatcher } from 'svelte';\r\n\r\n\timport { contacts } from '$lib/stores';\r\n\r\n\timport ContactCard from './ContactCard.svelte';\r\n\timport PiperNet from '../Hypns/PiperNet.svelte';\r\n\timport GetTags from './GetTags.svelte';\r\n\timport TagAccess from '$lib/TagAccess.svelte';\r\n\timport TagValue from '$lib/TagValue.svelte';\r\n\r\n\texport let decryptedData;\r\n\texport let openHypns;\r\n\texport let getTagNodes;\r\n\texport let checkAccess;\r\n\texport let decryptFromTagNode;\r\n\r\n\tconsole.log('ShowContacts', { decryptedData });\r\n\t$: decryptedData && console.log({ decryptedData });\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tfunction handleMessenger(event) {\r\n\t\tconsole.log(\"handleMessenger pubKey to rx'd msg value\", { event });\r\n\t\tdispatch('incomingPubKey', { pubKeyHex: event.detail.pubKeyHex });\r\n\t}\r\n</script>\r\n\r\n{#if decryptedData}\r\n\t<!-- defined by schema -->\r\n\t{#each decryptedData as { handle, pubKey }}\r\n\t\t<div class=\"card-container\">\r\n\t\t\t<ContactCard>\r\n\t\t\t\t<span slot=\"handle\">\r\n\t\t\t\t\t{handle}\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span slot=\"publicKey\">\r\n\t\t\t\t\tPubKey: <small>{pubKey}</small>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span slot=\"latest\">\r\n\t\t\t\t\t<PiperNet {pubKey} {openHypns} let:latestHypns on:onMessage={handleMessenger}>\r\n\t\t\t\t\t\t<!-- once root CID appears, get tag details then show tag access -->\r\n\t\t\t\t\t\t<GetTags rootCID={latestHypns} {getTagNodes} let:tagNode>\r\n\t\t\t\t\t\t\t{#if tagNode.tag}\r\n\t\t\t\t\t\t\t\t<TagAccess tag={tagNode.tag} {pubKey} {checkAccess} />\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t\t{#if tagNode.tag === 'Profile'}\r\n\t\t\t\t\t\t\t\t<TagValue {tagNode} {decryptFromTagNode} />\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t</GetTags>\r\n\t\t\t\t\t</PiperNet>\r\n\t\t\t\t</span>\r\n\t\t\t</ContactCard>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n","<script>\r\n\t// Basic template to show how to add Contact with the proxcryptor Parent component\r\n\timport { page } from '$app/stores';\r\n\r\n\timport { onMount, tick, createEventDispatcher } from 'svelte';\r\n\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\timport ContactCard from './ContactCard.svelte';\r\n\timport PiperNet from '../Hypns/PiperNet.svelte';\r\n\timport GetTags from './GetTags.svelte';\r\n\timport TagAccess from '$lib/TagAccess.svelte';\r\n\r\n\timport { contacts } from '$lib/stores';\r\n\timport TagValue from '$lib/TagValue.svelte';\r\n\r\n\timport { Scanner } from 'qrcode-scanner-svelte';\r\n\timport ScanIcon from '$lib/graphics/scanIcon.svelte';\r\n\timport Modal from '$lib/graphics/Modal.svelte';\r\n\timport Search from '$lib/components/nav/Search.svelte';\r\n\timport ShowContacts from './ShowContacts.svelte';\r\n\r\n\t// Component props passed in from Parent Component\r\n\t// will also reactively update if updated in parent\r\n\texport let getTagNodes;\r\n\texport let openHypns;\r\n\texport let checkAccess;\r\n\texport let decryptedData;\r\n\texport let decryptFromTagNode;\r\n\r\n\t$: if (decryptedData) $contacts = decryptedData;\r\n\t$: $contacts && console.log($contacts);\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst tag = 'Contacts';\r\n\r\n\tlet schema;\r\n\tlet handle, pubKey, pubKeyInput;\r\n\tlet tagNode;\r\n\tlet submitting;\r\n\tlet mounted;\r\n\tlet scan;\r\n\tlet stopMediaStream;\r\n\t$: selected = scan ? Scanner : null;\r\n\t$: selected && console.log({ selected });\r\n\t$: scan && console.log({ scan });\r\n\r\n\tonMount(async () => {\r\n\t\t// check if this is a search params loaded page\r\n\t\tlet params = new URLSearchParams(location.search);\r\n\t\tif ($page.url.searchParams.has('add')) {\r\n\t\t\tpubKey = $page.url.searchParams.get('add');\r\n\t\t\tawait tick();\r\n\t\t\tpubKeyInput.focus();\r\n\t\t} else if (params.has('add')) {\r\n\t\t\tpubKey = params.get('add');\r\n\t\t\tawait tick();\r\n\t\t\tpubKeyInput.focus();\r\n\t\t}\r\n\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\texport function onSubmitted() {\r\n\t\tsubmitting = false;\r\n\t\thandle = '';\r\n\t\tpubKey = '';\r\n\t}\r\n\r\n\tasync function handleAddContact(pK = pubKey, name = handle) {\r\n\t\tconsole.log('Adding ', { name }, { pK });\r\n\t\tif (!name || !pK) return; // TODO: Handle better\r\n\t\t// <!-- defined by schema -->\r\n\t\tconst bytes = validatePubKey(pK);\r\n\t\tconsole.log('Adding bytes', { bytes });\r\n\r\n\t\tlet value;\r\n\r\n\t\tif (decryptedData && decryptedData.length)\r\n\t\t\tvalue = [...decryptedData, { handle: name, pubKey: new Uint8Array(bytes) }];\r\n\t\telse value = [{ handle: name, pubKey: new Uint8Array(bytes) }];\r\n\r\n\t\tconsole.log('Adding value', { value });\r\n\t\tsubmitting = true;\r\n\t\tdispatch('handleSubmit', { tag, data: { value, schema } });\r\n\t}\r\n\r\n\tfunction handleConnect(key) {\r\n\t\tpubKey = key;\r\n\t}\r\n\tfunction handleMessenger(event) {\r\n\t\tconsole.log(\"Setting pubKey to rx'd msg value\", { event });\r\n\t\tpubKey = event.detail.pubKeyHex;\r\n\t}\r\n\tfunction handleModalClose() {\r\n\t\tconsole.log('Got close modal');\r\n\t\tscan = false;\r\n\t\t// selected?.stopMediaStream();\r\n\t\t// selected = null;\r\n\t\tconsole.log({ scan }, { selected });\r\n\t}\r\n</script>\r\n\r\n{#if decryptedData}\r\n\t<ShowContacts\r\n\t\t{decryptedData}\r\n\t\t{getTagNodes}\r\n\t\t{openHypns}\r\n\t\t{checkAccess}\r\n\t\t{decryptFromTagNode}\r\n\t\ton:incomingPubKey={handleMessenger}\r\n\t/>\r\n{/if}\r\n<div class=\"searchBar\">\r\n\t<div class=\"scan-icon\" style=\"width: 100%\">\r\n\t\t<Search bind:handle bind:pubKey {handleAddContact} />\r\n\t</div>\r\n\t<div class=\"scan-icon\">\r\n\t\t<ScanIcon\r\n\t\t\t{scan}\r\n\t\t\ton:click={() => {\r\n\t\t\t\tconsole.log('scan clicked');\r\n\t\t\t\tscan = true;\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Modal modal={scan} on:closeModal={handleModalClose}>\r\n\t\t\t\t<svelte:component\r\n\t\t\t\t\tthis={selected}\r\n\t\t\t\t\tbind:result={pubKey}\r\n\t\t\t\t\ton:successfulScan={(data) => {\r\n\t\t\t\t\t\tconst parsed = JSON.parse(data.detail);\r\n\t\t\t\t\t\tconsole.log(`Scanned `, { parsed });\r\n\t\t\t\t\t\thandleConnect(parsed.pubKeyHex);\r\n\t\t\t\t\t\tscan = false;\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t</ScanIcon>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.searchBar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tflex-wrap: nowrap;\r\n\t}\r\n\t.card-container {\r\n\t\tmargin: 1em 0;\r\n\t}\r\n\t.data-entry {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0.5em;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 1.62em;\r\n\t}\r\n\t.item {\r\n\t\tflex: 1;\r\n\t\tmargin: 0.5em 0;\r\n\t\tpadding: 0.5em 0;\r\n\t}\r\n\tinput {\r\n\t\tpadding: 1.62em;\r\n\t\tmargin: 1.62em 0;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.entry-item {\r\n\t\tdisplay: inline-flex;\r\n\t\tflex-wrap: nowrap;\r\n\t\talign-items: center;\r\n\t\tflex-direction: row;\r\n\t\twidth: 100%;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t.scan-icon {\r\n\t\tmargin: 1em 0 1em 1em;\r\n\t}\r\n</style>\r\n","import ShowContacts from '$lib/templates/Contacts/ShowContacts.svelte';\r\nimport Profile from '$lib/templates/Basic/Profile.svelte';\r\n\r\nconst CONTACTS = 'Contacts';\r\nconst PROFILE = 'Profile';\r\n\r\nexport const Components = {\r\n\t[PROFILE]: { name: PROFILE, component: Profile, tag: PROFILE },\r\n\t[CONTACTS]: { name: CONTACTS, component: ShowContacts, tag: CONTACTS }\r\n};\r\n","<script>\r\n\texport let rootCID;\r\n</script>\r\n\r\n{#if rootCID}\r\n\t✔️ IPLD Data Saved to: <a href=\"https://dweb.link/api/v0/dag/get?arg={rootCID}\" target=\"_blank\">\r\n\t\t{rootCID}</a\r\n\t>\r\n\t<br />\r\n{/if}\r\n","<script lang=\"ts\">\n\timport { onMount, setContext } from 'svelte';\n\n\timport DagJose from './DAGJose.svelte';\n\timport HypnsManager from './HypnsManager.svelte';\n\timport Contacts from '$lib/templates/Contacts/Contacts.svelte';\n\n\timport { Components } from '$lib/components/index';\n\timport ShowRoot from './components/ShowRoot.svelte';\n\timport Common from './Common.svelte';\n\timport { CID } from 'multiformats/cid';\n\n\texport let wallet = null;\n\texport let rootCID = null;\n\n\tlet active = Components['Profile']; // needs to open on contacts so that they are loaded into the svelte store $contacts\n\n\tlet inputUrl = 'https://peerpiper.github.io/iframe-wallet-sveltekit'; // = 'https://wallet.peerpiper.io/'; // can be changed by any user\n\n\tlet ipfsNode;\n\tlet nodeId;\n\n\tlet openHypns;\n\n\tlet Web3WalletMenu;\n\n\tlet start = Date.now();\n\n\tlet onSubmitted; // only here to pass from svelte:component to DAGJose component\n\tlet refreshedRootCID;\n\n\t$: if (globalThis.Ipfs) {\n\t\t// once Ipfs has loaded\n\t\tconsole.log('Loading IPFS ');\n\t\tloadIPFS();\n\t}\n\tasync function loadIPFS() {\n\t\t// setup IPFS\n\n\t\t// const IPFSmodule = await import('ipfs-browser-global');\n\t\t// CID = IPFSmodule.CID;\n\t\t// const config = {};\n\t\t// await IPFSmodule.default(config);\n\t\t// @ts-ignore\n\t\t// console.log({ ipfs }, { IPFSmodule });\n\t\t// @ts-ignore\n\t\t// ipfsNode = ipfs;\n\n\t\t// setup IPFS\n\t\tconst IPFSmodule = await import('../modules/ipfs-core-0.14.0/ipfs-core.js');\n\t\tconst IPFS = IPFSmodule.default;\n\t\tipfsNode = await IPFS.create();\n\n\t\t// ipfsNode = await globalThis.Ipfs.create({});\n\n\t\tconsole.log(`Loaded in ${(Date.now() - start) / 1000}s`, { ipfsNode });\n\t\tconst identity = await ipfsNode.id();\n\t\tnodeId = identity.id;\n\t\tconsole.info('NodeId', nodeId);\n\t}\n\tonMount(async () => {\n\t\t// load asyncs in parallel\n\t\tif (!wallet) {\n\t\t\t// @ts-ignore\n\t\t\t({ Web3WalletMenu } = await import('@peerpiper/svelte-web3-wallet-connector'));\n\t\t}\n\n\t\treturn () => ipfsNode.stop();\n\t});\n</script>\n\n<svelte:head>\n\t<!-- <script src=\"https://cdn.jsdelivr.net/npm/ipfs/dist/index.min.js\"></script> -->\n\t<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\" />\n</svelte:head>\n<div class=\"\">\n\t<!-- First, you need a wallet -->\n\t{#if Web3WalletMenu}\n\t\t<svelte:component this={Web3WalletMenu} bind:wallet {inputUrl} />\n\t{:else}\n\t\tLoading Web3 Wallet...<br />\n\t{/if}\n\n\t<!-- When there is data saved to ILPD, why not save it to PipeNet?  -->\n\t<HypnsManager {wallet} {rootCID} bind:openHypns />\n\n\t<div>\n\t\t<select bind:value={active} class=\"form-control\">\n\t\t\t{#each Object.entries(Components) as [key, value]}\n\t\t\t\t<option {value}>{key}</option>\n\t\t\t{/each}\n\t\t</select>\n\t</div>\n\t<ShowRoot {rootCID} />\n\n\t<!-- Then you need a way to encrypt/decrypt the data to IPLD  -->\n\t{#if wallet && wallet.proxcryptor && ipfsNode && CID}\n\t\t<DagJose\n\t\t\tproxcryptor={wallet.proxcryptor}\n\t\t\t{ipfsNode}\n\t\t\t{CID}\n\t\t\tbind:rootCID\n\t\t\t{refreshedRootCID}\n\t\t\ttag={active.tag}\n\t\t\t{onSubmitted}\n\t\t\tlet:getTagNodes\n\t\t\tlet:getTagNode\n\t\t\tlet:checkAccess\n\t\t\tlet:setAccess\n\t\t\tlet:handleSubmit\n\t\t\tlet:decryptFromTagNode\n\t\t\tlet:decrypt\n\t\t>\n\t\t\t<Common\n\t\t\t\t{getTagNode}\n\t\t\t\t{decrypt}\n\t\t\t\ttag={active.tag}\n\t\t\t\t{rootCID}\n\t\t\t\t{setAccess}\n\t\t\t\tlet:decryptedData\n\t\t\t\tbind:refreshedRootCID\n\t\t\t>\n\t\t\t\t<svelte:component\n\t\t\t\t\tthis={active.component}\n\t\t\t\t\ton:handleSubmit={handleSubmit}\n\t\t\t\t\tbind:onSubmitted\n\t\t\t\t\t{decryptedData}\n\t\t\t\t\t{getTagNodes}\n\t\t\t\t\t{checkAccess}\n\t\t\t\t\t{setAccess}\n\t\t\t\t\t{openHypns}\n\t\t\t\t\t{decryptFromTagNode}\n\t\t\t\t/>\n\t\t\t</Common>\n\n\t\t\t<Common\n\t\t\t\t{getTagNode}\n\t\t\t\t{decrypt}\n\t\t\t\ttag={'Contacts'}\n\t\t\t\t{rootCID}\n\t\t\t\t{setAccess}\n\t\t\t\tlet:decryptedData\n\t\t\t\tbind:refreshedRootCID\n\t\t\t>\n\t\t\t\t<!-- Every page needs contacts, that's kinda the point of this app  -->\n\t\t\t\t<Contacts\n\t\t\t\t\t{getTagNodes}\n\t\t\t\t\t{openHypns}\n\t\t\t\t\t{checkAccess}\n\t\t\t\t\t{decryptedData}\n\t\t\t\t\t{decryptFromTagNode}\n\t\t\t\t\ton:handleSubmit={handleSubmit}\n\t\t\t\t/>\n\t\t\t</Common>\n\t\t</DagJose>\n\t{:else}\n\t\tLoading IPFS...<br />\n\t{/if}\n</div>\n\n<style>\n</style>\n","<script lang=\"ts\">\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport App from '$lib/App.svelte';\r\n\r\n\tonMount(async () => {});\r\n</script>\r\n\r\n<App />\r\n\r\n<style>\r\n</style>\r\n"],"file":"pages/legacy.svelte-153afd08.js"}