{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CC,uBAAmD;AACnD,uBAAuF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA3C5E,cAAG;MACV;AAEA,gBAAU;AAEd,UAAO;AACN,8BAAU,IAAI;oBACd,OAAM,SAAS,IAAI,aAAa,IAAI,KAAK,KAAK,IAAG;AACjD,WAAO,YAAY;AACnB,YAAQ,IAAG;AAAA;MAKR;AAEW,yBAAQ,MAAG;SACpB;AAAG;;AAEP,aAAO,YAAY;AACnB,gBAAO,MAAS,MAAM,IAAG;AACpB,mBAAQ;AAAE,kBAAY,MAAM,QAAQ,UAAU;AACnD,cAAQ,IAAI,YAAY,QAAO,QAAO;YAChC,QAAI,MAAS,QAAQ;AAC3B,cAAQ,IAAI,cAAc,YAAI;AAE9B,kCAAY,KAAI;AAAA,aACR;AACR,cAAQ,IAAI,KAAK;AAAA;;;;;;;;;;AAhBZ,qBAAW,QAAO,OAAO,aAAa;AAAK,gBAAQ,IAAG;AAAA;;;;;;;;;;;;;;;;;;qBCqBrC,IAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAAd,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiBrB,iDAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAR;AAAA,iFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBASF,IAAS;AAAA;;;;AAAqB;AAAA,UAAY;AAAA;;;;;;;;;;;;;;;;mCAA1C,IAAS;;;;;;;;;;;;;;;;;;;;;mBAf5B,IAAS;;;mBAAQ,IAAQ;;;mBAAQ,IAAM;;;;;iBAGpC,IAAS,MAAI,IAAQ,MAAI,IAAM;;;;gBAHxB,MAAI;;gBAAY,MAAI;;;;;;;;;;6BAApB,MAAI;;6BAAY,MAAI;;;;;;;;;;;;;;;;;;;;AAEjC,uBAgBM;;;;;;kEAlBH,KAAS;AAAA;kEAAQ,KAAQ;AAAA;gEAAQ,KAAM;AAAA;UAGpC,KAAS,MAAI,KAAQ,MAAI,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAflC,IAAc;;;;;;;;;;;;;;;;;;;;;;;;gBAP6C,yVAKhE;;;;;;;;;;;;;;;iCALgE,yVAKhE;;;;;;;;;;;;;;;AARC,uBAAuF;;AAGxF,uBAKM;;;;;;;;;;UAED,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAxBd,UACH;;AAPU,iBAAS,SAAI;MAGpB;MACA;AAOJ,UAAO;SACD,QAAM;AAEP,uCAAc,mQAA2D;AAAA;;;;;;AAwC7D,iCAAO,0BAAU,EAAE,MAAM","names":[],"sources":["../../../../../../../svelte-component-gateway/src/lib/FetchComponent.svelte","../../../../../../src/routes/multitag.svelte"],"sourcesContent":["<script>\r\n\timport { onMount } from 'svelte';\r\n\t// import { page } from '$app/stores';\r\n\r\n\texport let url;\r\n\tlet component;\r\n\r\n\tlet mounted = false;\r\n\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t\turl = location.url.searchParams.get('url') || url;\r\n\t\twindow.cachedURL = url;\r\n\t\tdoFetch(url);\r\n\t});\r\n\r\n\t$: if (mounted && url && window.cachedURL != url) doFetch(url);\r\n\r\n\tlet fetched;\r\n\r\n\tasync function doFetch(url) {\r\n\t\tif (!url) return;\r\n\t\ttry {\r\n\t\t\twindow.cachedURL = url; // reset cache, avoiding duplicate downloads\r\n\t\t\tfetched = await fetch(url);\r\n\t\t\tif (!fetched.ok) throw new Error(fetched.statusText);\r\n\t\t\tconsole.log('fetching', url, { fetched });\r\n\t\t\tconst text = await fetched.text();\r\n\t\t\tconsole.log('fetched:', { text });\r\n\r\n\t\t\tcomponent = text;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<!-- <p class=\"my-2\">\r\n\tLoading from<br />\r\n\t<input type=\"text\" name=\"url\" bind:value={url} size=\"90\" class=\"border p-2\" />\r\n\t<a href={url} target=\"_blank\" class=\"underline text-blue-400\">{url}</a>\r\n</p> -->\r\n\r\n<slot {component} />\r\n\r\n<svelte:head>\r\n\t<script src=\"https://cdn.tailwindcss.com\"></script>\r\n\t<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\" />\r\n</svelte:head>\r\n","<script>\r\n\timport { Gateway, FetchComponent } from '@douganderson444/svelte-component-gateway';\r\n\timport Proxcryptor from '@douganderson444/dag-jose-proxcryptor-kit/Proxcryptor.svelte';\r\n\timport IPFSManager from '@douganderson444/dag-jose-proxcryptor-kit/IPFSManager.svelte';\r\n\r\n\timport { onMount } from 'svelte';\r\n\texport let wallet = null; // possible the user has their own wallet?\r\n\r\n\t//props\r\n\tlet Web3WalletMenu;\r\n\tlet rootCID;\r\n\r\n\tlet url =\r\n\t\t'https://raw.githubusercontent.com/PeerPiper/awesome-peerpiper-components/master/compiled/@peerpiper/ContactCard.svelte.js';\r\n\r\n\tlet start = Date.now();\r\n\r\n\tonMount(async () => {\r\n\t\tif (!wallet) {\r\n\t\t\t// @ts-ignore\r\n\t\t\t({ Web3WalletMenu } = await import('@peerpiper/svelte-web3-wallet-connector'));\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<svelte:head>\r\n\t<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\" />\r\n</svelte:head>\r\n\r\n<div class=\"m-2 p-2 border bg-slate-400 rounded text-slate-300\">\r\n\tData: All the data in a Component needs to be saved encrypted under a Tag name. So the user must\r\n\tchoose which Tag this component's data will be saved under. If Multiple Components save data to\r\n\tthe same tag, it's up to them to update the object sent to the proxcryptor, as the proxcryptor\r\n\twill only write Tag:Value that it is given.\r\n</div>\r\n<!-- First, you need a wallet -->\r\n{#if Web3WalletMenu}\r\n\t<svelte:component this={Web3WalletMenu} bind:wallet />\r\n{/if}\r\n\r\n<!-- IPFS Manager will only load the slot content once it's a had a chance to load the rootCID, if any  -->\r\n<!-- IPFS Manager passes both ipfs and rootCID back to this component once intiialized -->\r\n<!-- IPFS Manager will also pass the preferred tag to load up (current defaults to first entry in rootCID object) -->\r\n<IPFSManager let:ipfsNode bind:rootCID let:tag>\r\n\t<!-- <DataDisplay {ipfsNode} {rootCID} /> -->\r\n\t<!-- Fetch gets the component from the interwebs and passes it back up here through let:component  -->\r\n\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t<FetchComponent {url} let:component>\r\n\t\t{!!component} && {!!ipfsNode} && {!!wallet}\r\n\r\n\t\t<div class=\"border flex-auto h-96\">\r\n\t\t\t{#if component && ipfsNode && wallet}\r\n\t\t\t\t<!-- on:change bubbles the emited 'change' event to the parent component, if bind:props isn't avail -->\r\n\t\t\t\t<Proxcryptor\r\n\t\t\t\t\tproxcryptor={wallet?.proxcryptor}\r\n\t\t\t\t\t{tag}\r\n\t\t\t\t\t{ipfsNode}\r\n\t\t\t\t\t{rootCID}\r\n\t\t\t\t\tlet:props\r\n\t\t\t\t\tlet:handleSubmit\r\n\t\t\t\t\ton:rootCID={(e) => (rootCID = e.detail)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t\t\t\t<Gateway esModule={component} {props} on:change={handleSubmit} />\r\n\t\t\t\t</Proxcryptor>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</FetchComponent>\r\n</IPFSManager>\r\n"],"file":"pages/multitag.svelte-04032b5c.js"}