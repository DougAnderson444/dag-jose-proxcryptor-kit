{"version":3,"mappings":";;;;;;;;;;;AAAA,IAAef,IAAeiBC4GV,IAAM;;;;;;;;;;;;;;;;;;;UAAN,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA/FC,aAAQ;QACR,mBAAc;MAErB;MAEA,UAAQ;UAEL,WAAW,OAAO,KAAK,QAAQ,EAAE,IAAG,OAAQ,QAAG;UAChD,QAAQ;AAAM,eAAS;YACrB,YAAS,MAAS,eAAe,GAAG;WACrC,UAAU,eAAe,UAAU,MAAM,UAAU,eAAe,OAAO;AAAA,eAAU;;SAGtF,GAAG;AAAA;UAEH,UAAU,UAAU;AAAA,UACpB,OAAO,UAAU;AAAA;;;AAKpB,YAAQ,IAAI,QAAQ,EAAE,KAAM,YAAM;AACjC,cAAQ,IAAM,SAAM,GAAI,OAAO,YAAY,OAAO,OAAQ,OAAM,CAAC;sBAGjE,SAAS,OAAO,YAAY,OAAO,OAAQ,OAAM,CAAC;AAAA;;AAInD,aAAM;AAAA,MACL,UAAQ,EACP,UAAU,YAAW;AAAA,MAEtB,SAAO,EACN,UAAU,YAAW;AAAA;;;;;;;;;;;;;;;;;;AC/CzB,IAAemBCwBN,IAAQ;;iCAAb,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;AADP,uBAMM;;;;;;;;qBALE,KAAQ;;mCAAb,QAAI;;;;;;;;;;;;;4BAAJ,QAAI;;;;;;;;;qCAAJ,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;MAEc,eAAQ;AAAA,MAAgB,eAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;AADnD,uBAEM;;;;;;;AADa;AAAA,0CAAQ;AAAgB;AAAA,0CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;iBAJjD,IAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAR,KAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAlBD,cAAS;MAEhB;AACK,8BAAmB,GAAC;AAE5B,+BAAW,EAAE,OACX,IAAK,aAAO;AACN,kBAAM,eAAe,QAAQ,MAAM;AACpC;eAAY;AAER,uBAAQ,KAAK,QAAQ,QAAQ,OAAM;AAAA,OAE5C,OAAQ,aAAY,OAAO;AAE7B,YAAQ,IAAI,oCAAoC,QAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;qBC4BjC,IAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAAd,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAyCpB;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;MAEA,iDAAQ;AAAA;;;;;;;;;;;;;;AAMJ;AAAA,UAAkB;AAAA;;;;;;;;;;;;;;;;AANtB;AAAA,gFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAYD;AAAA,MAAqB,qBAAM;AAAA;;;AAAe;AAAA,UAAe;AAAA;;;;;;;;;;;;;;;AAApC;AAAA,8CAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAlCjD,IAAQ,MAAG,QAAO,IAAK,MAAE;;;kBACzB,IAAM,KAAG,gCAAgC;;;;;AAIrC,4BAAY,IAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADxB,uBAmCM;;;;;;mEAvCJ,KAAQ,MAAG,QAAO,IAAK,MAAE;AAAA;+DACzB,KAAM,KAAG,gCAAgC;AAAE;AAIvC,sBAAY,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA3BrB,IAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnB,uBAEM;;;;;;;UATD,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBATF;AACf,aAAW,SAAS;AACpB,aAAW,WAAW;AACtB,aAAW,SAAS;SACb;;;AA5BG,iBAAS,SAAI;MAGpB;MACA;MACA;MACA;AAWJ,UAAO;SACD,QAAM;AAEP,uCAAc,6RAA2D;AAAA;;;;;;;;;;AA8D5D,iCAAO,0BAAU,EAAE,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxF3C,UAAO;AAAA","names":[],"sources":["../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/ContactCard.svelte.js?raw","../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/ContactList.svelte.js?raw","../../../../../../../awesome-peerpiper-components/src/lib/components/@peerpiper/_TagConfig.svelte","../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/TagManager.svelte.js?raw","../../../../../../src/lib/PiperNetManager.svelte","../../../../../../src/lib/Demo.svelte","../../../../../../src/routes/index.svelte"],"sourcesContent":["export default \"function noop() { }\\nconst identity = x => x;\\nfunction assign(tar, src) {\\n    // @ts-ignore\\n    for (const k in src)\\n        tar[k] = src[k];\\n    return tar;\\n}\\nfunction run(fn) {\\n    return fn();\\n}\\nfunction blank_object() {\\n    return Object.create(null);\\n}\\nfunction run_all(fns) {\\n    fns.forEach(run);\\n}\\nfunction is_function(thing) {\\n    return typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\\n}\\nlet src_url_equal_anchor;\\nfunction src_url_equal(element_src, url) {\\n    if (!src_url_equal_anchor) {\\n        src_url_equal_anchor = document.createElement('a');\\n    }\\n    src_url_equal_anchor.href = url;\\n    return element_src === src_url_equal_anchor.href;\\n}\\nfunction is_empty(obj) {\\n    return Object.keys(obj).length === 0;\\n}\\nfunction create_slot(definition, ctx, $$scope, fn) {\\n    if (definition) {\\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\\n        return definition[0](slot_ctx);\\n    }\\n}\\nfunction get_slot_context(definition, ctx, $$scope, fn) {\\n    return definition[1] && fn\\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\\n        : $$scope.ctx;\\n}\\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\\n    if (definition[2] && fn) {\\n        const lets = definition[2](fn(dirty));\\n        if ($$scope.dirty === undefined) {\\n            return lets;\\n        }\\n        if (typeof lets === 'object') {\\n            const merged = [];\\n            const len = Math.max($$scope.dirty.length, lets.length);\\n            for (let i = 0; i < len; i += 1) {\\n                merged[i] = $$scope.dirty[i] | lets[i];\\n            }\\n            return merged;\\n        }\\n        return $$scope.dirty | lets;\\n    }\\n    return $$scope.dirty;\\n}\\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\\n    if (slot_changes) {\\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\\n        slot.p(slot_context, slot_changes);\\n    }\\n}\\nfunction get_all_dirty_from_scope($$scope) {\\n    if ($$scope.ctx.length > 32) {\\n        const dirty = [];\\n        const length = $$scope.ctx.length / 32;\\n        for (let i = 0; i < length; i++) {\\n            dirty[i] = -1;\\n        }\\n        return dirty;\\n    }\\n    return -1;\\n}\\nfunction action_destroyer(action_result) {\\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\\n}\\n\\nconst is_client = typeof window !== 'undefined';\\nlet now = is_client\\n    ? () => window.performance.now()\\n    : () => Date.now();\\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\\n\\nconst tasks = new Set();\\nfunction run_tasks(now) {\\n    tasks.forEach(task => {\\n        if (!task.c(now)) {\\n            tasks.delete(task);\\n            task.f();\\n        }\\n    });\\n    if (tasks.size !== 0)\\n        raf(run_tasks);\\n}\\n/**\\n * Creates a new task that runs on each raf frame\\n * until it returns a falsy value or is aborted\\n */\\nfunction loop(callback) {\\n    let task;\\n    if (tasks.size === 0)\\n        raf(run_tasks);\\n    return {\\n        promise: new Promise(fulfill => {\\n            tasks.add(task = { c: callback, f: fulfill });\\n        }),\\n        abort() {\\n            tasks.delete(task);\\n        }\\n    };\\n}\\nfunction append(target, node) {\\n    target.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n    const append_styles_to = get_root_for_style(target);\\n    if (!append_styles_to.getElementById(style_sheet_id)) {\\n        const style = element('style');\\n        style.id = style_sheet_id;\\n        style.textContent = styles;\\n        append_stylesheet(append_styles_to, style);\\n    }\\n}\\nfunction get_root_for_style(node) {\\n    if (!node)\\n        return document;\\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n    if (root && root.host) {\\n        return root;\\n    }\\n    return node.ownerDocument;\\n}\\nfunction append_empty_stylesheet(node) {\\n    const style_element = element('style');\\n    append_stylesheet(get_root_for_style(node), style_element);\\n    return style_element.sheet;\\n}\\nfunction append_stylesheet(node, style) {\\n    append(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n    target.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n    node.parentNode.removeChild(node);\\n}\\nfunction element(name) {\\n    return document.createElement(name);\\n}\\nfunction svg_element(name) {\\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\\n}\\nfunction text(data) {\\n    return document.createTextNode(data);\\n}\\nfunction space() {\\n    return text(' ');\\n}\\nfunction listen(node, event, handler, options) {\\n    node.addEventListener(event, handler, options);\\n    return () => node.removeEventListener(event, handler, options);\\n}\\nfunction attr(node, attribute, value) {\\n    if (value == null)\\n        node.removeAttribute(attribute);\\n    else if (node.getAttribute(attribute) !== value)\\n        node.setAttribute(attribute, value);\\n}\\nfunction xlink_attr(node, attribute, value) {\\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\\n}\\nfunction children(element) {\\n    return Array.from(element.childNodes);\\n}\\nfunction set_input_value(input, value) {\\n    input.value = value == null ? '' : value;\\n}\\nfunction set_style(node, key, value, important) {\\n    if (value === null) {\\n        node.style.removeProperty(key);\\n    }\\n    else {\\n        node.style.setProperty(key, value, important ? 'important' : '');\\n    }\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n    const e = document.createEvent('CustomEvent');\\n    e.initCustomEvent(type, bubbles, cancelable, detail);\\n    return e;\\n}\\n\\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\\n// https://github.com/sveltejs/svelte/issues/3624\\nconst managed_styles = new Map();\\nlet active = 0;\\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\\nfunction hash(str) {\\n    let hash = 5381;\\n    let i = str.length;\\n    while (i--)\\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\\n    return hash >>> 0;\\n}\\nfunction create_style_information(doc, node) {\\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\\n    managed_styles.set(doc, info);\\n    return info;\\n}\\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\\n    const step = 16.666 / duration;\\n    let keyframes = '{\\\\n';\\n    for (let p = 0; p <= 1; p += step) {\\n        const t = a + (b - a) * ease(p);\\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\\\n`;\\n    }\\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\\\n}`;\\n    const name = `__svelte_${hash(rule)}_${uid}`;\\n    const doc = get_root_for_style(node);\\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\\n    if (!rules[name]) {\\n        rules[name] = true;\\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\\n    }\\n    const animation = node.style.animation || '';\\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\\n    active += 1;\\n    return name;\\n}\\nfunction delete_rule(node, name) {\\n    const previous = (node.style.animation || '').split(', ');\\n    const next = previous.filter(name\\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\\n    );\\n    const deleted = previous.length - next.length;\\n    if (deleted) {\\n        node.style.animation = next.join(', ');\\n        active -= deleted;\\n        if (!active)\\n            clear_rules();\\n    }\\n}\\nfunction clear_rules() {\\n    raf(() => {\\n        if (active)\\n            return;\\n        managed_styles.forEach(info => {\\n            const { stylesheet } = info;\\n            let i = stylesheet.cssRules.length;\\n            while (i--)\\n                stylesheet.deleteRule(i);\\n            info.rules = {};\\n        });\\n        managed_styles.clear();\\n    });\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n    current_component = component;\\n}\\nfunction get_current_component() {\\n    if (!current_component)\\n        throw new Error('Function called outside component initialization');\\n    return current_component;\\n}\\nfunction createEventDispatcher() {\\n    const component = get_current_component();\\n    return (type, detail, { cancelable = false } = {}) => {\\n        const callbacks = component.$$.callbacks[type];\\n        if (callbacks) {\\n            // TODO are there situations where events could be dispatched\\n            // in a server (non-DOM) environment?\\n            const event = custom_event(type, detail, { cancelable });\\n            callbacks.slice().forEach(fn => {\\n                fn.call(component, event);\\n            });\\n            return !event.defaultPrevented;\\n        }\\n        return true;\\n    };\\n}\\n// TODO figure out if we still want to support\\n// shorthand events, or if we want to implement\\n// a real bubbling mechanism\\nfunction bubble(component, event) {\\n    const callbacks = component.$$.callbacks[event.type];\\n    if (callbacks) {\\n        // @ts-ignore\\n        callbacks.slice().forEach(fn => fn.call(this, event));\\n    }\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n    if (!update_scheduled) {\\n        update_scheduled = true;\\n        resolved_promise.then(flush);\\n    }\\n}\\nfunction add_render_callback(fn) {\\n    render_callbacks.push(fn);\\n}\\nfunction add_flush_callback(fn) {\\n    flush_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n    const saved_component = current_component;\\n    do {\\n        // first, call beforeUpdate functions\\n        // and update components\\n        while (flushidx < dirty_components.length) {\\n            const component = dirty_components[flushidx];\\n            flushidx++;\\n            set_current_component(component);\\n            update(component.$$);\\n        }\\n        set_current_component(null);\\n        dirty_components.length = 0;\\n        flushidx = 0;\\n        while (binding_callbacks.length)\\n            binding_callbacks.pop()();\\n        // then, once components are updated, call\\n        // afterUpdate functions. This may cause\\n        // subsequent updates...\\n        for (let i = 0; i < render_callbacks.length; i += 1) {\\n            const callback = render_callbacks[i];\\n            if (!seen_callbacks.has(callback)) {\\n                // ...so guard against infinite loops\\n                seen_callbacks.add(callback);\\n                callback();\\n            }\\n        }\\n        render_callbacks.length = 0;\\n    } while (dirty_components.length);\\n    while (flush_callbacks.length) {\\n        flush_callbacks.pop()();\\n    }\\n    update_scheduled = false;\\n    seen_callbacks.clear();\\n    set_current_component(saved_component);\\n}\\nfunction update($$) {\\n    if ($$.fragment !== null) {\\n        $$.update();\\n        run_all($$.before_update);\\n        const dirty = $$.dirty;\\n        $$.dirty = [-1];\\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\\n        $$.after_update.forEach(add_render_callback);\\n    }\\n}\\n\\nlet promise;\\nfunction wait() {\\n    if (!promise) {\\n        promise = Promise.resolve();\\n        promise.then(() => {\\n            promise = null;\\n        });\\n    }\\n    return promise;\\n}\\nfunction dispatch(node, direction, kind) {\\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\\n}\\nconst outroing = new Set();\\nlet outros;\\nfunction group_outros() {\\n    outros = {\\n        r: 0,\\n        c: [],\\n        p: outros // parent group\\n    };\\n}\\nfunction check_outros() {\\n    if (!outros.r) {\\n        run_all(outros.c);\\n    }\\n    outros = outros.p;\\n}\\nfunction transition_in(block, local) {\\n    if (block && block.i) {\\n        outroing.delete(block);\\n        block.i(local);\\n    }\\n}\\nfunction transition_out(block, local, detach, callback) {\\n    if (block && block.o) {\\n        if (outroing.has(block))\\n            return;\\n        outroing.add(block);\\n        outros.c.push(() => {\\n            outroing.delete(block);\\n            if (callback) {\\n                if (detach)\\n                    block.d(1);\\n                callback();\\n            }\\n        });\\n        block.o(local);\\n    }\\n}\\nconst null_transition = { duration: 0 };\\nfunction create_bidirectional_transition(node, fn, params, intro) {\\n    let config = fn(node, params);\\n    let t = intro ? 0 : 1;\\n    let running_program = null;\\n    let pending_program = null;\\n    let animation_name = null;\\n    function clear_animation() {\\n        if (animation_name)\\n            delete_rule(node, animation_name);\\n    }\\n    function init(program, duration) {\\n        const d = (program.b - t);\\n        duration *= Math.abs(d);\\n        return {\\n            a: t,\\n            b: program.b,\\n            d,\\n            duration,\\n            start: program.start,\\n            end: program.start + duration,\\n            group: program.group\\n        };\\n    }\\n    function go(b) {\\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\\n        const program = {\\n            start: now() + delay,\\n            b\\n        };\\n        if (!b) {\\n            // @ts-ignore todo: improve typings\\n            program.group = outros;\\n            outros.r += 1;\\n        }\\n        if (running_program || pending_program) {\\n            pending_program = program;\\n        }\\n        else {\\n            // if this is an intro, and there's a delay, we need to do\\n            // an initial tick and/or apply CSS animation immediately\\n            if (css) {\\n                clear_animation();\\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\\n            }\\n            if (b)\\n                tick(0, 1);\\n            running_program = init(program, duration);\\n            add_render_callback(() => dispatch(node, b, 'start'));\\n            loop(now => {\\n                if (pending_program && now > pending_program.start) {\\n                    running_program = init(pending_program, duration);\\n                    pending_program = null;\\n                    dispatch(node, running_program.b, 'start');\\n                    if (css) {\\n                        clear_animation();\\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\\n                    }\\n                }\\n                if (running_program) {\\n                    if (now >= running_program.end) {\\n                        tick(t = running_program.b, 1 - t);\\n                        dispatch(node, running_program.b, 'end');\\n                        if (!pending_program) {\\n                            // we're done\\n                            if (running_program.b) {\\n                                // intro — we can tidy up immediately\\n                                clear_animation();\\n                            }\\n                            else {\\n                                // outro — needs to be coordinated\\n                                if (!--running_program.group.r)\\n                                    run_all(running_program.group.c);\\n                            }\\n                        }\\n                        running_program = null;\\n                    }\\n                    else if (now >= running_program.start) {\\n                        const p = now - running_program.start;\\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\\n                        tick(t, 1 - t);\\n                    }\\n                }\\n                return !!(running_program || pending_program);\\n            });\\n        }\\n    }\\n    return {\\n        run(b) {\\n            if (is_function(config)) {\\n                wait().then(() => {\\n                    // @ts-ignore\\n                    config = config();\\n                    go(b);\\n                });\\n            }\\n            else {\\n                go(b);\\n            }\\n        },\\n        end() {\\n            clear_animation();\\n            running_program = pending_program = null;\\n        }\\n    };\\n}\\n\\nfunction bind(component, name, callback) {\\n    const index = component.$$.props[name];\\n    if (index !== undefined) {\\n        component.$$.bound[index] = callback;\\n        callback(component.$$.ctx[index]);\\n    }\\n}\\nfunction create_component(block) {\\n    block && block.c();\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\\n    fragment && fragment.m(target, anchor);\\n    if (!customElement) {\\n        // onMount happens before the initial afterUpdate\\n        add_render_callback(() => {\\n            const new_on_destroy = on_mount.map(run).filter(is_function);\\n            if (on_destroy) {\\n                on_destroy.push(...new_on_destroy);\\n            }\\n            else {\\n                // Edge case - component was destroyed immediately,\\n                // most likely as a result of a binding initialising\\n                run_all(new_on_destroy);\\n            }\\n            component.$$.on_mount = [];\\n        });\\n    }\\n    after_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n    const $$ = component.$$;\\n    if ($$.fragment !== null) {\\n        run_all($$.on_destroy);\\n        $$.fragment && $$.fragment.d(detaching);\\n        // TODO null out other refs, including component.$$ (but need to\\n        // preserve final state?)\\n        $$.on_destroy = $$.fragment = null;\\n        $$.ctx = [];\\n    }\\n}\\nfunction make_dirty(component, i) {\\n    if (component.$$.dirty[0] === -1) {\\n        dirty_components.push(component);\\n        schedule_update();\\n        component.$$.dirty.fill(0);\\n    }\\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\\n}\\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\\n    const parent_component = current_component;\\n    set_current_component(component);\\n    const $$ = component.$$ = {\\n        fragment: null,\\n        ctx: null,\\n        // state\\n        props,\\n        update: noop,\\n        not_equal,\\n        bound: blank_object(),\\n        // lifecycle\\n        on_mount: [],\\n        on_destroy: [],\\n        on_disconnect: [],\\n        before_update: [],\\n        after_update: [],\\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n        // everything else\\n        callbacks: blank_object(),\\n        dirty,\\n        skip_bound: false,\\n        root: options.target || parent_component.$$.root\\n    };\\n    append_styles && append_styles($$.root);\\n    let ready = false;\\n    $$.ctx = instance\\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\\n            const value = rest.length ? rest[0] : ret;\\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\\n                if (!$$.skip_bound && $$.bound[i])\\n                    $$.bound[i](value);\\n                if (ready)\\n                    make_dirty(component, i);\\n            }\\n            return ret;\\n        })\\n        : [];\\n    $$.update();\\n    ready = true;\\n    run_all($$.before_update);\\n    // `false` as a special case of no DOM component\\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n    if (options.target) {\\n        if (options.hydrate) {\\n            const nodes = children(options.target);\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.l(nodes);\\n            nodes.forEach(detach);\\n        }\\n        else {\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.c();\\n        }\\n        if (options.intro)\\n            transition_in(component.$$.fragment);\\n        mount_component(component, options.target, options.anchor, options.customElement);\\n        flush();\\n    }\\n    set_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n    $destroy() {\\n        destroy_component(this, 1);\\n        this.$destroy = noop;\\n    }\\n    $on(type, callback) {\\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\\n        callbacks.push(callback);\\n        return () => {\\n            const index = callbacks.indexOf(callback);\\n            if (index !== -1)\\n                callbacks.splice(index, 1);\\n        };\\n    }\\n    $set($$props) {\\n        if (this.$$set && !is_empty($$props)) {\\n            this.$$.skip_bound = true;\\n            this.$$set($$props);\\n            this.$$.skip_bound = false;\\n        }\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Editable.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment$5(ctx) {\\n\\tlet span;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tattr(span, \\\"contenteditable\\\", \\\"\\\");\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"align-middle\\\");\\n\\t\\t\\tif (/*item*/ ctx[0] === void 0) add_render_callback(() => /*span_input_handler*/ ctx[5].call(span));\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\t/*span_binding*/ ctx[4](span);\\n\\n\\t\\t\\tif (/*item*/ ctx[0] !== void 0) {\\n\\t\\t\\t\\tspan.textContent = /*item*/ ctx[0];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(span, \\\"input\\\", /*span_input_handler*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(span, \\\"keydown\\\", /*handleEnter*/ ctx[2])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*item*/ 1 && /*item*/ ctx[0] !== span.textContent) {\\n\\t\\t\\t\\tspan.textContent = /*item*/ ctx[0];\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\t/*span_binding*/ ctx[4](null);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$4($$self, $$props, $$invalidate) {\\n\\tcreateEventDispatcher();\\n\\tlet { item } = $$props;\\n\\tlet { options = { singleLine: true } } = $$props;\\n\\tlet inputEl;\\n\\n\\t// by default, if Enter is pressed, the input is blurred\\n\\tconst handleEnter = e => {\\n\\t\\tif (e.keyCode === 13 && options.singleLine) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t\\tinputEl.blur();\\n\\t\\t}\\n\\t};\\n\\n\\tfunction span_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tinputEl = $$value;\\n\\t\\t\\t$$invalidate(1, inputEl);\\n\\t\\t});\\n\\t}\\n\\n\\tfunction span_input_handler() {\\n\\t\\titem = this.textContent;\\n\\t\\t$$invalidate(0, item);\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('item' in $$props) $$invalidate(0, item = $$props.item);\\n\\t\\tif ('options' in $$props) $$invalidate(3, options = $$props.options);\\n\\t};\\n\\n\\treturn [item, inputEl, handleEnter, options, span_binding, span_input_handler];\\n}\\n\\nclass Editable extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$4, create_fragment$5, safe_not_equal, { item: 0, options: 3 });\\n\\t}\\n\\n\\tget item() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset item(item) {\\n\\t\\tthis.$$set({ item });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget options() {\\n\\t\\treturn this.$$.ctx[3];\\n\\t}\\n\\n\\tset options(options) {\\n\\t\\tthis.$$set({ options });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icons.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment$4(ctx) {\\n\\tlet div;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tdiv.innerHTML = `<svg><symbol id=\\\"avatar\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M105 2a129 129 0 0 0 1 253c11 1 33 2 44 0 26-5 48-16 67-35a126 126 0 0 0 38-114A129 129 0 0 0 150 2c-10-2-35-2-45 0zm31 30c23 4 41 24 45 51l3 9 2 6c0 4-1 6-5 14l-7 15c-3 8-11 19-16 24s-5 7-2 13c5 10 13 16 35 23l16 5-3 4a117 117 0 0 1-151 0l-4-4 4-1 17-6c19-6 27-13 31-25l2-5-4-4c-5-6-12-16-15-23l-7-11c-4-6-7-14-7-18 0-3 3-9 5-9l1-3 2-11c6-26 26-43 50-45l8 1z\\\"></path></symbol><symbol id=\\\"address\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M412 414a111 111 0 0 1 90-77v-40h31c7 0 13-6 13-13v-15c0-5-2-9-7-11L355 153c-4-2-8-2-12 0l-65 37v-13c0-5-4-9-9-9h-29c-5 0-8 4-8 9v39l-74 42c-4 2-7 7-7 11v15c0 7 6 13 13 13h31v180c0 12 9 21 20 21h203c-13-25-15-56-6-84z\\\"></path><path d=\\\"M592 412a81 81 0 0 0-109-36 82 82 0 0 0-36 109l61 108c5 9 18 9 23 0l61-108c12-22 12-49 0-73zm-73 72a35 35 0 1 1 0-70 35 35 0 1 1 0 70z\\\"></path></symbol><symbol id=\\\"email\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"m582.1 312.4-197.5-128c-4.3-2.8-10-2.8-14.4 0l-199 128c-3.8 2.4-7.8 6.6-7.8 11v230.3c0 7.3 9.3 15.6 16.6 15.6h394.5c7.3 0 14.1-8.3 14.1-15.6V323.4c0-4.4-2.7-8.6-6.4-11zm-385 35.2 113 73.3-113 103zm131.8 88 41.2 26.8a13.2 13.2 0 0 0 14.3 0l41.1-26.8 115 104.7H214zM451.5 421l113-73.3V524zm-74.3-209.8 173.1 112.3-173 112.3-173.1-112.3zm0 200.6c20.7 0 40.9-7.3 56.7-20.6A13.2 13.2 0 0 0 417 371a62 62 0 1 1 22.2-47.5c0 6-4.9 10.9-10.8 10.9a11 11 0 0 1-10.9-10v-.9a40.3 40.3 0 1 0-12.3 29 37 37 0 0 0 60.3-29 88.4 88.4 0 1 0-88.3 88.4zm0-74.3a14 14 0 1 1 0-28 14 14 0 0 1 0 28z\\\"></path></symbol><symbol id=\\\"phone\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"m587 561-3 3c-96 96-241-7-315-81S92 264 188 168l3-3 107 106-13 14a39 39 0 0 0-5 49 503 503 0 0 0 138 138c16 11 36 9 49-5l14-13zm-92-118 104 103c7-14 4-33-8-45l-51-51a39 39 0 0 0-45-7zM206 153l103 104c7-15 5-33-7-45l-51-51a39 39 0 0 0-45-8z\\\"></path></symbol><symbol id=\\\"arrow-left\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"19\\\" y1=\\\"12\\\" x2=\\\"5\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 19 5 12 12 5\\\"></polyline></symbol><symbol id=\\\"arrow-right\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 5 19 12 12 19\\\"></polyline></symbol><symbol id=\\\"arrow-up\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"19\\\" x2=\\\"12\\\" y2=\\\"5\\\"></line><polyline points=\\\"5 12 12 5 19 12\\\"></polyline></symbol><symbol id=\\\"arrow-down\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><polyline points=\\\"19 12 12 19 5 12\\\"></polyline></symbol><symbol id=\\\"check\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"20 6 9 17 4 12\\\"></polyline></symbol><symbol id=\\\"close\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"></line><line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"download\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15\\\"></path><polyline points=\\\"7 10 12 15 17 10\\\"></polyline><line x1=\\\"12\\\" y1=\\\"15\\\" x2=\\\"12\\\" y2=\\\"3\\\"></line></symbol><symbol id=\\\"edit\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\\\"></path><polygon points=\\\"18 2 22 6 12 16 8 16 8 12 18 2\\\"></polygon></symbol><symbol id=\\\"github\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5229 6.47715 22 12 22C17.5229 22 22 17.5229 22 12C22 6.47715 17.5229 2 12 2ZM0 12C0 5.3726 5.3726 0 12 0C18.6274 0 24 5.3726 24 12C24 18.6274 18.6274 24 12 24C5.3726 24 0 18.6274 0 12Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M9.59162 22.7357C9.49492 22.6109 9.49492 21.4986 9.59162 19.399C8.55572 19.4347 7.90122 19.3628 7.62812 19.1833C7.21852 18.9139 6.80842 18.0833 6.44457 17.4979C6.08072 16.9125 5.27312 16.8199 4.94702 16.6891C4.62091 16.5582 4.53905 16.0247 5.84562 16.4282C7.15222 16.8316 7.21592 17.9303 7.62812 18.1872C8.04032 18.4441 9.02572 18.3317 9.47242 18.1259C9.91907 17.9201 9.88622 17.1538 9.96587 16.8503C10.0666 16.5669 9.71162 16.5041 9.70382 16.5018C9.26777 16.5018 6.97697 16.0036 6.34772 13.7852C5.71852 11.5669 6.52907 10.117 6.96147 9.49369C7.24972 9.07814 7.22422 8.19254 6.88497 6.83679C8.11677 6.67939 9.06732 7.06709 9.73672 7.99999C9.73737 8.00534 10.6143 7.47854 12.0001 7.47854C13.386 7.47854 13.8777 7.90764 14.2571 7.99999C14.6365 8.09234 14.94 6.36699 17.2834 6.83679C16.7942 7.79839 16.3844 8.99999 16.6972 9.49369C17.0099 9.98739 18.2372 11.5573 17.4833 13.7852C16.9807 15.2706 15.9927 16.1761 14.5192 16.5018C14.3502 16.5557 14.2658 16.6427 14.2658 16.7627C14.2658 16.9427 14.4942 16.9624 14.8233 17.8058C15.0426 18.368 15.0585 19.9739 14.8708 22.6234C14.3953 22.7445 14.0254 22.8257 13.7611 22.8673C13.2924 22.9409 12.7835 22.9822 12.2834 22.9982C11.7834 23.0141 11.6098 23.0123 10.9185 22.948C10.4577 22.9051 10.0154 22.8343 9.59162 22.7357Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path></symbol><symbol id=\\\"git-branch\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"6\\\" y1=\\\"3\\\" x2=\\\"6\\\" y2=\\\"15\\\"></line><circle cx=\\\"18\\\" cy=\\\"6\\\" r=\\\"3\\\"></circle><circle cx=\\\"6\\\" cy=\\\"18\\\" r=\\\"3\\\"></circle><path d=\\\"M18 9a9 9 0 0 1-9 9\\\"></path></symbol><symbol id=\\\"log-in\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M15 3H19A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H15\\\"></path><polyline points=\\\"10 17 15 12 10 7\\\"></polyline><line x1=\\\"15\\\" y1=\\\"12\\\" x2=\\\"3\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"maximize\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\\\"></path></symbol><symbol id=\\\"maximize-2\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"15 3 21 3 21 9\\\"></polyline><polyline points=\\\"9 21 3 21 3 15\\\"></polyline><line x1=\\\"21\\\" y1=\\\"3\\\" x2=\\\"14\\\" y2=\\\"10\\\"></line><line x1=\\\"3\\\" y1=\\\"21\\\" x2=\\\"10\\\" y2=\\\"14\\\"></line></symbol><symbol id=\\\"menu\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"3\\\" y1=\\\"12\\\" x2=\\\"21\\\" y2=\\\"12\\\"></line><line x1=\\\"3\\\" y1=\\\"6\\\" x2=\\\"21\\\" y2=\\\"6\\\"></line><line x1=\\\"3\\\" y1=\\\"18\\\" x2=\\\"21\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"message-square\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><g transform=\\\"translate(0, 1)\\\"><path d=\\\"M16.5 19H11V15H18V11H22V19H19.5L18 20.5L16.5 19Z\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M2 3H18V15H8.5L6.5 17L4.5 15H2V3Z\\\" fill=\\\"currentColor\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M6 11H9\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path><path d=\\\"M6 7H12\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path></g></symbol><symbol id=\\\"minus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"plus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"save\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\\\"></path><polyline points=\\\"17 21 17 13 7 13 7 21\\\"></polyline><polyline points=\\\"7 3 7 8 15 8\\\"></polyline></symbol><symbol id=\\\"link\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M9,7L6,7A2 2 0 0 0 6,17L9,17\\\"></path><path d=\\\"M15,7L18,7A2 2 0 0 1 18,17L15,17\\\"></path><path d=\\\"M7,12L17,12\\\"></path></symbol><symbol id=\\\"chevron\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M2,7 L12,17 L20,7\\\"></path></symbol><symbol id=\\\"delete\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"currentColor\\\" stroke=\\\"none\\\" d=\\\"M22 4.2h-5.6L15 1.6c-.1-.2-.4-.4-.7-.4H9.6c-.2 0-.5.2-.6.4L7.6 4.2H2c-.4 0-.8.4-.8.8s.4.8.8.8h1.8V22c0 .4.3.8.8.8h15c.4 0 .8-.3.8-.8V5.8H22c.4 0 .8-.3.8-.8s-.4-.8-.8-.8zM10.8 16.5c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5zm4 0c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5z\\\"></path></symbol><symbol id=\\\"scanQR\\\" class=\\\"icon\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 760 760\\\"><path d=\\\"M684 630c-31-34-9-38-2-84 7-34 13-75-2-123l-34-64c-22-39-51-89-58-117v-2c-6-24-9-43-9-60-2-22-4-35-20-41h-2c-11-3-22-5-33 2V59c0-22-20-41-43-41H205c-25 0-42 19-42 41v49s-29-26-49-30c-5 0-21 2-32 13a44 44 0 0 0-11 43c2 11 31 50 65 69 7 7 15 11 27 15v3h-5c-49 4-69 64-31 94-34 20-34 65-2 87a54 52 0 0 0 38 92v72c0 23 17 62 42 62h89c13 30 25 41 69 50h7c11 4 31 8 47 6l2 2 7 13c6 11 11 22 13 35 2 6 9 11 16 9 6-3 11-9 9-16-3-15-9-28-16-38l-9-13c-2-7-4-9-11-13l-2-2h-9c-11 2-31-3-43-5l-6-2c-32-6-34-4-47-26h160c23 0 43-17 43-41 0 0-20-60-18-86s24-65 24-65l18-30c9-24-4-47-18-78l-9-15c-11-23-20-47-20-75-2-11 5-41 20-63 7-8 16-19 29-17l5 24c0 17 2 39 11 64 7 33 34 82 58 123l33 63c12 41 7 78 0 112-6 45-31 58 9 101 12 5 20-4 18-15zM205 41h276c9 0 18 9 18 18v19H187V59c0-9 7-18 18-18zm-58 143c-18-11-51-48-51-54-3-7-3-17 4-22 5-4 14-4 16-6 4 0 47 30 47 30v58zm11 60a30 29 0 1 1 0 58 30 29 0 0 1 0-58zm0 145a30 29 0 1 1 0-58 30 29 0 0 1 0 58zm-29 54a30 29 0 1 1 60 0 30 29 0 0 1-60 0zm85 0c0-18-9-33-22-41 31-22 31-67-3-87 34-21 34-69-2-88V102h312v62c-15 26-24 59-22 76 0 30 11 58 22 82 31 267-67 211-312 211v-45c16-9 27-26 27-45zm267 161H205c-11 0-18-28-18-38v-9h312v9c0 10-9 38-18 38z\\\"></path><path d=\\\"m306 191-2 18v18h5c4 0 4 2 4 3 1 4 0 5-4 5-5 0-5 0-5 10 0 8 0 8 5 8 4 0 5-1 5-5l3-3c5 0 5 0 5 13 2 13 2 13 5 13 4 2 5 0 5-3s2-5 5-5 3 0 3-5 0-5 5-5 5 0 5-3c0-5 0-5-5-5-3 0-5 0-5 5 0 3 0 3-3 3-5 0-5 0-5-18l-1-16-4-2c-3 0-5-1-5-5l-3-3c-3 0-5-2-5-10s-1-8-3-10z\\\"></path><path d=\\\"m352 191-2 5c0 3 0 3-8 3-10 0-10 0-10 5 0 3 0 5 5 5 3 0 3 0 3 13v13h18v9c0 9 0 9 5 9h5v-26h10c8 0 8 0 8-5s0-5-8-5c-10 0-10 0-10-5 0-3 0-3-5-3s-5 0-5 3c0 4 2 5 5 5 5 0 5 2 5 5 0 5 0 5-5 5-3 0-5-2-5-5s-1-5-4-5c-4 0-4 0-4-10 0-8 0-8 5-8 3 0 3 0 3-5-1-3-4-6-6-3zm26 2c-1 5 0 6 5 6 3 0 3 0 3-5-1-5-8-6-9-1zm-146 29v31h62v-62h-62Zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M250 222v13h26v-26h-26Zm146 0v31h63v-62h-63zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M414 222v13h27v-26h-27zm-37 15v10l4 6c5 0 5 0 5-8 0-10 0-10-3-10zm-25 18-2 5c0 2 2 3 5 3s3 0 3-5c-1-3-4-6-6-3zm-122 10v10l5 6c5 0 5 2 5 5 0 5 0 5-5 5h-5v26h20v5c0 5 0 5 5 5 3 0 3 0 3-5 0-3-1-5-5-5l-3-3c0-3-1-5-5-5-5 0-5 0-5-10 0-8 0-8 5-8s5 0 5 5c0 12 0 13 5 13 3 0 3 2 3 5s2 3 5 3c5 0 5 0 5-3s-1-5-5-5c-5 0-5 0-5-10v-8h10c8 0 8 0 8 5 0 3 2 3 5 3 5 0 5 0 5 5s0 5-5 5-5 0-5 10c0 8 0 8-3 8s-5 2-5 4c0 4 5 6 13 4 4 0 5-1 5-4 0-2 2-4 5-4s3 2 3 5 2 3 15 3c5 0 5 0 5 5s0 5 5 5c3 0 3 0 3 10 0 8 0 8 5 8h5v-13c2-13 2-13 5-15 2 0 3-1 3-4 0-4 2-4 5-4 5 0 5 0 5 5s8 5 8 0c2-3 2-3 10-5 9 0 9 0 9-5s0-5-10-5c-9 0-9 0-9-3s2-5 5-5c4 0 5-1 5-5 0-3 0-5-5-5-3 0-5-1-5-5 0-1 0-3 5-3 4-1 5-1 5-10 0-8 0-8-5-8h-8c-5 0-5 0-5 8-1 9-1 9-5 10-3 0-5 2-5 5 0 2 0 3-3 3-5 0-5 0-5 5s0 5-5 5c-3 0-5 0-5 3 0 4 0 5-3 5-5 0-5 0-5 5 0 4 0 5 5 5 3 0 3 0 3 4 0 6-8 6-8 1-1-3-1-5-10-5-10 0-10 0-10-5s0-5-3-5-5-1-5-5c0-3 0-3 10-3 8 0 8 0 8 5 0 3 0 3 5 3 7-1 7-6 0-8-5 0-5 0-5-10 0-8 0-8 5-8 4 0 5 2 5 5 0 5 8 5 8 0 0-3 2-5 5-5 4 0 4-1 4-5 1-3 0-3-14-5-13 0-13 0-13-3 0-5 0-5-5-5s-5 0-5 3c0 4 2 5 5 5 5 0 5 2 5 5 0 5 0 5-5 5s-5 0-5-5v-5h-36v-3c0-7-8-7-8-2 0 4-1 5-5 5-5 0-5 0-5-3s2-5 5-5c4 0 5-2 5-5s-1-3-10-5zm64 29c0 5 0 5-3 5s-5 0-5-3 2-5 5-5 3 2 3 5zm56 10c0 4-1 5-5 5-3 0-5 2-5 5 0 2 0 3-3 3s-5 0-5-3 2-5 5-5 3 0 3-5 0-5 5-5c4 0 4 2 4 5z\\\"></path><path d=\\\"M268 268c2 3 2 3 13 3 12 0 13 0 13-3v-5h-26Zm74-3c-2 2-2 6 2 6 3 2 6 0 6-3-1-5-6-6-8-3zm35 2c0 3 3 6 6 6l3-6c0-4 0-4-3-4zm29-2c-2 2-2 6 2 6 3 2 6 0 6-3-1-5-6-6-8-3zm16 8c0 8 0 8-4 8s-4 0-4 5c0 4 2 5 5 5 2 0 3-1 3-5 0-5 2-5 5-5 4 0 5 0 5-3 0-5 0-5 10-5 8 0 8 0 8 3 0 4-1 5-5 5-3 0-4 2-4 5 0 4-2 5-5 5-2 0-4 2-4 5s2 3 4 3c3 0 5 2 5 5 0 4 1 5 4 5 4 0 5 2 5 5s2 3 5 3h5v-52l-19-2h-19zm-36 5c0 3 0 3-3 3-5 0-6 2-6 7 3 5 8 3 9-2 0-3 2-5 5-5 4 0 5-1 5-5 0-3 0-3-5-3s-5 0-5 3zm10 26c0 13 0 13 5 13 3 0 3 0 3-13s0-13-3-13c-5 0-5 0-5 13zm28 7-2 3c0 2 2 3 5 3 5 0 5 0 5-5 0-3 0-3-3-3zm-8 8-2 5c0 2 2 3 5 3s3 0 3-5c-1-3-4-6-6-3zm-30 12c0 3-1 4-5 4s-4 2-4 15 0 13-4 13c-5 0-5 0-5 5s0 5-8 5c-10 0-10 0-10 4 0 3 2 4 5 4s3 0 3 5 0 5-3 5-5-1-5-5c0-3-1-5-5-5-3 0-5 2-5 5 0 4-1 5-3 5-3 0-5-1-5-5 0-3-1-5-5-5-3 0-5 2-5 5 0 4-1 5-5 5s-4 8 0 8 5 2 5 5c0 5 0 5-3 5s-5-1-5-5c0-3-1-5-5-5-3 2-3 2-3 10v10h8c7 0 8-1 8-5 0-5 0-5 10-5 8 0 8 0 8 5 2 4 2 4 10 5h8v-10c2-8 2-10 5-10 4 0 5-1 5-4 0-4 2-4 4-4 5 0 5 0 5 8 1 9 1 9 4 10 5 0 5 0 5-8v-10h15c13 0 13 0 13 4 0 3-1 4-5 4-3 0-3 2-3 10v10h54v-10c0-8-1-8-5-8-3 0-5 0-5 3 0 5-1 5-5 5-3 0-4-1-4-5 0-5 0-5 4-5s5 0 5-3 2-5 5-5c4 0 4-1 4-5 0-3 0-3-9-3h-9v16h-10c-9 0-9 0-9-3s-1-5-4-5c-4 0-4 0-4-5 0-3 0-5 4-5 3 0 4 0 4-3 0-5 0-5 19-5l18-1v-7l-18-2c-19 0-19 0-19-3s2-5 5-5c4 0 5-1 5-5 0-5 0-5-5-5-3 0-5-1-5-5-1-3-1-3-9-5-9 0-9 0-9-4s0-4-9-4-9 0-9 4zm28 27v15h-26l-2-15v-13h14l14 2v13zm-37 20c0 3 0 3-4 3-3 0-5 0-5-3s2-5 5-5c4 0 4 2 4 5zm-27 26c0 5 0 5-5 5s-5 0-5-3c0-5 2-7 7-7 2 0 3 2 3 5z\\\"></path><path d=\\\"M396 360c0 3 2 3 5 3s3 0 3-3 0-5-3-5-5 2-5 5zm36-28c0 3 2 3 5 3 4 0 4 0 4-3s0-5-4-5c-3 0-5 2-5 5zm-202 5c-1 7 2 8 10 8 9 0 10-1 10-5 0-3-1-3-10-5zm30 0-2 5c0 3 0 3 5 3 4 0 5-1 5-3 0-5-5-8-8-5zm28 0-2 5c0 2 2 3 5 3s3 0 3-5c0-3-4-6-6-3zm54 0c-3 2-2 8 3 8 4 0 5-1 5-3 0-3-1-7-5-7zm108 0v10c2 7 2 7 5 7 4 1 5 0 5-9 0-8-1-8-5-10zm-146 13c2 5 9 7 10 2 0-5-1-7-6-7-4 0-4 0-4 5zm46 0c0 4 2 4 5 4 2 0 3 0 3-4 0-5 0-5-4-5s-4 0-4 5zm-118 36v32h62v-63h-62Zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M250 386v13h26v-26h-26Zm54-13c0 8 0 8 5 8 4-1 4-1 4-9 1-7 0-7-4-9-5 0-5 0-5 10zm36-8c-1 5 2 8 5 8 4 0 5-1 5-5 0-3-1-5-5-5zm-8 13c0 3 2 3 5 3s3 0 3-3 0-5-3-5-5 2-5 5zm90 5c-1 5 2 8 5 8 4 0 5-1 5-5 0-3-1-5-5-5zm-54 31c0 4 2 5 5 5 4 0 4 0 4-5s0-5-5-5c-4 0-4 0-4 5z\\\"></path></symbol></svg>`;\\n\\t\\t\\tset_style(div, \\\"display\\\", \\\"none\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t}\\n\\t};\\n}\\n\\nclass Icons extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, null, create_fragment$4, safe_not_equal, {});\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icon.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$3(target) {\\n\\tappend_styles(target, \\\"svelte-12pt8gd-ContactCard\\\", \\\".icon.svelte-12pt8gd-ContactCard{position:relative;overflow:hidden;vertical-align:middle;-o-object-fit:contain;object-fit:contain;transform-origin:center center;stroke:currentColor;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;fill:currentColor}\\\");\\n}\\n\\nfunction create_fragment$3(ctx) {\\n\\tlet svg;\\n\\tlet use;\\n\\tlet use_xlink_href_value;\\n\\tlet t0;\\n\\tlet t1;\\n\\tlet icons;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);\\n\\ticons = new Icons({});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tsvg = svg_element(\\\"svg\\\");\\n\\t\\t\\tuse = svg_element(\\\"use\\\");\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tcreate_component(icons.$$.fragment);\\n\\t\\t\\txlink_attr(use, \\\"xlink:href\\\", use_xlink_href_value = \\\"#\\\" + /*name*/ ctx[0]);\\n\\t\\t\\tattr(svg, \\\"width\\\", /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, \\\"height\\\", /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, \\\"class\\\", \\\"icon  svelte-12pt8gd-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, svg, anchor);\\n\\t\\t\\tappend(svg, use);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, t1, anchor);\\n\\t\\t\\tmount_component(icons, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (!current || dirty & /*name*/ 1 && use_xlink_href_value !== (use_xlink_href_value = \\\"#\\\" + /*name*/ ctx[0])) {\\n\\t\\t\\t\\txlink_attr(use, \\\"xlink:href\\\", use_xlink_href_value);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, \\\"width\\\", /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, \\\"height\\\", /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[2],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[2])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\ttransition_in(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\ttransition_out(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(svg);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t\\tif (detaching) detach(t1);\\n\\t\\t\\tdestroy_component(icons, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$3($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { name } = $$props;\\n\\tlet { size = '100%' } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\\n\\t\\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [name, size, $$scope, slots];\\n}\\n\\nclass Icon extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, { name: 0, size: 1 }, add_css$3);\\n\\t}\\n\\n\\tget name() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset name(name) {\\n\\t\\tthis.$$set({ name });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget size() {\\n\\t\\treturn this.$$.ctx[1];\\n\\t}\\n\\n\\tset size(size) {\\n\\t\\tthis.$$set({ size });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Content.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$2(target) {\\n\\tappend_styles(target, \\\"svelte-12gamzf-ContactCard\\\", \\\".svelte-12gamzf-ContactCard,.svelte-12gamzf-ContactCard::before,.svelte-12gamzf-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-12gamzf-ContactCard::before,.svelte-12gamzf-ContactCard::after{--tw-content:''}.svelte-12gamzf-ContactCard:-moz-focusring{outline:auto}.svelte-12gamzf-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-12gamzf-ContactCard::-webkit-inner-spin-button,.svelte-12gamzf-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-12gamzf-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-12gamzf-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-12gamzf-ContactCard:disabled{cursor:default}.svelte-12gamzf-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-12gamzf-ContactCard::-webkit-date-and-time-value{min-height:1.5em}.svelte-12gamzf-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-12gamzf-ContactCard,.svelte-12gamzf-ContactCard::before,.svelte-12gamzf-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-12gamzf-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-12gamzf-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.m-2.svelte-12gamzf-ContactCard{margin:0.5rem}.flex.svelte-12gamzf-ContactCard{display:flex}.h-8.svelte-12gamzf-ContactCard{height:2rem}.w-8.svelte-12gamzf-ContactCard{width:2rem}@-webkit-keyframes svelte-12gamzf-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-12gamzf-ContactCard-spin{to{transform:rotate(360deg)}}.items-center.svelte-12gamzf-ContactCard{align-items:center}.justify-center.svelte-12gamzf-ContactCard{justify-content:center}.bg-contain.svelte-12gamzf-ContactCard{background-size:contain}.bg-no-repeat.svelte-12gamzf-ContactCard{background-repeat:no-repeat}.text-center.svelte-12gamzf-ContactCard{text-align:center}.align-middle.svelte-12gamzf-ContactCard{vertical-align:middle}.text-slate-500.svelte-12gamzf-ContactCard{--tw-text-opacity:1;color:rgb(100 116 139 / var(--tw-text-opacity))}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nconst get_first_slot_changes = dirty => ({});\\nconst get_first_slot_context = ctx => ({});\\n\\n// (10:21)      \\nfunction fallback_block$1(ctx) {\\n\\tlet div;\\n\\tlet icon;\\n\\tlet current;\\n\\ticon = new Icon({ props: { name: /*name*/ ctx[0] } });\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tcreate_component(icon.$$.fragment);\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"text-slate-500 svelte-12gamzf-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\tmount_component(icon, div, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst icon_changes = {};\\n\\t\\t\\tif (dirty & /*name*/ 1) icon_changes.name = /*name*/ ctx[0];\\n\\t\\t\\ticon.$set(icon_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(icon.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(icon.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tdestroy_component(icon);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$2(ctx) {\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet t;\\n\\tlet div1;\\n\\tlet current;\\n\\tconst first_slot_template = /*#slots*/ ctx[2].first;\\n\\tconst first_slot = create_slot(first_slot_template, ctx, /*$$scope*/ ctx[1], get_first_slot_context);\\n\\tconst first_slot_or_fallback = first_slot || fallback_block$1(ctx);\\n\\tconst default_slot_template = /*#slots*/ ctx[2].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tif (first_slot_or_fallback) first_slot_or_fallback.c();\\n\\t\\t\\tt = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"align-middle w-8 h-8 svelte-12gamzf-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"align-middle svelte-12gamzf-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"flex align-middle items-center text-center justify-center bg-contain bg-no-repeat m-2 biggie svelte-12gamzf-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div0);\\n\\n\\t\\t\\tif (first_slot_or_fallback) {\\n\\t\\t\\t\\tfirst_slot_or_fallback.m(div0, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div2, t);\\n\\t\\t\\tappend(div2, div1);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div1, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (first_slot) {\\n\\t\\t\\t\\tif (first_slot.p && (!current || dirty & /*$$scope*/ 2)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tfirst_slot,\\n\\t\\t\\t\\t\\t\\tfirst_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[1],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[1])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(first_slot_template, /*$$scope*/ ctx[1], dirty, get_first_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_first_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (first_slot_or_fallback && first_slot_or_fallback.p && (!current || dirty & /*name*/ 1)) {\\n\\t\\t\\t\\t\\tfirst_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 2)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[1],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[1])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[1], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(first_slot_or_fallback, local);\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(first_slot_or_fallback, local);\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t\\tif (first_slot_or_fallback) first_slot_or_fallback.d(detaching);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$2($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { name = null } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(1, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [name, $$scope, slots];\\n}\\n\\nclass Content extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { name: 0 }, add_css$2);\\n\\t}\\n\\n\\tget name() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset name(name) {\\n\\t\\tthis.$$set({ name });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nfunction cubicOut(t) {\\n    const f = t - 1.0;\\n    return f * f * f + 1.0;\\n}\\nfunction quintOut(t) {\\n    return --t * t * t * t * t + 1;\\n}\\n\\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\\n    const style = getComputedStyle(node);\\n    const target_opacity = +style.opacity;\\n    const transform = style.transform === 'none' ? '' : style.transform;\\n    const od = target_opacity * (1 - opacity);\\n    return {\\n        delay,\\n        duration,\\n        easing,\\n        css: (t, u) => `\\n\\t\\t\\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\\n\\t\\t\\topacity: ${target_opacity - (od * u)}`\\n    };\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContextMenu.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$1(target) {\\n\\tappend_styles(target, \\\"svelte-ryiy6k-ContactCard\\\", \\\".svelte-ryiy6k-ContactCard,.svelte-ryiy6k-ContactCard::before,.svelte-ryiy6k-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-ryiy6k-ContactCard::before,.svelte-ryiy6k-ContactCard::after{--tw-content:''}b.svelte-ryiy6k-ContactCard{font-weight:bolder}input.svelte-ryiy6k-ContactCard{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}.svelte-ryiy6k-ContactCard:-moz-focusring{outline:auto}.svelte-ryiy6k-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-ryiy6k-ContactCard::-webkit-inner-spin-button,.svelte-ryiy6k-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-ryiy6k-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-ryiy6k-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}input.svelte-ryiy6k-ContactCard::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-ryiy6k-ContactCard::placeholder{opacity:1;color:#9CA3AF}.svelte-ryiy6k-ContactCard:disabled{cursor:default}svg.svelte-ryiy6k-ContactCard{display:block;vertical-align:middle}[type='text'].svelte-ryiy6k-ContactCard{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6B7280;border-width:1px;border-radius:0px;padding-top:0.5rem;padding-right:0.75rem;padding-bottom:0.5rem;padding-left:0.75rem;font-size:1rem;line-height:1.5rem;--tw-shadow:0 0 #0000}[type='text'].svelte-ryiy6k-ContactCard:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);border-color:#1C64F2}input.svelte-ryiy6k-ContactCard::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-ryiy6k-ContactCard::placeholder{color:#6B7280;opacity:1}.svelte-ryiy6k-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-ryiy6k-ContactCard::-webkit-date-and-time-value{min-height:1.5em}[type='checkbox'].svelte-ryiy6k-ContactCard{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;-webkit-print-color-adjust:exact;color-adjust:exact;print-color-adjust:exact;display:inline-block;vertical-align:middle;background-origin:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-shrink:0;height:1rem;width:1rem;color:#1C64F2;background-color:#fff;border-color:#6B7280;border-width:1px;--tw-shadow:0 0 #0000}[type='checkbox'].svelte-ryiy6k-ContactCard{border-radius:0px}[type='checkbox'].svelte-ryiy6k-ContactCard:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:2px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)}[type='checkbox'].svelte-ryiy6k-ContactCard:checked{border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}[type='checkbox'].svelte-ryiy6k-ContactCard:checked{background-image:url(\\\\\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e\\\\\\\")}[type='checkbox'].svelte-ryiy6k-ContactCard:indeterminate{background-image:url(\\\\\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e\\\\\\\");border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}[type='checkbox'].svelte-ryiy6k-ContactCard:indeterminate:hover,[type='checkbox'].svelte-ryiy6k-ContactCard:indeterminate:focus{border-color:transparent;background-color:currentColor}.svelte-ryiy6k-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-ryiy6k-ContactCard,.svelte-ryiy6k-ContactCard::before,.svelte-ryiy6k-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-ryiy6k-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-ryiy6k-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.z-50.svelte-ryiy6k-ContactCard{z-index:50}.mx-4.svelte-ryiy6k-ContactCard{margin-left:1rem;margin-right:1rem}.mx-1.svelte-ryiy6k-ContactCard{margin-left:0.25rem;margin-right:0.25rem}.flex.svelte-ryiy6k-ContactCard{display:flex}.h-10.svelte-ryiy6k-ContactCard{height:2.5rem}.w-10.svelte-ryiy6k-ContactCard{width:2.5rem}@-webkit-keyframes svelte-ryiy6k-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-ryiy6k-ContactCard-spin{to{transform:rotate(360deg)}}.flex-row.svelte-ryiy6k-ContactCard{flex-direction:row}.flex-col.svelte-ryiy6k-ContactCard{flex-direction:column}.justify-end.svelte-ryiy6k-ContactCard{justify-content:flex-end}.rounded-sm.svelte-ryiy6k-ContactCard{border-radius:0.125rem}.border.svelte-ryiy6k-ContactCard{border-width:1px}.border-slate-300.svelte-ryiy6k-ContactCard{--tw-border-opacity:1;border-color:rgb(203 213 225 / var(--tw-border-opacity))}.bg-slate-50.svelte-ryiy6k-ContactCard{--tw-bg-opacity:1;background-color:rgb(248 250 252 / var(--tw-bg-opacity))}.p-4.svelte-ryiy6k-ContactCard{padding:1rem}.text-left.svelte-ryiy6k-ContactCard{text-align:left}.text-sm.svelte-ryiy6k-ContactCard{font-size:0.875rem;line-height:1.25rem}.text-lg.svelte-ryiy6k-ContactCard{font-size:1.125rem;line-height:1.75rem}.drop-shadow-lg.svelte-ryiy6k-ContactCard{--tw-drop-shadow:drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\n// (68:1) {#if open}\\nfunction create_if_block$1(ctx) {\\n\\tlet div1;\\n\\tlet div0;\\n\\tlet current_block_type_index;\\n\\tlet if_block;\\n\\tlet div1_transition;\\n\\tlet current;\\n\\tconst if_block_creators = [create_if_block_1, create_else_block$1];\\n\\tconst if_blocks = [];\\n\\n\\tfunction select_block_type(ctx, dirty) {\\n\\t\\tif (!/*submitting*/ ctx[1]) return 0;\\n\\t\\treturn 1;\\n\\t}\\n\\n\\tcurrent_block_type_index = select_block_type(ctx);\\n\\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tif_block.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"text-left border-slate-300 svelte-ryiy6k-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex flex-row justify-end z-50 bg-slate-50 border drop-shadow-lg p-4 mx-4 rounded-sm svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div1, anchor);\\n\\t\\t\\tappend(div1, div0);\\n\\t\\t\\tif_blocks[current_block_type_index].m(div0, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tlet previous_block_index = current_block_type_index;\\n\\t\\t\\tcurrent_block_type_index = select_block_type(ctx);\\n\\n\\t\\t\\tif (current_block_type_index === previous_block_index) {\\n\\t\\t\\t\\tif_blocks[current_block_type_index].p(ctx, dirty);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\\n\\t\\t\\t\\t\\tif_blocks[previous_block_index] = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t\\tif_block = if_blocks[current_block_type_index];\\n\\n\\t\\t\\t\\tif (!if_block) {\\n\\t\\t\\t\\t\\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\tif_block.m(div0, null);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\n\\t\\t\\tadd_render_callback(() => {\\n\\t\\t\\t\\tif (!div1_transition) div1_transition = create_bidirectional_transition(\\n\\t\\t\\t\\t\\tdiv1,\\n\\t\\t\\t\\t\\tfly,\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\t\\t\\tduration: 300,\\n\\t\\t\\t\\t\\t\\tx: 0,\\n\\t\\t\\t\\t\\t\\ty: -100,\\n\\t\\t\\t\\t\\t\\topacity: 0.1,\\n\\t\\t\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tdiv1_transition.run(1);\\n\\t\\t\\t});\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\n\\t\\t\\tif (!div1_transition) div1_transition = create_bidirectional_transition(\\n\\t\\t\\t\\tdiv1,\\n\\t\\t\\t\\tfly,\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\t\\tduration: 300,\\n\\t\\t\\t\\t\\tx: 0,\\n\\t\\t\\t\\t\\ty: -100,\\n\\t\\t\\t\\t\\topacity: 0.1,\\n\\t\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tfalse\\n\\t\\t\\t);\\n\\n\\t\\t\\tdiv1_transition.run(0);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div1);\\n\\t\\t\\tif_blocks[current_block_type_index].d();\\n\\t\\t\\tif (detaching && div1_transition) div1_transition.end();\\n\\t\\t}\\n\\t};\\n}\\n\\n// (94:4) {:else}\\nfunction create_else_block$1(ctx) {\\n\\tlet t;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tt = text(\\\"Requesting access...\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (74:4) {#if !submitting}\\nfunction create_if_block_1(ctx) {\\n\\tlet span;\\n\\tlet t3;\\n\\tlet content0;\\n\\tlet t4;\\n\\tlet content1;\\n\\tlet current;\\n\\n\\tcontent0 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: {\\n\\t\\t\\t\\t\\tfirst: [create_first_slot_1],\\n\\t\\t\\t\\t\\tdefault: [create_default_slot_1$1]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent1 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: {\\n\\t\\t\\t\\t\\tfirst: [create_first_slot],\\n\\t\\t\\t\\t\\tdefault: [create_default_slot$1]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.innerHTML = `Paste the <b class=\\\"svelte-ryiy6k-ContactCard\\\">Public Key</b> you want to grant access`;\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tcreate_component(content0.$$.fragment);\\n\\t\\t\\tt4 = space();\\n\\t\\t\\tcreate_component(content1.$$.fragment);\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\tinsert(target, t3, anchor);\\n\\t\\t\\tmount_component(content0, target, anchor);\\n\\t\\t\\tinsert(target, t4, anchor);\\n\\t\\t\\tmount_component(content1, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst content0_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, targetPublicKey*/ 260) {\\n\\t\\t\\t\\tcontent0_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent0.$set(content0_changes);\\n\\t\\t\\tconst content1_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope*/ 256) {\\n\\t\\t\\t\\tcontent1_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent1.$set(content1_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(content0.$$.fragment, local);\\n\\t\\t\\ttransition_in(content1.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(content0.$$.fragment, local);\\n\\t\\t\\ttransition_out(content1.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\tif (detaching) detach(t3);\\n\\t\\t\\tdestroy_component(content0, detaching);\\n\\t\\t\\tif (detaching) detach(t4);\\n\\t\\t\\tdestroy_component(content1, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (76:5) <Content>\\nfunction create_default_slot_1$1(ctx) {\\n\\tlet input;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input, \\\"placeholder\\\", \\\"Their Public Key\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\t\\t\\tset_input_value(input, /*targetPublicKey*/ ctx[2]);\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input, \\\"input\\\", /*input_input_handler*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(input, \\\"keydown\\\", /*handleInput*/ ctx[4])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*targetPublicKey*/ 4 && input.value !== /*targetPublicKey*/ ctx[2]) {\\n\\t\\t\\t\\tset_input_value(input, /*targetPublicKey*/ ctx[2]);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (77:6) <svelte:fragment slot=\\\"first\\\">\\nfunction create_first_slot_1(ctx) {\\n\\tlet span;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.textContent = \\\"Grant Acess:\\\";\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm mx-1 text-lg svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (87:5) <Content>\\nfunction create_default_slot$1(ctx) {\\n\\tlet input;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input, \\\"placeholder\\\", \\\"douganderson444\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(input, \\\"keydown\\\", /*handleInput*/ ctx[4]);\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\n// (88:6) <svelte:fragment slot=\\\"first\\\">\\nfunction create_first_slot(ctx) {\\n\\tlet input;\\n\\tlet t0;\\n\\tlet span;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.innerHTML = `Add <b class=\\\"svelte-ryiy6k-ContactCard\\\">Contact</b>`;\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"checkbox\\\");\\n\\t\\t\\tinput.checked = true;\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-ryiy6k-ContactCard\\\");\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm mx-1 svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$1(ctx) {\\n\\tlet div2;\\n\\tlet div1;\\n\\tlet div0;\\n\\tlet t;\\n\\tlet clickOutside_action;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tlet if_block = /*open*/ ctx[0] && create_if_block$1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tdiv0.innerHTML = `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 752 752\\\" class=\\\"svelte-ryiy6k-ContactCard\\\"><path d=\\\"M346.9 153.4c-6.2 0-12.1 5.2-13.7 10.2l-12.4 43.5a176 176 0 0 0-25.2 10.4l-39.5-21.9c-5.3-3-12.7-2-17 2.4l-41 41.1a14.6 14.6 0 0 0-2.4 16.9l22 39.6a171 171 0 0 0-10.4 25l-43.5 12.5c-6 1.7-10.4 7.6-10.4 13.8v58.3c0 6 4.5 12 10.4 13.6L207 431c2.9 8.7 6.5 17 10.5 25.1L195.7 496a14.7 14.7 0 0 0 2.4 16.9l41 41.1a14.6 14.6 0 0 0 17 2.4l39.5-22c8.1 4.2 16.5 7.7 25.2 10.6l12.4 43.3a14.6 14.6 0 0 0 13.7 10.4h58.3c6 0 12-4.5 13.6-10.4l12.4-43.3c8.7-2.9 17.1-6.4 25.2-10.5l39.5 21.9c5.3 3 12.7 2 17-2.4l41-41.1a14.6 14.6 0 0 0 2.4-17l-22-39.6c4.2-8 7.7-16.4 10.6-25.1l43.3-12.3a14.6 14.6 0 0 0 10.4-13.6V347c0-6.2-4.4-12.1-10.4-13.8l-43.5-12.4c-2.8-8.7-6.3-17-10.3-25l21.9-39.7a14.7 14.7 0 0 0-2.4-16.9l-41-41.1a14.6 14.6 0 0 0-17-2.4l-39.5 21.9c-8-4.1-16.5-7.5-25.2-10.4l-12.4-43.5a14.6 14.6 0 0 0-13.6-10.2zm10.6 28.4h37L406 222c1.3 4.7 5.2 8.7 10 10 11.9 3.2 23.2 8 33.8 14 4.2 2.4 9.7 2.5 14 .2l36.6-20.5 26 26-20.4 36.6a14.5 14.5 0 0 0 0 14c6.1 10.6 11 22 14.3 34a14 14 0 0 0 9.7 9.9l40.3 11.4v36.9L530 406a14.5 14.5 0 0 0-9.7 9.8 149 149 0 0 1-14.3 34 14.5 14.5 0 0 0 0 14l20.5 36.6-26 26-36.8-20.5a14.5 14.5 0 0 0-13.9.1c-10.6 6-22 11-33.9 14.2a14.5 14.5 0 0 0-9.9 9.8l-11.4 40.3h-37L346.2 530a14.5 14.5 0 0 0-9.9-9.8c-12-3.3-23.3-8.1-33.9-14.2a14.5 14.5 0 0 0-13.9-.1l-36.7 20.4-26-25.9 20.4-36.7c2.3-4.2 2.3-9.7 0-13.9-6-10.6-11-22-14.2-34a14.5 14.5 0 0 0-9.8-9.8l-40.3-11.5v-36.9l40.3-11.4c4.6-1.3 8.5-5.2 9.8-10a149 149 0 0 1 14.2-34c2.3-4.2 2.3-9.6 0-13.9l-20.5-36.5 26-26 36.8 20.4c4.2 2.3 9.7 2.2 14-.2a146 146 0 0 1 33.8-14 15 15 0 0 0 10-10zm18.5 90c-57.4 0-104.2 46.8-104.2 104.2S318.6 480.2 376 480.2c57.4 0 104.2-46.8 104.2-104.2S433.4 271.8 376 271.8zm0 28.4c42 0 75.8 33.8 75.8 75.8S418 451.8 376 451.8 300.2 418 300.2 376s33.8-75.8 75.8-75.8z\\\" class=\\\"svelte-ryiy6k-ContactCard\\\"></path></svg>`;\\n\\t\\t\\tt = space();\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"w-10 h-10 svelte-ryiy6k-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex flex-row justify-end svelte-ryiy6k-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"flex flex-col svelte-ryiy6k-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, div0);\\n\\t\\t\\tappend(div2, t);\\n\\t\\t\\tif (if_block) if_block.m(div2, null);\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(div0, \\\"click\\\", /*openMenu*/ ctx[3]),\\n\\t\\t\\t\\t\\taction_destroyer(clickOutside_action = clickOutside.call(null, div2, {\\n\\t\\t\\t\\t\\t\\tenabled: /*open*/ ctx[0],\\n\\t\\t\\t\\t\\t\\tcb: /*clickOutside_function*/ ctx[6]\\n\\t\\t\\t\\t\\t}))\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (/*open*/ ctx[0]) {\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\n\\t\\t\\t\\t\\tif (dirty & /*open*/ 1) {\\n\\t\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block = create_if_block$1(ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\tif_block.m(div2, null);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (if_block) {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_block, 1, 1, () => {\\n\\t\\t\\t\\t\\tif_block = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (clickOutside_action && is_function(clickOutside_action.update) && dirty & /*open, submitting*/ 3) clickOutside_action.update.call(null, {\\n\\t\\t\\t\\tenabled: /*open*/ ctx[0],\\n\\t\\t\\t\\tcb: /*clickOutside_function*/ ctx[6]\\n\\t\\t\\t});\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t\\tif (if_block) if_block.d();\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction clickOutside(node, { enabled: initialEnabled, cb }) {\\n\\tconst handleOutsideClick = ({ target }) => {\\n\\t\\tif (!node.contains(target)) {\\n\\t\\t\\tcb();\\n\\t\\t}\\n\\t};\\n\\n\\tfunction update({ enabled }) {\\n\\t\\tif (enabled) {\\n\\t\\t\\twindow.addEventListener('click', handleOutsideClick);\\n\\t\\t} else {\\n\\t\\t\\twindow.removeEventListener('click', handleOutsideClick);\\n\\t\\t}\\n\\t}\\n\\n\\tupdate({ enabled: initialEnabled });\\n\\n\\treturn {\\n\\t\\tupdate,\\n\\t\\tdestroy() {\\n\\t\\t\\twindow.removeEventListener('click', handleOutsideClick);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$1($$self, $$props, $$invalidate) {\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet open = false;\\n\\tlet submitting;\\n\\tlet targetPublicKey;\\n\\n\\tfunction openMenu(e) {\\n\\t\\t$$invalidate(0, open = !open);\\n\\t}\\n\\n\\tfunction handleInput(e) {\\n\\t\\tif (e.code !== 'Enter') return;\\n\\t\\t$$invalidate(1, submitting = true);\\n\\t\\tdispatch('change', { targetPublicKey });\\n\\t}\\n\\n\\tfunction input_input_handler() {\\n\\t\\ttargetPublicKey = this.value;\\n\\t\\t$$invalidate(2, targetPublicKey);\\n\\t}\\n\\n\\tconst clickOutside_function = () => {\\n\\t\\t$$invalidate(0, open = false);\\n\\t\\t$$invalidate(1, submitting = false);\\n\\t};\\n\\n\\treturn [\\n\\t\\topen,\\n\\t\\tsubmitting,\\n\\t\\ttargetPublicKey,\\n\\t\\topenMenu,\\n\\t\\thandleInput,\\n\\t\\tinput_input_handler,\\n\\t\\tclickOutside_function\\n\\t];\\n}\\n\\nclass ContextMenu extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, {}, add_css$1);\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContactCard.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(target, \\\"svelte-1aklrav-ContactCard\\\", \\\".svelte-1aklrav-ContactCard,.svelte-1aklrav-ContactCard::before,.svelte-1aklrav-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-1aklrav-ContactCard::before,.svelte-1aklrav-ContactCard::after{--tw-content:''}input.svelte-1aklrav-ContactCard{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}.svelte-1aklrav-ContactCard:-moz-focusring{outline:auto}.svelte-1aklrav-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-1aklrav-ContactCard::-webkit-inner-spin-button,.svelte-1aklrav-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-1aklrav-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-1aklrav-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}blockquote.svelte-1aklrav-ContactCard,p.svelte-1aklrav-ContactCard{margin:0}input.svelte-1aklrav-ContactCard::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-1aklrav-ContactCard::placeholder{opacity:1;color:#9CA3AF}.svelte-1aklrav-ContactCard:disabled{cursor:default}img.svelte-1aklrav-ContactCard,svg.svelte-1aklrav-ContactCard{display:block;vertical-align:middle}img.svelte-1aklrav-ContactCard{max-width:100%;height:auto}input.svelte-1aklrav-ContactCard::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-1aklrav-ContactCard::placeholder{color:#6B7280;opacity:1}.svelte-1aklrav-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-1aklrav-ContactCard::-webkit-date-and-time-value{min-height:1.5em}[type='file'].svelte-1aklrav-ContactCard{background:unset;border-color:inherit;border-width:0;border-radius:0;padding:0;font-size:unset;line-height:inherit}[type='file'].svelte-1aklrav-ContactCard:focus{outline:1px auto inherit}input[type=file].svelte-1aklrav-ContactCard::-webkit-file-upload-button{color:white;background:#1F2937;border:0;font-weight:500;font-size:0.875rem;cursor:pointer;padding-top:0.625rem;padding-bottom:0.625rem;padding-left:2rem;padding-right:1rem;-webkit-margin-start:-1rem;margin-inline-start:-1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}input[type=file].svelte-1aklrav-ContactCard::file-selector-button{color:white;background:#1F2937;border:0;font-weight:500;font-size:0.875rem;cursor:pointer;padding-top:0.625rem;padding-bottom:0.625rem;padding-left:2rem;padding-right:1rem;-webkit-margin-start:-1rem;margin-inline-start:-1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}input[type=file].svelte-1aklrav-ContactCard::-webkit-file-upload-button:hover{background:#374151}input[type=file].svelte-1aklrav-ContactCard::file-selector-button:hover{background:#374151}.svelte-1aklrav-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-1aklrav-ContactCard,.svelte-1aklrav-ContactCard::before,.svelte-1aklrav-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1aklrav-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1aklrav-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.absolute.svelte-1aklrav-ContactCard{position:absolute}.relative.svelte-1aklrav-ContactCard{position:relative}.z-10.svelte-1aklrav-ContactCard{z-index:10}.m-auto.svelte-1aklrav-ContactCard{margin:auto}.my-2.svelte-1aklrav-ContactCard{margin-top:0.5rem;margin-bottom:0.5rem}.mx-auto.svelte-1aklrav-ContactCard{margin-left:auto;margin-right:auto}.mx-2.svelte-1aklrav-ContactCard{margin-left:0.5rem;margin-right:0.5rem}.-mt-20.svelte-1aklrav-ContactCard{margin-top:-5rem}.mt-5.svelte-1aklrav-ContactCard{margin-top:1.25rem}.mb-7.svelte-1aklrav-ContactCard{margin-bottom:1.75rem}.flex.svelte-1aklrav-ContactCard{display:flex}.h-24.svelte-1aklrav-ContactCard{height:6rem}.h-32.svelte-1aklrav-ContactCard{height:8rem}.w-96.svelte-1aklrav-ContactCard{width:24rem}.w-32.svelte-1aklrav-ContactCard{width:8rem}.max-w-lg.svelte-1aklrav-ContactCard{max-width:32rem}.max-w-none.svelte-1aklrav-ContactCard{max-width:none}.flex-none.svelte-1aklrav-ContactCard{flex:none}@-webkit-keyframes svelte-1aklrav-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-1aklrav-ContactCard-spin{to{transform:rotate(360deg)}}.items-center.svelte-1aklrav-ContactCard{align-items:center}.justify-center.svelte-1aklrav-ContactCard{justify-content:center}.overflow-hidden.svelte-1aklrav-ContactCard{overflow:hidden}.rounded-2xl.svelte-1aklrav-ContactCard{border-radius:1rem}.rounded-full.svelte-1aklrav-ContactCard{border-radius:9999px}.bg-slate-100.svelte-1aklrav-ContactCard{--tw-bg-opacity:1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.bg-white.svelte-1aklrav-ContactCard{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-green-400.svelte-1aklrav-ContactCard{--tw-bg-opacity:1;background-color:rgb(49 196 141 / var(--tw-bg-opacity))}.fill-slate-500.svelte-1aklrav-ContactCard{fill:#64748b}.object-cover.svelte-1aklrav-ContactCard{-o-object-fit:cover;object-fit:cover}.px-3.svelte-1aklrav-ContactCard{padding-left:0.75rem;padding-right:0.75rem}.text-center.svelte-1aklrav-ContactCard{text-align:center}.text-xl.svelte-1aklrav-ContactCard{font-size:1.25rem;line-height:1.75rem}.text-base.svelte-1aklrav-ContactCard{font-size:1rem;line-height:1.5rem}.text-sky-500.svelte-1aklrav-ContactCard{--tw-text-opacity:1;color:rgb(14 165 233 / var(--tw-text-opacity))}.text-white.svelte-1aklrav-ContactCard{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.shadow-xl.svelte-1aklrav-ContactCard{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.drop-shadow-xl.svelte-1aklrav-ContactCard{--tw-drop-shadow:drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nconst get_phone_slot_changes = dirty => ({});\\nconst get_phone_slot_context = ctx => ({});\\nconst get_email_slot_changes = dirty => ({});\\nconst get_email_slot_context = ctx => ({});\\nconst get_address_slot_changes = dirty => ({});\\nconst get_address_slot_context = ctx => ({});\\nconst get_name_slot_changes = dirty => ({});\\nconst get_name_slot_context = ctx => ({});\\n\\n// (75:2) {:else}\\nfunction create_else_block(ctx) {\\n\\tlet div;\\n\\tlet img;\\n\\tlet img_src_value;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\timg = element(\\\"img\\\");\\n\\t\\t\\tattr(img, \\\"class\\\", \\\"rounded-full bg-white absolute max-w-none object-cover svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tif (!src_url_equal(img.src, img_src_value = /*profile*/ ctx[0].avatar)) attr(img, \\\"src\\\", img_src_value);\\n\\t\\t\\tattr(img, \\\"alt\\\", \\\"d\\\");\\n\\t\\t\\tset_style(img, \\\"width\\\", \\\"100%\\\");\\n\\t\\t\\tset_style(img, \\\"height\\\", \\\"100%\\\");\\n\\t\\t\\tset_style(img, \\\"transform-origin\\\", \\\"50% 50% 0px\\\");\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"relative z-10 overflow-hidden flex-none mx-auto w-32 h-32 drop-shadow-xl svelte-1aklrav-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\tappend(div, img);\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*profile*/ 1 && !src_url_equal(img.src, img_src_value = /*profile*/ ctx[0].avatar)) {\\n\\t\\t\\t\\tattr(img, \\\"src\\\", img_src_value);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (64:2) {#if !profile.avatar}\\nfunction create_if_block(ctx) {\\n\\tlet svg;\\n\\tlet path;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tsvg = svg_element(\\\"svg\\\");\\n\\t\\t\\tpath = svg_element(\\\"path\\\");\\n\\t\\t\\tattr(path, \\\"d\\\", \\\"M105 2a129 129 0 0 0 1 253c11 1 33 2 44 0 26-5 48-16 67-35a126 126 0 0 0 38-114A129 129 0 0 0 150 2c-10-2-35-2-45 0zm31 30c23 4 41 24 45 51l3 9 2 6c0 4-1 6-5 14l-7 15c-3 8-11 19-16 24s-5 7-2 13c5 10 13 16 35 23l16 5-3 4a117 117 0 0 1-151 0l-4-4 4-1 17-6c19-6 27-13 31-25l2-5-4-4c-5-6-12-16-15-23l-7-11c-4-6-7-14-7-18 0-3 3-9 5-9l1-3 2-11c6-26 26-43 50-45l8 1z\\\");\\n\\t\\t\\tattr(path, \\\"class\\\", \\\"svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(svg, \\\"class\\\", \\\"rounded-full bg-white shadow-xl drop-shadow-xl svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(svg, \\\"xmlns\\\", \\\"http://www.w3.org/2000/svg\\\");\\n\\t\\t\\tattr(svg, \\\"version\\\", \\\"1.0\\\");\\n\\t\\t\\tattr(svg, \\\"viewBox\\\", \\\"0 0 256 256\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, svg, anchor);\\n\\t\\t\\tappend(svg, path);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(svg);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (87:20)      \\nfunction fallback_block_4(ctx) {\\n\\tlet editable0;\\n\\tlet updating_item;\\n\\tlet t;\\n\\tlet editable1;\\n\\tlet updating_item_1;\\n\\tlet current;\\n\\n\\tfunction editable0_item_binding(value) {\\n\\t\\t/*editable0_item_binding*/ ctx[8](value);\\n\\t}\\n\\n\\tlet editable0_props = {};\\n\\n\\tif (/*profile*/ ctx[0].firstName !== void 0) {\\n\\t\\teditable0_props.item = /*profile*/ ctx[0].firstName;\\n\\t}\\n\\n\\teditable0 = new Editable({ props: editable0_props });\\n\\tbinding_callbacks.push(() => bind(editable0, 'item', editable0_item_binding));\\n\\n\\tfunction editable1_item_binding(value) {\\n\\t\\t/*editable1_item_binding*/ ctx[9](value);\\n\\t}\\n\\n\\tlet editable1_props = {};\\n\\n\\tif (/*profile*/ ctx[0].lastName !== void 0) {\\n\\t\\teditable1_props.item = /*profile*/ ctx[0].lastName;\\n\\t}\\n\\n\\teditable1 = new Editable({ props: editable1_props });\\n\\tbinding_callbacks.push(() => bind(editable1, 'item', editable1_item_binding));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable0.$$.fragment);\\n\\t\\t\\tt = space();\\n\\t\\t\\tcreate_component(editable1.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable0, target, anchor);\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tmount_component(editable1, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable0_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable0_changes.item = /*profile*/ ctx[0].firstName;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable0.$set(editable0_changes);\\n\\t\\t\\tconst editable1_changes = {};\\n\\n\\t\\t\\tif (!updating_item_1 && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item_1 = true;\\n\\t\\t\\t\\teditable1_changes.item = /*profile*/ ctx[0].lastName;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item_1 = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable1.$set(editable1_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable0.$$.fragment, local);\\n\\t\\t\\ttransition_in(editable1.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable0.$$.fragment, local);\\n\\t\\t\\ttransition_out(editable1.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable0, detaching);\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t\\tdestroy_component(editable1, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (97:23)      \\nfunction fallback_block_3(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding(value) {\\n\\t\\t/*editable_item_binding*/ ctx[10](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].address !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].address;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].address;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (96:1) <Content name={'address'}>\\nfunction create_default_slot_2(ctx) {\\n\\tlet current;\\n\\tconst address_slot_template = /*#slots*/ ctx[3].address;\\n\\tconst address_slot = create_slot(address_slot_template, ctx, /*$$scope*/ ctx[14], get_address_slot_context);\\n\\tconst address_slot_or_fallback = address_slot || fallback_block_3(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (address_slot_or_fallback) address_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (address_slot_or_fallback) {\\n\\t\\t\\t\\taddress_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (address_slot) {\\n\\t\\t\\t\\tif (address_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\taddress_slot,\\n\\t\\t\\t\\t\\t\\taddress_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(address_slot_template, /*$$scope*/ ctx[14], dirty, get_address_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_address_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (address_slot_or_fallback && address_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\taddress_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(address_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(address_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (address_slot_or_fallback) address_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (103:21)      \\nfunction fallback_block_2(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_1(value) {\\n\\t\\t/*editable_item_binding_1*/ ctx[11](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].email !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].email;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_1));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].email;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (102:1) <Content name={'email'}>\\nfunction create_default_slot_1(ctx) {\\n\\tlet current;\\n\\tconst email_slot_template = /*#slots*/ ctx[3].email;\\n\\tconst email_slot = create_slot(email_slot_template, ctx, /*$$scope*/ ctx[14], get_email_slot_context);\\n\\tconst email_slot_or_fallback = email_slot || fallback_block_2(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (email_slot_or_fallback) email_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (email_slot_or_fallback) {\\n\\t\\t\\t\\temail_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (email_slot) {\\n\\t\\t\\t\\tif (email_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\temail_slot,\\n\\t\\t\\t\\t\\t\\temail_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(email_slot_template, /*$$scope*/ ctx[14], dirty, get_email_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_email_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (email_slot_or_fallback && email_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\temail_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(email_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(email_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (email_slot_or_fallback) email_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (109:21)      \\nfunction fallback_block_1(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_2(value) {\\n\\t\\t/*editable_item_binding_2*/ ctx[12](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].phone !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].phone;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_2));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].phone;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (108:1) <Content name={'phone'}>\\nfunction create_default_slot(ctx) {\\n\\tlet current;\\n\\tconst phone_slot_template = /*#slots*/ ctx[3].phone;\\n\\tconst phone_slot = create_slot(phone_slot_template, ctx, /*$$scope*/ ctx[14], get_phone_slot_context);\\n\\tconst phone_slot_or_fallback = phone_slot || fallback_block_1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (phone_slot_or_fallback) phone_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (phone_slot_or_fallback) {\\n\\t\\t\\t\\tphone_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (phone_slot) {\\n\\t\\t\\t\\tif (phone_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tphone_slot,\\n\\t\\t\\t\\t\\t\\tphone_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(phone_slot_template, /*$$scope*/ ctx[14], dirty, get_phone_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_phone_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phone_slot_or_fallback && phone_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tphone_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(phone_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(phone_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (phone_slot_or_fallback) phone_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (117:9)       \\nfunction fallback_block(ctx) {\\n\\tlet span;\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_3(value) {\\n\\t\\t/*editable_item_binding_3*/ ctx[13](value);\\n\\t}\\n\\n\\tlet editable_props = { options: { singleLine: false } };\\n\\n\\tif (/*profile*/ ctx[0].notes !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].notes;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_3));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sky-500 svelte-1aklrav-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\tmount_component(editable, span, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].notes;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\tdestroy_component(editable);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment(ctx) {\\n\\tlet div3;\\n\\tlet div0;\\n\\tlet contextmenu;\\n\\tlet t0;\\n\\tlet input;\\n\\tlet t1;\\n\\tlet div1;\\n\\tlet t2;\\n\\tlet div2;\\n\\tlet t3;\\n\\tlet content0;\\n\\tlet t4;\\n\\tlet content1;\\n\\tlet t5;\\n\\tlet content2;\\n\\tlet t6;\\n\\tlet blockquote;\\n\\tlet p;\\n\\tlet t7;\\n\\tlet footer;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tcontextmenu = new ContextMenu({});\\n\\tcontextmenu.$on(\\\"change\\\", /*change_handler*/ ctx[4]);\\n\\n\\tfunction select_block_type(ctx, dirty) {\\n\\t\\tif (!/*profile*/ ctx[0].avatar) return create_if_block;\\n\\t\\treturn create_else_block;\\n\\t}\\n\\n\\tlet current_block_type = select_block_type(ctx);\\n\\tlet if_block = current_block_type(ctx);\\n\\tconst name_slot_template = /*#slots*/ ctx[3].name;\\n\\tconst name_slot = create_slot(name_slot_template, ctx, /*$$scope*/ ctx[14], get_name_slot_context);\\n\\tconst name_slot_or_fallback = name_slot || fallback_block_4(ctx);\\n\\n\\tcontent0 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'address',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_2] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent1 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'email',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_1] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent2 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'phone',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[14], null);\\n\\tconst default_slot_or_fallback = default_slot || fallback_block(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv3 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tcreate_component(contextmenu.$$.fragment);\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tif_block.c();\\n\\t\\t\\tt2 = space();\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tif (name_slot_or_fallback) name_slot_or_fallback.c();\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tcreate_component(content0.$$.fragment);\\n\\t\\t\\tt4 = space();\\n\\t\\t\\tcreate_component(content1.$$.fragment);\\n\\t\\t\\tt5 = space();\\n\\t\\t\\tcreate_component(content2.$$.fragment);\\n\\t\\t\\tt6 = space();\\n\\t\\t\\tblockquote = element(\\\"blockquote\\\");\\n\\t\\t\\tp = element(\\\"p\\\");\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.c();\\n\\t\\t\\tt7 = space();\\n\\t\\t\\tfooter = element(\\\"footer\\\");\\n\\t\\t\\tfooter.textContent = \\\"Powered by PeerPiper\\\";\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"h-24 bg-white svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tset_style(input, \\\"display\\\", \\\"none\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"file\\\");\\n\\t\\t\\tattr(input, \\\"accept\\\", \\\".jpg, .jpeg, .png\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"-mt-20 h-32 flex justify-center svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"mt-5 mb-7 px-3 text-center text-xl svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(p, \\\"class\\\", \\\"mx-2 mb-7 text-center text-base svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(blockquote, \\\"class\\\", \\\"svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(footer, \\\"class\\\", \\\"text-center bg-green-400 text-white svelte-1aklrav-ContactCard\\\");\\n\\t\\t\\tattr(div3, \\\"class\\\", \\\"m-auto fill-slate-500 my-2 w-96 max-w-lg items-center justify-center overflow-hidden rounded-2xl bg-slate-100 shadow-xl svelte-1aklrav-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div3, anchor);\\n\\t\\t\\tappend(div3, div0);\\n\\t\\t\\tmount_component(contextmenu, div0, null);\\n\\t\\t\\tappend(div3, t0);\\n\\t\\t\\tappend(div3, input);\\n\\t\\t\\t/*input_binding*/ ctx[6](input);\\n\\t\\t\\tappend(div3, t1);\\n\\t\\t\\tappend(div3, div1);\\n\\t\\t\\tif_block.m(div1, null);\\n\\t\\t\\tappend(div3, t2);\\n\\t\\t\\tappend(div3, div2);\\n\\n\\t\\t\\tif (name_slot_or_fallback) {\\n\\t\\t\\t\\tname_slot_or_fallback.m(div2, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div3, t3);\\n\\t\\t\\tmount_component(content0, div3, null);\\n\\t\\t\\tappend(div3, t4);\\n\\t\\t\\tmount_component(content1, div3, null);\\n\\t\\t\\tappend(div3, t5);\\n\\t\\t\\tmount_component(content2, div3, null);\\n\\t\\t\\tappend(div3, t6);\\n\\t\\t\\tappend(div3, blockquote);\\n\\t\\t\\tappend(blockquote, p);\\n\\n\\t\\t\\tif (default_slot_or_fallback) {\\n\\t\\t\\t\\tdefault_slot_or_fallback.m(p, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div3, t7);\\n\\t\\t\\tappend(div3, footer);\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input, \\\"change\\\", /*change_handler_1*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(div1, \\\"click\\\", /*click_handler*/ ctx[7])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\\n\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif_block.d(1);\\n\\t\\t\\t\\tif_block = current_block_type(ctx);\\n\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\tif_block.m(div1, null);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (name_slot) {\\n\\t\\t\\t\\tif (name_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tname_slot,\\n\\t\\t\\t\\t\\t\\tname_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(name_slot_template, /*$$scope*/ ctx[14], dirty, get_name_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_name_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (name_slot_or_fallback && name_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tname_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst content0_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent0_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent0.$set(content0_changes);\\n\\t\\t\\tconst content1_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent1_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent1.$set(content1_changes);\\n\\t\\t\\tconst content2_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent2_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent2.$set(content2_changes);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[14], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (default_slot_or_fallback && default_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(contextmenu.$$.fragment, local);\\n\\t\\t\\ttransition_in(name_slot_or_fallback, local);\\n\\t\\t\\ttransition_in(content0.$$.fragment, local);\\n\\t\\t\\ttransition_in(content1.$$.fragment, local);\\n\\t\\t\\ttransition_in(content2.$$.fragment, local);\\n\\t\\t\\ttransition_in(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(contextmenu.$$.fragment, local);\\n\\t\\t\\ttransition_out(name_slot_or_fallback, local);\\n\\t\\t\\ttransition_out(content0.$$.fragment, local);\\n\\t\\t\\ttransition_out(content1.$$.fragment, local);\\n\\t\\t\\ttransition_out(content2.$$.fragment, local);\\n\\t\\t\\ttransition_out(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div3);\\n\\t\\t\\tdestroy_component(contextmenu);\\n\\t\\t\\t/*input_binding*/ ctx[6](null);\\n\\t\\t\\tif_block.d();\\n\\t\\t\\tif (name_slot_or_fallback) name_slot_or_fallback.d(detaching);\\n\\t\\t\\tdestroy_component(content0);\\n\\t\\t\\tdestroy_component(content1);\\n\\t\\t\\tdestroy_component(content2);\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\n\\tlet defaultProfile = {\\n\\t\\tfirstName: 'FirstName',\\n\\t\\tlastName: 'Lastname',\\n\\t\\taddress: 'Unknown address',\\n\\t\\temail: 'Unknown email',\\n\\t\\tphone: 'No phone',\\n\\t\\tnotes: 'No notes',\\n\\t\\tavatar: null\\n\\t};\\n\\n\\tlet { profile = defaultProfile } = $$props;\\n\\tlet fileinput;\\n\\n\\tconst onFileSelected = e => {\\n\\t\\tlet image = e.target.files[0];\\n\\t\\tlet reader = new FileReader();\\n\\t\\treader.readAsDataURL(image);\\n\\n\\t\\treader.onload = e => {\\n\\t\\t\\t$$invalidate(0, profile.avatar = e.target.result, profile);\\n\\t\\t};\\n\\t};\\n\\n\\tfunction change_handler(event) {\\n\\t\\tbubble.call(this, $$self, event);\\n\\t}\\n\\n\\tconst change_handler_1 = e => onFileSelected(e);\\n\\n\\tfunction input_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tfileinput = $$value;\\n\\t\\t\\t$$invalidate(1, fileinput);\\n\\t\\t});\\n\\t}\\n\\n\\tconst click_handler = () => {\\n\\t\\tfileinput.click();\\n\\t};\\n\\n\\tfunction editable0_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.firstName, value)) {\\n\\t\\t\\tprofile.firstName = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable1_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.lastName, value)) {\\n\\t\\t\\tprofile.lastName = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.address, value)) {\\n\\t\\t\\tprofile.address = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_1(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.email, value)) {\\n\\t\\t\\tprofile.email = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_2(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.phone, value)) {\\n\\t\\t\\tprofile.phone = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_3(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.notes, value)) {\\n\\t\\t\\tprofile.notes = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('profile' in $$props) $$invalidate(0, profile = $$props.profile);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(14, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*profile*/ 1) {\\n\\t\\t\\t// this fires when todos change; let's emit an event to update any listeners consuming this component\\n\\t\\t\\tif (profile) {\\n\\t\\t\\t\\t$$invalidate(0, profile = Object.assign({}, defaultProfile, profile));\\n\\t\\t\\t\\tdispatch('change', { profile });\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [\\n\\t\\tprofile,\\n\\t\\tfileinput,\\n\\t\\tonFileSelected,\\n\\t\\tslots,\\n\\t\\tchange_handler,\\n\\t\\tchange_handler_1,\\n\\t\\tinput_binding,\\n\\t\\tclick_handler,\\n\\t\\teditable0_item_binding,\\n\\t\\teditable1_item_binding,\\n\\t\\teditable_item_binding,\\n\\t\\teditable_item_binding_1,\\n\\t\\teditable_item_binding_2,\\n\\t\\teditable_item_binding_3,\\n\\t\\t$$scope\\n\\t];\\n}\\n\\nclass ContactCard extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance, create_fragment, safe_not_equal, { profile: 0 }, add_css);\\n\\t}\\n\\n\\tget profile() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset profile(profile) {\\n\\t\\tthis.$$set({ profile });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nexport { ContactCard as default };\\n\"","export default \"function noop() {}\\nconst identity = (x) => x;\\nfunction assign(tar, src) {\\n\\t// @ts-ignore\\n\\tfor (const k in src) tar[k] = src[k];\\n\\treturn tar;\\n}\\nfunction run(fn) {\\n\\treturn fn();\\n}\\nfunction blank_object() {\\n\\treturn Object.create(null);\\n}\\nfunction run_all(fns) {\\n\\tfns.forEach(run);\\n}\\nfunction is_function(thing) {\\n\\treturn typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n\\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\\n}\\nfunction is_empty(obj) {\\n\\treturn Object.keys(obj).length === 0;\\n}\\nfunction subscribe(store, ...callbacks) {\\n\\tif (store == null) {\\n\\t\\treturn noop;\\n\\t}\\n\\tconst unsub = store.subscribe(...callbacks);\\n\\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\\n}\\nfunction component_subscribe(component, store, callback) {\\n\\tcomponent.$$.on_destroy.push(subscribe(store, callback));\\n}\\nfunction create_slot(definition, ctx, $$scope, fn) {\\n\\tif (definition) {\\n\\t\\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\\n\\t\\treturn definition[0](slot_ctx);\\n\\t}\\n}\\nfunction get_slot_context(definition, ctx, $$scope, fn) {\\n\\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\\n}\\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\\n\\tif (definition[2] && fn) {\\n\\t\\tconst lets = definition[2](fn(dirty));\\n\\t\\tif ($$scope.dirty === undefined) {\\n\\t\\t\\treturn lets;\\n\\t\\t}\\n\\t\\tif (typeof lets === 'object') {\\n\\t\\t\\tconst merged = [];\\n\\t\\t\\tconst len = Math.max($$scope.dirty.length, lets.length);\\n\\t\\t\\tfor (let i = 0; i < len; i += 1) {\\n\\t\\t\\t\\tmerged[i] = $$scope.dirty[i] | lets[i];\\n\\t\\t\\t}\\n\\t\\t\\treturn merged;\\n\\t\\t}\\n\\t\\treturn $$scope.dirty | lets;\\n\\t}\\n\\treturn $$scope.dirty;\\n}\\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\\n\\tif (slot_changes) {\\n\\t\\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\\n\\t\\tslot.p(slot_context, slot_changes);\\n\\t}\\n}\\nfunction get_all_dirty_from_scope($$scope) {\\n\\tif ($$scope.ctx.length > 32) {\\n\\t\\tconst dirty = [];\\n\\t\\tconst length = $$scope.ctx.length / 32;\\n\\t\\tfor (let i = 0; i < length; i++) {\\n\\t\\t\\tdirty[i] = -1;\\n\\t\\t}\\n\\t\\treturn dirty;\\n\\t}\\n\\treturn -1;\\n}\\nfunction null_to_empty(value) {\\n\\treturn value == null ? '' : value;\\n}\\nfunction set_store_value(store, ret, value) {\\n\\tstore.set(value);\\n\\treturn ret;\\n}\\n\\nconst is_client = typeof window !== 'undefined';\\nlet now = is_client ? () => window.performance.now() : () => Date.now();\\nlet raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\\n\\nconst tasks = new Set();\\nfunction run_tasks(now) {\\n\\ttasks.forEach((task) => {\\n\\t\\tif (!task.c(now)) {\\n\\t\\t\\ttasks.delete(task);\\n\\t\\t\\ttask.f();\\n\\t\\t}\\n\\t});\\n\\tif (tasks.size !== 0) raf(run_tasks);\\n}\\n/**\\n * Creates a new task that runs on each raf frame\\n * until it returns a falsy value or is aborted\\n */\\nfunction loop(callback) {\\n\\tlet task;\\n\\tif (tasks.size === 0) raf(run_tasks);\\n\\treturn {\\n\\t\\tpromise: new Promise((fulfill) => {\\n\\t\\t\\ttasks.add((task = { c: callback, f: fulfill }));\\n\\t\\t}),\\n\\t\\tabort() {\\n\\t\\t\\ttasks.delete(task);\\n\\t\\t}\\n\\t};\\n}\\nfunction append(target, node) {\\n\\ttarget.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n\\tconst append_styles_to = get_root_for_style(target);\\n\\tif (!append_styles_to.getElementById(style_sheet_id)) {\\n\\t\\tconst style = element('style');\\n\\t\\tstyle.id = style_sheet_id;\\n\\t\\tstyle.textContent = styles;\\n\\t\\tappend_stylesheet(append_styles_to, style);\\n\\t}\\n}\\nfunction get_root_for_style(node) {\\n\\tif (!node) return document;\\n\\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n\\tif (root && root.host) {\\n\\t\\treturn root;\\n\\t}\\n\\treturn node.ownerDocument;\\n}\\nfunction append_empty_stylesheet(node) {\\n\\tconst style_element = element('style');\\n\\tappend_stylesheet(get_root_for_style(node), style_element);\\n\\treturn style_element.sheet;\\n}\\nfunction append_stylesheet(node, style) {\\n\\tappend(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n\\ttarget.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n\\tnode.parentNode.removeChild(node);\\n}\\nfunction element(name) {\\n\\treturn document.createElement(name);\\n}\\nfunction svg_element(name) {\\n\\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\\n}\\nfunction text(data) {\\n\\treturn document.createTextNode(data);\\n}\\nfunction space() {\\n\\treturn text(' ');\\n}\\nfunction empty() {\\n\\treturn text('');\\n}\\nfunction listen(node, event, handler, options) {\\n\\tnode.addEventListener(event, handler, options);\\n\\treturn () => node.removeEventListener(event, handler, options);\\n}\\nfunction attr(node, attribute, value) {\\n\\tif (value == null) node.removeAttribute(attribute);\\n\\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\\n}\\nfunction xlink_attr(node, attribute, value) {\\n\\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\\n}\\nfunction children(element) {\\n\\treturn Array.from(element.childNodes);\\n}\\nfunction set_data(text, data) {\\n\\tdata = '' + data;\\n\\tif (text.wholeText !== data) text.data = data;\\n}\\nfunction set_input_value(input, value) {\\n\\tinput.value = value == null ? '' : value;\\n}\\nfunction set_style(node, key, value, important) {\\n\\tif (value === null) {\\n\\t\\tnode.style.removeProperty(key);\\n\\t} else {\\n\\t\\tnode.style.setProperty(key, value, important ? 'important' : '');\\n\\t}\\n}\\nfunction toggle_class(element, name, toggle) {\\n\\telement.classList[toggle ? 'add' : 'remove'](name);\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n\\tconst e = document.createEvent('CustomEvent');\\n\\te.initCustomEvent(type, bubbles, cancelable, detail);\\n\\treturn e;\\n}\\n\\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\\n// https://github.com/sveltejs/svelte/issues/3624\\nconst managed_styles = new Map();\\nlet active = 0;\\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\\nfunction hash(str) {\\n\\tlet hash = 5381;\\n\\tlet i = str.length;\\n\\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\\n\\treturn hash >>> 0;\\n}\\nfunction create_style_information(doc, node) {\\n\\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\\n\\tmanaged_styles.set(doc, info);\\n\\treturn info;\\n}\\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\\n\\tconst step = 16.666 / duration;\\n\\tlet keyframes = '{\\\\n';\\n\\tfor (let p = 0; p <= 1; p += step) {\\n\\t\\tconst t = a + (b - a) * ease(p);\\n\\t\\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\\\n`;\\n\\t}\\n\\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\\\n}`;\\n\\tconst name = `__svelte_${hash(rule)}_${uid}`;\\n\\tconst doc = get_root_for_style(node);\\n\\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\\n\\tif (!rules[name]) {\\n\\t\\trules[name] = true;\\n\\t\\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\\n\\t}\\n\\tconst animation = node.style.animation || '';\\n\\tnode.style.animation = `${\\n\\t\\tanimation ? `${animation}, ` : ''\\n\\t}${name} ${duration}ms linear ${delay}ms 1 both`;\\n\\tactive += 1;\\n\\treturn name;\\n}\\nfunction delete_rule(node, name) {\\n\\tconst previous = (node.style.animation || '').split(', ');\\n\\tconst next = previous.filter(\\n\\t\\tname\\n\\t\\t\\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\\n\\t\\t\\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\\n\\t);\\n\\tconst deleted = previous.length - next.length;\\n\\tif (deleted) {\\n\\t\\tnode.style.animation = next.join(', ');\\n\\t\\tactive -= deleted;\\n\\t\\tif (!active) clear_rules();\\n\\t}\\n}\\nfunction clear_rules() {\\n\\traf(() => {\\n\\t\\tif (active) return;\\n\\t\\tmanaged_styles.forEach((info) => {\\n\\t\\t\\tconst { stylesheet } = info;\\n\\t\\t\\tlet i = stylesheet.cssRules.length;\\n\\t\\t\\twhile (i--) stylesheet.deleteRule(i);\\n\\t\\t\\tinfo.rules = {};\\n\\t\\t});\\n\\t\\tmanaged_styles.clear();\\n\\t});\\n}\\n\\nfunction create_animation(node, from, fn, params) {\\n\\tif (!from) return noop;\\n\\tconst to = node.getBoundingClientRect();\\n\\tif (\\n\\t\\tfrom.left === to.left &&\\n\\t\\tfrom.right === to.right &&\\n\\t\\tfrom.top === to.top &&\\n\\t\\tfrom.bottom === to.bottom\\n\\t)\\n\\t\\treturn noop;\\n\\tconst {\\n\\t\\tdelay = 0,\\n\\t\\tduration = 300,\\n\\t\\teasing = identity,\\n\\t\\t// @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\\n\\t\\tstart: start_time = now() + delay,\\n\\t\\t// @ts-ignore todo:\\n\\t\\tend = start_time + duration,\\n\\t\\ttick = noop,\\n\\t\\tcss\\n\\t} = fn(node, { from, to }, params);\\n\\tlet running = true;\\n\\tlet started = false;\\n\\tlet name;\\n\\tfunction start() {\\n\\t\\tif (css) {\\n\\t\\t\\tname = create_rule(node, 0, 1, duration, delay, easing, css);\\n\\t\\t}\\n\\t\\tif (!delay) {\\n\\t\\t\\tstarted = true;\\n\\t\\t}\\n\\t}\\n\\tfunction stop() {\\n\\t\\tif (css) delete_rule(node, name);\\n\\t\\trunning = false;\\n\\t}\\n\\tloop((now) => {\\n\\t\\tif (!started && now >= start_time) {\\n\\t\\t\\tstarted = true;\\n\\t\\t}\\n\\t\\tif (started && now >= end) {\\n\\t\\t\\ttick(1, 0);\\n\\t\\t\\tstop();\\n\\t\\t}\\n\\t\\tif (!running) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\tif (started) {\\n\\t\\t\\tconst p = now - start_time;\\n\\t\\t\\tconst t = 0 + 1 * easing(p / duration);\\n\\t\\t\\ttick(t, 1 - t);\\n\\t\\t}\\n\\t\\treturn true;\\n\\t});\\n\\tstart();\\n\\ttick(0, 1);\\n\\treturn stop;\\n}\\nfunction fix_position(node) {\\n\\tconst style = getComputedStyle(node);\\n\\tif (style.position !== 'absolute' && style.position !== 'fixed') {\\n\\t\\tconst { width, height } = style;\\n\\t\\tconst a = node.getBoundingClientRect();\\n\\t\\tnode.style.position = 'absolute';\\n\\t\\tnode.style.width = width;\\n\\t\\tnode.style.height = height;\\n\\t\\tadd_transform(node, a);\\n\\t}\\n}\\nfunction add_transform(node, a) {\\n\\tconst b = node.getBoundingClientRect();\\n\\tif (a.left !== b.left || a.top !== b.top) {\\n\\t\\tconst style = getComputedStyle(node);\\n\\t\\tconst transform = style.transform === 'none' ? '' : style.transform;\\n\\t\\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\\n\\t}\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n\\tcurrent_component = component;\\n}\\nfunction get_current_component() {\\n\\tif (!current_component) throw new Error('Function called outside component initialization');\\n\\treturn current_component;\\n}\\nfunction onMount(fn) {\\n\\tget_current_component().$$.on_mount.push(fn);\\n}\\nfunction createEventDispatcher() {\\n\\tconst component = get_current_component();\\n\\treturn (type, detail, { cancelable = false } = {}) => {\\n\\t\\tconst callbacks = component.$$.callbacks[type];\\n\\t\\tif (callbacks) {\\n\\t\\t\\t// TODO are there situations where events could be dispatched\\n\\t\\t\\t// in a server (non-DOM) environment?\\n\\t\\t\\tconst event = custom_event(type, detail, { cancelable });\\n\\t\\t\\tcallbacks.slice().forEach((fn) => {\\n\\t\\t\\t\\tfn.call(component, event);\\n\\t\\t\\t});\\n\\t\\t\\treturn !event.defaultPrevented;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t};\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n\\tif (!update_scheduled) {\\n\\t\\tupdate_scheduled = true;\\n\\t\\tresolved_promise.then(flush);\\n\\t}\\n}\\nfunction add_render_callback(fn) {\\n\\trender_callbacks.push(fn);\\n}\\nfunction add_flush_callback(fn) {\\n\\tflush_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n\\tconst saved_component = current_component;\\n\\tdo {\\n\\t\\t// first, call beforeUpdate functions\\n\\t\\t// and update components\\n\\t\\twhile (flushidx < dirty_components.length) {\\n\\t\\t\\tconst component = dirty_components[flushidx];\\n\\t\\t\\tflushidx++;\\n\\t\\t\\tset_current_component(component);\\n\\t\\t\\tupdate(component.$$);\\n\\t\\t}\\n\\t\\tset_current_component(null);\\n\\t\\tdirty_components.length = 0;\\n\\t\\tflushidx = 0;\\n\\t\\twhile (binding_callbacks.length) binding_callbacks.pop()();\\n\\t\\t// then, once components are updated, call\\n\\t\\t// afterUpdate functions. This may cause\\n\\t\\t// subsequent updates...\\n\\t\\tfor (let i = 0; i < render_callbacks.length; i += 1) {\\n\\t\\t\\tconst callback = render_callbacks[i];\\n\\t\\t\\tif (!seen_callbacks.has(callback)) {\\n\\t\\t\\t\\t// ...so guard against infinite loops\\n\\t\\t\\t\\tseen_callbacks.add(callback);\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trender_callbacks.length = 0;\\n\\t} while (dirty_components.length);\\n\\twhile (flush_callbacks.length) {\\n\\t\\tflush_callbacks.pop()();\\n\\t}\\n\\tupdate_scheduled = false;\\n\\tseen_callbacks.clear();\\n\\tset_current_component(saved_component);\\n}\\nfunction update($$) {\\n\\tif ($$.fragment !== null) {\\n\\t\\t$$.update();\\n\\t\\trun_all($$.before_update);\\n\\t\\tconst dirty = $$.dirty;\\n\\t\\t$$.dirty = [-1];\\n\\t\\t$$.fragment && $$.fragment.p($$.ctx, dirty);\\n\\t\\t$$.after_update.forEach(add_render_callback);\\n\\t}\\n}\\nconst outroing = new Set();\\nlet outros;\\nfunction group_outros() {\\n\\toutros = {\\n\\t\\tr: 0,\\n\\t\\tc: [],\\n\\t\\tp: outros // parent group\\n\\t};\\n}\\nfunction check_outros() {\\n\\tif (!outros.r) {\\n\\t\\trun_all(outros.c);\\n\\t}\\n\\toutros = outros.p;\\n}\\nfunction transition_in(block, local) {\\n\\tif (block && block.i) {\\n\\t\\toutroing.delete(block);\\n\\t\\tblock.i(local);\\n\\t}\\n}\\nfunction transition_out(block, local, detach, callback) {\\n\\tif (block && block.o) {\\n\\t\\tif (outroing.has(block)) return;\\n\\t\\toutroing.add(block);\\n\\t\\toutros.c.push(() => {\\n\\t\\t\\toutroing.delete(block);\\n\\t\\t\\tif (callback) {\\n\\t\\t\\t\\tif (detach) block.d(1);\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tblock.o(local);\\n\\t}\\n}\\n\\nfunction destroy_block(block, lookup) {\\n\\tblock.d(1);\\n\\tlookup.delete(block.key);\\n}\\nfunction fix_and_destroy_block(block, lookup) {\\n\\tblock.f();\\n\\tdestroy_block(block, lookup);\\n}\\nfunction update_keyed_each(\\n\\told_blocks,\\n\\tdirty,\\n\\tget_key,\\n\\tdynamic,\\n\\tctx,\\n\\tlist,\\n\\tlookup,\\n\\tnode,\\n\\tdestroy,\\n\\tcreate_each_block,\\n\\tnext,\\n\\tget_context\\n) {\\n\\tlet o = old_blocks.length;\\n\\tlet n = list.length;\\n\\tlet i = o;\\n\\tconst old_indexes = {};\\n\\twhile (i--) old_indexes[old_blocks[i].key] = i;\\n\\tconst new_blocks = [];\\n\\tconst new_lookup = new Map();\\n\\tconst deltas = new Map();\\n\\ti = n;\\n\\twhile (i--) {\\n\\t\\tconst child_ctx = get_context(ctx, list, i);\\n\\t\\tconst key = get_key(child_ctx);\\n\\t\\tlet block = lookup.get(key);\\n\\t\\tif (!block) {\\n\\t\\t\\tblock = create_each_block(key, child_ctx);\\n\\t\\t\\tblock.c();\\n\\t\\t} else if (dynamic) {\\n\\t\\t\\tblock.p(child_ctx, dirty);\\n\\t\\t}\\n\\t\\tnew_lookup.set(key, (new_blocks[i] = block));\\n\\t\\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\\n\\t}\\n\\tconst will_move = new Set();\\n\\tconst did_move = new Set();\\n\\tfunction insert(block) {\\n\\t\\ttransition_in(block, 1);\\n\\t\\tblock.m(node, next);\\n\\t\\tlookup.set(block.key, block);\\n\\t\\tnext = block.first;\\n\\t\\tn--;\\n\\t}\\n\\twhile (o && n) {\\n\\t\\tconst new_block = new_blocks[n - 1];\\n\\t\\tconst old_block = old_blocks[o - 1];\\n\\t\\tconst new_key = new_block.key;\\n\\t\\tconst old_key = old_block.key;\\n\\t\\tif (new_block === old_block) {\\n\\t\\t\\t// do nothing\\n\\t\\t\\tnext = new_block.first;\\n\\t\\t\\to--;\\n\\t\\t\\tn--;\\n\\t\\t} else if (!new_lookup.has(old_key)) {\\n\\t\\t\\t// remove old block\\n\\t\\t\\tdestroy(old_block, lookup);\\n\\t\\t\\to--;\\n\\t\\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\\n\\t\\t\\tinsert(new_block);\\n\\t\\t} else if (did_move.has(old_key)) {\\n\\t\\t\\to--;\\n\\t\\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\\n\\t\\t\\tdid_move.add(new_key);\\n\\t\\t\\tinsert(new_block);\\n\\t\\t} else {\\n\\t\\t\\twill_move.add(old_key);\\n\\t\\t\\to--;\\n\\t\\t}\\n\\t}\\n\\twhile (o--) {\\n\\t\\tconst old_block = old_blocks[o];\\n\\t\\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\\n\\t}\\n\\twhile (n) insert(new_blocks[n - 1]);\\n\\treturn new_blocks;\\n}\\n\\nfunction bind(component, name, callback) {\\n\\tconst index = component.$$.props[name];\\n\\tif (index !== undefined) {\\n\\t\\tcomponent.$$.bound[index] = callback;\\n\\t\\tcallback(component.$$.ctx[index]);\\n\\t}\\n}\\nfunction create_component(block) {\\n\\tblock && block.c();\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n\\tconst { fragment, on_mount, on_destroy, after_update } = component.$$;\\n\\tfragment && fragment.m(target, anchor);\\n\\tif (!customElement) {\\n\\t\\t// onMount happens before the initial afterUpdate\\n\\t\\tadd_render_callback(() => {\\n\\t\\t\\tconst new_on_destroy = on_mount.map(run).filter(is_function);\\n\\t\\t\\tif (on_destroy) {\\n\\t\\t\\t\\ton_destroy.push(...new_on_destroy);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// Edge case - component was destroyed immediately,\\n\\t\\t\\t\\t// most likely as a result of a binding initialising\\n\\t\\t\\t\\trun_all(new_on_destroy);\\n\\t\\t\\t}\\n\\t\\t\\tcomponent.$$.on_mount = [];\\n\\t\\t});\\n\\t}\\n\\tafter_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n\\tconst $$ = component.$$;\\n\\tif ($$.fragment !== null) {\\n\\t\\trun_all($$.on_destroy);\\n\\t\\t$$.fragment && $$.fragment.d(detaching);\\n\\t\\t// TODO null out other refs, including component.$$ (but need to\\n\\t\\t// preserve final state?)\\n\\t\\t$$.on_destroy = $$.fragment = null;\\n\\t\\t$$.ctx = [];\\n\\t}\\n}\\nfunction make_dirty(component, i) {\\n\\tif (component.$$.dirty[0] === -1) {\\n\\t\\tdirty_components.push(component);\\n\\t\\tschedule_update();\\n\\t\\tcomponent.$$.dirty.fill(0);\\n\\t}\\n\\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\\n}\\nfunction init(\\n\\tcomponent,\\n\\toptions,\\n\\tinstance,\\n\\tcreate_fragment,\\n\\tnot_equal,\\n\\tprops,\\n\\tappend_styles,\\n\\tdirty = [-1]\\n) {\\n\\tconst parent_component = current_component;\\n\\tset_current_component(component);\\n\\tconst $$ = (component.$$ = {\\n\\t\\tfragment: null,\\n\\t\\tctx: null,\\n\\t\\t// state\\n\\t\\tprops,\\n\\t\\tupdate: noop,\\n\\t\\tnot_equal,\\n\\t\\tbound: blank_object(),\\n\\t\\t// lifecycle\\n\\t\\ton_mount: [],\\n\\t\\ton_destroy: [],\\n\\t\\ton_disconnect: [],\\n\\t\\tbefore_update: [],\\n\\t\\tafter_update: [],\\n\\t\\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n\\t\\t// everything else\\n\\t\\tcallbacks: blank_object(),\\n\\t\\tdirty,\\n\\t\\tskip_bound: false,\\n\\t\\troot: options.target || parent_component.$$.root\\n\\t});\\n\\tappend_styles && append_styles($$.root);\\n\\tlet ready = false;\\n\\t$$.ctx = instance\\n\\t\\t? instance(component, options.props || {}, (i, ret, ...rest) => {\\n\\t\\t\\t\\tconst value = rest.length ? rest[0] : ret;\\n\\t\\t\\t\\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\\n\\t\\t\\t\\t\\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\\n\\t\\t\\t\\t\\tif (ready) make_dirty(component, i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn ret;\\n\\t\\t  })\\n\\t\\t: [];\\n\\t$$.update();\\n\\tready = true;\\n\\trun_all($$.before_update);\\n\\t// `false` as a special case of no DOM component\\n\\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n\\tif (options.target) {\\n\\t\\tif (options.hydrate) {\\n\\t\\t\\tconst nodes = children(options.target);\\n\\t\\t\\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n\\t\\t\\t$$.fragment && $$.fragment.l(nodes);\\n\\t\\t\\tnodes.forEach(detach);\\n\\t\\t} else {\\n\\t\\t\\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n\\t\\t\\t$$.fragment && $$.fragment.c();\\n\\t\\t}\\n\\t\\tif (options.intro) transition_in(component.$$.fragment);\\n\\t\\tmount_component(component, options.target, options.anchor, options.customElement);\\n\\t\\tflush();\\n\\t}\\n\\tset_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n\\t$destroy() {\\n\\t\\tdestroy_component(this, 1);\\n\\t\\tthis.$destroy = noop;\\n\\t}\\n\\t$on(type, callback) {\\n\\t\\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\\n\\t\\tcallbacks.push(callback);\\n\\t\\treturn () => {\\n\\t\\t\\tconst index = callbacks.indexOf(callback);\\n\\t\\t\\tif (index !== -1) callbacks.splice(index, 1);\\n\\t\\t};\\n\\t}\\n\\t$set($$props) {\\n\\t\\tif (this.$$set && !is_empty($$props)) {\\n\\t\\t\\tthis.$$.skip_bound = true;\\n\\t\\t\\tthis.$$set($$props);\\n\\t\\t\\tthis.$$.skip_bound = false;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction cubicOut(t) {\\n\\tconst f = t - 1.0;\\n\\treturn f * f * f + 1.0;\\n}\\nfunction quintOut(t) {\\n\\treturn --t * t * t * t * t + 1;\\n}\\n\\nfunction flip(node, { from, to }, params = {}) {\\n\\tconst style = getComputedStyle(node);\\n\\tconst transform = style.transform === 'none' ? '' : style.transform;\\n\\tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\\n\\tconst dx = from.left + (from.width * ox) / to.width - (to.left + ox);\\n\\tconst dy = from.top + (from.height * oy) / to.height - (to.top + oy);\\n\\tconst { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\\n\\treturn {\\n\\t\\tdelay,\\n\\t\\tduration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\\n\\t\\teasing,\\n\\t\\tcss: (t, u) => {\\n\\t\\t\\tconst x = u * dx;\\n\\t\\t\\tconst y = u * dy;\\n\\t\\t\\tconst sx = t + (u * from.width) / to.width;\\n\\t\\t\\tconst sy = t + (u * from.height) / to.height;\\n\\t\\t\\treturn `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\\n\\t\\t}\\n\\t};\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icons.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment$7(ctx) {\\n\\tlet div;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element('div');\\n\\t\\t\\tdiv.innerHTML = `<svg><symbol id=\\\"avatar\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M105 2a129 129 0 0 0 1 253c11 1 33 2 44 0 26-5 48-16 67-35a126 126 0 0 0 38-114A129 129 0 0 0 150 2c-10-2-35-2-45 0zm31 30c23 4 41 24 45 51l3 9 2 6c0 4-1 6-5 14l-7 15c-3 8-11 19-16 24s-5 7-2 13c5 10 13 16 35 23l16 5-3 4a117 117 0 0 1-151 0l-4-4 4-1 17-6c19-6 27-13 31-25l2-5-4-4c-5-6-12-16-15-23l-7-11c-4-6-7-14-7-18 0-3 3-9 5-9l1-3 2-11c6-26 26-43 50-45l8 1z\\\"></path></symbol><symbol id=\\\"address\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M412 414a111 111 0 0 1 90-77v-40h31c7 0 13-6 13-13v-15c0-5-2-9-7-11L355 153c-4-2-8-2-12 0l-65 37v-13c0-5-4-9-9-9h-29c-5 0-8 4-8 9v39l-74 42c-4 2-7 7-7 11v15c0 7 6 13 13 13h31v180c0 12 9 21 20 21h203c-13-25-15-56-6-84z\\\"></path><path d=\\\"M592 412a81 81 0 0 0-109-36 82 82 0 0 0-36 109l61 108c5 9 18 9 23 0l61-108c12-22 12-49 0-73zm-73 72a35 35 0 1 1 0-70 35 35 0 1 1 0 70z\\\"></path></symbol><symbol id=\\\"email\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"m582.1 312.4-197.5-128c-4.3-2.8-10-2.8-14.4 0l-199 128c-3.8 2.4-7.8 6.6-7.8 11v230.3c0 7.3 9.3 15.6 16.6 15.6h394.5c7.3 0 14.1-8.3 14.1-15.6V323.4c0-4.4-2.7-8.6-6.4-11zm-385 35.2 113 73.3-113 103zm131.8 88 41.2 26.8a13.2 13.2 0 0 0 14.3 0l41.1-26.8 115 104.7H214zM451.5 421l113-73.3V524zm-74.3-209.8 173.1 112.3-173 112.3-173.1-112.3zm0 200.6c20.7 0 40.9-7.3 56.7-20.6A13.2 13.2 0 0 0 417 371a62 62 0 1 1 22.2-47.5c0 6-4.9 10.9-10.8 10.9a11 11 0 0 1-10.9-10v-.9a40.3 40.3 0 1 0-12.3 29 37 37 0 0 0 60.3-29 88.4 88.4 0 1 0-88.3 88.4zm0-74.3a14 14 0 1 1 0-28 14 14 0 0 1 0 28z\\\"></path></symbol><symbol id=\\\"phone\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"m587 561-3 3c-96 96-241-7-315-81S92 264 188 168l3-3 107 106-13 14a39 39 0 0 0-5 49 503 503 0 0 0 138 138c16 11 36 9 49-5l14-13zm-92-118 104 103c7-14 4-33-8-45l-51-51a39 39 0 0 0-45-7zM206 153l103 104c7-15 5-33-7-45l-51-51a39 39 0 0 0-45-8z\\\"></path></symbol><symbol id=\\\"arrow-left\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"19\\\" y1=\\\"12\\\" x2=\\\"5\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 19 5 12 12 5\\\"></polyline></symbol><symbol id=\\\"arrow-right\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 5 19 12 12 19\\\"></polyline></symbol><symbol id=\\\"arrow-up\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"19\\\" x2=\\\"12\\\" y2=\\\"5\\\"></line><polyline points=\\\"5 12 12 5 19 12\\\"></polyline></symbol><symbol id=\\\"arrow-down\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><polyline points=\\\"19 12 12 19 5 12\\\"></polyline></symbol><symbol id=\\\"check\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"20 6 9 17 4 12\\\"></polyline></symbol><symbol id=\\\"close\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"></line><line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"download\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15\\\"></path><polyline points=\\\"7 10 12 15 17 10\\\"></polyline><line x1=\\\"12\\\" y1=\\\"15\\\" x2=\\\"12\\\" y2=\\\"3\\\"></line></symbol><symbol id=\\\"edit\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\\\"></path><polygon points=\\\"18 2 22 6 12 16 8 16 8 12 18 2\\\"></polygon></symbol><symbol id=\\\"github\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5229 6.47715 22 12 22C17.5229 22 22 17.5229 22 12C22 6.47715 17.5229 2 12 2ZM0 12C0 5.3726 5.3726 0 12 0C18.6274 0 24 5.3726 24 12C24 18.6274 18.6274 24 12 24C5.3726 24 0 18.6274 0 12Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M9.59162 22.7357C9.49492 22.6109 9.49492 21.4986 9.59162 19.399C8.55572 19.4347 7.90122 19.3628 7.62812 19.1833C7.21852 18.9139 6.80842 18.0833 6.44457 17.4979C6.08072 16.9125 5.27312 16.8199 4.94702 16.6891C4.62091 16.5582 4.53905 16.0247 5.84562 16.4282C7.15222 16.8316 7.21592 17.9303 7.62812 18.1872C8.04032 18.4441 9.02572 18.3317 9.47242 18.1259C9.91907 17.9201 9.88622 17.1538 9.96587 16.8503C10.0666 16.5669 9.71162 16.5041 9.70382 16.5018C9.26777 16.5018 6.97697 16.0036 6.34772 13.7852C5.71852 11.5669 6.52907 10.117 6.96147 9.49369C7.24972 9.07814 7.22422 8.19254 6.88497 6.83679C8.11677 6.67939 9.06732 7.06709 9.73672 7.99999C9.73737 8.00534 10.6143 7.47854 12.0001 7.47854C13.386 7.47854 13.8777 7.90764 14.2571 7.99999C14.6365 8.09234 14.94 6.36699 17.2834 6.83679C16.7942 7.79839 16.3844 8.99999 16.6972 9.49369C17.0099 9.98739 18.2372 11.5573 17.4833 13.7852C16.9807 15.2706 15.9927 16.1761 14.5192 16.5018C14.3502 16.5557 14.2658 16.6427 14.2658 16.7627C14.2658 16.9427 14.4942 16.9624 14.8233 17.8058C15.0426 18.368 15.0585 19.9739 14.8708 22.6234C14.3953 22.7445 14.0254 22.8257 13.7611 22.8673C13.2924 22.9409 12.7835 22.9822 12.2834 22.9982C11.7834 23.0141 11.6098 23.0123 10.9185 22.948C10.4577 22.9051 10.0154 22.8343 9.59162 22.7357Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path></symbol><symbol id=\\\"git-branch\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"6\\\" y1=\\\"3\\\" x2=\\\"6\\\" y2=\\\"15\\\"></line><circle cx=\\\"18\\\" cy=\\\"6\\\" r=\\\"3\\\"></circle><circle cx=\\\"6\\\" cy=\\\"18\\\" r=\\\"3\\\"></circle><path d=\\\"M18 9a9 9 0 0 1-9 9\\\"></path></symbol><symbol id=\\\"log-in\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M15 3H19A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H15\\\"></path><polyline points=\\\"10 17 15 12 10 7\\\"></polyline><line x1=\\\"15\\\" y1=\\\"12\\\" x2=\\\"3\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"maximize\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\\\"></path></symbol><symbol id=\\\"maximize-2\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"15 3 21 3 21 9\\\"></polyline><polyline points=\\\"9 21 3 21 3 15\\\"></polyline><line x1=\\\"21\\\" y1=\\\"3\\\" x2=\\\"14\\\" y2=\\\"10\\\"></line><line x1=\\\"3\\\" y1=\\\"21\\\" x2=\\\"10\\\" y2=\\\"14\\\"></line></symbol><symbol id=\\\"menu\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"3\\\" y1=\\\"12\\\" x2=\\\"21\\\" y2=\\\"12\\\"></line><line x1=\\\"3\\\" y1=\\\"6\\\" x2=\\\"21\\\" y2=\\\"6\\\"></line><line x1=\\\"3\\\" y1=\\\"18\\\" x2=\\\"21\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"message-square\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><g transform=\\\"translate(0, 1)\\\"><path d=\\\"M16.5 19H11V15H18V11H22V19H19.5L18 20.5L16.5 19Z\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M2 3H18V15H8.5L6.5 17L4.5 15H2V3Z\\\" fill=\\\"currentColor\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M6 11H9\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path><path d=\\\"M6 7H12\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path></g></symbol><symbol id=\\\"minus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"plus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"save\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\\\"></path><polyline points=\\\"17 21 17 13 7 13 7 21\\\"></polyline><polyline points=\\\"7 3 7 8 15 8\\\"></polyline></symbol><symbol id=\\\"link\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M9,7L6,7A2 2 0 0 0 6,17L9,17\\\"></path><path d=\\\"M15,7L18,7A2 2 0 0 1 18,17L15,17\\\"></path><path d=\\\"M7,12L17,12\\\"></path></symbol><symbol id=\\\"chevron\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M2,7 L12,17 L20,7\\\"></path></symbol><symbol id=\\\"delete\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"currentColor\\\" stroke=\\\"none\\\" d=\\\"M22 4.2h-5.6L15 1.6c-.1-.2-.4-.4-.7-.4H9.6c-.2 0-.5.2-.6.4L7.6 4.2H2c-.4 0-.8.4-.8.8s.4.8.8.8h1.8V22c0 .4.3.8.8.8h15c.4 0 .8-.3.8-.8V5.8H22c.4 0 .8-.3.8-.8s-.4-.8-.8-.8zM10.8 16.5c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5zm4 0c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5z\\\"></path></symbol><symbol id=\\\"scanQR\\\" class=\\\"icon\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 760 760\\\"><path d=\\\"M684 630c-31-34-9-38-2-84 7-34 13-75-2-123l-34-64c-22-39-51-89-58-117v-2c-6-24-9-43-9-60-2-22-4-35-20-41h-2c-11-3-22-5-33 2V59c0-22-20-41-43-41H205c-25 0-42 19-42 41v49s-29-26-49-30c-5 0-21 2-32 13a44 44 0 0 0-11 43c2 11 31 50 65 69 7 7 15 11 27 15v3h-5c-49 4-69 64-31 94-34 20-34 65-2 87a54 52 0 0 0 38 92v72c0 23 17 62 42 62h89c13 30 25 41 69 50h7c11 4 31 8 47 6l2 2 7 13c6 11 11 22 13 35 2 6 9 11 16 9 6-3 11-9 9-16-3-15-9-28-16-38l-9-13c-2-7-4-9-11-13l-2-2h-9c-11 2-31-3-43-5l-6-2c-32-6-34-4-47-26h160c23 0 43-17 43-41 0 0-20-60-18-86s24-65 24-65l18-30c9-24-4-47-18-78l-9-15c-11-23-20-47-20-75-2-11 5-41 20-63 7-8 16-19 29-17l5 24c0 17 2 39 11 64 7 33 34 82 58 123l33 63c12 41 7 78 0 112-6 45-31 58 9 101 12 5 20-4 18-15zM205 41h276c9 0 18 9 18 18v19H187V59c0-9 7-18 18-18zm-58 143c-18-11-51-48-51-54-3-7-3-17 4-22 5-4 14-4 16-6 4 0 47 30 47 30v58zm11 60a30 29 0 1 1 0 58 30 29 0 0 1 0-58zm0 145a30 29 0 1 1 0-58 30 29 0 0 1 0 58zm-29 54a30 29 0 1 1 60 0 30 29 0 0 1-60 0zm85 0c0-18-9-33-22-41 31-22 31-67-3-87 34-21 34-69-2-88V102h312v62c-15 26-24 59-22 76 0 30 11 58 22 82 31 267-67 211-312 211v-45c16-9 27-26 27-45zm267 161H205c-11 0-18-28-18-38v-9h312v9c0 10-9 38-18 38z\\\"></path><path d=\\\"m306 191-2 18v18h5c4 0 4 2 4 3 1 4 0 5-4 5-5 0-5 0-5 10 0 8 0 8 5 8 4 0 5-1 5-5l3-3c5 0 5 0 5 13 2 13 2 13 5 13 4 2 5 0 5-3s2-5 5-5 3 0 3-5 0-5 5-5 5 0 5-3c0-5 0-5-5-5-3 0-5 0-5 5 0 3 0 3-3 3-5 0-5 0-5-18l-1-16-4-2c-3 0-5-1-5-5l-3-3c-3 0-5-2-5-10s-1-8-3-10z\\\"></path><path d=\\\"m352 191-2 5c0 3 0 3-8 3-10 0-10 0-10 5 0 3 0 5 5 5 3 0 3 0 3 13v13h18v9c0 9 0 9 5 9h5v-26h10c8 0 8 0 8-5s0-5-8-5c-10 0-10 0-10-5 0-3 0-3-5-3s-5 0-5 3c0 4 2 5 5 5 5 0 5 2 5 5 0 5 0 5-5 5-3 0-5-2-5-5s-1-5-4-5c-4 0-4 0-4-10 0-8 0-8 5-8 3 0 3 0 3-5-1-3-4-6-6-3zm26 2c-1 5 0 6 5 6 3 0 3 0 3-5-1-5-8-6-9-1zm-146 29v31h62v-62h-62Zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M250 222v13h26v-26h-26Zm146 0v31h63v-62h-63zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M414 222v13h27v-26h-27zm-37 15v10l4 6c5 0 5 0 5-8 0-10 0-10-3-10zm-25 18-2 5c0 2 2 3 5 3s3 0 3-5c-1-3-4-6-6-3zm-122 10v10l5 6c5 0 5 2 5 5 0 5 0 5-5 5h-5v26h20v5c0 5 0 5 5 5 3 0 3 0 3-5 0-3-1-5-5-5l-3-3c0-3-1-5-5-5-5 0-5 0-5-10 0-8 0-8 5-8s5 0 5 5c0 12 0 13 5 13 3 0 3 2 3 5s2 3 5 3c5 0 5 0 5-3s-1-5-5-5c-5 0-5 0-5-10v-8h10c8 0 8 0 8 5 0 3 2 3 5 3 5 0 5 0 5 5s0 5-5 5-5 0-5 10c0 8 0 8-3 8s-5 2-5 4c0 4 5 6 13 4 4 0 5-1 5-4 0-2 2-4 5-4s3 2 3 5 2 3 15 3c5 0 5 0 5 5s0 5 5 5c3 0 3 0 3 10 0 8 0 8 5 8h5v-13c2-13 2-13 5-15 2 0 3-1 3-4 0-4 2-4 5-4 5 0 5 0 5 5s8 5 8 0c2-3 2-3 10-5 9 0 9 0 9-5s0-5-10-5c-9 0-9 0-9-3s2-5 5-5c4 0 5-1 5-5 0-3 0-5-5-5-3 0-5-1-5-5 0-1 0-3 5-3 4-1 5-1 5-10 0-8 0-8-5-8h-8c-5 0-5 0-5 8-1 9-1 9-5 10-3 0-5 2-5 5 0 2 0 3-3 3-5 0-5 0-5 5s0 5-5 5c-3 0-5 0-5 3 0 4 0 5-3 5-5 0-5 0-5 5 0 4 0 5 5 5 3 0 3 0 3 4 0 6-8 6-8 1-1-3-1-5-10-5-10 0-10 0-10-5s0-5-3-5-5-1-5-5c0-3 0-3 10-3 8 0 8 0 8 5 0 3 0 3 5 3 7-1 7-6 0-8-5 0-5 0-5-10 0-8 0-8 5-8 4 0 5 2 5 5 0 5 8 5 8 0 0-3 2-5 5-5 4 0 4-1 4-5 1-3 0-3-14-5-13 0-13 0-13-3 0-5 0-5-5-5s-5 0-5 3c0 4 2 5 5 5 5 0 5 2 5 5 0 5 0 5-5 5s-5 0-5-5v-5h-36v-3c0-7-8-7-8-2 0 4-1 5-5 5-5 0-5 0-5-3s2-5 5-5c4 0 5-2 5-5s-1-3-10-5zm64 29c0 5 0 5-3 5s-5 0-5-3 2-5 5-5 3 2 3 5zm56 10c0 4-1 5-5 5-3 0-5 2-5 5 0 2 0 3-3 3s-5 0-5-3 2-5 5-5 3 0 3-5 0-5 5-5c4 0 4 2 4 5z\\\"></path><path d=\\\"M268 268c2 3 2 3 13 3 12 0 13 0 13-3v-5h-26Zm74-3c-2 2-2 6 2 6 3 2 6 0 6-3-1-5-6-6-8-3zm35 2c0 3 3 6 6 6l3-6c0-4 0-4-3-4zm29-2c-2 2-2 6 2 6 3 2 6 0 6-3-1-5-6-6-8-3zm16 8c0 8 0 8-4 8s-4 0-4 5c0 4 2 5 5 5 2 0 3-1 3-5 0-5 2-5 5-5 4 0 5 0 5-3 0-5 0-5 10-5 8 0 8 0 8 3 0 4-1 5-5 5-3 0-4 2-4 5 0 4-2 5-5 5-2 0-4 2-4 5s2 3 4 3c3 0 5 2 5 5 0 4 1 5 4 5 4 0 5 2 5 5s2 3 5 3h5v-52l-19-2h-19zm-36 5c0 3 0 3-3 3-5 0-6 2-6 7 3 5 8 3 9-2 0-3 2-5 5-5 4 0 5-1 5-5 0-3 0-3-5-3s-5 0-5 3zm10 26c0 13 0 13 5 13 3 0 3 0 3-13s0-13-3-13c-5 0-5 0-5 13zm28 7-2 3c0 2 2 3 5 3 5 0 5 0 5-5 0-3 0-3-3-3zm-8 8-2 5c0 2 2 3 5 3s3 0 3-5c-1-3-4-6-6-3zm-30 12c0 3-1 4-5 4s-4 2-4 15 0 13-4 13c-5 0-5 0-5 5s0 5-8 5c-10 0-10 0-10 4 0 3 2 4 5 4s3 0 3 5 0 5-3 5-5-1-5-5c0-3-1-5-5-5-3 0-5 2-5 5 0 4-1 5-3 5-3 0-5-1-5-5 0-3-1-5-5-5-3 0-5 2-5 5 0 4-1 5-5 5s-4 8 0 8 5 2 5 5c0 5 0 5-3 5s-5-1-5-5c0-3-1-5-5-5-3 2-3 2-3 10v10h8c7 0 8-1 8-5 0-5 0-5 10-5 8 0 8 0 8 5 2 4 2 4 10 5h8v-10c2-8 2-10 5-10 4 0 5-1 5-4 0-4 2-4 4-4 5 0 5 0 5 8 1 9 1 9 4 10 5 0 5 0 5-8v-10h15c13 0 13 0 13 4 0 3-1 4-5 4-3 0-3 2-3 10v10h54v-10c0-8-1-8-5-8-3 0-5 0-5 3 0 5-1 5-5 5-3 0-4-1-4-5 0-5 0-5 4-5s5 0 5-3 2-5 5-5c4 0 4-1 4-5 0-3 0-3-9-3h-9v16h-10c-9 0-9 0-9-3s-1-5-4-5c-4 0-4 0-4-5 0-3 0-5 4-5 3 0 4 0 4-3 0-5 0-5 19-5l18-1v-7l-18-2c-19 0-19 0-19-3s2-5 5-5c4 0 5-1 5-5 0-5 0-5-5-5-3 0-5-1-5-5-1-3-1-3-9-5-9 0-9 0-9-4s0-4-9-4-9 0-9 4zm28 27v15h-26l-2-15v-13h14l14 2v13zm-37 20c0 3 0 3-4 3-3 0-5 0-5-3s2-5 5-5c4 0 4 2 4 5zm-27 26c0 5 0 5-5 5s-5 0-5-3c0-5 2-7 7-7 2 0 3 2 3 5z\\\"></path><path d=\\\"M396 360c0 3 2 3 5 3s3 0 3-3 0-5-3-5-5 2-5 5zm36-28c0 3 2 3 5 3 4 0 4 0 4-3s0-5-4-5c-3 0-5 2-5 5zm-202 5c-1 7 2 8 10 8 9 0 10-1 10-5 0-3-1-3-10-5zm30 0-2 5c0 3 0 3 5 3 4 0 5-1 5-3 0-5-5-8-8-5zm28 0-2 5c0 2 2 3 5 3s3 0 3-5c0-3-4-6-6-3zm54 0c-3 2-2 8 3 8 4 0 5-1 5-3 0-3-1-7-5-7zm108 0v10c2 7 2 7 5 7 4 1 5 0 5-9 0-8-1-8-5-10zm-146 13c2 5 9 7 10 2 0-5-1-7-6-7-4 0-4 0-4 5zm46 0c0 4 2 4 5 4 2 0 3 0 3-4 0-5 0-5-4-5s-4 0-4 5zm-118 36v32h62v-63h-62Zm54 0v23h-46v-46h46z\\\"></path><path d=\\\"M250 386v13h26v-26h-26Zm54-13c0 8 0 8 5 8 4-1 4-1 4-9 1-7 0-7-4-9-5 0-5 0-5 10zm36-8c-1 5 2 8 5 8 4 0 5-1 5-5 0-3-1-5-5-5zm-8 13c0 3 2 3 5 3s3 0 3-3 0-5-3-5-5 2-5 5zm90 5c-1 5 2 8 5 8 4 0 5-1 5-5 0-3-1-5-5-5zm-54 31c0 4 2 5 5 5 4 0 4 0 4-5s0-5-5-5c-4 0-4 0-4 5z\\\"></path></symbol></svg>`;\\n\\t\\t\\tset_style(div, 'display', 'none');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t}\\n\\t};\\n}\\n\\nclass Icons extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, null, create_fragment$7, safe_not_equal, {});\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icon.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$5(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-wkpedn-ContactList',\\n\\t\\t'.icon.svelte-wkpedn-ContactList{position:relative;overflow:hidden;vertical-align:middle;-o-object-fit:contain;object-fit:contain;transform-origin:center center;stroke:currentColor;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;fill:currentColor}'\\n\\t);\\n}\\n\\nfunction create_fragment$6(ctx) {\\n\\tlet svg;\\n\\tlet use;\\n\\tlet use_xlink_href_value;\\n\\tlet t0;\\n\\tlet t1;\\n\\tlet icons;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);\\n\\ticons = new Icons({});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tsvg = svg_element('svg');\\n\\t\\t\\tuse = svg_element('use');\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tcreate_component(icons.$$.fragment);\\n\\t\\t\\txlink_attr(use, 'xlink:href', (use_xlink_href_value = '#' + /*name*/ ctx[0]));\\n\\t\\t\\tattr(svg, 'width', /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, 'height', /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, 'class', 'icon  svelte-wkpedn-ContactList');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, svg, anchor);\\n\\t\\t\\tappend(svg, use);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, t1, anchor);\\n\\t\\t\\tmount_component(icons, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!current ||\\n\\t\\t\\t\\t(dirty & /*name*/ 1 &&\\n\\t\\t\\t\\t\\tuse_xlink_href_value !== (use_xlink_href_value = '#' + /*name*/ ctx[0]))\\n\\t\\t\\t) {\\n\\t\\t\\t\\txlink_attr(use, 'xlink:href', use_xlink_href_value);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, 'width', /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, 'height', /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[2],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[2])\\n\\t\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\ttransition_in(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\ttransition_out(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(svg);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t\\tif (detaching) detach(t1);\\n\\t\\t\\tdestroy_component(icons, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$6($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { name } = $$props;\\n\\tlet { size = '100%' } = $$props;\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('name' in $$props) $$invalidate(0, (name = $$props.name));\\n\\t\\tif ('size' in $$props) $$invalidate(1, (size = $$props.size));\\n\\t\\tif ('$$scope' in $$props) $$invalidate(2, ($$scope = $$props.$$scope));\\n\\t};\\n\\n\\treturn [name, size, $$scope, slots];\\n}\\n\\nclass Icon extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(\\n\\t\\t\\tthis,\\n\\t\\t\\toptions,\\n\\t\\t\\tinstance$6,\\n\\t\\t\\tcreate_fragment$6,\\n\\t\\t\\tsafe_not_equal,\\n\\t\\t\\t{ name: 0, size: 1 },\\n\\t\\t\\tadd_css$5\\n\\t\\t);\\n\\t}\\n\\n\\tget name() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset name(name) {\\n\\t\\tthis.$$set({ name });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget size() {\\n\\t\\treturn this.$$.ctx[1];\\n\\t}\\n\\n\\tset size(size) {\\n\\t\\tthis.$$set({ size });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Modal.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$4(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-7dgeyu-ContactList',\\n\\t\\t'.hide.svelte-7dgeyu-ContactList{display:none}.modal.svelte-7dgeyu-ContactList{display:block;position:fixed;z-index:99999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgb(0, 0, 0);background-color:rgba(0, 0, 0, 0.4)}.modal-content.svelte-7dgeyu-ContactList{background-color:#fefefe;margin:15% auto;padding:20px;border:1px solid #888;width:80%}.close.svelte-7dgeyu-ContactList{color:#aaa;float:right;font-size:3.5em;font-weight:bold;line-height:0.5;padding:0.25em}.close.svelte-7dgeyu-ContactList:hover,.close.svelte-7dgeyu-ContactList:focus{color:black;text-decoration:none;cursor:pointer}'\\n\\t);\\n}\\n\\nfunction create_fragment$5(ctx) {\\n\\tlet div2;\\n\\tlet div1;\\n\\tlet span;\\n\\tlet t1;\\n\\tlet div0;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element('div');\\n\\t\\t\\tdiv1 = element('div');\\n\\t\\t\\tspan = element('span');\\n\\t\\t\\tspan.textContent = '×';\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(span, 'class', 'close svelte-7dgeyu-ContactList');\\n\\t\\t\\tattr(div1, 'class', 'modal-content svelte-7dgeyu-ContactList');\\n\\t\\t\\tattr(div2, 'class', 'svelte-7dgeyu-ContactList');\\n\\t\\t\\ttoggle_class(div2, 'modal', /*modal*/ ctx[0]);\\n\\t\\t\\ttoggle_class(div2, 'hide', !(/*modal*/ ctx[0]));\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, span);\\n\\t\\t\\tappend(div1, t1);\\n\\t\\t\\tappend(div1, div0);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div0, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(span, 'click', /*handleClose*/ ctx[1]);\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[2],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[2])\\n\\t\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*modal*/ 1) {\\n\\t\\t\\t\\ttoggle_class(div2, 'modal', /*modal*/ ctx[0]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*modal*/ 1) {\\n\\t\\t\\t\\ttoggle_class(div2, 'hide', !(/*modal*/ ctx[0]));\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$5($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { modal } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\n\\tconst handleClose = () => {\\n\\t\\t$$invalidate(0, (modal = false));\\n\\t\\tconsole.log('Closing', { modal });\\n\\t\\tdispatch('closeModal', null);\\n\\t};\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('modal' in $$props) $$invalidate(0, (modal = $$props.modal));\\n\\t\\tif ('$$scope' in $$props) $$invalidate(2, ($$scope = $$props.$$scope));\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*modal*/ 1) {\\n\\t\\t\\tmodal && console.log({ modal });\\n\\t\\t}\\n\\t};\\n\\n\\treturn [modal, handleClose, $$scope, slots];\\n}\\n\\nclass Modal extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$5, create_fragment$5, safe_not_equal, { modal: 0 }, add_css$4);\\n\\t}\\n\\n\\tget modal() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset modal(modal) {\\n\\t\\tthis.$$set({ modal });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Scan.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_if_block$1(ctx) {\\n\\tlet modal;\\n\\tlet current;\\n\\n\\tmodal = new Modal({\\n\\t\\tprops: {\\n\\t\\t\\tmodal: /*scan*/ ctx[2],\\n\\t\\t\\t$$slots: { default: [create_default_slot] },\\n\\t\\t\\t$$scope: { ctx }\\n\\t\\t}\\n\\t});\\n\\n\\tmodal.$on('closeModal', /*handleModalClose*/ ctx[4]);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(modal.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(modal, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst modal_changes = {};\\n\\t\\t\\tif (dirty & /*scan*/ 4) modal_changes.modal = /*scan*/ ctx[2];\\n\\n\\t\\t\\tif (dirty & /*$$scope, scan, pubkey*/ 133) {\\n\\t\\t\\t\\tmodal_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tmodal.$set(modal_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(modal.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(modal.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(modal, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (36:1) <Modal modal={scan} on:closeModal={handleModalClose}>\\nfunction create_default_slot(ctx) {\\n\\tlet switch_instance;\\n\\tlet updating_result;\\n\\tlet switch_instance_anchor;\\n\\tlet current;\\n\\n\\tfunction switch_instance_result_binding(value) {\\n\\t\\t/*switch_instance_result_binding*/ ctx[5](value);\\n\\t}\\n\\n\\tvar switch_value = /*scan*/ ctx[2];\\n\\n\\tfunction switch_props(ctx) {\\n\\t\\tlet switch_instance_props = {};\\n\\n\\t\\tif (/*pubkey*/ ctx[0] !== void 0) {\\n\\t\\t\\tswitch_instance_props.result = /*pubkey*/ ctx[0];\\n\\t\\t}\\n\\n\\t\\treturn { props: switch_instance_props };\\n\\t}\\n\\n\\tif (switch_value) {\\n\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\tbinding_callbacks.push(() => bind(switch_instance, 'result', switch_instance_result_binding));\\n\\t\\tswitch_instance.$on('successfulScan', /*successfulScan_handler*/ ctx[6]);\\n\\t}\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (switch_instance) create_component(switch_instance.$$.fragment);\\n\\t\\t\\tswitch_instance_anchor = empty();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\tmount_component(switch_instance, target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, switch_instance_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst switch_instance_changes = {};\\n\\n\\t\\t\\tif (!updating_result && dirty & /*pubkey*/ 1) {\\n\\t\\t\\t\\tupdating_result = true;\\n\\t\\t\\t\\tswitch_instance_changes.result = /*pubkey*/ ctx[0];\\n\\t\\t\\t\\tadd_flush_callback(() => (updating_result = false));\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (switch_value !== (switch_value = /*scan*/ ctx[2])) {\\n\\t\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\t\\tgroup_outros();\\n\\t\\t\\t\\t\\tconst old_component = switch_instance;\\n\\n\\t\\t\\t\\t\\ttransition_out(old_component.$$.fragment, 1, 0, () => {\\n\\t\\t\\t\\t\\t\\tdestroy_component(old_component, 1);\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (switch_value) {\\n\\t\\t\\t\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\t\\t\\t\\tbinding_callbacks.push(() =>\\n\\t\\t\\t\\t\\t\\tbind(switch_instance, 'result', switch_instance_result_binding)\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\tswitch_instance.$on('successfulScan', /*successfulScan_handler*/ ctx[6]);\\n\\t\\t\\t\\t\\tcreate_component(switch_instance.$$.fragment);\\n\\t\\t\\t\\t\\ttransition_in(switch_instance.$$.fragment, 1);\\n\\t\\t\\t\\t\\tmount_component(\\n\\t\\t\\t\\t\\t\\tswitch_instance,\\n\\t\\t\\t\\t\\t\\tswitch_instance_anchor.parentNode,\\n\\t\\t\\t\\t\\t\\tswitch_instance_anchor\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tswitch_instance = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (switch_value) {\\n\\t\\t\\t\\tswitch_instance.$set(switch_instance_changes);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(switch_instance_anchor);\\n\\t\\t\\tif (switch_instance) destroy_component(switch_instance, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$4(ctx) {\\n\\tlet div1;\\n\\tlet div0;\\n\\tlet icon;\\n\\tlet t;\\n\\tlet if_block_anchor;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\ticon = new Icon({ props: { name: 'scanQR' } });\\n\\tlet if_block = /*Scanner*/ ctx[1] && /*scan*/ ctx[2] && create_if_block$1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv1 = element('div');\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tcreate_component(icon.$$.fragment);\\n\\t\\t\\tt = space();\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tif_block_anchor = empty();\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv0,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'text-slate-800 w-16 h-16 cursor-pointer font-bold rounded hover:scale-125 transition duration-150 ease-in-out'\\n\\t\\t\\t);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div1, anchor);\\n\\t\\t\\tappend(div1, div0);\\n\\t\\t\\tmount_component(icon, div0, null);\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tif (if_block) if_block.m(target, anchor);\\n\\t\\t\\tinsert(target, if_block_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(div1, 'click', /*handleClick*/ ctx[3]);\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (/*Scanner*/ ctx[1] && /*scan*/ ctx[2]) {\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\n\\t\\t\\t\\t\\tif (dirty & /*Scanner, scan*/ 6) {\\n\\t\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block = create_if_block$1(ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (if_block) {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_block, 1, 1, () => {\\n\\t\\t\\t\\t\\tif_block = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(icon.$$.fragment, local);\\n\\t\\t\\ttransition_in(if_block);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(icon.$$.fragment, local);\\n\\t\\t\\ttransition_out(if_block);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div1);\\n\\t\\t\\tdestroy_component(icon);\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t\\tif (if_block) if_block.d(detaching);\\n\\t\\t\\tif (detaching) detach(if_block_anchor);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$4($$self, $$props, $$invalidate) {\\n\\tlet { pubkey } = $$props;\\n\\tlet Scanner;\\n\\tlet scan;\\n\\n\\tonMount(async () => {\\n\\t\\t$$invalidate(\\n\\t\\t\\t1,\\n\\t\\t\\t({ Scanner } = await Promise.resolve().then(function () {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t})),\\n\\t\\t\\tScanner\\n\\t\\t);\\n\\t\\tconsole.log({ Scanner });\\n\\t});\\n\\n\\tfunction handleClick(e) {\\n\\t\\t$$invalidate(2, (scan = Scanner));\\n\\t}\\n\\n\\tfunction handleModalClose() {\\n\\t\\tconsole.log('Got close modal');\\n\\t\\t$$invalidate(2, (scan = false));\\n\\t} // selected?.stopMediaStream();\\n\\n\\tfunction switch_instance_result_binding(value) {\\n\\t\\tpubkey = value;\\n\\t\\t$$invalidate(0, pubkey);\\n\\t}\\n\\n\\tconst successfulScan_handler = (data) => {\\n\\t\\tconst parsed = JSON.parse(data.detail);\\n\\t\\tconsole.log(`Scanned `, { parsed });\\n\\t\\t$$invalidate(0, (pubkey = parsed.pubKeyHex));\\n\\t\\t$$invalidate(2, (scan = false));\\n\\t};\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('pubkey' in $$props) $$invalidate(0, (pubkey = $$props.pubkey));\\n\\t};\\n\\n\\treturn [\\n\\t\\tpubkey,\\n\\t\\tScanner,\\n\\t\\tscan,\\n\\t\\thandleClick,\\n\\t\\thandleModalClose,\\n\\t\\tswitch_instance_result_binding,\\n\\t\\tsuccessfulScan_handler\\n\\t];\\n}\\n\\nclass Scan extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$4, create_fragment$4, safe_not_equal, { pubkey: 0 });\\n\\t}\\n\\n\\tget pubkey() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset pubkey(pubkey) {\\n\\t\\tthis.$$set({ pubkey });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContactList.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$3(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-1u8ba31-ContactList',\\n\\t\\t'.svelte-1u8ba31-ContactList,.svelte-1u8ba31-ContactList::before,.svelte-1u8ba31-ContactList::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-1u8ba31-ContactList::before,.svelte-1u8ba31-ContactList::after{--tw-content:\\\\'\\\\'}button.svelte-1u8ba31-ContactList,input.svelte-1u8ba31-ContactList{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button.svelte-1u8ba31-ContactList{text-transform:none}button.svelte-1u8ba31-ContactList{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1u8ba31-ContactList:-moz-focusring{outline:auto}.svelte-1u8ba31-ContactList:-moz-ui-invalid{box-shadow:none}.svelte-1u8ba31-ContactList::-webkit-inner-spin-button,.svelte-1u8ba31-ContactList::-webkit-outer-spin-button{height:auto}.svelte-1u8ba31-ContactList::-webkit-search-decoration{-webkit-appearance:none}.svelte-1u8ba31-ContactList::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}input.svelte-1u8ba31-ContactList::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-1u8ba31-ContactList::placeholder{opacity:1;color:#9CA3AF}button.svelte-1u8ba31-ContactList{cursor:pointer}.svelte-1u8ba31-ContactList:disabled{cursor:default}[type=\\\\'text\\\\'].svelte-1u8ba31-ContactList{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6B7280;border-width:1px;border-radius:0px;padding-top:0.5rem;padding-right:0.75rem;padding-bottom:0.5rem;padding-left:0.75rem;font-size:1rem;line-height:1.5rem;--tw-shadow:0 0 #0000}[type=\\\\'text\\\\'].svelte-1u8ba31-ContactList:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);border-color:#1C64F2}input.svelte-1u8ba31-ContactList::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-1u8ba31-ContactList::placeholder{color:#6B7280;opacity:1}.svelte-1u8ba31-ContactList::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-1u8ba31-ContactList::-webkit-date-and-time-value{min-height:1.5em}.svelte-1u8ba31-ContactList{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"}.svelte-1u8ba31-ContactList,.svelte-1u8ba31-ContactList::before,.svelte-1u8ba31-ContactList::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1u8ba31-ContactList::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1u8ba31-ContactList::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.m-4.svelte-1u8ba31-ContactList{margin:1rem}.mx-4.svelte-1u8ba31-ContactList{margin-left:1rem;margin-right:1rem}.ml-4.svelte-1u8ba31-ContactList{margin-left:1rem}.mr-4.svelte-1u8ba31-ContactList{margin-right:1rem}.flex.svelte-1u8ba31-ContactList{display:flex}.w-4\\\\\\\\/5.svelte-1u8ba31-ContactList{width:80%}.w-full.svelte-1u8ba31-ContactList{width:100%}.flex-1.svelte-1u8ba31-ContactList{flex:1 1 0%}@-webkit-keyframes svelte-1u8ba31-ContactList-spin{to{transform:rotate(360deg)}}@keyframes svelte-1u8ba31-ContactList-spin{to{transform:rotate(360deg)}}.flex-row.svelte-1u8ba31-ContactList{flex-direction:row}.items-center.svelte-1u8ba31-ContactList{align-items:center}.break-all.svelte-1u8ba31-ContactList{word-break:break-all}.rounded.svelte-1u8ba31-ContactList{border-radius:0.25rem}.rounded-xl.svelte-1u8ba31-ContactList{border-radius:0.75rem}.border-r-gray-400.svelte-1u8ba31-ContactList{--tw-border-opacity:1;border-right-color:rgb(156 163 175 / var(--tw-border-opacity))}.bg-gray-50.svelte-1u8ba31-ContactList{--tw-bg-opacity:1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-gray-100.svelte-1u8ba31-ContactList{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-blue-500.svelte-1u8ba31-ContactList{--tw-bg-opacity:1;background-color:rgb(63 131 248 / var(--tw-bg-opacity))}.p-4.svelte-1u8ba31-ContactList{padding:1rem}.p-1.svelte-1u8ba31-ContactList{padding:0.25rem}.py-2.svelte-1u8ba31-ContactList{padding-top:0.5rem;padding-bottom:0.5rem}.px-4.svelte-1u8ba31-ContactList{padding-left:1rem;padding-right:1rem}.text-center.svelte-1u8ba31-ContactList{text-align:center}.font-sans.svelte-1u8ba31-ContactList{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"}.font-mono.svelte-1u8ba31-ContactList{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace}.font-bold.svelte-1u8ba31-ContactList{font-weight:700}.text-white.svelte-1u8ba31-ContactList{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.shadow-xl.svelte-1u8ba31-ContactList{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.hover\\\\\\\\:bg-blue-700.svelte-1u8ba31-ContactList:hover{--tw-bg-opacity:1;background-color:rgb(26 86 219 / var(--tw-bg-opacity))}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}'\\n\\t);\\n}\\n\\nfunction get_each_context(ctx, list, i) {\\n\\tconst child_ctx = ctx.slice();\\n\\tchild_ctx[9] = list[i];\\n\\treturn child_ctx;\\n}\\n\\n// (48:1) {#each contacts as contact (contact)}\\nfunction create_each_block(key_1, ctx) {\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet t0_value = /*contact*/ ctx[9].handle + '';\\n\\tlet t0;\\n\\tlet t1;\\n\\tlet div1;\\n\\tlet t2_value = /*contact*/ ctx[9].pubkey + '';\\n\\tlet t2;\\n\\tlet t3;\\n\\tlet rect;\\n\\tlet stop_animation = noop;\\n\\n\\treturn {\\n\\t\\tkey: key_1,\\n\\t\\tfirst: null,\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element('div');\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tt0 = text(t0_value);\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv1 = element('div');\\n\\t\\t\\tt2 = text(t2_value);\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv0,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex-1 font-sans bg-gray-100 ml-4 p-4 border-r-gray-400 svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv1,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex-1 font-mono bg-gray-100 mr-4 p-4 break-all svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(div2, 'class', 'flex flex-row mx-4 bg-gray-50 rounded p-4  svelte-1u8ba31-ContactList');\\n\\t\\t\\tthis.first = div2;\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div0);\\n\\t\\t\\tappend(div0, t0);\\n\\t\\t\\tappend(div2, t1);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, t2);\\n\\t\\t\\tappend(div2, t3);\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tif (dirty & /*contacts*/ 1 && t0_value !== (t0_value = /*contact*/ ctx[9].handle + ''))\\n\\t\\t\\t\\tset_data(t0, t0_value);\\n\\t\\t\\tif (dirty & /*contacts*/ 1 && t2_value !== (t2_value = /*contact*/ ctx[9].pubkey + ''))\\n\\t\\t\\t\\tset_data(t2, t2_value);\\n\\t\\t},\\n\\t\\tr() {\\n\\t\\t\\trect = div2.getBoundingClientRect();\\n\\t\\t},\\n\\t\\tf() {\\n\\t\\t\\tfix_position(div2);\\n\\t\\t\\tstop_animation();\\n\\t\\t},\\n\\t\\ta() {\\n\\t\\t\\tstop_animation();\\n\\n\\t\\t\\tstop_animation = create_animation(div2, rect, flip, {\\n\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\tduration: 750,\\n\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t});\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$3(ctx) {\\n\\tlet div7;\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet t1;\\n\\tlet div1;\\n\\tlet scan;\\n\\tlet updating_pubkey;\\n\\tlet t2;\\n\\tlet div6;\\n\\tlet div3;\\n\\tlet input0;\\n\\tlet t3;\\n\\tlet div4;\\n\\tlet input1;\\n\\tlet t4;\\n\\tlet div5;\\n\\tlet button;\\n\\tlet t6;\\n\\tlet each_blocks = [];\\n\\tlet each_1_lookup = new Map();\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\tfunction scan_pubkey_binding(value) {\\n\\t\\t/*scan_pubkey_binding*/ ctx[3](value);\\n\\t}\\n\\n\\tlet scan_props = {};\\n\\n\\tif (/*pubkey*/ ctx[2] !== void 0) {\\n\\t\\tscan_props.pubkey = /*pubkey*/ ctx[2];\\n\\t}\\n\\n\\tscan = new Scan({ props: scan_props });\\n\\tbinding_callbacks.push(() => bind(scan, 'pubkey', scan_pubkey_binding));\\n\\tlet each_value = /*contacts*/ ctx[0];\\n\\tconst get_key = (ctx) => /*contact*/ ctx[9];\\n\\n\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\tlet child_ctx = get_each_context(ctx, each_value, i);\\n\\t\\tlet key = get_key(child_ctx);\\n\\t\\teach_1_lookup.set(key, (each_blocks[i] = create_each_block(key, child_ctx)));\\n\\t}\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv7 = element('div');\\n\\t\\t\\tdiv2 = element('div');\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tdiv0.textContent = 'Scan their PeerPiper Key to add';\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv1 = element('div');\\n\\t\\t\\tcreate_component(scan.$$.fragment);\\n\\t\\t\\tt2 = space();\\n\\t\\t\\tdiv6 = element('div');\\n\\t\\t\\tdiv3 = element('div');\\n\\t\\t\\tinput0 = element('input');\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tdiv4 = element('div');\\n\\t\\t\\tinput1 = element('input');\\n\\t\\t\\tt4 = space();\\n\\t\\t\\tdiv5 = element('div');\\n\\t\\t\\tbutton = element('button');\\n\\t\\t\\tbutton.textContent = 'Add';\\n\\t\\t\\tt6 = space();\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t}\\n\\n\\t\\t\\tattr(div0, 'class', 'flex-1 svelte-1u8ba31-ContactList');\\n\\t\\t\\tattr(div1, 'class', 'svelte-1u8ba31-ContactList');\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv2,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex flex-row mx-4 bg-gray-50 rounded p-4 items-center text-center svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(input0, 'type', 'text');\\n\\t\\t\\tattr(input0, 'class', 'w-full svelte-1u8ba31-ContactList');\\n\\t\\t\\tattr(input0, 'placeholder', '@handle / nickname');\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv3,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex-1 font-sans bg-gray-100 ml-4 p-1 rounded-xl border-r-gray-400 svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(input1, 'type', 'text');\\n\\t\\t\\tattr(input1, 'class', 'w-full svelte-1u8ba31-ContactList');\\n\\t\\t\\tattr(input1, 'placeholder', 'their public key');\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv4,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex-1 font-mono bg-gray-100 mr-4 p-1 rounded-xl svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tbutton,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow-xl svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(div5, 'class', 'svelte-1u8ba31-ContactList');\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv6,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t'flex flex-row mx-4 bg-gray-50 rounded p-4 items-center svelte-1u8ba31-ContactList'\\n\\t\\t\\t);\\n\\t\\t\\tattr(div7, 'class', 'm-4 w-auto svelte-1u8ba31-ContactList');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div7, anchor);\\n\\t\\t\\tappend(div7, div2);\\n\\t\\t\\tappend(div2, div0);\\n\\t\\t\\tappend(div2, t1);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tmount_component(scan, div1, null);\\n\\t\\t\\tappend(div7, t2);\\n\\t\\t\\tappend(div7, div6);\\n\\t\\t\\tappend(div6, div3);\\n\\t\\t\\tappend(div3, input0);\\n\\t\\t\\tset_input_value(input0, /*handle*/ ctx[1]);\\n\\t\\t\\tappend(div6, t3);\\n\\t\\t\\tappend(div6, div4);\\n\\t\\t\\tappend(div4, input1);\\n\\t\\t\\tset_input_value(input1, /*pubkey*/ ctx[2]);\\n\\t\\t\\tappend(div6, t4);\\n\\t\\t\\tappend(div6, div5);\\n\\t\\t\\tappend(div5, button);\\n\\t\\t\\tappend(div7, t6);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].m(div7, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input0, 'input', /*input0_input_handler*/ ctx[4]),\\n\\t\\t\\t\\t\\tlisten(input1, 'input', /*input1_input_handler*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(button, 'click', /*click_handler*/ ctx[6])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tconst scan_changes = {};\\n\\n\\t\\t\\tif (!updating_pubkey && dirty & /*pubkey*/ 4) {\\n\\t\\t\\t\\tupdating_pubkey = true;\\n\\t\\t\\t\\tscan_changes.pubkey = /*pubkey*/ ctx[2];\\n\\t\\t\\t\\tadd_flush_callback(() => (updating_pubkey = false));\\n\\t\\t\\t}\\n\\n\\t\\t\\tscan.$set(scan_changes);\\n\\n\\t\\t\\tif (dirty & /*handle*/ 2 && input0.value !== /*handle*/ ctx[1]) {\\n\\t\\t\\t\\tset_input_value(input0, /*handle*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*pubkey*/ 4 && input1.value !== /*pubkey*/ ctx[2]) {\\n\\t\\t\\t\\tset_input_value(input1, /*pubkey*/ ctx[2]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*contacts*/ 1) {\\n\\t\\t\\t\\teach_value = /*contacts*/ ctx[0];\\n\\t\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();\\n\\t\\t\\t\\teach_blocks = update_keyed_each(\\n\\t\\t\\t\\t\\teach_blocks,\\n\\t\\t\\t\\t\\tdirty,\\n\\t\\t\\t\\t\\tget_key,\\n\\t\\t\\t\\t\\t1,\\n\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\teach_value,\\n\\t\\t\\t\\t\\teach_1_lookup,\\n\\t\\t\\t\\t\\tdiv7,\\n\\t\\t\\t\\t\\tfix_and_destroy_block,\\n\\t\\t\\t\\t\\tcreate_each_block,\\n\\t\\t\\t\\t\\tnull,\\n\\t\\t\\t\\t\\tget_each_context\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(scan.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(scan.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div7);\\n\\t\\t\\tdestroy_component(scan);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].d();\\n\\t\\t\\t}\\n\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$3($$self, $$props, $$invalidate) {\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet handle, pubkey;\\n\\n\\tlet defaultContact = {\\n\\t\\tpubkey: 'GnHDprayyzahnWjDqvQ9AGWsmjojWymVNztGHNr4S7an',\\n\\t\\thandle: 'douganderson444'\\n\\t};\\n\\n\\tlet { contacts = [defaultContact] } = $$props;\\n\\n\\tfunction scan_pubkey_binding(value) {\\n\\t\\tpubkey = value;\\n\\t\\t$$invalidate(2, pubkey);\\n\\t}\\n\\n\\tfunction input0_input_handler() {\\n\\t\\thandle = this.value;\\n\\t\\t$$invalidate(1, handle);\\n\\t}\\n\\n\\tfunction input1_input_handler() {\\n\\t\\tpubkey = this.value;\\n\\t\\t$$invalidate(2, pubkey);\\n\\t}\\n\\n\\tconst click_handler = () => {\\n\\t\\tif (!handle || !pubkey) return;\\n\\t\\t$$invalidate(0, (contacts = [{ handle, pubkey }, ...contacts]));\\n\\t};\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('contacts' in $$props) $$invalidate(0, (contacts = $$props.contacts));\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*contacts*/ 1) {\\n\\t\\t\\t// this fires when todos change; let's emit an event to update any listeners consuming this component\\n\\t\\t\\tif (contacts) {\\n\\t\\t\\t\\tdispatch('change', { contacts });\\n\\t\\t\\t\\tdispatch('loadContacts', contacts);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [\\n\\t\\tcontacts,\\n\\t\\thandle,\\n\\t\\tpubkey,\\n\\t\\tscan_pubkey_binding,\\n\\t\\tinput0_input_handler,\\n\\t\\tinput1_input_handler,\\n\\t\\tclick_handler\\n\\t];\\n}\\n\\nclass ContactList extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, { contacts: 0 }, add_css$3);\\n\\t}\\n\\n\\tget contacts() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset contacts(contacts) {\\n\\t\\tthis.$$set({ contacts });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nconst subscriber_queue = [];\\n/**\\n * Create a `Writable` store that allows both updating and reading by subscription.\\n * @param {*=}value initial value\\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\\n */\\nfunction writable(value, start = noop) {\\n\\tlet stop;\\n\\tconst subscribers = new Set();\\n\\tfunction set(new_value) {\\n\\t\\tif (safe_not_equal(value, new_value)) {\\n\\t\\t\\tvalue = new_value;\\n\\t\\t\\tif (stop) {\\n\\t\\t\\t\\t// store is ready\\n\\t\\t\\t\\tconst run_queue = !subscriber_queue.length;\\n\\t\\t\\t\\tfor (const subscriber of subscribers) {\\n\\t\\t\\t\\t\\tsubscriber[1]();\\n\\t\\t\\t\\t\\tsubscriber_queue.push(subscriber, value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (run_queue) {\\n\\t\\t\\t\\t\\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\\n\\t\\t\\t\\t\\t\\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tsubscriber_queue.length = 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tfunction update(fn) {\\n\\t\\tset(fn(value));\\n\\t}\\n\\tfunction subscribe(run, invalidate = noop) {\\n\\t\\tconst subscriber = [run, invalidate];\\n\\t\\tsubscribers.add(subscriber);\\n\\t\\tif (subscribers.size === 1) {\\n\\t\\t\\tstop = start(set) || noop;\\n\\t\\t}\\n\\t\\trun(value);\\n\\t\\treturn () => {\\n\\t\\t\\tsubscribers.delete(subscriber);\\n\\t\\t\\tif (subscribers.size === 0) {\\n\\t\\t\\t\\tstop();\\n\\t\\t\\t\\tstop = null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\treturn { set, update, subscribe };\\n}\\n\\nconst stream = writable(null);\\nconst error = writable(null);\\nconst status = writable(null);\\n\\nvar commonjsGlobal =\\n\\ttypeof globalThis !== 'undefined'\\n\\t\\t? globalThis\\n\\t\\t: typeof window !== 'undefined'\\n\\t\\t? window\\n\\t\\t: typeof global !== 'undefined'\\n\\t\\t? global\\n\\t\\t: typeof self !== 'undefined'\\n\\t\\t? self\\n\\t\\t: {};\\n\\nfunction getDefaultExportFromCjs(x) {\\n\\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\\n}\\n\\nvar jsQR$1 = { exports: {} };\\n\\n(function (module, exports) {\\n\\t(function webpackUniversalModuleDefinition(root, factory) {\\n\\t\\tmodule.exports = factory();\\n\\t})(typeof self !== 'undefined' ? self : commonjsGlobal, function () {\\n\\t\\treturn /******/ (function (modules) {\\n\\t\\t\\t// webpackBootstrap\\n\\t\\t\\t/******/ // The module cache\\n\\t\\t\\t/******/ var installedModules = {};\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // The require function\\n\\t\\t\\t/******/ function __webpack_require__(moduleId) {\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t/******/ // Check if module is in cache\\n\\t\\t\\t\\t/******/ if (installedModules[moduleId]) {\\n\\t\\t\\t\\t\\t/******/ return installedModules[moduleId].exports;\\n\\t\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t/******/ // Create a new module (and put it into the cache)\\n\\t\\t\\t\\t/******/ var module = (installedModules[moduleId] = {\\n\\t\\t\\t\\t\\t/******/ i: moduleId,\\n\\t\\t\\t\\t\\t/******/ l: false,\\n\\t\\t\\t\\t\\t/******/ exports: {}\\n\\t\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t/******/ // Execute the module function\\n\\t\\t\\t\\t/******/ modules[moduleId].call(\\n\\t\\t\\t\\t\\tmodule.exports,\\n\\t\\t\\t\\t\\tmodule,\\n\\t\\t\\t\\t\\tmodule.exports,\\n\\t\\t\\t\\t\\t__webpack_require__\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t/******/ // Flag the module as loaded\\n\\t\\t\\t\\t/******/ module.l = true;\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t/******/ // Return the exports of the module\\n\\t\\t\\t\\t/******/ return module.exports;\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t}\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // expose the modules object (__webpack_modules__)\\n\\t\\t\\t/******/ __webpack_require__.m = modules;\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // expose the module cache\\n\\t\\t\\t/******/ __webpack_require__.c = installedModules;\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // define getter function for harmony exports\\n\\t\\t\\t/******/ __webpack_require__.d = function (exports, name, getter) {\\n\\t\\t\\t\\t/******/ if (!__webpack_require__.o(exports, name)) {\\n\\t\\t\\t\\t\\t/******/ Object.defineProperty(exports, name, {\\n\\t\\t\\t\\t\\t\\t/******/ configurable: false,\\n\\t\\t\\t\\t\\t\\t/******/ enumerable: true,\\n\\t\\t\\t\\t\\t\\t/******/ get: getter\\n\\t\\t\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t/******/\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t};\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // getDefaultExport function for compatibility with non-harmony modules\\n\\t\\t\\t/******/ __webpack_require__.n = function (module) {\\n\\t\\t\\t\\t/******/ var getter =\\n\\t\\t\\t\\t\\tmodule && module.__esModule\\n\\t\\t\\t\\t\\t\\t? /******/ function getDefault() {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn module['default'];\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: /******/ function getModuleExports() {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn module;\\n\\t\\t\\t\\t\\t\\t  };\\n\\t\\t\\t\\t/******/ __webpack_require__.d(getter, 'a', getter);\\n\\t\\t\\t\\t/******/ return getter;\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t};\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // Object.prototype.hasOwnProperty.call\\n\\t\\t\\t/******/ __webpack_require__.o = function (object, property) {\\n\\t\\t\\t\\treturn Object.prototype.hasOwnProperty.call(object, property);\\n\\t\\t\\t};\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // __webpack_public_path__\\n\\t\\t\\t/******/ __webpack_require__.p = '';\\n\\t\\t\\t/******/\\n\\t\\t\\t/******/ // Load entry module and return exports\\n\\t\\t\\t/******/ return __webpack_require__((__webpack_require__.s = 3));\\n\\t\\t\\t/******/\\n\\t\\t})(\\n\\t\\t\\t/************************************************************************/\\n\\t\\t\\t/******/ [\\n\\t\\t\\t\\t/* 0 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar BitMatrix = /** @class */ (function () {\\n\\t\\t\\t\\t\\t\\tfunction BitMatrix(data, width) {\\n\\t\\t\\t\\t\\t\\t\\tthis.width = width;\\n\\t\\t\\t\\t\\t\\t\\tthis.height = data.length / width;\\n\\t\\t\\t\\t\\t\\t\\tthis.data = data;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tBitMatrix.createEmpty = function (width, height) {\\n\\t\\t\\t\\t\\t\\t\\treturn new BitMatrix(new Uint8ClampedArray(width * height), width);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tBitMatrix.prototype.get = function (x, y) {\\n\\t\\t\\t\\t\\t\\t\\tif (x < 0 || x >= this.width || y < 0 || y >= this.height) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn !!this.data[y * this.width + x];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tBitMatrix.prototype.set = function (x, y, v) {\\n\\t\\t\\t\\t\\t\\t\\tthis.data[y * this.width + x] = v ? 1 : 0;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tBitMatrix.prototype.setRegion = function (left, top, width, height, v) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var y = top; y < top + height; y++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var x = left; x < left + width; x++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.set(x, y, !!v);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treturn BitMatrix;\\n\\t\\t\\t\\t\\t})();\\n\\t\\t\\t\\t\\texports.BitMatrix = BitMatrix;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 1 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar GenericGFPoly_1 = __webpack_require__(2);\\n\\t\\t\\t\\t\\tfunction addOrSubtractGF(a, b) {\\n\\t\\t\\t\\t\\t\\treturn a ^ b; // tslint:disable-line:no-bitwise\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.addOrSubtractGF = addOrSubtractGF;\\n\\t\\t\\t\\t\\tvar GenericGF = /** @class */ (function () {\\n\\t\\t\\t\\t\\t\\tfunction GenericGF(primitive, size, genBase) {\\n\\t\\t\\t\\t\\t\\t\\tthis.primitive = primitive;\\n\\t\\t\\t\\t\\t\\t\\tthis.size = size;\\n\\t\\t\\t\\t\\t\\t\\tthis.generatorBase = genBase;\\n\\t\\t\\t\\t\\t\\t\\tthis.expTable = new Array(this.size);\\n\\t\\t\\t\\t\\t\\t\\tthis.logTable = new Array(this.size);\\n\\t\\t\\t\\t\\t\\t\\tvar x = 1;\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < this.size; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.expTable[i] = x;\\n\\t\\t\\t\\t\\t\\t\\t\\tx = x * 2;\\n\\t\\t\\t\\t\\t\\t\\t\\tif (x >= this.size) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tx = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < this.size - 1; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.logTable[this.expTable[i]] = i;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tthis.zero = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([0]));\\n\\t\\t\\t\\t\\t\\t\\tthis.one = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([1]));\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tGenericGF.prototype.multiply = function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\tif (a === 0 || b === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn 0;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGF.prototype.inverse = function (a) {\\n\\t\\t\\t\\t\\t\\t\\tif (a === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error(\\\"Can't invert 0\\\");\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn this.expTable[this.size - this.logTable[a] - 1];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGF.prototype.buildMonomial = function (degree, coefficient) {\\n\\t\\t\\t\\t\\t\\t\\tif (degree < 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid monomial degree less than 0');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (coefficient === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.zero;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar coefficients = new Uint8ClampedArray(degree + 1);\\n\\t\\t\\t\\t\\t\\t\\tcoefficients[0] = coefficient;\\n\\t\\t\\t\\t\\t\\t\\treturn new GenericGFPoly_1.default(this, coefficients);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGF.prototype.log = function (a) {\\n\\t\\t\\t\\t\\t\\t\\tif (a === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error(\\\"Can't take log(0)\\\");\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn this.logTable[a];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGF.prototype.exp = function (a) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.expTable[a];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treturn GenericGF;\\n\\t\\t\\t\\t\\t})();\\n\\t\\t\\t\\t\\texports.default = GenericGF;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 2 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar GenericGF_1 = __webpack_require__(1);\\n\\t\\t\\t\\t\\tvar GenericGFPoly = /** @class */ (function () {\\n\\t\\t\\t\\t\\t\\tfunction GenericGFPoly(field, coefficients) {\\n\\t\\t\\t\\t\\t\\t\\tif (coefficients.length === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('No coefficients.');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tthis.field = field;\\n\\t\\t\\t\\t\\t\\t\\tvar coefficientsLength = coefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tif (coefficientsLength > 1 && coefficients[0] === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Leading term must be non-zero for anything except the constant polynomial \\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tvar firstNonZero = 1;\\n\\t\\t\\t\\t\\t\\t\\t\\twhile (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfirstNonZero++;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tif (firstNonZero === coefficientsLength) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients = field.zero.coefficients;\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < this.coefficients.length; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients[i] = coefficients[firstNonZero + i];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients = coefficients;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.degree = function () {\\n\\t\\t\\t\\t\\t\\t\\treturn this.coefficients.length - 1;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.isZero = function () {\\n\\t\\t\\t\\t\\t\\t\\treturn this.coefficients[0] === 0;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.getCoefficient = function (degree) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.coefficients[this.coefficients.length - 1 - degree];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.addOrSubtract = function (other) {\\n\\t\\t\\t\\t\\t\\t\\tvar _a;\\n\\t\\t\\t\\t\\t\\t\\tif (this.isZero()) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn other;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (other.isZero()) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar smallerCoefficients = this.coefficients;\\n\\t\\t\\t\\t\\t\\t\\tvar largerCoefficients = other.coefficients;\\n\\t\\t\\t\\t\\t\\t\\tif (smallerCoefficients.length > largerCoefficients.length) {\\n\\t\\t\\t\\t\\t\\t\\t\\t(_a = [largerCoefficients, smallerCoefficients]),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(smallerCoefficients = _a[0]),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(largerCoefficients = _a[1]);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar sumDiff = new Uint8ClampedArray(largerCoefficients.length);\\n\\t\\t\\t\\t\\t\\t\\tvar lengthDiff = largerCoefficients.length - smallerCoefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < lengthDiff; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsumDiff[i] = largerCoefficients[i];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = lengthDiff; i < largerCoefficients.length; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsumDiff[i] = GenericGF_1.addOrSubtractGF(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsmallerCoefficients[i - lengthDiff],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlargerCoefficients[i]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn new GenericGFPoly(this.field, sumDiff);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.multiply = function (scalar) {\\n\\t\\t\\t\\t\\t\\t\\tif (scalar === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.field.zero;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (scalar === 1) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar size = this.coefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tvar product = new Uint8ClampedArray(size);\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < size; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tproduct[i] = this.field.multiply(this.coefficients[i], scalar);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn new GenericGFPoly(this.field, product);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.multiplyPoly = function (other) {\\n\\t\\t\\t\\t\\t\\t\\tif (this.isZero() || other.isZero()) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.field.zero;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar aCoefficients = this.coefficients;\\n\\t\\t\\t\\t\\t\\t\\tvar aLength = aCoefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tvar bCoefficients = other.coefficients;\\n\\t\\t\\t\\t\\t\\t\\tvar bLength = bCoefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tvar product = new Uint8ClampedArray(aLength + bLength - 1);\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < aLength; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar aCoeff = aCoefficients[i];\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var j = 0; j < bLength; j++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tproduct[i + j] = GenericGF_1.addOrSubtractGF(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tproduct[i + j],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.field.multiply(aCoeff, bCoefficients[j])\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn new GenericGFPoly(this.field, product);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.multiplyByMonomial = function (degree, coefficient) {\\n\\t\\t\\t\\t\\t\\t\\tif (degree < 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid degree less than 0');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (coefficient === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.field.zero;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar size = this.coefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tvar product = new Uint8ClampedArray(size + degree);\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < size; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tproduct[i] = this.field.multiply(this.coefficients[i], coefficient);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn new GenericGFPoly(this.field, product);\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tGenericGFPoly.prototype.evaluateAt = function (a) {\\n\\t\\t\\t\\t\\t\\t\\tvar result = 0;\\n\\t\\t\\t\\t\\t\\t\\tif (a === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Just return the x^0 coefficient\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.getCoefficient(0);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar size = this.coefficients.length;\\n\\t\\t\\t\\t\\t\\t\\tif (a === 1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Just the sum of the coefficients\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients.forEach(function (coefficient) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult = GenericGF_1.addOrSubtractGF(result, coefficient);\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tresult = this.coefficients[0];\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 1; i < size; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresult = GenericGF_1.addOrSubtractGF(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.field.multiply(a, result),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.coefficients[i]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treturn GenericGFPoly;\\n\\t\\t\\t\\t\\t})();\\n\\t\\t\\t\\t\\texports.default = GenericGFPoly;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 3 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar binarizer_1 = __webpack_require__(4);\\n\\t\\t\\t\\t\\tvar decoder_1 = __webpack_require__(5);\\n\\t\\t\\t\\t\\tvar extractor_1 = __webpack_require__(11);\\n\\t\\t\\t\\t\\tvar locator_1 = __webpack_require__(12);\\n\\t\\t\\t\\t\\tfunction scan(matrix) {\\n\\t\\t\\t\\t\\t\\tvar locations = locator_1.locate(matrix);\\n\\t\\t\\t\\t\\t\\tif (!locations) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfor (var _i = 0, locations_1 = locations; _i < locations_1.length; _i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar location_1 = locations_1[_i];\\n\\t\\t\\t\\t\\t\\t\\tvar extracted = extractor_1.extract(matrix, location_1);\\n\\t\\t\\t\\t\\t\\t\\tvar decoded = decoder_1.decode(extracted.matrix);\\n\\t\\t\\t\\t\\t\\t\\tif (decoded) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbinaryData: decoded.bytes,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata: decoded.text,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tchunks: decoded.chunks,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tversion: decoded.version,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttopRightCorner: extracted.mappingFunction(location_1.dimension, 0),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttopLeftCorner: extracted.mappingFunction(0, 0),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbottomRightCorner: extracted.mappingFunction(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlocation_1.dimension,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlocation_1.dimension\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbottomLeftCorner: extracted.mappingFunction(0, location_1.dimension),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttopRightFinderPattern: location_1.topRight,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttopLeftFinderPattern: location_1.topLeft,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbottomLeftFinderPattern: location_1.bottomLeft,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbottomRightAlignmentPattern: location_1.alignmentPattern\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tvar defaultOptions = {\\n\\t\\t\\t\\t\\t\\tinversionAttempts: 'attemptBoth'\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tfunction jsQR(data, width, height, providedOptions) {\\n\\t\\t\\t\\t\\t\\tif (providedOptions === void 0) {\\n\\t\\t\\t\\t\\t\\t\\tprovidedOptions = {};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar options = defaultOptions;\\n\\t\\t\\t\\t\\t\\tObject.keys(options || {}).forEach(function (opt) {\\n\\t\\t\\t\\t\\t\\t\\toptions[opt] = providedOptions[opt] || options[opt];\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\tvar shouldInvert =\\n\\t\\t\\t\\t\\t\\t\\toptions.inversionAttempts === 'attemptBoth' ||\\n\\t\\t\\t\\t\\t\\t\\toptions.inversionAttempts === 'invertFirst';\\n\\t\\t\\t\\t\\t\\tvar tryInvertedFirst =\\n\\t\\t\\t\\t\\t\\t\\toptions.inversionAttempts === 'onlyInvert' ||\\n\\t\\t\\t\\t\\t\\t\\toptions.inversionAttempts === 'invertFirst';\\n\\t\\t\\t\\t\\t\\tvar _a = binarizer_1.binarize(data, width, height, shouldInvert),\\n\\t\\t\\t\\t\\t\\t\\tbinarized = _a.binarized,\\n\\t\\t\\t\\t\\t\\t\\tinverted = _a.inverted;\\n\\t\\t\\t\\t\\t\\tvar result = scan(tryInvertedFirst ? inverted : binarized);\\n\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t!result &&\\n\\t\\t\\t\\t\\t\\t\\t(options.inversionAttempts === 'attemptBoth' ||\\n\\t\\t\\t\\t\\t\\t\\t\\toptions.inversionAttempts === 'invertFirst')\\n\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\tresult = scan(tryInvertedFirst ? binarized : inverted);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tjsQR.default = jsQR;\\n\\t\\t\\t\\t\\texports.default = jsQR;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 4 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar BitMatrix_1 = __webpack_require__(0);\\n\\t\\t\\t\\t\\tvar REGION_SIZE = 8;\\n\\t\\t\\t\\t\\tvar MIN_DYNAMIC_RANGE = 24;\\n\\t\\t\\t\\t\\tfunction numBetween(value, min, max) {\\n\\t\\t\\t\\t\\t\\treturn value < min ? min : value > max ? max : value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Like BitMatrix but accepts arbitry Uint8 values\\n\\t\\t\\t\\t\\tvar Matrix = /** @class */ (function () {\\n\\t\\t\\t\\t\\t\\tfunction Matrix(width, height) {\\n\\t\\t\\t\\t\\t\\t\\tthis.width = width;\\n\\t\\t\\t\\t\\t\\t\\tthis.data = new Uint8ClampedArray(width * height);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tMatrix.prototype.get = function (x, y) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.data[y * this.width + x];\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tMatrix.prototype.set = function (x, y, value) {\\n\\t\\t\\t\\t\\t\\t\\tthis.data[y * this.width + x] = value;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treturn Matrix;\\n\\t\\t\\t\\t\\t})();\\n\\t\\t\\t\\t\\tfunction binarize(data, width, height, returnInverted) {\\n\\t\\t\\t\\t\\t\\tif (data.length !== width * height * 4) {\\n\\t\\t\\t\\t\\t\\t\\tthrow new Error('Malformed data passed to binarizer.');\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Convert image to greyscale\\n\\t\\t\\t\\t\\t\\tvar greyscalePixels = new Matrix(width, height);\\n\\t\\t\\t\\t\\t\\tfor (var x = 0; x < width; x++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var y = 0; y < height; y++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar r = data[(y * width + x) * 4 + 0];\\n\\t\\t\\t\\t\\t\\t\\t\\tvar g = data[(y * width + x) * 4 + 1];\\n\\t\\t\\t\\t\\t\\t\\t\\tvar b = data[(y * width + x) * 4 + 2];\\n\\t\\t\\t\\t\\t\\t\\t\\tgreyscalePixels.set(x, y, 0.2126 * r + 0.7152 * g + 0.0722 * b);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar horizontalRegionCount = Math.ceil(width / REGION_SIZE);\\n\\t\\t\\t\\t\\t\\tvar verticalRegionCount = Math.ceil(height / REGION_SIZE);\\n\\t\\t\\t\\t\\t\\tvar blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount);\\n\\t\\t\\t\\t\\t\\tfor (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (\\n\\t\\t\\t\\t\\t\\t\\t\\tvar hortizontalRegion = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\thortizontalRegion < horizontalRegionCount;\\n\\t\\t\\t\\t\\t\\t\\t\\thortizontalRegion++\\n\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar sum = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar min = Infinity;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar max = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var y = 0; y < REGION_SIZE; y++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor (var x = 0; x < REGION_SIZE; x++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar pixelLumosity = greyscalePixels.get(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thortizontalRegion * REGION_SIZE + x,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tverticalRegion * REGION_SIZE + y\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum += pixelLumosity;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmin = Math.min(min, pixelLumosity);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmax = Math.max(max, pixelLumosity);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar average = sum / Math.pow(REGION_SIZE, 2);\\n\\t\\t\\t\\t\\t\\t\\t\\tif (max - min <= MIN_DYNAMIC_RANGE) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// If variation within the block is low, assume this is a block with only light or only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// dark pixels. In that case we do not want to use the average, as it would divide this\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// low contrast area into black and white pixels, essentially creating data out of noise.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t//\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default the blackpoint for these blocks to be half the min - effectively white them out\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taverage = min / 2;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (verticalRegion > 0 && hortizontalRegion > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Correct the \\\"white background\\\" assumption for blocks that have neighbors by comparing\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// the pixels in this block to the previously calculated black points. This is based on\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// the fact that dark barcode symbology is always surrounded by some amount of light\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// background for which reasonable black point estimates were made. The bp estimated at\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// the boundaries is used for the interior.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// The (min < bp) is arbitrary but works better than other heuristics that were tried.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar averageNeighborBlackPoint =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(blackPoints.get(hortizontalRegion, verticalRegion - 1) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t2 * blackPoints.get(hortizontalRegion - 1, verticalRegion) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tblackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) /\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t4;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (min < averageNeighborBlackPoint) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverage = averageNeighborBlackPoint;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tblackPoints.set(hortizontalRegion, verticalRegion, average);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar binarized = BitMatrix_1.BitMatrix.createEmpty(width, height);\\n\\t\\t\\t\\t\\t\\tvar inverted = null;\\n\\t\\t\\t\\t\\t\\tif (returnInverted) {\\n\\t\\t\\t\\t\\t\\t\\tinverted = BitMatrix_1.BitMatrix.createEmpty(width, height);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfor (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (\\n\\t\\t\\t\\t\\t\\t\\t\\tvar hortizontalRegion = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\thortizontalRegion < horizontalRegionCount;\\n\\t\\t\\t\\t\\t\\t\\t\\thortizontalRegion++\\n\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\\n\\t\\t\\t\\t\\t\\t\\t\\tvar top_1 = numBetween(verticalRegion, 2, verticalRegionCount - 3);\\n\\t\\t\\t\\t\\t\\t\\t\\tvar sum = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var xRegion = -2; xRegion <= 2; xRegion++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor (var yRegion = -2; yRegion <= 2; yRegion++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum += blackPoints.get(left + xRegion, top_1 + yRegion);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar threshold = sum / 25;\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor (var yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar x = hortizontalRegion * REGION_SIZE + xRegion;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar y = verticalRegion * REGION_SIZE + yRegion;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar lum = greyscalePixels.get(x, y);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbinarized.set(x, y, lum <= threshold);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (returnInverted) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tinverted.set(x, y, !(lum <= threshold));\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (returnInverted) {\\n\\t\\t\\t\\t\\t\\t\\treturn { binarized: binarized, inverted: inverted };\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { binarized: binarized };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.binarize = binarize;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 5 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar BitMatrix_1 = __webpack_require__(0);\\n\\t\\t\\t\\t\\tvar decodeData_1 = __webpack_require__(6);\\n\\t\\t\\t\\t\\tvar reedsolomon_1 = __webpack_require__(9);\\n\\t\\t\\t\\t\\tvar version_1 = __webpack_require__(10);\\n\\t\\t\\t\\t\\t// tslint:disable:no-bitwise\\n\\t\\t\\t\\t\\tfunction numBitsDiffering(x, y) {\\n\\t\\t\\t\\t\\t\\tvar z = x ^ y;\\n\\t\\t\\t\\t\\t\\tvar bitCount = 0;\\n\\t\\t\\t\\t\\t\\twhile (z) {\\n\\t\\t\\t\\t\\t\\t\\tbitCount++;\\n\\t\\t\\t\\t\\t\\t\\tz &= z - 1;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn bitCount;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction pushBit(bit, byte) {\\n\\t\\t\\t\\t\\t\\treturn (byte << 1) | bit;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// tslint:enable:no-bitwise\\n\\t\\t\\t\\t\\tvar FORMAT_INFO_TABLE = [\\n\\t\\t\\t\\t\\t\\t{ bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x5e7c, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x5b4b, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x45f9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x40ce, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x4f97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x4aa0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x77c4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x72f3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x7daa, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x789d, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x662f, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x6c41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x13be, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x1ce7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x19d0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x0d0c, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x083b, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x355f, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x3f31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x3a06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x24b4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x2eda, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\\n\\t\\t\\t\\t\\t\\t{ bits: 0x2bed, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } }\\n\\t\\t\\t\\t\\t];\\n\\t\\t\\t\\t\\tvar DATA_MASKS = [\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn (p.y + p.x) % 2 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn p.y % 2 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn p.x % 3 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn (p.y + p.x) % 3 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn (((p.y * p.x) % 2) + ((p.y * p.x) % 3)) % 2 === 0;\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tfunction (p) {\\n\\t\\t\\t\\t\\t\\t\\treturn (((p.y + p.x) % 2) + ((p.y * p.x) % 3)) % 2 === 0;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t];\\n\\t\\t\\t\\t\\tfunction buildFunctionPatternMask(version) {\\n\\t\\t\\t\\t\\t\\tvar dimension = 17 + 4 * version.versionNumber;\\n\\t\\t\\t\\t\\t\\tvar matrix = BitMatrix_1.BitMatrix.createEmpty(dimension, dimension);\\n\\t\\t\\t\\t\\t\\tmatrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\\n\\t\\t\\t\\t\\t\\tmatrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\\n\\t\\t\\t\\t\\t\\tmatrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\\n\\t\\t\\t\\t\\t\\t// Alignment patterns\\n\\t\\t\\t\\t\\t\\tfor (var _i = 0, _a = version.alignmentPatternCenters; _i < _a.length; _i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar x = _a[_i];\\n\\t\\t\\t\\t\\t\\t\\tfor (var _b = 0, _c = version.alignmentPatternCenters; _b < _c.length; _b++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar y = _c[_b];\\n\\t\\t\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t!(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(x === 6 && y === 6) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(x === 6 && y === dimension - 7) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(x === dimension - 7 && y === 6)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmatrix.setRegion(x - 2, y - 2, 5, 5, true);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tmatrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\\n\\t\\t\\t\\t\\t\\tmatrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\\n\\t\\t\\t\\t\\t\\tif (version.versionNumber > 6) {\\n\\t\\t\\t\\t\\t\\t\\tmatrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\\n\\t\\t\\t\\t\\t\\t\\tmatrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn matrix;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction readCodewords(matrix, version, formatInfo) {\\n\\t\\t\\t\\t\\t\\tvar dataMask = DATA_MASKS[formatInfo.dataMask];\\n\\t\\t\\t\\t\\t\\tvar dimension = matrix.height;\\n\\t\\t\\t\\t\\t\\tvar functionPatternMask = buildFunctionPatternMask(version);\\n\\t\\t\\t\\t\\t\\tvar codewords = [];\\n\\t\\t\\t\\t\\t\\tvar currentByte = 0;\\n\\t\\t\\t\\t\\t\\tvar bitsRead = 0;\\n\\t\\t\\t\\t\\t\\t// Read columns in pairs, from right to left\\n\\t\\t\\t\\t\\t\\tvar readingUp = true;\\n\\t\\t\\t\\t\\t\\tfor (var columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\\n\\t\\t\\t\\t\\t\\t\\tif (columnIndex === 6) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Skip whole column with vertical alignment pattern;\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumnIndex--;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < dimension; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar y = readingUp ? dimension - 1 - i : i;\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var columnOffset = 0; columnOffset < 2; columnOffset++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar x = columnIndex - columnOffset;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!functionPatternMask.get(x, y)) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbitsRead++;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar bit = matrix.get(x, y);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (dataMask({ y: y, x: x })) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbit = !bit;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrentByte = pushBit(bit, currentByte);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (bitsRead === 8) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Whole bytes\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcodewords.push(currentByte);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbitsRead = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrentByte = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treadingUp = !readingUp;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn codewords;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction readVersion(matrix) {\\n\\t\\t\\t\\t\\t\\tvar dimension = matrix.height;\\n\\t\\t\\t\\t\\t\\tvar provisionalVersion = Math.floor((dimension - 17) / 4);\\n\\t\\t\\t\\t\\t\\tif (provisionalVersion <= 6) {\\n\\t\\t\\t\\t\\t\\t\\t// 6 and under dont have version info in the QR code\\n\\t\\t\\t\\t\\t\\t\\treturn version_1.VERSIONS[provisionalVersion - 1];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar topRightVersionBits = 0;\\n\\t\\t\\t\\t\\t\\tfor (var y = 5; y >= 0; y--) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var x = dimension - 9; x >= dimension - 11; x--) {\\n\\t\\t\\t\\t\\t\\t\\t\\ttopRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar bottomLeftVersionBits = 0;\\n\\t\\t\\t\\t\\t\\tfor (var x = 5; x >= 0; x--) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var y = dimension - 9; y >= dimension - 11; y--) {\\n\\t\\t\\t\\t\\t\\t\\t\\tbottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar bestDifference = Infinity;\\n\\t\\t\\t\\t\\t\\tvar bestVersion;\\n\\t\\t\\t\\t\\t\\tfor (var _i = 0, VERSIONS_1 = version_1.VERSIONS; _i < VERSIONS_1.length; _i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar version = VERSIONS_1[_i];\\n\\t\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t\\tversion.infoBits === topRightVersionBits ||\\n\\t\\t\\t\\t\\t\\t\\t\\tversion.infoBits === bottomLeftVersionBits\\n\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn version;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar difference = numBitsDiffering(topRightVersionBits, version.infoBits);\\n\\t\\t\\t\\t\\t\\t\\tif (difference < bestDifference) {\\n\\t\\t\\t\\t\\t\\t\\t\\tbestVersion = version;\\n\\t\\t\\t\\t\\t\\t\\t\\tbestDifference = difference;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tdifference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\\n\\t\\t\\t\\t\\t\\t\\tif (difference < bestDifference) {\\n\\t\\t\\t\\t\\t\\t\\t\\tbestVersion = version;\\n\\t\\t\\t\\t\\t\\t\\t\\tbestDifference = difference;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// We can tolerate up to 3 bits of error since no two version info codewords will\\n\\t\\t\\t\\t\\t\\t// differ in less than 8 bits.\\n\\t\\t\\t\\t\\t\\tif (bestDifference <= 3) {\\n\\t\\t\\t\\t\\t\\t\\treturn bestVersion;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction readFormatInformation(matrix) {\\n\\t\\t\\t\\t\\t\\tvar topLeftFormatInfoBits = 0;\\n\\t\\t\\t\\t\\t\\tfor (var x = 0; x <= 8; x++) {\\n\\t\\t\\t\\t\\t\\t\\tif (x !== 6) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Skip timing pattern bit\\n\\t\\t\\t\\t\\t\\t\\t\\ttopLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfor (var y = 7; y >= 0; y--) {\\n\\t\\t\\t\\t\\t\\t\\tif (y !== 6) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Skip timing pattern bit\\n\\t\\t\\t\\t\\t\\t\\t\\ttopLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar dimension = matrix.height;\\n\\t\\t\\t\\t\\t\\tvar topRightBottomRightFormatInfoBits = 0;\\n\\t\\t\\t\\t\\t\\tfor (var y = dimension - 1; y >= dimension - 7; y--) {\\n\\t\\t\\t\\t\\t\\t\\t// bottom left\\n\\t\\t\\t\\t\\t\\t\\ttopRightBottomRightFormatInfoBits = pushBit(\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix.get(8, y),\\n\\t\\t\\t\\t\\t\\t\\t\\ttopRightBottomRightFormatInfoBits\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfor (var x = dimension - 8; x < dimension; x++) {\\n\\t\\t\\t\\t\\t\\t\\t// top right\\n\\t\\t\\t\\t\\t\\t\\ttopRightBottomRightFormatInfoBits = pushBit(\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix.get(x, 8),\\n\\t\\t\\t\\t\\t\\t\\t\\ttopRightBottomRightFormatInfoBits\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar bestDifference = Infinity;\\n\\t\\t\\t\\t\\t\\tvar bestFormatInfo = null;\\n\\t\\t\\t\\t\\t\\tfor (\\n\\t\\t\\t\\t\\t\\t\\tvar _i = 0, FORMAT_INFO_TABLE_1 = FORMAT_INFO_TABLE;\\n\\t\\t\\t\\t\\t\\t\\t_i < FORMAT_INFO_TABLE_1.length;\\n\\t\\t\\t\\t\\t\\t\\t_i++\\n\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\tvar _a = FORMAT_INFO_TABLE_1[_i],\\n\\t\\t\\t\\t\\t\\t\\t\\tbits = _a.bits,\\n\\t\\t\\t\\t\\t\\t\\t\\tformatInfo = _a.formatInfo;\\n\\t\\t\\t\\t\\t\\t\\tif (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn formatInfo;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar difference = numBitsDiffering(topLeftFormatInfoBits, bits);\\n\\t\\t\\t\\t\\t\\t\\tif (difference < bestDifference) {\\n\\t\\t\\t\\t\\t\\t\\t\\tbestFormatInfo = formatInfo;\\n\\t\\t\\t\\t\\t\\t\\t\\tbestDifference = difference;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// also try the other option\\n\\t\\t\\t\\t\\t\\t\\t\\tdifference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\\n\\t\\t\\t\\t\\t\\t\\t\\tif (difference < bestDifference) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbestFormatInfo = formatInfo;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbestDifference = difference;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\\n\\t\\t\\t\\t\\t\\tif (bestDifference <= 3) {\\n\\t\\t\\t\\t\\t\\t\\treturn bestFormatInfo;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction getDataBlocks(codewords, version, ecLevel) {\\n\\t\\t\\t\\t\\t\\tvar ecInfo = version.errorCorrectionLevels[ecLevel];\\n\\t\\t\\t\\t\\t\\tvar dataBlocks = [];\\n\\t\\t\\t\\t\\t\\tvar totalCodewords = 0;\\n\\t\\t\\t\\t\\t\\tecInfo.ecBlocks.forEach(function (block) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < block.numBlocks; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\\n\\t\\t\\t\\t\\t\\t\\t\\ttotalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t// In some cases the QR code will be malformed enough that we pull off more or less than we should.\\n\\t\\t\\t\\t\\t\\t// If we pull off less there's nothing we can do.\\n\\t\\t\\t\\t\\t\\t// If we pull off more we can safely truncate\\n\\t\\t\\t\\t\\t\\tif (codewords.length < totalCodewords) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tcodewords = codewords.slice(0, totalCodewords);\\n\\t\\t\\t\\t\\t\\tvar shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\\n\\t\\t\\t\\t\\t\\t// Pull codewords to fill the blocks up to the minimum size\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < shortBlockSize; i++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar dataBlock = dataBlocks_1[_i];\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlock.codewords.push(codewords.shift());\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// If there are any large blocks, pull codewords to fill the last element of those\\n\\t\\t\\t\\t\\t\\tif (ecInfo.ecBlocks.length > 1) {\\n\\t\\t\\t\\t\\t\\t\\tvar smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\\n\\t\\t\\t\\t\\t\\t\\tvar largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < largeBlockCount; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Add the rest of the codewords to the blocks. These are the error correction codewords.\\n\\t\\t\\t\\t\\t\\twhile (codewords.length > 0) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var _a = 0, dataBlocks_2 = dataBlocks; _a < dataBlocks_2.length; _a++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar dataBlock = dataBlocks_2[_a];\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlock.codewords.push(codewords.shift());\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn dataBlocks;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decodeMatrix(matrix) {\\n\\t\\t\\t\\t\\t\\tvar version = readVersion(matrix);\\n\\t\\t\\t\\t\\t\\tif (!version) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar formatInfo = readFormatInformation(matrix);\\n\\t\\t\\t\\t\\t\\tif (!formatInfo) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar codewords = readCodewords(matrix, version, formatInfo);\\n\\t\\t\\t\\t\\t\\tvar dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\\n\\t\\t\\t\\t\\t\\tif (!dataBlocks) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Count total number of data bytes\\n\\t\\t\\t\\t\\t\\tvar totalBytes = dataBlocks.reduce(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\treturn a + b.numDataCodewords;\\n\\t\\t\\t\\t\\t\\t}, 0);\\n\\t\\t\\t\\t\\t\\tvar resultBytes = new Uint8ClampedArray(totalBytes);\\n\\t\\t\\t\\t\\t\\tvar resultIndex = 0;\\n\\t\\t\\t\\t\\t\\tfor (var _i = 0, dataBlocks_3 = dataBlocks; _i < dataBlocks_3.length; _i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar dataBlock = dataBlocks_3[_i];\\n\\t\\t\\t\\t\\t\\t\\tvar correctedBytes = reedsolomon_1.decode(\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlock.codewords,\\n\\t\\t\\t\\t\\t\\t\\t\\tdataBlock.codewords.length - dataBlock.numDataCodewords\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tif (!correctedBytes) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfor (var i = 0; i < dataBlock.numDataCodewords; i++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresultBytes[resultIndex++] = correctedBytes[i];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\treturn decodeData_1.decode(resultBytes, version.versionNumber);\\n\\t\\t\\t\\t\\t\\t} catch (_a) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decode(matrix) {\\n\\t\\t\\t\\t\\t\\tif (matrix == null) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar result = decodeMatrix(matrix);\\n\\t\\t\\t\\t\\t\\tif (result) {\\n\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\\n\\t\\t\\t\\t\\t\\tfor (var x = 0; x < matrix.width; x++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var y = x + 1; y < matrix.height; y++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (matrix.get(x, y) !== matrix.get(y, x)) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmatrix.set(x, y, !matrix.get(x, y));\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmatrix.set(y, x, !matrix.get(y, x));\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn decodeMatrix(matrix);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.decode = decode;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 6 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\t// tslint:disable:no-bitwise\\n\\t\\t\\t\\t\\tvar BitStream_1 = __webpack_require__(7);\\n\\t\\t\\t\\t\\tvar shiftJISTable_1 = __webpack_require__(8);\\n\\t\\t\\t\\t\\tvar Mode;\\n\\t\\t\\t\\t\\t(function (Mode) {\\n\\t\\t\\t\\t\\t\\tMode['Numeric'] = 'numeric';\\n\\t\\t\\t\\t\\t\\tMode['Alphanumeric'] = 'alphanumeric';\\n\\t\\t\\t\\t\\t\\tMode['Byte'] = 'byte';\\n\\t\\t\\t\\t\\t\\tMode['Kanji'] = 'kanji';\\n\\t\\t\\t\\t\\t\\tMode['ECI'] = 'eci';\\n\\t\\t\\t\\t\\t})((Mode = exports.Mode || (exports.Mode = {})));\\n\\t\\t\\t\\t\\tvar ModeByte;\\n\\t\\t\\t\\t\\t(function (ModeByte) {\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['Terminator'] = 0)] = 'Terminator';\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['Numeric'] = 1)] = 'Numeric';\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['Alphanumeric'] = 2)] = 'Alphanumeric';\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['Byte'] = 4)] = 'Byte';\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['Kanji'] = 8)] = 'Kanji';\\n\\t\\t\\t\\t\\t\\tModeByte[(ModeByte['ECI'] = 7)] = 'ECI';\\n\\t\\t\\t\\t\\t\\t// StructuredAppend = 0x3,\\n\\t\\t\\t\\t\\t\\t// FNC1FirstPosition = 0x5,\\n\\t\\t\\t\\t\\t\\t// FNC1SecondPosition = 0x9,\\n\\t\\t\\t\\t\\t})(ModeByte || (ModeByte = {}));\\n\\t\\t\\t\\t\\tfunction decodeNumeric(stream, size) {\\n\\t\\t\\t\\t\\t\\tvar bytes = [];\\n\\t\\t\\t\\t\\t\\tvar text = '';\\n\\t\\t\\t\\t\\t\\tvar characterCountSize = [10, 12, 14][size];\\n\\t\\t\\t\\t\\t\\tvar length = stream.readBits(characterCountSize);\\n\\t\\t\\t\\t\\t\\t// Read digits in groups of 3\\n\\t\\t\\t\\t\\t\\twhile (length >= 3) {\\n\\t\\t\\t\\t\\t\\t\\tvar num = stream.readBits(10);\\n\\t\\t\\t\\t\\t\\t\\tif (num >= 1000) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid numeric value above 999');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar a = Math.floor(num / 100);\\n\\t\\t\\t\\t\\t\\t\\tvar b = Math.floor(num / 10) % 10;\\n\\t\\t\\t\\t\\t\\t\\tvar c = num % 10;\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(48 + a, 48 + b, 48 + c);\\n\\t\\t\\t\\t\\t\\t\\ttext += a.toString() + b.toString() + c.toString();\\n\\t\\t\\t\\t\\t\\t\\tlength -= 3;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// If the number of digits aren't a multiple of 3, the remaining digits are special cased.\\n\\t\\t\\t\\t\\t\\tif (length === 2) {\\n\\t\\t\\t\\t\\t\\t\\tvar num = stream.readBits(7);\\n\\t\\t\\t\\t\\t\\t\\tif (num >= 100) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid numeric value above 99');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar a = Math.floor(num / 10);\\n\\t\\t\\t\\t\\t\\t\\tvar b = num % 10;\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(48 + a, 48 + b);\\n\\t\\t\\t\\t\\t\\t\\ttext += a.toString() + b.toString();\\n\\t\\t\\t\\t\\t\\t} else if (length === 1) {\\n\\t\\t\\t\\t\\t\\t\\tvar num = stream.readBits(4);\\n\\t\\t\\t\\t\\t\\t\\tif (num >= 10) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid numeric value above 9');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(48 + num);\\n\\t\\t\\t\\t\\t\\t\\ttext += num.toString();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { bytes: bytes, text: text };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tvar AlphanumericCharacterCodes = [\\n\\t\\t\\t\\t\\t\\t'0',\\n\\t\\t\\t\\t\\t\\t'1',\\n\\t\\t\\t\\t\\t\\t'2',\\n\\t\\t\\t\\t\\t\\t'3',\\n\\t\\t\\t\\t\\t\\t'4',\\n\\t\\t\\t\\t\\t\\t'5',\\n\\t\\t\\t\\t\\t\\t'6',\\n\\t\\t\\t\\t\\t\\t'7',\\n\\t\\t\\t\\t\\t\\t'8',\\n\\t\\t\\t\\t\\t\\t'9',\\n\\t\\t\\t\\t\\t\\t'A',\\n\\t\\t\\t\\t\\t\\t'B',\\n\\t\\t\\t\\t\\t\\t'C',\\n\\t\\t\\t\\t\\t\\t'D',\\n\\t\\t\\t\\t\\t\\t'E',\\n\\t\\t\\t\\t\\t\\t'F',\\n\\t\\t\\t\\t\\t\\t'G',\\n\\t\\t\\t\\t\\t\\t'H',\\n\\t\\t\\t\\t\\t\\t'I',\\n\\t\\t\\t\\t\\t\\t'J',\\n\\t\\t\\t\\t\\t\\t'K',\\n\\t\\t\\t\\t\\t\\t'L',\\n\\t\\t\\t\\t\\t\\t'M',\\n\\t\\t\\t\\t\\t\\t'N',\\n\\t\\t\\t\\t\\t\\t'O',\\n\\t\\t\\t\\t\\t\\t'P',\\n\\t\\t\\t\\t\\t\\t'Q',\\n\\t\\t\\t\\t\\t\\t'R',\\n\\t\\t\\t\\t\\t\\t'S',\\n\\t\\t\\t\\t\\t\\t'T',\\n\\t\\t\\t\\t\\t\\t'U',\\n\\t\\t\\t\\t\\t\\t'V',\\n\\t\\t\\t\\t\\t\\t'W',\\n\\t\\t\\t\\t\\t\\t'X',\\n\\t\\t\\t\\t\\t\\t'Y',\\n\\t\\t\\t\\t\\t\\t'Z',\\n\\t\\t\\t\\t\\t\\t' ',\\n\\t\\t\\t\\t\\t\\t'$',\\n\\t\\t\\t\\t\\t\\t'%',\\n\\t\\t\\t\\t\\t\\t'*',\\n\\t\\t\\t\\t\\t\\t'+',\\n\\t\\t\\t\\t\\t\\t'-',\\n\\t\\t\\t\\t\\t\\t'.',\\n\\t\\t\\t\\t\\t\\t'/',\\n\\t\\t\\t\\t\\t\\t':'\\n\\t\\t\\t\\t\\t];\\n\\t\\t\\t\\t\\tfunction decodeAlphanumeric(stream, size) {\\n\\t\\t\\t\\t\\t\\tvar bytes = [];\\n\\t\\t\\t\\t\\t\\tvar text = '';\\n\\t\\t\\t\\t\\t\\tvar characterCountSize = [9, 11, 13][size];\\n\\t\\t\\t\\t\\t\\tvar length = stream.readBits(characterCountSize);\\n\\t\\t\\t\\t\\t\\twhile (length >= 2) {\\n\\t\\t\\t\\t\\t\\t\\tvar v = stream.readBits(11);\\n\\t\\t\\t\\t\\t\\t\\tvar a = Math.floor(v / 45);\\n\\t\\t\\t\\t\\t\\t\\tvar b = v % 45;\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(\\n\\t\\t\\t\\t\\t\\t\\t\\tAlphanumericCharacterCodes[a].charCodeAt(0),\\n\\t\\t\\t\\t\\t\\t\\t\\tAlphanumericCharacterCodes[b].charCodeAt(0)\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\ttext += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\\n\\t\\t\\t\\t\\t\\t\\tlength -= 2;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (length === 1) {\\n\\t\\t\\t\\t\\t\\t\\tvar a = stream.readBits(6);\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\\n\\t\\t\\t\\t\\t\\t\\ttext += AlphanumericCharacterCodes[a];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { bytes: bytes, text: text };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decodeByte(stream, size) {\\n\\t\\t\\t\\t\\t\\tvar bytes = [];\\n\\t\\t\\t\\t\\t\\tvar text = '';\\n\\t\\t\\t\\t\\t\\tvar characterCountSize = [8, 16, 16][size];\\n\\t\\t\\t\\t\\t\\tvar length = stream.readBits(characterCountSize);\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < length; i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar b = stream.readBits(8);\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(b);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\ttext += decodeURIComponent(\\n\\t\\t\\t\\t\\t\\t\\t\\tbytes\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.map(function (b) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn '%' + ('0' + b.toString(16)).substr(-2);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.join('')\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t} catch (_a) {\\n\\t\\t\\t\\t\\t\\t\\t// failed to decode\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { bytes: bytes, text: text };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decodeKanji(stream, size) {\\n\\t\\t\\t\\t\\t\\tvar bytes = [];\\n\\t\\t\\t\\t\\t\\tvar text = '';\\n\\t\\t\\t\\t\\t\\tvar characterCountSize = [8, 10, 12][size];\\n\\t\\t\\t\\t\\t\\tvar length = stream.readBits(characterCountSize);\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < length; i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar k = stream.readBits(13);\\n\\t\\t\\t\\t\\t\\t\\tvar c = (Math.floor(k / 0xc0) << 8) | k % 0xc0;\\n\\t\\t\\t\\t\\t\\t\\tif (c < 0x1f00) {\\n\\t\\t\\t\\t\\t\\t\\t\\tc += 0x8140;\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tc += 0xc140;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tbytes.push(c >> 8, c & 0xff);\\n\\t\\t\\t\\t\\t\\t\\ttext += String.fromCharCode(shiftJISTable_1.shiftJISTable[c]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { bytes: bytes, text: text };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decode(data, version) {\\n\\t\\t\\t\\t\\t\\tvar _a, _b, _c, _d;\\n\\t\\t\\t\\t\\t\\tvar stream = new BitStream_1.BitStream(data);\\n\\t\\t\\t\\t\\t\\t// There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\\n\\t\\t\\t\\t\\t\\tvar size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\\n\\t\\t\\t\\t\\t\\tvar result = {\\n\\t\\t\\t\\t\\t\\t\\ttext: '',\\n\\t\\t\\t\\t\\t\\t\\tbytes: [],\\n\\t\\t\\t\\t\\t\\t\\tchunks: [],\\n\\t\\t\\t\\t\\t\\t\\tversion: version\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\twhile (stream.available() >= 4) {\\n\\t\\t\\t\\t\\t\\t\\tvar mode = stream.readBits(4);\\n\\t\\t\\t\\t\\t\\t\\tif (mode === ModeByte.Terminator) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t\\t} else if (mode === ModeByte.ECI) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (stream.readBits(1) === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.ECI,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tassignmentNumber: stream.readBits(7)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if (stream.readBits(1) === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.ECI,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tassignmentNumber: stream.readBits(14)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if (stream.readBits(1) === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.ECI,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tassignmentNumber: stream.readBits(21)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// ECI data seems corrupted\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.ECI,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tassignmentNumber: -1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else if (mode === ModeByte.Numeric) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar numericResult = decodeNumeric(stream, size);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.text += numericResult.text;\\n\\t\\t\\t\\t\\t\\t\\t\\t(_a = result.bytes).push.apply(_a, numericResult.bytes);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.Numeric,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext: numericResult.text\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t} else if (mode === ModeByte.Alphanumeric) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar alphanumericResult = decodeAlphanumeric(stream, size);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.text += alphanumericResult.text;\\n\\t\\t\\t\\t\\t\\t\\t\\t(_b = result.bytes).push.apply(_b, alphanumericResult.bytes);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.Alphanumeric,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext: alphanumericResult.text\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t} else if (mode === ModeByte.Byte) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar byteResult = decodeByte(stream, size);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.text += byteResult.text;\\n\\t\\t\\t\\t\\t\\t\\t\\t(_c = result.bytes).push.apply(_c, byteResult.bytes);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.Byte,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbytes: byteResult.bytes,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext: byteResult.text\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t} else if (mode === ModeByte.Kanji) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar kanjiResult = decodeKanji(stream, size);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.text += kanjiResult.text;\\n\\t\\t\\t\\t\\t\\t\\t\\t(_d = result.bytes).push.apply(_d, kanjiResult.bytes);\\n\\t\\t\\t\\t\\t\\t\\t\\tresult.chunks.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: Mode.Kanji,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbytes: kanjiResult.bytes,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext: kanjiResult.text\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\\n\\t\\t\\t\\t\\t\\tif (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\\n\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.decode = decode;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 7 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\t// tslint:disable:no-bitwise\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar BitStream = /** @class */ (function () {\\n\\t\\t\\t\\t\\t\\tfunction BitStream(bytes) {\\n\\t\\t\\t\\t\\t\\t\\tthis.byteOffset = 0;\\n\\t\\t\\t\\t\\t\\t\\tthis.bitOffset = 0;\\n\\t\\t\\t\\t\\t\\t\\tthis.bytes = bytes;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tBitStream.prototype.readBits = function (numBits) {\\n\\t\\t\\t\\t\\t\\t\\tif (numBits < 1 || numBits > 32 || numBits > this.available()) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthrow new Error('Cannot read ' + numBits.toString() + ' bits');\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar result = 0;\\n\\t\\t\\t\\t\\t\\t\\t// First, read remainder from current byte\\n\\t\\t\\t\\t\\t\\t\\tif (this.bitOffset > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar bitsLeft = 8 - this.bitOffset;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar toRead = numBits < bitsLeft ? numBits : bitsLeft;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar bitsToNotRead = bitsLeft - toRead;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar mask = (0xff >> (8 - toRead)) << bitsToNotRead;\\n\\t\\t\\t\\t\\t\\t\\t\\tresult = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\\n\\t\\t\\t\\t\\t\\t\\t\\tnumBits -= toRead;\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.bitOffset += toRead;\\n\\t\\t\\t\\t\\t\\t\\t\\tif (this.bitOffset === 8) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.bitOffset = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.byteOffset++;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t// Next read whole bytes\\n\\t\\t\\t\\t\\t\\t\\tif (numBits > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\twhile (numBits >= 8) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult = (result << 8) | (this.bytes[this.byteOffset] & 0xff);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.byteOffset++;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnumBits -= 8;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t// Finally read a partial byte\\n\\t\\t\\t\\t\\t\\t\\t\\tif (numBits > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar bitsToNotRead = 8 - numBits;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar mask = (0xff >> bitsToNotRead) << bitsToNotRead;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tresult =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.bitOffset += numBits;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tBitStream.prototype.available = function () {\\n\\t\\t\\t\\t\\t\\t\\treturn 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treturn BitStream;\\n\\t\\t\\t\\t\\t})();\\n\\t\\t\\t\\t\\texports.BitStream = BitStream;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 8 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\texports.shiftJISTable = {\\n\\t\\t\\t\\t\\t\\t0x20: 0x0020,\\n\\t\\t\\t\\t\\t\\t0x21: 0x0021,\\n\\t\\t\\t\\t\\t\\t0x22: 0x0022,\\n\\t\\t\\t\\t\\t\\t0x23: 0x0023,\\n\\t\\t\\t\\t\\t\\t0x24: 0x0024,\\n\\t\\t\\t\\t\\t\\t0x25: 0x0025,\\n\\t\\t\\t\\t\\t\\t0x26: 0x0026,\\n\\t\\t\\t\\t\\t\\t0x27: 0x0027,\\n\\t\\t\\t\\t\\t\\t0x28: 0x0028,\\n\\t\\t\\t\\t\\t\\t0x29: 0x0029,\\n\\t\\t\\t\\t\\t\\t0x2a: 0x002a,\\n\\t\\t\\t\\t\\t\\t0x2b: 0x002b,\\n\\t\\t\\t\\t\\t\\t0x2c: 0x002c,\\n\\t\\t\\t\\t\\t\\t0x2d: 0x002d,\\n\\t\\t\\t\\t\\t\\t0x2e: 0x002e,\\n\\t\\t\\t\\t\\t\\t0x2f: 0x002f,\\n\\t\\t\\t\\t\\t\\t0x30: 0x0030,\\n\\t\\t\\t\\t\\t\\t0x31: 0x0031,\\n\\t\\t\\t\\t\\t\\t0x32: 0x0032,\\n\\t\\t\\t\\t\\t\\t0x33: 0x0033,\\n\\t\\t\\t\\t\\t\\t0x34: 0x0034,\\n\\t\\t\\t\\t\\t\\t0x35: 0x0035,\\n\\t\\t\\t\\t\\t\\t0x36: 0x0036,\\n\\t\\t\\t\\t\\t\\t0x37: 0x0037,\\n\\t\\t\\t\\t\\t\\t0x38: 0x0038,\\n\\t\\t\\t\\t\\t\\t0x39: 0x0039,\\n\\t\\t\\t\\t\\t\\t0x3a: 0x003a,\\n\\t\\t\\t\\t\\t\\t0x3b: 0x003b,\\n\\t\\t\\t\\t\\t\\t0x3c: 0x003c,\\n\\t\\t\\t\\t\\t\\t0x3d: 0x003d,\\n\\t\\t\\t\\t\\t\\t0x3e: 0x003e,\\n\\t\\t\\t\\t\\t\\t0x3f: 0x003f,\\n\\t\\t\\t\\t\\t\\t0x40: 0x0040,\\n\\t\\t\\t\\t\\t\\t0x41: 0x0041,\\n\\t\\t\\t\\t\\t\\t0x42: 0x0042,\\n\\t\\t\\t\\t\\t\\t0x43: 0x0043,\\n\\t\\t\\t\\t\\t\\t0x44: 0x0044,\\n\\t\\t\\t\\t\\t\\t0x45: 0x0045,\\n\\t\\t\\t\\t\\t\\t0x46: 0x0046,\\n\\t\\t\\t\\t\\t\\t0x47: 0x0047,\\n\\t\\t\\t\\t\\t\\t0x48: 0x0048,\\n\\t\\t\\t\\t\\t\\t0x49: 0x0049,\\n\\t\\t\\t\\t\\t\\t0x4a: 0x004a,\\n\\t\\t\\t\\t\\t\\t0x4b: 0x004b,\\n\\t\\t\\t\\t\\t\\t0x4c: 0x004c,\\n\\t\\t\\t\\t\\t\\t0x4d: 0x004d,\\n\\t\\t\\t\\t\\t\\t0x4e: 0x004e,\\n\\t\\t\\t\\t\\t\\t0x4f: 0x004f,\\n\\t\\t\\t\\t\\t\\t0x50: 0x0050,\\n\\t\\t\\t\\t\\t\\t0x51: 0x0051,\\n\\t\\t\\t\\t\\t\\t0x52: 0x0052,\\n\\t\\t\\t\\t\\t\\t0x53: 0x0053,\\n\\t\\t\\t\\t\\t\\t0x54: 0x0054,\\n\\t\\t\\t\\t\\t\\t0x55: 0x0055,\\n\\t\\t\\t\\t\\t\\t0x56: 0x0056,\\n\\t\\t\\t\\t\\t\\t0x57: 0x0057,\\n\\t\\t\\t\\t\\t\\t0x58: 0x0058,\\n\\t\\t\\t\\t\\t\\t0x59: 0x0059,\\n\\t\\t\\t\\t\\t\\t0x5a: 0x005a,\\n\\t\\t\\t\\t\\t\\t0x5b: 0x005b,\\n\\t\\t\\t\\t\\t\\t0x5c: 0x00a5,\\n\\t\\t\\t\\t\\t\\t0x5d: 0x005d,\\n\\t\\t\\t\\t\\t\\t0x5e: 0x005e,\\n\\t\\t\\t\\t\\t\\t0x5f: 0x005f,\\n\\t\\t\\t\\t\\t\\t0x60: 0x0060,\\n\\t\\t\\t\\t\\t\\t0x61: 0x0061,\\n\\t\\t\\t\\t\\t\\t0x62: 0x0062,\\n\\t\\t\\t\\t\\t\\t0x63: 0x0063,\\n\\t\\t\\t\\t\\t\\t0x64: 0x0064,\\n\\t\\t\\t\\t\\t\\t0x65: 0x0065,\\n\\t\\t\\t\\t\\t\\t0x66: 0x0066,\\n\\t\\t\\t\\t\\t\\t0x67: 0x0067,\\n\\t\\t\\t\\t\\t\\t0x68: 0x0068,\\n\\t\\t\\t\\t\\t\\t0x69: 0x0069,\\n\\t\\t\\t\\t\\t\\t0x6a: 0x006a,\\n\\t\\t\\t\\t\\t\\t0x6b: 0x006b,\\n\\t\\t\\t\\t\\t\\t0x6c: 0x006c,\\n\\t\\t\\t\\t\\t\\t0x6d: 0x006d,\\n\\t\\t\\t\\t\\t\\t0x6e: 0x006e,\\n\\t\\t\\t\\t\\t\\t0x6f: 0x006f,\\n\\t\\t\\t\\t\\t\\t0x70: 0x0070,\\n\\t\\t\\t\\t\\t\\t0x71: 0x0071,\\n\\t\\t\\t\\t\\t\\t0x72: 0x0072,\\n\\t\\t\\t\\t\\t\\t0x73: 0x0073,\\n\\t\\t\\t\\t\\t\\t0x74: 0x0074,\\n\\t\\t\\t\\t\\t\\t0x75: 0x0075,\\n\\t\\t\\t\\t\\t\\t0x76: 0x0076,\\n\\t\\t\\t\\t\\t\\t0x77: 0x0077,\\n\\t\\t\\t\\t\\t\\t0x78: 0x0078,\\n\\t\\t\\t\\t\\t\\t0x79: 0x0079,\\n\\t\\t\\t\\t\\t\\t0x7a: 0x007a,\\n\\t\\t\\t\\t\\t\\t0x7b: 0x007b,\\n\\t\\t\\t\\t\\t\\t0x7c: 0x007c,\\n\\t\\t\\t\\t\\t\\t0x7d: 0x007d,\\n\\t\\t\\t\\t\\t\\t0x7e: 0x203e,\\n\\t\\t\\t\\t\\t\\t0x8140: 0x3000,\\n\\t\\t\\t\\t\\t\\t0x8141: 0x3001,\\n\\t\\t\\t\\t\\t\\t0x8142: 0x3002,\\n\\t\\t\\t\\t\\t\\t0x8143: 0xff0c,\\n\\t\\t\\t\\t\\t\\t0x8144: 0xff0e,\\n\\t\\t\\t\\t\\t\\t0x8145: 0x30fb,\\n\\t\\t\\t\\t\\t\\t0x8146: 0xff1a,\\n\\t\\t\\t\\t\\t\\t0x8147: 0xff1b,\\n\\t\\t\\t\\t\\t\\t0x8148: 0xff1f,\\n\\t\\t\\t\\t\\t\\t0x8149: 0xff01,\\n\\t\\t\\t\\t\\t\\t0x814a: 0x309b,\\n\\t\\t\\t\\t\\t\\t0x814b: 0x309c,\\n\\t\\t\\t\\t\\t\\t0x814c: 0x00b4,\\n\\t\\t\\t\\t\\t\\t0x814d: 0xff40,\\n\\t\\t\\t\\t\\t\\t0x814e: 0x00a8,\\n\\t\\t\\t\\t\\t\\t0x814f: 0xff3e,\\n\\t\\t\\t\\t\\t\\t0x8150: 0xffe3,\\n\\t\\t\\t\\t\\t\\t0x8151: 0xff3f,\\n\\t\\t\\t\\t\\t\\t0x8152: 0x30fd,\\n\\t\\t\\t\\t\\t\\t0x8153: 0x30fe,\\n\\t\\t\\t\\t\\t\\t0x8154: 0x309d,\\n\\t\\t\\t\\t\\t\\t0x8155: 0x309e,\\n\\t\\t\\t\\t\\t\\t0x8156: 0x3003,\\n\\t\\t\\t\\t\\t\\t0x8157: 0x4edd,\\n\\t\\t\\t\\t\\t\\t0x8158: 0x3005,\\n\\t\\t\\t\\t\\t\\t0x8159: 0x3006,\\n\\t\\t\\t\\t\\t\\t0x815a: 0x3007,\\n\\t\\t\\t\\t\\t\\t0x815b: 0x30fc,\\n\\t\\t\\t\\t\\t\\t0x815c: 0x2015,\\n\\t\\t\\t\\t\\t\\t0x815d: 0x2010,\\n\\t\\t\\t\\t\\t\\t0x815e: 0xff0f,\\n\\t\\t\\t\\t\\t\\t0x815f: 0x005c,\\n\\t\\t\\t\\t\\t\\t0x8160: 0x301c,\\n\\t\\t\\t\\t\\t\\t0x8161: 0x2016,\\n\\t\\t\\t\\t\\t\\t0x8162: 0xff5c,\\n\\t\\t\\t\\t\\t\\t0x8163: 0x2026,\\n\\t\\t\\t\\t\\t\\t0x8164: 0x2025,\\n\\t\\t\\t\\t\\t\\t0x8165: 0x2018,\\n\\t\\t\\t\\t\\t\\t0x8166: 0x2019,\\n\\t\\t\\t\\t\\t\\t0x8167: 0x201c,\\n\\t\\t\\t\\t\\t\\t0x8168: 0x201d,\\n\\t\\t\\t\\t\\t\\t0x8169: 0xff08,\\n\\t\\t\\t\\t\\t\\t0x816a: 0xff09,\\n\\t\\t\\t\\t\\t\\t0x816b: 0x3014,\\n\\t\\t\\t\\t\\t\\t0x816c: 0x3015,\\n\\t\\t\\t\\t\\t\\t0x816d: 0xff3b,\\n\\t\\t\\t\\t\\t\\t0x816e: 0xff3d,\\n\\t\\t\\t\\t\\t\\t0x816f: 0xff5b,\\n\\t\\t\\t\\t\\t\\t0x8170: 0xff5d,\\n\\t\\t\\t\\t\\t\\t0x8171: 0x3008,\\n\\t\\t\\t\\t\\t\\t0x8172: 0x3009,\\n\\t\\t\\t\\t\\t\\t0x8173: 0x300a,\\n\\t\\t\\t\\t\\t\\t0x8174: 0x300b,\\n\\t\\t\\t\\t\\t\\t0x8175: 0x300c,\\n\\t\\t\\t\\t\\t\\t0x8176: 0x300d,\\n\\t\\t\\t\\t\\t\\t0x8177: 0x300e,\\n\\t\\t\\t\\t\\t\\t0x8178: 0x300f,\\n\\t\\t\\t\\t\\t\\t0x8179: 0x3010,\\n\\t\\t\\t\\t\\t\\t0x817a: 0x3011,\\n\\t\\t\\t\\t\\t\\t0x817b: 0xff0b,\\n\\t\\t\\t\\t\\t\\t0x817c: 0x2212,\\n\\t\\t\\t\\t\\t\\t0x817d: 0x00b1,\\n\\t\\t\\t\\t\\t\\t0x817e: 0x00d7,\\n\\t\\t\\t\\t\\t\\t0x8180: 0x00f7,\\n\\t\\t\\t\\t\\t\\t0x8181: 0xff1d,\\n\\t\\t\\t\\t\\t\\t0x8182: 0x2260,\\n\\t\\t\\t\\t\\t\\t0x8183: 0xff1c,\\n\\t\\t\\t\\t\\t\\t0x8184: 0xff1e,\\n\\t\\t\\t\\t\\t\\t0x8185: 0x2266,\\n\\t\\t\\t\\t\\t\\t0x8186: 0x2267,\\n\\t\\t\\t\\t\\t\\t0x8187: 0x221e,\\n\\t\\t\\t\\t\\t\\t0x8188: 0x2234,\\n\\t\\t\\t\\t\\t\\t0x8189: 0x2642,\\n\\t\\t\\t\\t\\t\\t0x818a: 0x2640,\\n\\t\\t\\t\\t\\t\\t0x818b: 0x00b0,\\n\\t\\t\\t\\t\\t\\t0x818c: 0x2032,\\n\\t\\t\\t\\t\\t\\t0x818d: 0x2033,\\n\\t\\t\\t\\t\\t\\t0x818e: 0x2103,\\n\\t\\t\\t\\t\\t\\t0x818f: 0xffe5,\\n\\t\\t\\t\\t\\t\\t0x8190: 0xff04,\\n\\t\\t\\t\\t\\t\\t0x8191: 0x00a2,\\n\\t\\t\\t\\t\\t\\t0x8192: 0x00a3,\\n\\t\\t\\t\\t\\t\\t0x8193: 0xff05,\\n\\t\\t\\t\\t\\t\\t0x8194: 0xff03,\\n\\t\\t\\t\\t\\t\\t0x8195: 0xff06,\\n\\t\\t\\t\\t\\t\\t0x8196: 0xff0a,\\n\\t\\t\\t\\t\\t\\t0x8197: 0xff20,\\n\\t\\t\\t\\t\\t\\t0x8198: 0x00a7,\\n\\t\\t\\t\\t\\t\\t0x8199: 0x2606,\\n\\t\\t\\t\\t\\t\\t0x819a: 0x2605,\\n\\t\\t\\t\\t\\t\\t0x819b: 0x25cb,\\n\\t\\t\\t\\t\\t\\t0x819c: 0x25cf,\\n\\t\\t\\t\\t\\t\\t0x819d: 0x25ce,\\n\\t\\t\\t\\t\\t\\t0x819e: 0x25c7,\\n\\t\\t\\t\\t\\t\\t0x819f: 0x25c6,\\n\\t\\t\\t\\t\\t\\t0x81a0: 0x25a1,\\n\\t\\t\\t\\t\\t\\t0x81a1: 0x25a0,\\n\\t\\t\\t\\t\\t\\t0x81a2: 0x25b3,\\n\\t\\t\\t\\t\\t\\t0x81a3: 0x25b2,\\n\\t\\t\\t\\t\\t\\t0x81a4: 0x25bd,\\n\\t\\t\\t\\t\\t\\t0x81a5: 0x25bc,\\n\\t\\t\\t\\t\\t\\t0x81a6: 0x203b,\\n\\t\\t\\t\\t\\t\\t0x81a7: 0x3012,\\n\\t\\t\\t\\t\\t\\t0x81a8: 0x2192,\\n\\t\\t\\t\\t\\t\\t0x81a9: 0x2190,\\n\\t\\t\\t\\t\\t\\t0x81aa: 0x2191,\\n\\t\\t\\t\\t\\t\\t0x81ab: 0x2193,\\n\\t\\t\\t\\t\\t\\t0x81ac: 0x3013,\\n\\t\\t\\t\\t\\t\\t0x81b8: 0x2208,\\n\\t\\t\\t\\t\\t\\t0x81b9: 0x220b,\\n\\t\\t\\t\\t\\t\\t0x81ba: 0x2286,\\n\\t\\t\\t\\t\\t\\t0x81bb: 0x2287,\\n\\t\\t\\t\\t\\t\\t0x81bc: 0x2282,\\n\\t\\t\\t\\t\\t\\t0x81bd: 0x2283,\\n\\t\\t\\t\\t\\t\\t0x81be: 0x222a,\\n\\t\\t\\t\\t\\t\\t0x81bf: 0x2229,\\n\\t\\t\\t\\t\\t\\t0x81c8: 0x2227,\\n\\t\\t\\t\\t\\t\\t0x81c9: 0x2228,\\n\\t\\t\\t\\t\\t\\t0x81ca: 0x00ac,\\n\\t\\t\\t\\t\\t\\t0x81cb: 0x21d2,\\n\\t\\t\\t\\t\\t\\t0x81cc: 0x21d4,\\n\\t\\t\\t\\t\\t\\t0x81cd: 0x2200,\\n\\t\\t\\t\\t\\t\\t0x81ce: 0x2203,\\n\\t\\t\\t\\t\\t\\t0x81da: 0x2220,\\n\\t\\t\\t\\t\\t\\t0x81db: 0x22a5,\\n\\t\\t\\t\\t\\t\\t0x81dc: 0x2312,\\n\\t\\t\\t\\t\\t\\t0x81dd: 0x2202,\\n\\t\\t\\t\\t\\t\\t0x81de: 0x2207,\\n\\t\\t\\t\\t\\t\\t0x81df: 0x2261,\\n\\t\\t\\t\\t\\t\\t0x81e0: 0x2252,\\n\\t\\t\\t\\t\\t\\t0x81e1: 0x226a,\\n\\t\\t\\t\\t\\t\\t0x81e2: 0x226b,\\n\\t\\t\\t\\t\\t\\t0x81e3: 0x221a,\\n\\t\\t\\t\\t\\t\\t0x81e4: 0x223d,\\n\\t\\t\\t\\t\\t\\t0x81e5: 0x221d,\\n\\t\\t\\t\\t\\t\\t0x81e6: 0x2235,\\n\\t\\t\\t\\t\\t\\t0x81e7: 0x222b,\\n\\t\\t\\t\\t\\t\\t0x81e8: 0x222c,\\n\\t\\t\\t\\t\\t\\t0x81f0: 0x212b,\\n\\t\\t\\t\\t\\t\\t0x81f1: 0x2030,\\n\\t\\t\\t\\t\\t\\t0x81f2: 0x266f,\\n\\t\\t\\t\\t\\t\\t0x81f3: 0x266d,\\n\\t\\t\\t\\t\\t\\t0x81f4: 0x266a,\\n\\t\\t\\t\\t\\t\\t0x81f5: 0x2020,\\n\\t\\t\\t\\t\\t\\t0x81f6: 0x2021,\\n\\t\\t\\t\\t\\t\\t0x81f7: 0x00b6,\\n\\t\\t\\t\\t\\t\\t0x81fc: 0x25ef,\\n\\t\\t\\t\\t\\t\\t0x824f: 0xff10,\\n\\t\\t\\t\\t\\t\\t0x8250: 0xff11,\\n\\t\\t\\t\\t\\t\\t0x8251: 0xff12,\\n\\t\\t\\t\\t\\t\\t0x8252: 0xff13,\\n\\t\\t\\t\\t\\t\\t0x8253: 0xff14,\\n\\t\\t\\t\\t\\t\\t0x8254: 0xff15,\\n\\t\\t\\t\\t\\t\\t0x8255: 0xff16,\\n\\t\\t\\t\\t\\t\\t0x8256: 0xff17,\\n\\t\\t\\t\\t\\t\\t0x8257: 0xff18,\\n\\t\\t\\t\\t\\t\\t0x8258: 0xff19,\\n\\t\\t\\t\\t\\t\\t0x8260: 0xff21,\\n\\t\\t\\t\\t\\t\\t0x8261: 0xff22,\\n\\t\\t\\t\\t\\t\\t0x8262: 0xff23,\\n\\t\\t\\t\\t\\t\\t0x8263: 0xff24,\\n\\t\\t\\t\\t\\t\\t0x8264: 0xff25,\\n\\t\\t\\t\\t\\t\\t0x8265: 0xff26,\\n\\t\\t\\t\\t\\t\\t0x8266: 0xff27,\\n\\t\\t\\t\\t\\t\\t0x8267: 0xff28,\\n\\t\\t\\t\\t\\t\\t0x8268: 0xff29,\\n\\t\\t\\t\\t\\t\\t0x8269: 0xff2a,\\n\\t\\t\\t\\t\\t\\t0x826a: 0xff2b,\\n\\t\\t\\t\\t\\t\\t0x826b: 0xff2c,\\n\\t\\t\\t\\t\\t\\t0x826c: 0xff2d,\\n\\t\\t\\t\\t\\t\\t0x826d: 0xff2e,\\n\\t\\t\\t\\t\\t\\t0x826e: 0xff2f,\\n\\t\\t\\t\\t\\t\\t0x826f: 0xff30,\\n\\t\\t\\t\\t\\t\\t0x8270: 0xff31,\\n\\t\\t\\t\\t\\t\\t0x8271: 0xff32,\\n\\t\\t\\t\\t\\t\\t0x8272: 0xff33,\\n\\t\\t\\t\\t\\t\\t0x8273: 0xff34,\\n\\t\\t\\t\\t\\t\\t0x8274: 0xff35,\\n\\t\\t\\t\\t\\t\\t0x8275: 0xff36,\\n\\t\\t\\t\\t\\t\\t0x8276: 0xff37,\\n\\t\\t\\t\\t\\t\\t0x8277: 0xff38,\\n\\t\\t\\t\\t\\t\\t0x8278: 0xff39,\\n\\t\\t\\t\\t\\t\\t0x8279: 0xff3a,\\n\\t\\t\\t\\t\\t\\t0x8281: 0xff41,\\n\\t\\t\\t\\t\\t\\t0x8282: 0xff42,\\n\\t\\t\\t\\t\\t\\t0x8283: 0xff43,\\n\\t\\t\\t\\t\\t\\t0x8284: 0xff44,\\n\\t\\t\\t\\t\\t\\t0x8285: 0xff45,\\n\\t\\t\\t\\t\\t\\t0x8286: 0xff46,\\n\\t\\t\\t\\t\\t\\t0x8287: 0xff47,\\n\\t\\t\\t\\t\\t\\t0x8288: 0xff48,\\n\\t\\t\\t\\t\\t\\t0x8289: 0xff49,\\n\\t\\t\\t\\t\\t\\t0x828a: 0xff4a,\\n\\t\\t\\t\\t\\t\\t0x828b: 0xff4b,\\n\\t\\t\\t\\t\\t\\t0x828c: 0xff4c,\\n\\t\\t\\t\\t\\t\\t0x828d: 0xff4d,\\n\\t\\t\\t\\t\\t\\t0x828e: 0xff4e,\\n\\t\\t\\t\\t\\t\\t0x828f: 0xff4f,\\n\\t\\t\\t\\t\\t\\t0x8290: 0xff50,\\n\\t\\t\\t\\t\\t\\t0x8291: 0xff51,\\n\\t\\t\\t\\t\\t\\t0x8292: 0xff52,\\n\\t\\t\\t\\t\\t\\t0x8293: 0xff53,\\n\\t\\t\\t\\t\\t\\t0x8294: 0xff54,\\n\\t\\t\\t\\t\\t\\t0x8295: 0xff55,\\n\\t\\t\\t\\t\\t\\t0x8296: 0xff56,\\n\\t\\t\\t\\t\\t\\t0x8297: 0xff57,\\n\\t\\t\\t\\t\\t\\t0x8298: 0xff58,\\n\\t\\t\\t\\t\\t\\t0x8299: 0xff59,\\n\\t\\t\\t\\t\\t\\t0x829a: 0xff5a,\\n\\t\\t\\t\\t\\t\\t0x829f: 0x3041,\\n\\t\\t\\t\\t\\t\\t0x82a0: 0x3042,\\n\\t\\t\\t\\t\\t\\t0x82a1: 0x3043,\\n\\t\\t\\t\\t\\t\\t0x82a2: 0x3044,\\n\\t\\t\\t\\t\\t\\t0x82a3: 0x3045,\\n\\t\\t\\t\\t\\t\\t0x82a4: 0x3046,\\n\\t\\t\\t\\t\\t\\t0x82a5: 0x3047,\\n\\t\\t\\t\\t\\t\\t0x82a6: 0x3048,\\n\\t\\t\\t\\t\\t\\t0x82a7: 0x3049,\\n\\t\\t\\t\\t\\t\\t0x82a8: 0x304a,\\n\\t\\t\\t\\t\\t\\t0x82a9: 0x304b,\\n\\t\\t\\t\\t\\t\\t0x82aa: 0x304c,\\n\\t\\t\\t\\t\\t\\t0x82ab: 0x304d,\\n\\t\\t\\t\\t\\t\\t0x82ac: 0x304e,\\n\\t\\t\\t\\t\\t\\t0x82ad: 0x304f,\\n\\t\\t\\t\\t\\t\\t0x82ae: 0x3050,\\n\\t\\t\\t\\t\\t\\t0x82af: 0x3051,\\n\\t\\t\\t\\t\\t\\t0x82b0: 0x3052,\\n\\t\\t\\t\\t\\t\\t0x82b1: 0x3053,\\n\\t\\t\\t\\t\\t\\t0x82b2: 0x3054,\\n\\t\\t\\t\\t\\t\\t0x82b3: 0x3055,\\n\\t\\t\\t\\t\\t\\t0x82b4: 0x3056,\\n\\t\\t\\t\\t\\t\\t0x82b5: 0x3057,\\n\\t\\t\\t\\t\\t\\t0x82b6: 0x3058,\\n\\t\\t\\t\\t\\t\\t0x82b7: 0x3059,\\n\\t\\t\\t\\t\\t\\t0x82b8: 0x305a,\\n\\t\\t\\t\\t\\t\\t0x82b9: 0x305b,\\n\\t\\t\\t\\t\\t\\t0x82ba: 0x305c,\\n\\t\\t\\t\\t\\t\\t0x82bb: 0x305d,\\n\\t\\t\\t\\t\\t\\t0x82bc: 0x305e,\\n\\t\\t\\t\\t\\t\\t0x82bd: 0x305f,\\n\\t\\t\\t\\t\\t\\t0x82be: 0x3060,\\n\\t\\t\\t\\t\\t\\t0x82bf: 0x3061,\\n\\t\\t\\t\\t\\t\\t0x82c0: 0x3062,\\n\\t\\t\\t\\t\\t\\t0x82c1: 0x3063,\\n\\t\\t\\t\\t\\t\\t0x82c2: 0x3064,\\n\\t\\t\\t\\t\\t\\t0x82c3: 0x3065,\\n\\t\\t\\t\\t\\t\\t0x82c4: 0x3066,\\n\\t\\t\\t\\t\\t\\t0x82c5: 0x3067,\\n\\t\\t\\t\\t\\t\\t0x82c6: 0x3068,\\n\\t\\t\\t\\t\\t\\t0x82c7: 0x3069,\\n\\t\\t\\t\\t\\t\\t0x82c8: 0x306a,\\n\\t\\t\\t\\t\\t\\t0x82c9: 0x306b,\\n\\t\\t\\t\\t\\t\\t0x82ca: 0x306c,\\n\\t\\t\\t\\t\\t\\t0x82cb: 0x306d,\\n\\t\\t\\t\\t\\t\\t0x82cc: 0x306e,\\n\\t\\t\\t\\t\\t\\t0x82cd: 0x306f,\\n\\t\\t\\t\\t\\t\\t0x82ce: 0x3070,\\n\\t\\t\\t\\t\\t\\t0x82cf: 0x3071,\\n\\t\\t\\t\\t\\t\\t0x82d0: 0x3072,\\n\\t\\t\\t\\t\\t\\t0x82d1: 0x3073,\\n\\t\\t\\t\\t\\t\\t0x82d2: 0x3074,\\n\\t\\t\\t\\t\\t\\t0x82d3: 0x3075,\\n\\t\\t\\t\\t\\t\\t0x82d4: 0x3076,\\n\\t\\t\\t\\t\\t\\t0x82d5: 0x3077,\\n\\t\\t\\t\\t\\t\\t0x82d6: 0x3078,\\n\\t\\t\\t\\t\\t\\t0x82d7: 0x3079,\\n\\t\\t\\t\\t\\t\\t0x82d8: 0x307a,\\n\\t\\t\\t\\t\\t\\t0x82d9: 0x307b,\\n\\t\\t\\t\\t\\t\\t0x82da: 0x307c,\\n\\t\\t\\t\\t\\t\\t0x82db: 0x307d,\\n\\t\\t\\t\\t\\t\\t0x82dc: 0x307e,\\n\\t\\t\\t\\t\\t\\t0x82dd: 0x307f,\\n\\t\\t\\t\\t\\t\\t0x82de: 0x3080,\\n\\t\\t\\t\\t\\t\\t0x82df: 0x3081,\\n\\t\\t\\t\\t\\t\\t0x82e0: 0x3082,\\n\\t\\t\\t\\t\\t\\t0x82e1: 0x3083,\\n\\t\\t\\t\\t\\t\\t0x82e2: 0x3084,\\n\\t\\t\\t\\t\\t\\t0x82e3: 0x3085,\\n\\t\\t\\t\\t\\t\\t0x82e4: 0x3086,\\n\\t\\t\\t\\t\\t\\t0x82e5: 0x3087,\\n\\t\\t\\t\\t\\t\\t0x82e6: 0x3088,\\n\\t\\t\\t\\t\\t\\t0x82e7: 0x3089,\\n\\t\\t\\t\\t\\t\\t0x82e8: 0x308a,\\n\\t\\t\\t\\t\\t\\t0x82e9: 0x308b,\\n\\t\\t\\t\\t\\t\\t0x82ea: 0x308c,\\n\\t\\t\\t\\t\\t\\t0x82eb: 0x308d,\\n\\t\\t\\t\\t\\t\\t0x82ec: 0x308e,\\n\\t\\t\\t\\t\\t\\t0x82ed: 0x308f,\\n\\t\\t\\t\\t\\t\\t0x82ee: 0x3090,\\n\\t\\t\\t\\t\\t\\t0x82ef: 0x3091,\\n\\t\\t\\t\\t\\t\\t0x82f0: 0x3092,\\n\\t\\t\\t\\t\\t\\t0x82f1: 0x3093,\\n\\t\\t\\t\\t\\t\\t0x8340: 0x30a1,\\n\\t\\t\\t\\t\\t\\t0x8341: 0x30a2,\\n\\t\\t\\t\\t\\t\\t0x8342: 0x30a3,\\n\\t\\t\\t\\t\\t\\t0x8343: 0x30a4,\\n\\t\\t\\t\\t\\t\\t0x8344: 0x30a5,\\n\\t\\t\\t\\t\\t\\t0x8345: 0x30a6,\\n\\t\\t\\t\\t\\t\\t0x8346: 0x30a7,\\n\\t\\t\\t\\t\\t\\t0x8347: 0x30a8,\\n\\t\\t\\t\\t\\t\\t0x8348: 0x30a9,\\n\\t\\t\\t\\t\\t\\t0x8349: 0x30aa,\\n\\t\\t\\t\\t\\t\\t0x834a: 0x30ab,\\n\\t\\t\\t\\t\\t\\t0x834b: 0x30ac,\\n\\t\\t\\t\\t\\t\\t0x834c: 0x30ad,\\n\\t\\t\\t\\t\\t\\t0x834d: 0x30ae,\\n\\t\\t\\t\\t\\t\\t0x834e: 0x30af,\\n\\t\\t\\t\\t\\t\\t0x834f: 0x30b0,\\n\\t\\t\\t\\t\\t\\t0x8350: 0x30b1,\\n\\t\\t\\t\\t\\t\\t0x8351: 0x30b2,\\n\\t\\t\\t\\t\\t\\t0x8352: 0x30b3,\\n\\t\\t\\t\\t\\t\\t0x8353: 0x30b4,\\n\\t\\t\\t\\t\\t\\t0x8354: 0x30b5,\\n\\t\\t\\t\\t\\t\\t0x8355: 0x30b6,\\n\\t\\t\\t\\t\\t\\t0x8356: 0x30b7,\\n\\t\\t\\t\\t\\t\\t0x8357: 0x30b8,\\n\\t\\t\\t\\t\\t\\t0x8358: 0x30b9,\\n\\t\\t\\t\\t\\t\\t0x8359: 0x30ba,\\n\\t\\t\\t\\t\\t\\t0x835a: 0x30bb,\\n\\t\\t\\t\\t\\t\\t0x835b: 0x30bc,\\n\\t\\t\\t\\t\\t\\t0x835c: 0x30bd,\\n\\t\\t\\t\\t\\t\\t0x835d: 0x30be,\\n\\t\\t\\t\\t\\t\\t0x835e: 0x30bf,\\n\\t\\t\\t\\t\\t\\t0x835f: 0x30c0,\\n\\t\\t\\t\\t\\t\\t0x8360: 0x30c1,\\n\\t\\t\\t\\t\\t\\t0x8361: 0x30c2,\\n\\t\\t\\t\\t\\t\\t0x8362: 0x30c3,\\n\\t\\t\\t\\t\\t\\t0x8363: 0x30c4,\\n\\t\\t\\t\\t\\t\\t0x8364: 0x30c5,\\n\\t\\t\\t\\t\\t\\t0x8365: 0x30c6,\\n\\t\\t\\t\\t\\t\\t0x8366: 0x30c7,\\n\\t\\t\\t\\t\\t\\t0x8367: 0x30c8,\\n\\t\\t\\t\\t\\t\\t0x8368: 0x30c9,\\n\\t\\t\\t\\t\\t\\t0x8369: 0x30ca,\\n\\t\\t\\t\\t\\t\\t0x836a: 0x30cb,\\n\\t\\t\\t\\t\\t\\t0x836b: 0x30cc,\\n\\t\\t\\t\\t\\t\\t0x836c: 0x30cd,\\n\\t\\t\\t\\t\\t\\t0x836d: 0x30ce,\\n\\t\\t\\t\\t\\t\\t0x836e: 0x30cf,\\n\\t\\t\\t\\t\\t\\t0x836f: 0x30d0,\\n\\t\\t\\t\\t\\t\\t0x8370: 0x30d1,\\n\\t\\t\\t\\t\\t\\t0x8371: 0x30d2,\\n\\t\\t\\t\\t\\t\\t0x8372: 0x30d3,\\n\\t\\t\\t\\t\\t\\t0x8373: 0x30d4,\\n\\t\\t\\t\\t\\t\\t0x8374: 0x30d5,\\n\\t\\t\\t\\t\\t\\t0x8375: 0x30d6,\\n\\t\\t\\t\\t\\t\\t0x8376: 0x30d7,\\n\\t\\t\\t\\t\\t\\t0x8377: 0x30d8,\\n\\t\\t\\t\\t\\t\\t0x8378: 0x30d9,\\n\\t\\t\\t\\t\\t\\t0x8379: 0x30da,\\n\\t\\t\\t\\t\\t\\t0x837a: 0x30db,\\n\\t\\t\\t\\t\\t\\t0x837b: 0x30dc,\\n\\t\\t\\t\\t\\t\\t0x837c: 0x30dd,\\n\\t\\t\\t\\t\\t\\t0x837d: 0x30de,\\n\\t\\t\\t\\t\\t\\t0x837e: 0x30df,\\n\\t\\t\\t\\t\\t\\t0x8380: 0x30e0,\\n\\t\\t\\t\\t\\t\\t0x8381: 0x30e1,\\n\\t\\t\\t\\t\\t\\t0x8382: 0x30e2,\\n\\t\\t\\t\\t\\t\\t0x8383: 0x30e3,\\n\\t\\t\\t\\t\\t\\t0x8384: 0x30e4,\\n\\t\\t\\t\\t\\t\\t0x8385: 0x30e5,\\n\\t\\t\\t\\t\\t\\t0x8386: 0x30e6,\\n\\t\\t\\t\\t\\t\\t0x8387: 0x30e7,\\n\\t\\t\\t\\t\\t\\t0x8388: 0x30e8,\\n\\t\\t\\t\\t\\t\\t0x8389: 0x30e9,\\n\\t\\t\\t\\t\\t\\t0x838a: 0x30ea,\\n\\t\\t\\t\\t\\t\\t0x838b: 0x30eb,\\n\\t\\t\\t\\t\\t\\t0x838c: 0x30ec,\\n\\t\\t\\t\\t\\t\\t0x838d: 0x30ed,\\n\\t\\t\\t\\t\\t\\t0x838e: 0x30ee,\\n\\t\\t\\t\\t\\t\\t0x838f: 0x30ef,\\n\\t\\t\\t\\t\\t\\t0x8390: 0x30f0,\\n\\t\\t\\t\\t\\t\\t0x8391: 0x30f1,\\n\\t\\t\\t\\t\\t\\t0x8392: 0x30f2,\\n\\t\\t\\t\\t\\t\\t0x8393: 0x30f3,\\n\\t\\t\\t\\t\\t\\t0x8394: 0x30f4,\\n\\t\\t\\t\\t\\t\\t0x8395: 0x30f5,\\n\\t\\t\\t\\t\\t\\t0x8396: 0x30f6,\\n\\t\\t\\t\\t\\t\\t0x839f: 0x0391,\\n\\t\\t\\t\\t\\t\\t0x83a0: 0x0392,\\n\\t\\t\\t\\t\\t\\t0x83a1: 0x0393,\\n\\t\\t\\t\\t\\t\\t0x83a2: 0x0394,\\n\\t\\t\\t\\t\\t\\t0x83a3: 0x0395,\\n\\t\\t\\t\\t\\t\\t0x83a4: 0x0396,\\n\\t\\t\\t\\t\\t\\t0x83a5: 0x0397,\\n\\t\\t\\t\\t\\t\\t0x83a6: 0x0398,\\n\\t\\t\\t\\t\\t\\t0x83a7: 0x0399,\\n\\t\\t\\t\\t\\t\\t0x83a8: 0x039a,\\n\\t\\t\\t\\t\\t\\t0x83a9: 0x039b,\\n\\t\\t\\t\\t\\t\\t0x83aa: 0x039c,\\n\\t\\t\\t\\t\\t\\t0x83ab: 0x039d,\\n\\t\\t\\t\\t\\t\\t0x83ac: 0x039e,\\n\\t\\t\\t\\t\\t\\t0x83ad: 0x039f,\\n\\t\\t\\t\\t\\t\\t0x83ae: 0x03a0,\\n\\t\\t\\t\\t\\t\\t0x83af: 0x03a1,\\n\\t\\t\\t\\t\\t\\t0x83b0: 0x03a3,\\n\\t\\t\\t\\t\\t\\t0x83b1: 0x03a4,\\n\\t\\t\\t\\t\\t\\t0x83b2: 0x03a5,\\n\\t\\t\\t\\t\\t\\t0x83b3: 0x03a6,\\n\\t\\t\\t\\t\\t\\t0x83b4: 0x03a7,\\n\\t\\t\\t\\t\\t\\t0x83b5: 0x03a8,\\n\\t\\t\\t\\t\\t\\t0x83b6: 0x03a9,\\n\\t\\t\\t\\t\\t\\t0x83bf: 0x03b1,\\n\\t\\t\\t\\t\\t\\t0x83c0: 0x03b2,\\n\\t\\t\\t\\t\\t\\t0x83c1: 0x03b3,\\n\\t\\t\\t\\t\\t\\t0x83c2: 0x03b4,\\n\\t\\t\\t\\t\\t\\t0x83c3: 0x03b5,\\n\\t\\t\\t\\t\\t\\t0x83c4: 0x03b6,\\n\\t\\t\\t\\t\\t\\t0x83c5: 0x03b7,\\n\\t\\t\\t\\t\\t\\t0x83c6: 0x03b8,\\n\\t\\t\\t\\t\\t\\t0x83c7: 0x03b9,\\n\\t\\t\\t\\t\\t\\t0x83c8: 0x03ba,\\n\\t\\t\\t\\t\\t\\t0x83c9: 0x03bb,\\n\\t\\t\\t\\t\\t\\t0x83ca: 0x03bc,\\n\\t\\t\\t\\t\\t\\t0x83cb: 0x03bd,\\n\\t\\t\\t\\t\\t\\t0x83cc: 0x03be,\\n\\t\\t\\t\\t\\t\\t0x83cd: 0x03bf,\\n\\t\\t\\t\\t\\t\\t0x83ce: 0x03c0,\\n\\t\\t\\t\\t\\t\\t0x83cf: 0x03c1,\\n\\t\\t\\t\\t\\t\\t0x83d0: 0x03c3,\\n\\t\\t\\t\\t\\t\\t0x83d1: 0x03c4,\\n\\t\\t\\t\\t\\t\\t0x83d2: 0x03c5,\\n\\t\\t\\t\\t\\t\\t0x83d3: 0x03c6,\\n\\t\\t\\t\\t\\t\\t0x83d4: 0x03c7,\\n\\t\\t\\t\\t\\t\\t0x83d5: 0x03c8,\\n\\t\\t\\t\\t\\t\\t0x83d6: 0x03c9,\\n\\t\\t\\t\\t\\t\\t0x8440: 0x0410,\\n\\t\\t\\t\\t\\t\\t0x8441: 0x0411,\\n\\t\\t\\t\\t\\t\\t0x8442: 0x0412,\\n\\t\\t\\t\\t\\t\\t0x8443: 0x0413,\\n\\t\\t\\t\\t\\t\\t0x8444: 0x0414,\\n\\t\\t\\t\\t\\t\\t0x8445: 0x0415,\\n\\t\\t\\t\\t\\t\\t0x8446: 0x0401,\\n\\t\\t\\t\\t\\t\\t0x8447: 0x0416,\\n\\t\\t\\t\\t\\t\\t0x8448: 0x0417,\\n\\t\\t\\t\\t\\t\\t0x8449: 0x0418,\\n\\t\\t\\t\\t\\t\\t0x844a: 0x0419,\\n\\t\\t\\t\\t\\t\\t0x844b: 0x041a,\\n\\t\\t\\t\\t\\t\\t0x844c: 0x041b,\\n\\t\\t\\t\\t\\t\\t0x844d: 0x041c,\\n\\t\\t\\t\\t\\t\\t0x844e: 0x041d,\\n\\t\\t\\t\\t\\t\\t0x844f: 0x041e,\\n\\t\\t\\t\\t\\t\\t0x8450: 0x041f,\\n\\t\\t\\t\\t\\t\\t0x8451: 0x0420,\\n\\t\\t\\t\\t\\t\\t0x8452: 0x0421,\\n\\t\\t\\t\\t\\t\\t0x8453: 0x0422,\\n\\t\\t\\t\\t\\t\\t0x8454: 0x0423,\\n\\t\\t\\t\\t\\t\\t0x8455: 0x0424,\\n\\t\\t\\t\\t\\t\\t0x8456: 0x0425,\\n\\t\\t\\t\\t\\t\\t0x8457: 0x0426,\\n\\t\\t\\t\\t\\t\\t0x8458: 0x0427,\\n\\t\\t\\t\\t\\t\\t0x8459: 0x0428,\\n\\t\\t\\t\\t\\t\\t0x845a: 0x0429,\\n\\t\\t\\t\\t\\t\\t0x845b: 0x042a,\\n\\t\\t\\t\\t\\t\\t0x845c: 0x042b,\\n\\t\\t\\t\\t\\t\\t0x845d: 0x042c,\\n\\t\\t\\t\\t\\t\\t0x845e: 0x042d,\\n\\t\\t\\t\\t\\t\\t0x845f: 0x042e,\\n\\t\\t\\t\\t\\t\\t0x8460: 0x042f,\\n\\t\\t\\t\\t\\t\\t0x8470: 0x0430,\\n\\t\\t\\t\\t\\t\\t0x8471: 0x0431,\\n\\t\\t\\t\\t\\t\\t0x8472: 0x0432,\\n\\t\\t\\t\\t\\t\\t0x8473: 0x0433,\\n\\t\\t\\t\\t\\t\\t0x8474: 0x0434,\\n\\t\\t\\t\\t\\t\\t0x8475: 0x0435,\\n\\t\\t\\t\\t\\t\\t0x8476: 0x0451,\\n\\t\\t\\t\\t\\t\\t0x8477: 0x0436,\\n\\t\\t\\t\\t\\t\\t0x8478: 0x0437,\\n\\t\\t\\t\\t\\t\\t0x8479: 0x0438,\\n\\t\\t\\t\\t\\t\\t0x847a: 0x0439,\\n\\t\\t\\t\\t\\t\\t0x847b: 0x043a,\\n\\t\\t\\t\\t\\t\\t0x847c: 0x043b,\\n\\t\\t\\t\\t\\t\\t0x847d: 0x043c,\\n\\t\\t\\t\\t\\t\\t0x847e: 0x043d,\\n\\t\\t\\t\\t\\t\\t0x8480: 0x043e,\\n\\t\\t\\t\\t\\t\\t0x8481: 0x043f,\\n\\t\\t\\t\\t\\t\\t0x8482: 0x0440,\\n\\t\\t\\t\\t\\t\\t0x8483: 0x0441,\\n\\t\\t\\t\\t\\t\\t0x8484: 0x0442,\\n\\t\\t\\t\\t\\t\\t0x8485: 0x0443,\\n\\t\\t\\t\\t\\t\\t0x8486: 0x0444,\\n\\t\\t\\t\\t\\t\\t0x8487: 0x0445,\\n\\t\\t\\t\\t\\t\\t0x8488: 0x0446,\\n\\t\\t\\t\\t\\t\\t0x8489: 0x0447,\\n\\t\\t\\t\\t\\t\\t0x848a: 0x0448,\\n\\t\\t\\t\\t\\t\\t0x848b: 0x0449,\\n\\t\\t\\t\\t\\t\\t0x848c: 0x044a,\\n\\t\\t\\t\\t\\t\\t0x848d: 0x044b,\\n\\t\\t\\t\\t\\t\\t0x848e: 0x044c,\\n\\t\\t\\t\\t\\t\\t0x848f: 0x044d,\\n\\t\\t\\t\\t\\t\\t0x8490: 0x044e,\\n\\t\\t\\t\\t\\t\\t0x8491: 0x044f,\\n\\t\\t\\t\\t\\t\\t0x849f: 0x2500,\\n\\t\\t\\t\\t\\t\\t0x84a0: 0x2502,\\n\\t\\t\\t\\t\\t\\t0x84a1: 0x250c,\\n\\t\\t\\t\\t\\t\\t0x84a2: 0x2510,\\n\\t\\t\\t\\t\\t\\t0x84a3: 0x2518,\\n\\t\\t\\t\\t\\t\\t0x84a4: 0x2514,\\n\\t\\t\\t\\t\\t\\t0x84a5: 0x251c,\\n\\t\\t\\t\\t\\t\\t0x84a6: 0x252c,\\n\\t\\t\\t\\t\\t\\t0x84a7: 0x2524,\\n\\t\\t\\t\\t\\t\\t0x84a8: 0x2534,\\n\\t\\t\\t\\t\\t\\t0x84a9: 0x253c,\\n\\t\\t\\t\\t\\t\\t0x84aa: 0x2501,\\n\\t\\t\\t\\t\\t\\t0x84ab: 0x2503,\\n\\t\\t\\t\\t\\t\\t0x84ac: 0x250f,\\n\\t\\t\\t\\t\\t\\t0x84ad: 0x2513,\\n\\t\\t\\t\\t\\t\\t0x84ae: 0x251b,\\n\\t\\t\\t\\t\\t\\t0x84af: 0x2517,\\n\\t\\t\\t\\t\\t\\t0x84b0: 0x2523,\\n\\t\\t\\t\\t\\t\\t0x84b1: 0x2533,\\n\\t\\t\\t\\t\\t\\t0x84b2: 0x252b,\\n\\t\\t\\t\\t\\t\\t0x84b3: 0x253b,\\n\\t\\t\\t\\t\\t\\t0x84b4: 0x254b,\\n\\t\\t\\t\\t\\t\\t0x84b5: 0x2520,\\n\\t\\t\\t\\t\\t\\t0x84b6: 0x252f,\\n\\t\\t\\t\\t\\t\\t0x84b7: 0x2528,\\n\\t\\t\\t\\t\\t\\t0x84b8: 0x2537,\\n\\t\\t\\t\\t\\t\\t0x84b9: 0x253f,\\n\\t\\t\\t\\t\\t\\t0x84ba: 0x251d,\\n\\t\\t\\t\\t\\t\\t0x84bb: 0x2530,\\n\\t\\t\\t\\t\\t\\t0x84bc: 0x2525,\\n\\t\\t\\t\\t\\t\\t0x84bd: 0x2538,\\n\\t\\t\\t\\t\\t\\t0x84be: 0x2542,\\n\\t\\t\\t\\t\\t\\t0x889f: 0x4e9c,\\n\\t\\t\\t\\t\\t\\t0x88a0: 0x5516,\\n\\t\\t\\t\\t\\t\\t0x88a1: 0x5a03,\\n\\t\\t\\t\\t\\t\\t0x88a2: 0x963f,\\n\\t\\t\\t\\t\\t\\t0x88a3: 0x54c0,\\n\\t\\t\\t\\t\\t\\t0x88a4: 0x611b,\\n\\t\\t\\t\\t\\t\\t0x88a5: 0x6328,\\n\\t\\t\\t\\t\\t\\t0x88a6: 0x59f6,\\n\\t\\t\\t\\t\\t\\t0x88a7: 0x9022,\\n\\t\\t\\t\\t\\t\\t0x88a8: 0x8475,\\n\\t\\t\\t\\t\\t\\t0x88a9: 0x831c,\\n\\t\\t\\t\\t\\t\\t0x88aa: 0x7a50,\\n\\t\\t\\t\\t\\t\\t0x88ab: 0x60aa,\\n\\t\\t\\t\\t\\t\\t0x88ac: 0x63e1,\\n\\t\\t\\t\\t\\t\\t0x88ad: 0x6e25,\\n\\t\\t\\t\\t\\t\\t0x88ae: 0x65ed,\\n\\t\\t\\t\\t\\t\\t0x88af: 0x8466,\\n\\t\\t\\t\\t\\t\\t0x88b0: 0x82a6,\\n\\t\\t\\t\\t\\t\\t0x88b1: 0x9bf5,\\n\\t\\t\\t\\t\\t\\t0x88b2: 0x6893,\\n\\t\\t\\t\\t\\t\\t0x88b3: 0x5727,\\n\\t\\t\\t\\t\\t\\t0x88b4: 0x65a1,\\n\\t\\t\\t\\t\\t\\t0x88b5: 0x6271,\\n\\t\\t\\t\\t\\t\\t0x88b6: 0x5b9b,\\n\\t\\t\\t\\t\\t\\t0x88b7: 0x59d0,\\n\\t\\t\\t\\t\\t\\t0x88b8: 0x867b,\\n\\t\\t\\t\\t\\t\\t0x88b9: 0x98f4,\\n\\t\\t\\t\\t\\t\\t0x88ba: 0x7d62,\\n\\t\\t\\t\\t\\t\\t0x88bb: 0x7dbe,\\n\\t\\t\\t\\t\\t\\t0x88bc: 0x9b8e,\\n\\t\\t\\t\\t\\t\\t0x88bd: 0x6216,\\n\\t\\t\\t\\t\\t\\t0x88be: 0x7c9f,\\n\\t\\t\\t\\t\\t\\t0x88bf: 0x88b7,\\n\\t\\t\\t\\t\\t\\t0x88c0: 0x5b89,\\n\\t\\t\\t\\t\\t\\t0x88c1: 0x5eb5,\\n\\t\\t\\t\\t\\t\\t0x88c2: 0x6309,\\n\\t\\t\\t\\t\\t\\t0x88c3: 0x6697,\\n\\t\\t\\t\\t\\t\\t0x88c4: 0x6848,\\n\\t\\t\\t\\t\\t\\t0x88c5: 0x95c7,\\n\\t\\t\\t\\t\\t\\t0x88c6: 0x978d,\\n\\t\\t\\t\\t\\t\\t0x88c7: 0x674f,\\n\\t\\t\\t\\t\\t\\t0x88c8: 0x4ee5,\\n\\t\\t\\t\\t\\t\\t0x88c9: 0x4f0a,\\n\\t\\t\\t\\t\\t\\t0x88ca: 0x4f4d,\\n\\t\\t\\t\\t\\t\\t0x88cb: 0x4f9d,\\n\\t\\t\\t\\t\\t\\t0x88cc: 0x5049,\\n\\t\\t\\t\\t\\t\\t0x88cd: 0x56f2,\\n\\t\\t\\t\\t\\t\\t0x88ce: 0x5937,\\n\\t\\t\\t\\t\\t\\t0x88cf: 0x59d4,\\n\\t\\t\\t\\t\\t\\t0x88d0: 0x5a01,\\n\\t\\t\\t\\t\\t\\t0x88d1: 0x5c09,\\n\\t\\t\\t\\t\\t\\t0x88d2: 0x60df,\\n\\t\\t\\t\\t\\t\\t0x88d3: 0x610f,\\n\\t\\t\\t\\t\\t\\t0x88d4: 0x6170,\\n\\t\\t\\t\\t\\t\\t0x88d5: 0x6613,\\n\\t\\t\\t\\t\\t\\t0x88d6: 0x6905,\\n\\t\\t\\t\\t\\t\\t0x88d7: 0x70ba,\\n\\t\\t\\t\\t\\t\\t0x88d8: 0x754f,\\n\\t\\t\\t\\t\\t\\t0x88d9: 0x7570,\\n\\t\\t\\t\\t\\t\\t0x88da: 0x79fb,\\n\\t\\t\\t\\t\\t\\t0x88db: 0x7dad,\\n\\t\\t\\t\\t\\t\\t0x88dc: 0x7def,\\n\\t\\t\\t\\t\\t\\t0x88dd: 0x80c3,\\n\\t\\t\\t\\t\\t\\t0x88de: 0x840e,\\n\\t\\t\\t\\t\\t\\t0x88df: 0x8863,\\n\\t\\t\\t\\t\\t\\t0x88e0: 0x8b02,\\n\\t\\t\\t\\t\\t\\t0x88e1: 0x9055,\\n\\t\\t\\t\\t\\t\\t0x88e2: 0x907a,\\n\\t\\t\\t\\t\\t\\t0x88e3: 0x533b,\\n\\t\\t\\t\\t\\t\\t0x88e4: 0x4e95,\\n\\t\\t\\t\\t\\t\\t0x88e5: 0x4ea5,\\n\\t\\t\\t\\t\\t\\t0x88e6: 0x57df,\\n\\t\\t\\t\\t\\t\\t0x88e7: 0x80b2,\\n\\t\\t\\t\\t\\t\\t0x88e8: 0x90c1,\\n\\t\\t\\t\\t\\t\\t0x88e9: 0x78ef,\\n\\t\\t\\t\\t\\t\\t0x88ea: 0x4e00,\\n\\t\\t\\t\\t\\t\\t0x88eb: 0x58f1,\\n\\t\\t\\t\\t\\t\\t0x88ec: 0x6ea2,\\n\\t\\t\\t\\t\\t\\t0x88ed: 0x9038,\\n\\t\\t\\t\\t\\t\\t0x88ee: 0x7a32,\\n\\t\\t\\t\\t\\t\\t0x88ef: 0x8328,\\n\\t\\t\\t\\t\\t\\t0x88f0: 0x828b,\\n\\t\\t\\t\\t\\t\\t0x88f1: 0x9c2f,\\n\\t\\t\\t\\t\\t\\t0x88f2: 0x5141,\\n\\t\\t\\t\\t\\t\\t0x88f3: 0x5370,\\n\\t\\t\\t\\t\\t\\t0x88f4: 0x54bd,\\n\\t\\t\\t\\t\\t\\t0x88f5: 0x54e1,\\n\\t\\t\\t\\t\\t\\t0x88f6: 0x56e0,\\n\\t\\t\\t\\t\\t\\t0x88f7: 0x59fb,\\n\\t\\t\\t\\t\\t\\t0x88f8: 0x5f15,\\n\\t\\t\\t\\t\\t\\t0x88f9: 0x98f2,\\n\\t\\t\\t\\t\\t\\t0x88fa: 0x6deb,\\n\\t\\t\\t\\t\\t\\t0x88fb: 0x80e4,\\n\\t\\t\\t\\t\\t\\t0x88fc: 0x852d,\\n\\t\\t\\t\\t\\t\\t0x8940: 0x9662,\\n\\t\\t\\t\\t\\t\\t0x8941: 0x9670,\\n\\t\\t\\t\\t\\t\\t0x8942: 0x96a0,\\n\\t\\t\\t\\t\\t\\t0x8943: 0x97fb,\\n\\t\\t\\t\\t\\t\\t0x8944: 0x540b,\\n\\t\\t\\t\\t\\t\\t0x8945: 0x53f3,\\n\\t\\t\\t\\t\\t\\t0x8946: 0x5b87,\\n\\t\\t\\t\\t\\t\\t0x8947: 0x70cf,\\n\\t\\t\\t\\t\\t\\t0x8948: 0x7fbd,\\n\\t\\t\\t\\t\\t\\t0x8949: 0x8fc2,\\n\\t\\t\\t\\t\\t\\t0x894a: 0x96e8,\\n\\t\\t\\t\\t\\t\\t0x894b: 0x536f,\\n\\t\\t\\t\\t\\t\\t0x894c: 0x9d5c,\\n\\t\\t\\t\\t\\t\\t0x894d: 0x7aba,\\n\\t\\t\\t\\t\\t\\t0x894e: 0x4e11,\\n\\t\\t\\t\\t\\t\\t0x894f: 0x7893,\\n\\t\\t\\t\\t\\t\\t0x8950: 0x81fc,\\n\\t\\t\\t\\t\\t\\t0x8951: 0x6e26,\\n\\t\\t\\t\\t\\t\\t0x8952: 0x5618,\\n\\t\\t\\t\\t\\t\\t0x8953: 0x5504,\\n\\t\\t\\t\\t\\t\\t0x8954: 0x6b1d,\\n\\t\\t\\t\\t\\t\\t0x8955: 0x851a,\\n\\t\\t\\t\\t\\t\\t0x8956: 0x9c3b,\\n\\t\\t\\t\\t\\t\\t0x8957: 0x59e5,\\n\\t\\t\\t\\t\\t\\t0x8958: 0x53a9,\\n\\t\\t\\t\\t\\t\\t0x8959: 0x6d66,\\n\\t\\t\\t\\t\\t\\t0x895a: 0x74dc,\\n\\t\\t\\t\\t\\t\\t0x895b: 0x958f,\\n\\t\\t\\t\\t\\t\\t0x895c: 0x5642,\\n\\t\\t\\t\\t\\t\\t0x895d: 0x4e91,\\n\\t\\t\\t\\t\\t\\t0x895e: 0x904b,\\n\\t\\t\\t\\t\\t\\t0x895f: 0x96f2,\\n\\t\\t\\t\\t\\t\\t0x8960: 0x834f,\\n\\t\\t\\t\\t\\t\\t0x8961: 0x990c,\\n\\t\\t\\t\\t\\t\\t0x8962: 0x53e1,\\n\\t\\t\\t\\t\\t\\t0x8963: 0x55b6,\\n\\t\\t\\t\\t\\t\\t0x8964: 0x5b30,\\n\\t\\t\\t\\t\\t\\t0x8965: 0x5f71,\\n\\t\\t\\t\\t\\t\\t0x8966: 0x6620,\\n\\t\\t\\t\\t\\t\\t0x8967: 0x66f3,\\n\\t\\t\\t\\t\\t\\t0x8968: 0x6804,\\n\\t\\t\\t\\t\\t\\t0x8969: 0x6c38,\\n\\t\\t\\t\\t\\t\\t0x896a: 0x6cf3,\\n\\t\\t\\t\\t\\t\\t0x896b: 0x6d29,\\n\\t\\t\\t\\t\\t\\t0x896c: 0x745b,\\n\\t\\t\\t\\t\\t\\t0x896d: 0x76c8,\\n\\t\\t\\t\\t\\t\\t0x896e: 0x7a4e,\\n\\t\\t\\t\\t\\t\\t0x896f: 0x9834,\\n\\t\\t\\t\\t\\t\\t0x8970: 0x82f1,\\n\\t\\t\\t\\t\\t\\t0x8971: 0x885b,\\n\\t\\t\\t\\t\\t\\t0x8972: 0x8a60,\\n\\t\\t\\t\\t\\t\\t0x8973: 0x92ed,\\n\\t\\t\\t\\t\\t\\t0x8974: 0x6db2,\\n\\t\\t\\t\\t\\t\\t0x8975: 0x75ab,\\n\\t\\t\\t\\t\\t\\t0x8976: 0x76ca,\\n\\t\\t\\t\\t\\t\\t0x8977: 0x99c5,\\n\\t\\t\\t\\t\\t\\t0x8978: 0x60a6,\\n\\t\\t\\t\\t\\t\\t0x8979: 0x8b01,\\n\\t\\t\\t\\t\\t\\t0x897a: 0x8d8a,\\n\\t\\t\\t\\t\\t\\t0x897b: 0x95b2,\\n\\t\\t\\t\\t\\t\\t0x897c: 0x698e,\\n\\t\\t\\t\\t\\t\\t0x897d: 0x53ad,\\n\\t\\t\\t\\t\\t\\t0x897e: 0x5186,\\n\\t\\t\\t\\t\\t\\t0x8980: 0x5712,\\n\\t\\t\\t\\t\\t\\t0x8981: 0x5830,\\n\\t\\t\\t\\t\\t\\t0x8982: 0x5944,\\n\\t\\t\\t\\t\\t\\t0x8983: 0x5bb4,\\n\\t\\t\\t\\t\\t\\t0x8984: 0x5ef6,\\n\\t\\t\\t\\t\\t\\t0x8985: 0x6028,\\n\\t\\t\\t\\t\\t\\t0x8986: 0x63a9,\\n\\t\\t\\t\\t\\t\\t0x8987: 0x63f4,\\n\\t\\t\\t\\t\\t\\t0x8988: 0x6cbf,\\n\\t\\t\\t\\t\\t\\t0x8989: 0x6f14,\\n\\t\\t\\t\\t\\t\\t0x898a: 0x708e,\\n\\t\\t\\t\\t\\t\\t0x898b: 0x7114,\\n\\t\\t\\t\\t\\t\\t0x898c: 0x7159,\\n\\t\\t\\t\\t\\t\\t0x898d: 0x71d5,\\n\\t\\t\\t\\t\\t\\t0x898e: 0x733f,\\n\\t\\t\\t\\t\\t\\t0x898f: 0x7e01,\\n\\t\\t\\t\\t\\t\\t0x8990: 0x8276,\\n\\t\\t\\t\\t\\t\\t0x8991: 0x82d1,\\n\\t\\t\\t\\t\\t\\t0x8992: 0x8597,\\n\\t\\t\\t\\t\\t\\t0x8993: 0x9060,\\n\\t\\t\\t\\t\\t\\t0x8994: 0x925b,\\n\\t\\t\\t\\t\\t\\t0x8995: 0x9d1b,\\n\\t\\t\\t\\t\\t\\t0x8996: 0x5869,\\n\\t\\t\\t\\t\\t\\t0x8997: 0x65bc,\\n\\t\\t\\t\\t\\t\\t0x8998: 0x6c5a,\\n\\t\\t\\t\\t\\t\\t0x8999: 0x7525,\\n\\t\\t\\t\\t\\t\\t0x899a: 0x51f9,\\n\\t\\t\\t\\t\\t\\t0x899b: 0x592e,\\n\\t\\t\\t\\t\\t\\t0x899c: 0x5965,\\n\\t\\t\\t\\t\\t\\t0x899d: 0x5f80,\\n\\t\\t\\t\\t\\t\\t0x899e: 0x5fdc,\\n\\t\\t\\t\\t\\t\\t0x899f: 0x62bc,\\n\\t\\t\\t\\t\\t\\t0x89a0: 0x65fa,\\n\\t\\t\\t\\t\\t\\t0x89a1: 0x6a2a,\\n\\t\\t\\t\\t\\t\\t0x89a2: 0x6b27,\\n\\t\\t\\t\\t\\t\\t0x89a3: 0x6bb4,\\n\\t\\t\\t\\t\\t\\t0x89a4: 0x738b,\\n\\t\\t\\t\\t\\t\\t0x89a5: 0x7fc1,\\n\\t\\t\\t\\t\\t\\t0x89a6: 0x8956,\\n\\t\\t\\t\\t\\t\\t0x89a7: 0x9d2c,\\n\\t\\t\\t\\t\\t\\t0x89a8: 0x9d0e,\\n\\t\\t\\t\\t\\t\\t0x89a9: 0x9ec4,\\n\\t\\t\\t\\t\\t\\t0x89aa: 0x5ca1,\\n\\t\\t\\t\\t\\t\\t0x89ab: 0x6c96,\\n\\t\\t\\t\\t\\t\\t0x89ac: 0x837b,\\n\\t\\t\\t\\t\\t\\t0x89ad: 0x5104,\\n\\t\\t\\t\\t\\t\\t0x89ae: 0x5c4b,\\n\\t\\t\\t\\t\\t\\t0x89af: 0x61b6,\\n\\t\\t\\t\\t\\t\\t0x89b0: 0x81c6,\\n\\t\\t\\t\\t\\t\\t0x89b1: 0x6876,\\n\\t\\t\\t\\t\\t\\t0x89b2: 0x7261,\\n\\t\\t\\t\\t\\t\\t0x89b3: 0x4e59,\\n\\t\\t\\t\\t\\t\\t0x89b4: 0x4ffa,\\n\\t\\t\\t\\t\\t\\t0x89b5: 0x5378,\\n\\t\\t\\t\\t\\t\\t0x89b6: 0x6069,\\n\\t\\t\\t\\t\\t\\t0x89b7: 0x6e29,\\n\\t\\t\\t\\t\\t\\t0x89b8: 0x7a4f,\\n\\t\\t\\t\\t\\t\\t0x89b9: 0x97f3,\\n\\t\\t\\t\\t\\t\\t0x89ba: 0x4e0b,\\n\\t\\t\\t\\t\\t\\t0x89bb: 0x5316,\\n\\t\\t\\t\\t\\t\\t0x89bc: 0x4eee,\\n\\t\\t\\t\\t\\t\\t0x89bd: 0x4f55,\\n\\t\\t\\t\\t\\t\\t0x89be: 0x4f3d,\\n\\t\\t\\t\\t\\t\\t0x89bf: 0x4fa1,\\n\\t\\t\\t\\t\\t\\t0x89c0: 0x4f73,\\n\\t\\t\\t\\t\\t\\t0x89c1: 0x52a0,\\n\\t\\t\\t\\t\\t\\t0x89c2: 0x53ef,\\n\\t\\t\\t\\t\\t\\t0x89c3: 0x5609,\\n\\t\\t\\t\\t\\t\\t0x89c4: 0x590f,\\n\\t\\t\\t\\t\\t\\t0x89c5: 0x5ac1,\\n\\t\\t\\t\\t\\t\\t0x89c6: 0x5bb6,\\n\\t\\t\\t\\t\\t\\t0x89c7: 0x5be1,\\n\\t\\t\\t\\t\\t\\t0x89c8: 0x79d1,\\n\\t\\t\\t\\t\\t\\t0x89c9: 0x6687,\\n\\t\\t\\t\\t\\t\\t0x89ca: 0x679c,\\n\\t\\t\\t\\t\\t\\t0x89cb: 0x67b6,\\n\\t\\t\\t\\t\\t\\t0x89cc: 0x6b4c,\\n\\t\\t\\t\\t\\t\\t0x89cd: 0x6cb3,\\n\\t\\t\\t\\t\\t\\t0x89ce: 0x706b,\\n\\t\\t\\t\\t\\t\\t0x89cf: 0x73c2,\\n\\t\\t\\t\\t\\t\\t0x89d0: 0x798d,\\n\\t\\t\\t\\t\\t\\t0x89d1: 0x79be,\\n\\t\\t\\t\\t\\t\\t0x89d2: 0x7a3c,\\n\\t\\t\\t\\t\\t\\t0x89d3: 0x7b87,\\n\\t\\t\\t\\t\\t\\t0x89d4: 0x82b1,\\n\\t\\t\\t\\t\\t\\t0x89d5: 0x82db,\\n\\t\\t\\t\\t\\t\\t0x89d6: 0x8304,\\n\\t\\t\\t\\t\\t\\t0x89d7: 0x8377,\\n\\t\\t\\t\\t\\t\\t0x89d8: 0x83ef,\\n\\t\\t\\t\\t\\t\\t0x89d9: 0x83d3,\\n\\t\\t\\t\\t\\t\\t0x89da: 0x8766,\\n\\t\\t\\t\\t\\t\\t0x89db: 0x8ab2,\\n\\t\\t\\t\\t\\t\\t0x89dc: 0x5629,\\n\\t\\t\\t\\t\\t\\t0x89dd: 0x8ca8,\\n\\t\\t\\t\\t\\t\\t0x89de: 0x8fe6,\\n\\t\\t\\t\\t\\t\\t0x89df: 0x904e,\\n\\t\\t\\t\\t\\t\\t0x89e0: 0x971e,\\n\\t\\t\\t\\t\\t\\t0x89e1: 0x868a,\\n\\t\\t\\t\\t\\t\\t0x89e2: 0x4fc4,\\n\\t\\t\\t\\t\\t\\t0x89e3: 0x5ce8,\\n\\t\\t\\t\\t\\t\\t0x89e4: 0x6211,\\n\\t\\t\\t\\t\\t\\t0x89e5: 0x7259,\\n\\t\\t\\t\\t\\t\\t0x89e6: 0x753b,\\n\\t\\t\\t\\t\\t\\t0x89e7: 0x81e5,\\n\\t\\t\\t\\t\\t\\t0x89e8: 0x82bd,\\n\\t\\t\\t\\t\\t\\t0x89e9: 0x86fe,\\n\\t\\t\\t\\t\\t\\t0x89ea: 0x8cc0,\\n\\t\\t\\t\\t\\t\\t0x89eb: 0x96c5,\\n\\t\\t\\t\\t\\t\\t0x89ec: 0x9913,\\n\\t\\t\\t\\t\\t\\t0x89ed: 0x99d5,\\n\\t\\t\\t\\t\\t\\t0x89ee: 0x4ecb,\\n\\t\\t\\t\\t\\t\\t0x89ef: 0x4f1a,\\n\\t\\t\\t\\t\\t\\t0x89f0: 0x89e3,\\n\\t\\t\\t\\t\\t\\t0x89f1: 0x56de,\\n\\t\\t\\t\\t\\t\\t0x89f2: 0x584a,\\n\\t\\t\\t\\t\\t\\t0x89f3: 0x58ca,\\n\\t\\t\\t\\t\\t\\t0x89f4: 0x5efb,\\n\\t\\t\\t\\t\\t\\t0x89f5: 0x5feb,\\n\\t\\t\\t\\t\\t\\t0x89f6: 0x602a,\\n\\t\\t\\t\\t\\t\\t0x89f7: 0x6094,\\n\\t\\t\\t\\t\\t\\t0x89f8: 0x6062,\\n\\t\\t\\t\\t\\t\\t0x89f9: 0x61d0,\\n\\t\\t\\t\\t\\t\\t0x89fa: 0x6212,\\n\\t\\t\\t\\t\\t\\t0x89fb: 0x62d0,\\n\\t\\t\\t\\t\\t\\t0x89fc: 0x6539,\\n\\t\\t\\t\\t\\t\\t0x8a40: 0x9b41,\\n\\t\\t\\t\\t\\t\\t0x8a41: 0x6666,\\n\\t\\t\\t\\t\\t\\t0x8a42: 0x68b0,\\n\\t\\t\\t\\t\\t\\t0x8a43: 0x6d77,\\n\\t\\t\\t\\t\\t\\t0x8a44: 0x7070,\\n\\t\\t\\t\\t\\t\\t0x8a45: 0x754c,\\n\\t\\t\\t\\t\\t\\t0x8a46: 0x7686,\\n\\t\\t\\t\\t\\t\\t0x8a47: 0x7d75,\\n\\t\\t\\t\\t\\t\\t0x8a48: 0x82a5,\\n\\t\\t\\t\\t\\t\\t0x8a49: 0x87f9,\\n\\t\\t\\t\\t\\t\\t0x8a4a: 0x958b,\\n\\t\\t\\t\\t\\t\\t0x8a4b: 0x968e,\\n\\t\\t\\t\\t\\t\\t0x8a4c: 0x8c9d,\\n\\t\\t\\t\\t\\t\\t0x8a4d: 0x51f1,\\n\\t\\t\\t\\t\\t\\t0x8a4e: 0x52be,\\n\\t\\t\\t\\t\\t\\t0x8a4f: 0x5916,\\n\\t\\t\\t\\t\\t\\t0x8a50: 0x54b3,\\n\\t\\t\\t\\t\\t\\t0x8a51: 0x5bb3,\\n\\t\\t\\t\\t\\t\\t0x8a52: 0x5d16,\\n\\t\\t\\t\\t\\t\\t0x8a53: 0x6168,\\n\\t\\t\\t\\t\\t\\t0x8a54: 0x6982,\\n\\t\\t\\t\\t\\t\\t0x8a55: 0x6daf,\\n\\t\\t\\t\\t\\t\\t0x8a56: 0x788d,\\n\\t\\t\\t\\t\\t\\t0x8a57: 0x84cb,\\n\\t\\t\\t\\t\\t\\t0x8a58: 0x8857,\\n\\t\\t\\t\\t\\t\\t0x8a59: 0x8a72,\\n\\t\\t\\t\\t\\t\\t0x8a5a: 0x93a7,\\n\\t\\t\\t\\t\\t\\t0x8a5b: 0x9ab8,\\n\\t\\t\\t\\t\\t\\t0x8a5c: 0x6d6c,\\n\\t\\t\\t\\t\\t\\t0x8a5d: 0x99a8,\\n\\t\\t\\t\\t\\t\\t0x8a5e: 0x86d9,\\n\\t\\t\\t\\t\\t\\t0x8a5f: 0x57a3,\\n\\t\\t\\t\\t\\t\\t0x8a60: 0x67ff,\\n\\t\\t\\t\\t\\t\\t0x8a61: 0x86ce,\\n\\t\\t\\t\\t\\t\\t0x8a62: 0x920e,\\n\\t\\t\\t\\t\\t\\t0x8a63: 0x5283,\\n\\t\\t\\t\\t\\t\\t0x8a64: 0x5687,\\n\\t\\t\\t\\t\\t\\t0x8a65: 0x5404,\\n\\t\\t\\t\\t\\t\\t0x8a66: 0x5ed3,\\n\\t\\t\\t\\t\\t\\t0x8a67: 0x62e1,\\n\\t\\t\\t\\t\\t\\t0x8a68: 0x64b9,\\n\\t\\t\\t\\t\\t\\t0x8a69: 0x683c,\\n\\t\\t\\t\\t\\t\\t0x8a6a: 0x6838,\\n\\t\\t\\t\\t\\t\\t0x8a6b: 0x6bbb,\\n\\t\\t\\t\\t\\t\\t0x8a6c: 0x7372,\\n\\t\\t\\t\\t\\t\\t0x8a6d: 0x78ba,\\n\\t\\t\\t\\t\\t\\t0x8a6e: 0x7a6b,\\n\\t\\t\\t\\t\\t\\t0x8a6f: 0x899a,\\n\\t\\t\\t\\t\\t\\t0x8a70: 0x89d2,\\n\\t\\t\\t\\t\\t\\t0x8a71: 0x8d6b,\\n\\t\\t\\t\\t\\t\\t0x8a72: 0x8f03,\\n\\t\\t\\t\\t\\t\\t0x8a73: 0x90ed,\\n\\t\\t\\t\\t\\t\\t0x8a74: 0x95a3,\\n\\t\\t\\t\\t\\t\\t0x8a75: 0x9694,\\n\\t\\t\\t\\t\\t\\t0x8a76: 0x9769,\\n\\t\\t\\t\\t\\t\\t0x8a77: 0x5b66,\\n\\t\\t\\t\\t\\t\\t0x8a78: 0x5cb3,\\n\\t\\t\\t\\t\\t\\t0x8a79: 0x697d,\\n\\t\\t\\t\\t\\t\\t0x8a7a: 0x984d,\\n\\t\\t\\t\\t\\t\\t0x8a7b: 0x984e,\\n\\t\\t\\t\\t\\t\\t0x8a7c: 0x639b,\\n\\t\\t\\t\\t\\t\\t0x8a7d: 0x7b20,\\n\\t\\t\\t\\t\\t\\t0x8a7e: 0x6a2b,\\n\\t\\t\\t\\t\\t\\t0x8a80: 0x6a7f,\\n\\t\\t\\t\\t\\t\\t0x8a81: 0x68b6,\\n\\t\\t\\t\\t\\t\\t0x8a82: 0x9c0d,\\n\\t\\t\\t\\t\\t\\t0x8a83: 0x6f5f,\\n\\t\\t\\t\\t\\t\\t0x8a84: 0x5272,\\n\\t\\t\\t\\t\\t\\t0x8a85: 0x559d,\\n\\t\\t\\t\\t\\t\\t0x8a86: 0x6070,\\n\\t\\t\\t\\t\\t\\t0x8a87: 0x62ec,\\n\\t\\t\\t\\t\\t\\t0x8a88: 0x6d3b,\\n\\t\\t\\t\\t\\t\\t0x8a89: 0x6e07,\\n\\t\\t\\t\\t\\t\\t0x8a8a: 0x6ed1,\\n\\t\\t\\t\\t\\t\\t0x8a8b: 0x845b,\\n\\t\\t\\t\\t\\t\\t0x8a8c: 0x8910,\\n\\t\\t\\t\\t\\t\\t0x8a8d: 0x8f44,\\n\\t\\t\\t\\t\\t\\t0x8a8e: 0x4e14,\\n\\t\\t\\t\\t\\t\\t0x8a8f: 0x9c39,\\n\\t\\t\\t\\t\\t\\t0x8a90: 0x53f6,\\n\\t\\t\\t\\t\\t\\t0x8a91: 0x691b,\\n\\t\\t\\t\\t\\t\\t0x8a92: 0x6a3a,\\n\\t\\t\\t\\t\\t\\t0x8a93: 0x9784,\\n\\t\\t\\t\\t\\t\\t0x8a94: 0x682a,\\n\\t\\t\\t\\t\\t\\t0x8a95: 0x515c,\\n\\t\\t\\t\\t\\t\\t0x8a96: 0x7ac3,\\n\\t\\t\\t\\t\\t\\t0x8a97: 0x84b2,\\n\\t\\t\\t\\t\\t\\t0x8a98: 0x91dc,\\n\\t\\t\\t\\t\\t\\t0x8a99: 0x938c,\\n\\t\\t\\t\\t\\t\\t0x8a9a: 0x565b,\\n\\t\\t\\t\\t\\t\\t0x8a9b: 0x9d28,\\n\\t\\t\\t\\t\\t\\t0x8a9c: 0x6822,\\n\\t\\t\\t\\t\\t\\t0x8a9d: 0x8305,\\n\\t\\t\\t\\t\\t\\t0x8a9e: 0x8431,\\n\\t\\t\\t\\t\\t\\t0x8a9f: 0x7ca5,\\n\\t\\t\\t\\t\\t\\t0x8aa0: 0x5208,\\n\\t\\t\\t\\t\\t\\t0x8aa1: 0x82c5,\\n\\t\\t\\t\\t\\t\\t0x8aa2: 0x74e6,\\n\\t\\t\\t\\t\\t\\t0x8aa3: 0x4e7e,\\n\\t\\t\\t\\t\\t\\t0x8aa4: 0x4f83,\\n\\t\\t\\t\\t\\t\\t0x8aa5: 0x51a0,\\n\\t\\t\\t\\t\\t\\t0x8aa6: 0x5bd2,\\n\\t\\t\\t\\t\\t\\t0x8aa7: 0x520a,\\n\\t\\t\\t\\t\\t\\t0x8aa8: 0x52d8,\\n\\t\\t\\t\\t\\t\\t0x8aa9: 0x52e7,\\n\\t\\t\\t\\t\\t\\t0x8aaa: 0x5dfb,\\n\\t\\t\\t\\t\\t\\t0x8aab: 0x559a,\\n\\t\\t\\t\\t\\t\\t0x8aac: 0x582a,\\n\\t\\t\\t\\t\\t\\t0x8aad: 0x59e6,\\n\\t\\t\\t\\t\\t\\t0x8aae: 0x5b8c,\\n\\t\\t\\t\\t\\t\\t0x8aaf: 0x5b98,\\n\\t\\t\\t\\t\\t\\t0x8ab0: 0x5bdb,\\n\\t\\t\\t\\t\\t\\t0x8ab1: 0x5e72,\\n\\t\\t\\t\\t\\t\\t0x8ab2: 0x5e79,\\n\\t\\t\\t\\t\\t\\t0x8ab3: 0x60a3,\\n\\t\\t\\t\\t\\t\\t0x8ab4: 0x611f,\\n\\t\\t\\t\\t\\t\\t0x8ab5: 0x6163,\\n\\t\\t\\t\\t\\t\\t0x8ab6: 0x61be,\\n\\t\\t\\t\\t\\t\\t0x8ab7: 0x63db,\\n\\t\\t\\t\\t\\t\\t0x8ab8: 0x6562,\\n\\t\\t\\t\\t\\t\\t0x8ab9: 0x67d1,\\n\\t\\t\\t\\t\\t\\t0x8aba: 0x6853,\\n\\t\\t\\t\\t\\t\\t0x8abb: 0x68fa,\\n\\t\\t\\t\\t\\t\\t0x8abc: 0x6b3e,\\n\\t\\t\\t\\t\\t\\t0x8abd: 0x6b53,\\n\\t\\t\\t\\t\\t\\t0x8abe: 0x6c57,\\n\\t\\t\\t\\t\\t\\t0x8abf: 0x6f22,\\n\\t\\t\\t\\t\\t\\t0x8ac0: 0x6f97,\\n\\t\\t\\t\\t\\t\\t0x8ac1: 0x6f45,\\n\\t\\t\\t\\t\\t\\t0x8ac2: 0x74b0,\\n\\t\\t\\t\\t\\t\\t0x8ac3: 0x7518,\\n\\t\\t\\t\\t\\t\\t0x8ac4: 0x76e3,\\n\\t\\t\\t\\t\\t\\t0x8ac5: 0x770b,\\n\\t\\t\\t\\t\\t\\t0x8ac6: 0x7aff,\\n\\t\\t\\t\\t\\t\\t0x8ac7: 0x7ba1,\\n\\t\\t\\t\\t\\t\\t0x8ac8: 0x7c21,\\n\\t\\t\\t\\t\\t\\t0x8ac9: 0x7de9,\\n\\t\\t\\t\\t\\t\\t0x8aca: 0x7f36,\\n\\t\\t\\t\\t\\t\\t0x8acb: 0x7ff0,\\n\\t\\t\\t\\t\\t\\t0x8acc: 0x809d,\\n\\t\\t\\t\\t\\t\\t0x8acd: 0x8266,\\n\\t\\t\\t\\t\\t\\t0x8ace: 0x839e,\\n\\t\\t\\t\\t\\t\\t0x8acf: 0x89b3,\\n\\t\\t\\t\\t\\t\\t0x8ad0: 0x8acc,\\n\\t\\t\\t\\t\\t\\t0x8ad1: 0x8cab,\\n\\t\\t\\t\\t\\t\\t0x8ad2: 0x9084,\\n\\t\\t\\t\\t\\t\\t0x8ad3: 0x9451,\\n\\t\\t\\t\\t\\t\\t0x8ad4: 0x9593,\\n\\t\\t\\t\\t\\t\\t0x8ad5: 0x9591,\\n\\t\\t\\t\\t\\t\\t0x8ad6: 0x95a2,\\n\\t\\t\\t\\t\\t\\t0x8ad7: 0x9665,\\n\\t\\t\\t\\t\\t\\t0x8ad8: 0x97d3,\\n\\t\\t\\t\\t\\t\\t0x8ad9: 0x9928,\\n\\t\\t\\t\\t\\t\\t0x8ada: 0x8218,\\n\\t\\t\\t\\t\\t\\t0x8adb: 0x4e38,\\n\\t\\t\\t\\t\\t\\t0x8adc: 0x542b,\\n\\t\\t\\t\\t\\t\\t0x8add: 0x5cb8,\\n\\t\\t\\t\\t\\t\\t0x8ade: 0x5dcc,\\n\\t\\t\\t\\t\\t\\t0x8adf: 0x73a9,\\n\\t\\t\\t\\t\\t\\t0x8ae0: 0x764c,\\n\\t\\t\\t\\t\\t\\t0x8ae1: 0x773c,\\n\\t\\t\\t\\t\\t\\t0x8ae2: 0x5ca9,\\n\\t\\t\\t\\t\\t\\t0x8ae3: 0x7feb,\\n\\t\\t\\t\\t\\t\\t0x8ae4: 0x8d0b,\\n\\t\\t\\t\\t\\t\\t0x8ae5: 0x96c1,\\n\\t\\t\\t\\t\\t\\t0x8ae6: 0x9811,\\n\\t\\t\\t\\t\\t\\t0x8ae7: 0x9854,\\n\\t\\t\\t\\t\\t\\t0x8ae8: 0x9858,\\n\\t\\t\\t\\t\\t\\t0x8ae9: 0x4f01,\\n\\t\\t\\t\\t\\t\\t0x8aea: 0x4f0e,\\n\\t\\t\\t\\t\\t\\t0x8aeb: 0x5371,\\n\\t\\t\\t\\t\\t\\t0x8aec: 0x559c,\\n\\t\\t\\t\\t\\t\\t0x8aed: 0x5668,\\n\\t\\t\\t\\t\\t\\t0x8aee: 0x57fa,\\n\\t\\t\\t\\t\\t\\t0x8aef: 0x5947,\\n\\t\\t\\t\\t\\t\\t0x8af0: 0x5b09,\\n\\t\\t\\t\\t\\t\\t0x8af1: 0x5bc4,\\n\\t\\t\\t\\t\\t\\t0x8af2: 0x5c90,\\n\\t\\t\\t\\t\\t\\t0x8af3: 0x5e0c,\\n\\t\\t\\t\\t\\t\\t0x8af4: 0x5e7e,\\n\\t\\t\\t\\t\\t\\t0x8af5: 0x5fcc,\\n\\t\\t\\t\\t\\t\\t0x8af6: 0x63ee,\\n\\t\\t\\t\\t\\t\\t0x8af7: 0x673a,\\n\\t\\t\\t\\t\\t\\t0x8af8: 0x65d7,\\n\\t\\t\\t\\t\\t\\t0x8af9: 0x65e2,\\n\\t\\t\\t\\t\\t\\t0x8afa: 0x671f,\\n\\t\\t\\t\\t\\t\\t0x8afb: 0x68cb,\\n\\t\\t\\t\\t\\t\\t0x8afc: 0x68c4,\\n\\t\\t\\t\\t\\t\\t0x8b40: 0x6a5f,\\n\\t\\t\\t\\t\\t\\t0x8b41: 0x5e30,\\n\\t\\t\\t\\t\\t\\t0x8b42: 0x6bc5,\\n\\t\\t\\t\\t\\t\\t0x8b43: 0x6c17,\\n\\t\\t\\t\\t\\t\\t0x8b44: 0x6c7d,\\n\\t\\t\\t\\t\\t\\t0x8b45: 0x757f,\\n\\t\\t\\t\\t\\t\\t0x8b46: 0x7948,\\n\\t\\t\\t\\t\\t\\t0x8b47: 0x5b63,\\n\\t\\t\\t\\t\\t\\t0x8b48: 0x7a00,\\n\\t\\t\\t\\t\\t\\t0x8b49: 0x7d00,\\n\\t\\t\\t\\t\\t\\t0x8b4a: 0x5fbd,\\n\\t\\t\\t\\t\\t\\t0x8b4b: 0x898f,\\n\\t\\t\\t\\t\\t\\t0x8b4c: 0x8a18,\\n\\t\\t\\t\\t\\t\\t0x8b4d: 0x8cb4,\\n\\t\\t\\t\\t\\t\\t0x8b4e: 0x8d77,\\n\\t\\t\\t\\t\\t\\t0x8b4f: 0x8ecc,\\n\\t\\t\\t\\t\\t\\t0x8b50: 0x8f1d,\\n\\t\\t\\t\\t\\t\\t0x8b51: 0x98e2,\\n\\t\\t\\t\\t\\t\\t0x8b52: 0x9a0e,\\n\\t\\t\\t\\t\\t\\t0x8b53: 0x9b3c,\\n\\t\\t\\t\\t\\t\\t0x8b54: 0x4e80,\\n\\t\\t\\t\\t\\t\\t0x8b55: 0x507d,\\n\\t\\t\\t\\t\\t\\t0x8b56: 0x5100,\\n\\t\\t\\t\\t\\t\\t0x8b57: 0x5993,\\n\\t\\t\\t\\t\\t\\t0x8b58: 0x5b9c,\\n\\t\\t\\t\\t\\t\\t0x8b59: 0x622f,\\n\\t\\t\\t\\t\\t\\t0x8b5a: 0x6280,\\n\\t\\t\\t\\t\\t\\t0x8b5b: 0x64ec,\\n\\t\\t\\t\\t\\t\\t0x8b5c: 0x6b3a,\\n\\t\\t\\t\\t\\t\\t0x8b5d: 0x72a0,\\n\\t\\t\\t\\t\\t\\t0x8b5e: 0x7591,\\n\\t\\t\\t\\t\\t\\t0x8b5f: 0x7947,\\n\\t\\t\\t\\t\\t\\t0x8b60: 0x7fa9,\\n\\t\\t\\t\\t\\t\\t0x8b61: 0x87fb,\\n\\t\\t\\t\\t\\t\\t0x8b62: 0x8abc,\\n\\t\\t\\t\\t\\t\\t0x8b63: 0x8b70,\\n\\t\\t\\t\\t\\t\\t0x8b64: 0x63ac,\\n\\t\\t\\t\\t\\t\\t0x8b65: 0x83ca,\\n\\t\\t\\t\\t\\t\\t0x8b66: 0x97a0,\\n\\t\\t\\t\\t\\t\\t0x8b67: 0x5409,\\n\\t\\t\\t\\t\\t\\t0x8b68: 0x5403,\\n\\t\\t\\t\\t\\t\\t0x8b69: 0x55ab,\\n\\t\\t\\t\\t\\t\\t0x8b6a: 0x6854,\\n\\t\\t\\t\\t\\t\\t0x8b6b: 0x6a58,\\n\\t\\t\\t\\t\\t\\t0x8b6c: 0x8a70,\\n\\t\\t\\t\\t\\t\\t0x8b6d: 0x7827,\\n\\t\\t\\t\\t\\t\\t0x8b6e: 0x6775,\\n\\t\\t\\t\\t\\t\\t0x8b6f: 0x9ecd,\\n\\t\\t\\t\\t\\t\\t0x8b70: 0x5374,\\n\\t\\t\\t\\t\\t\\t0x8b71: 0x5ba2,\\n\\t\\t\\t\\t\\t\\t0x8b72: 0x811a,\\n\\t\\t\\t\\t\\t\\t0x8b73: 0x8650,\\n\\t\\t\\t\\t\\t\\t0x8b74: 0x9006,\\n\\t\\t\\t\\t\\t\\t0x8b75: 0x4e18,\\n\\t\\t\\t\\t\\t\\t0x8b76: 0x4e45,\\n\\t\\t\\t\\t\\t\\t0x8b77: 0x4ec7,\\n\\t\\t\\t\\t\\t\\t0x8b78: 0x4f11,\\n\\t\\t\\t\\t\\t\\t0x8b79: 0x53ca,\\n\\t\\t\\t\\t\\t\\t0x8b7a: 0x5438,\\n\\t\\t\\t\\t\\t\\t0x8b7b: 0x5bae,\\n\\t\\t\\t\\t\\t\\t0x8b7c: 0x5f13,\\n\\t\\t\\t\\t\\t\\t0x8b7d: 0x6025,\\n\\t\\t\\t\\t\\t\\t0x8b7e: 0x6551,\\n\\t\\t\\t\\t\\t\\t0x8b80: 0x673d,\\n\\t\\t\\t\\t\\t\\t0x8b81: 0x6c42,\\n\\t\\t\\t\\t\\t\\t0x8b82: 0x6c72,\\n\\t\\t\\t\\t\\t\\t0x8b83: 0x6ce3,\\n\\t\\t\\t\\t\\t\\t0x8b84: 0x7078,\\n\\t\\t\\t\\t\\t\\t0x8b85: 0x7403,\\n\\t\\t\\t\\t\\t\\t0x8b86: 0x7a76,\\n\\t\\t\\t\\t\\t\\t0x8b87: 0x7aae,\\n\\t\\t\\t\\t\\t\\t0x8b88: 0x7b08,\\n\\t\\t\\t\\t\\t\\t0x8b89: 0x7d1a,\\n\\t\\t\\t\\t\\t\\t0x8b8a: 0x7cfe,\\n\\t\\t\\t\\t\\t\\t0x8b8b: 0x7d66,\\n\\t\\t\\t\\t\\t\\t0x8b8c: 0x65e7,\\n\\t\\t\\t\\t\\t\\t0x8b8d: 0x725b,\\n\\t\\t\\t\\t\\t\\t0x8b8e: 0x53bb,\\n\\t\\t\\t\\t\\t\\t0x8b8f: 0x5c45,\\n\\t\\t\\t\\t\\t\\t0x8b90: 0x5de8,\\n\\t\\t\\t\\t\\t\\t0x8b91: 0x62d2,\\n\\t\\t\\t\\t\\t\\t0x8b92: 0x62e0,\\n\\t\\t\\t\\t\\t\\t0x8b93: 0x6319,\\n\\t\\t\\t\\t\\t\\t0x8b94: 0x6e20,\\n\\t\\t\\t\\t\\t\\t0x8b95: 0x865a,\\n\\t\\t\\t\\t\\t\\t0x8b96: 0x8a31,\\n\\t\\t\\t\\t\\t\\t0x8b97: 0x8ddd,\\n\\t\\t\\t\\t\\t\\t0x8b98: 0x92f8,\\n\\t\\t\\t\\t\\t\\t0x8b99: 0x6f01,\\n\\t\\t\\t\\t\\t\\t0x8b9a: 0x79a6,\\n\\t\\t\\t\\t\\t\\t0x8b9b: 0x9b5a,\\n\\t\\t\\t\\t\\t\\t0x8b9c: 0x4ea8,\\n\\t\\t\\t\\t\\t\\t0x8b9d: 0x4eab,\\n\\t\\t\\t\\t\\t\\t0x8b9e: 0x4eac,\\n\\t\\t\\t\\t\\t\\t0x8b9f: 0x4f9b,\\n\\t\\t\\t\\t\\t\\t0x8ba0: 0x4fa0,\\n\\t\\t\\t\\t\\t\\t0x8ba1: 0x50d1,\\n\\t\\t\\t\\t\\t\\t0x8ba2: 0x5147,\\n\\t\\t\\t\\t\\t\\t0x8ba3: 0x7af6,\\n\\t\\t\\t\\t\\t\\t0x8ba4: 0x5171,\\n\\t\\t\\t\\t\\t\\t0x8ba5: 0x51f6,\\n\\t\\t\\t\\t\\t\\t0x8ba6: 0x5354,\\n\\t\\t\\t\\t\\t\\t0x8ba7: 0x5321,\\n\\t\\t\\t\\t\\t\\t0x8ba8: 0x537f,\\n\\t\\t\\t\\t\\t\\t0x8ba9: 0x53eb,\\n\\t\\t\\t\\t\\t\\t0x8baa: 0x55ac,\\n\\t\\t\\t\\t\\t\\t0x8bab: 0x5883,\\n\\t\\t\\t\\t\\t\\t0x8bac: 0x5ce1,\\n\\t\\t\\t\\t\\t\\t0x8bad: 0x5f37,\\n\\t\\t\\t\\t\\t\\t0x8bae: 0x5f4a,\\n\\t\\t\\t\\t\\t\\t0x8baf: 0x602f,\\n\\t\\t\\t\\t\\t\\t0x8bb0: 0x6050,\\n\\t\\t\\t\\t\\t\\t0x8bb1: 0x606d,\\n\\t\\t\\t\\t\\t\\t0x8bb2: 0x631f,\\n\\t\\t\\t\\t\\t\\t0x8bb3: 0x6559,\\n\\t\\t\\t\\t\\t\\t0x8bb4: 0x6a4b,\\n\\t\\t\\t\\t\\t\\t0x8bb5: 0x6cc1,\\n\\t\\t\\t\\t\\t\\t0x8bb6: 0x72c2,\\n\\t\\t\\t\\t\\t\\t0x8bb7: 0x72ed,\\n\\t\\t\\t\\t\\t\\t0x8bb8: 0x77ef,\\n\\t\\t\\t\\t\\t\\t0x8bb9: 0x80f8,\\n\\t\\t\\t\\t\\t\\t0x8bba: 0x8105,\\n\\t\\t\\t\\t\\t\\t0x8bbb: 0x8208,\\n\\t\\t\\t\\t\\t\\t0x8bbc: 0x854e,\\n\\t\\t\\t\\t\\t\\t0x8bbd: 0x90f7,\\n\\t\\t\\t\\t\\t\\t0x8bbe: 0x93e1,\\n\\t\\t\\t\\t\\t\\t0x8bbf: 0x97ff,\\n\\t\\t\\t\\t\\t\\t0x8bc0: 0x9957,\\n\\t\\t\\t\\t\\t\\t0x8bc1: 0x9a5a,\\n\\t\\t\\t\\t\\t\\t0x8bc2: 0x4ef0,\\n\\t\\t\\t\\t\\t\\t0x8bc3: 0x51dd,\\n\\t\\t\\t\\t\\t\\t0x8bc4: 0x5c2d,\\n\\t\\t\\t\\t\\t\\t0x8bc5: 0x6681,\\n\\t\\t\\t\\t\\t\\t0x8bc6: 0x696d,\\n\\t\\t\\t\\t\\t\\t0x8bc7: 0x5c40,\\n\\t\\t\\t\\t\\t\\t0x8bc8: 0x66f2,\\n\\t\\t\\t\\t\\t\\t0x8bc9: 0x6975,\\n\\t\\t\\t\\t\\t\\t0x8bca: 0x7389,\\n\\t\\t\\t\\t\\t\\t0x8bcb: 0x6850,\\n\\t\\t\\t\\t\\t\\t0x8bcc: 0x7c81,\\n\\t\\t\\t\\t\\t\\t0x8bcd: 0x50c5,\\n\\t\\t\\t\\t\\t\\t0x8bce: 0x52e4,\\n\\t\\t\\t\\t\\t\\t0x8bcf: 0x5747,\\n\\t\\t\\t\\t\\t\\t0x8bd0: 0x5dfe,\\n\\t\\t\\t\\t\\t\\t0x8bd1: 0x9326,\\n\\t\\t\\t\\t\\t\\t0x8bd2: 0x65a4,\\n\\t\\t\\t\\t\\t\\t0x8bd3: 0x6b23,\\n\\t\\t\\t\\t\\t\\t0x8bd4: 0x6b3d,\\n\\t\\t\\t\\t\\t\\t0x8bd5: 0x7434,\\n\\t\\t\\t\\t\\t\\t0x8bd6: 0x7981,\\n\\t\\t\\t\\t\\t\\t0x8bd7: 0x79bd,\\n\\t\\t\\t\\t\\t\\t0x8bd8: 0x7b4b,\\n\\t\\t\\t\\t\\t\\t0x8bd9: 0x7dca,\\n\\t\\t\\t\\t\\t\\t0x8bda: 0x82b9,\\n\\t\\t\\t\\t\\t\\t0x8bdb: 0x83cc,\\n\\t\\t\\t\\t\\t\\t0x8bdc: 0x887f,\\n\\t\\t\\t\\t\\t\\t0x8bdd: 0x895f,\\n\\t\\t\\t\\t\\t\\t0x8bde: 0x8b39,\\n\\t\\t\\t\\t\\t\\t0x8bdf: 0x8fd1,\\n\\t\\t\\t\\t\\t\\t0x8be0: 0x91d1,\\n\\t\\t\\t\\t\\t\\t0x8be1: 0x541f,\\n\\t\\t\\t\\t\\t\\t0x8be2: 0x9280,\\n\\t\\t\\t\\t\\t\\t0x8be3: 0x4e5d,\\n\\t\\t\\t\\t\\t\\t0x8be4: 0x5036,\\n\\t\\t\\t\\t\\t\\t0x8be5: 0x53e5,\\n\\t\\t\\t\\t\\t\\t0x8be6: 0x533a,\\n\\t\\t\\t\\t\\t\\t0x8be7: 0x72d7,\\n\\t\\t\\t\\t\\t\\t0x8be8: 0x7396,\\n\\t\\t\\t\\t\\t\\t0x8be9: 0x77e9,\\n\\t\\t\\t\\t\\t\\t0x8bea: 0x82e6,\\n\\t\\t\\t\\t\\t\\t0x8beb: 0x8eaf,\\n\\t\\t\\t\\t\\t\\t0x8bec: 0x99c6,\\n\\t\\t\\t\\t\\t\\t0x8bed: 0x99c8,\\n\\t\\t\\t\\t\\t\\t0x8bee: 0x99d2,\\n\\t\\t\\t\\t\\t\\t0x8bef: 0x5177,\\n\\t\\t\\t\\t\\t\\t0x8bf0: 0x611a,\\n\\t\\t\\t\\t\\t\\t0x8bf1: 0x865e,\\n\\t\\t\\t\\t\\t\\t0x8bf2: 0x55b0,\\n\\t\\t\\t\\t\\t\\t0x8bf3: 0x7a7a,\\n\\t\\t\\t\\t\\t\\t0x8bf4: 0x5076,\\n\\t\\t\\t\\t\\t\\t0x8bf5: 0x5bd3,\\n\\t\\t\\t\\t\\t\\t0x8bf6: 0x9047,\\n\\t\\t\\t\\t\\t\\t0x8bf7: 0x9685,\\n\\t\\t\\t\\t\\t\\t0x8bf8: 0x4e32,\\n\\t\\t\\t\\t\\t\\t0x8bf9: 0x6adb,\\n\\t\\t\\t\\t\\t\\t0x8bfa: 0x91e7,\\n\\t\\t\\t\\t\\t\\t0x8bfb: 0x5c51,\\n\\t\\t\\t\\t\\t\\t0x8bfc: 0x5c48,\\n\\t\\t\\t\\t\\t\\t0x8c40: 0x6398,\\n\\t\\t\\t\\t\\t\\t0x8c41: 0x7a9f,\\n\\t\\t\\t\\t\\t\\t0x8c42: 0x6c93,\\n\\t\\t\\t\\t\\t\\t0x8c43: 0x9774,\\n\\t\\t\\t\\t\\t\\t0x8c44: 0x8f61,\\n\\t\\t\\t\\t\\t\\t0x8c45: 0x7aaa,\\n\\t\\t\\t\\t\\t\\t0x8c46: 0x718a,\\n\\t\\t\\t\\t\\t\\t0x8c47: 0x9688,\\n\\t\\t\\t\\t\\t\\t0x8c48: 0x7c82,\\n\\t\\t\\t\\t\\t\\t0x8c49: 0x6817,\\n\\t\\t\\t\\t\\t\\t0x8c4a: 0x7e70,\\n\\t\\t\\t\\t\\t\\t0x8c4b: 0x6851,\\n\\t\\t\\t\\t\\t\\t0x8c4c: 0x936c,\\n\\t\\t\\t\\t\\t\\t0x8c4d: 0x52f2,\\n\\t\\t\\t\\t\\t\\t0x8c4e: 0x541b,\\n\\t\\t\\t\\t\\t\\t0x8c4f: 0x85ab,\\n\\t\\t\\t\\t\\t\\t0x8c50: 0x8a13,\\n\\t\\t\\t\\t\\t\\t0x8c51: 0x7fa4,\\n\\t\\t\\t\\t\\t\\t0x8c52: 0x8ecd,\\n\\t\\t\\t\\t\\t\\t0x8c53: 0x90e1,\\n\\t\\t\\t\\t\\t\\t0x8c54: 0x5366,\\n\\t\\t\\t\\t\\t\\t0x8c55: 0x8888,\\n\\t\\t\\t\\t\\t\\t0x8c56: 0x7941,\\n\\t\\t\\t\\t\\t\\t0x8c57: 0x4fc2,\\n\\t\\t\\t\\t\\t\\t0x8c58: 0x50be,\\n\\t\\t\\t\\t\\t\\t0x8c59: 0x5211,\\n\\t\\t\\t\\t\\t\\t0x8c5a: 0x5144,\\n\\t\\t\\t\\t\\t\\t0x8c5b: 0x5553,\\n\\t\\t\\t\\t\\t\\t0x8c5c: 0x572d,\\n\\t\\t\\t\\t\\t\\t0x8c5d: 0x73ea,\\n\\t\\t\\t\\t\\t\\t0x8c5e: 0x578b,\\n\\t\\t\\t\\t\\t\\t0x8c5f: 0x5951,\\n\\t\\t\\t\\t\\t\\t0x8c60: 0x5f62,\\n\\t\\t\\t\\t\\t\\t0x8c61: 0x5f84,\\n\\t\\t\\t\\t\\t\\t0x8c62: 0x6075,\\n\\t\\t\\t\\t\\t\\t0x8c63: 0x6176,\\n\\t\\t\\t\\t\\t\\t0x8c64: 0x6167,\\n\\t\\t\\t\\t\\t\\t0x8c65: 0x61a9,\\n\\t\\t\\t\\t\\t\\t0x8c66: 0x63b2,\\n\\t\\t\\t\\t\\t\\t0x8c67: 0x643a,\\n\\t\\t\\t\\t\\t\\t0x8c68: 0x656c,\\n\\t\\t\\t\\t\\t\\t0x8c69: 0x666f,\\n\\t\\t\\t\\t\\t\\t0x8c6a: 0x6842,\\n\\t\\t\\t\\t\\t\\t0x8c6b: 0x6e13,\\n\\t\\t\\t\\t\\t\\t0x8c6c: 0x7566,\\n\\t\\t\\t\\t\\t\\t0x8c6d: 0x7a3d,\\n\\t\\t\\t\\t\\t\\t0x8c6e: 0x7cfb,\\n\\t\\t\\t\\t\\t\\t0x8c6f: 0x7d4c,\\n\\t\\t\\t\\t\\t\\t0x8c70: 0x7d99,\\n\\t\\t\\t\\t\\t\\t0x8c71: 0x7e4b,\\n\\t\\t\\t\\t\\t\\t0x8c72: 0x7f6b,\\n\\t\\t\\t\\t\\t\\t0x8c73: 0x830e,\\n\\t\\t\\t\\t\\t\\t0x8c74: 0x834a,\\n\\t\\t\\t\\t\\t\\t0x8c75: 0x86cd,\\n\\t\\t\\t\\t\\t\\t0x8c76: 0x8a08,\\n\\t\\t\\t\\t\\t\\t0x8c77: 0x8a63,\\n\\t\\t\\t\\t\\t\\t0x8c78: 0x8b66,\\n\\t\\t\\t\\t\\t\\t0x8c79: 0x8efd,\\n\\t\\t\\t\\t\\t\\t0x8c7a: 0x981a,\\n\\t\\t\\t\\t\\t\\t0x8c7b: 0x9d8f,\\n\\t\\t\\t\\t\\t\\t0x8c7c: 0x82b8,\\n\\t\\t\\t\\t\\t\\t0x8c7d: 0x8fce,\\n\\t\\t\\t\\t\\t\\t0x8c7e: 0x9be8,\\n\\t\\t\\t\\t\\t\\t0x8c80: 0x5287,\\n\\t\\t\\t\\t\\t\\t0x8c81: 0x621f,\\n\\t\\t\\t\\t\\t\\t0x8c82: 0x6483,\\n\\t\\t\\t\\t\\t\\t0x8c83: 0x6fc0,\\n\\t\\t\\t\\t\\t\\t0x8c84: 0x9699,\\n\\t\\t\\t\\t\\t\\t0x8c85: 0x6841,\\n\\t\\t\\t\\t\\t\\t0x8c86: 0x5091,\\n\\t\\t\\t\\t\\t\\t0x8c87: 0x6b20,\\n\\t\\t\\t\\t\\t\\t0x8c88: 0x6c7a,\\n\\t\\t\\t\\t\\t\\t0x8c89: 0x6f54,\\n\\t\\t\\t\\t\\t\\t0x8c8a: 0x7a74,\\n\\t\\t\\t\\t\\t\\t0x8c8b: 0x7d50,\\n\\t\\t\\t\\t\\t\\t0x8c8c: 0x8840,\\n\\t\\t\\t\\t\\t\\t0x8c8d: 0x8a23,\\n\\t\\t\\t\\t\\t\\t0x8c8e: 0x6708,\\n\\t\\t\\t\\t\\t\\t0x8c8f: 0x4ef6,\\n\\t\\t\\t\\t\\t\\t0x8c90: 0x5039,\\n\\t\\t\\t\\t\\t\\t0x8c91: 0x5026,\\n\\t\\t\\t\\t\\t\\t0x8c92: 0x5065,\\n\\t\\t\\t\\t\\t\\t0x8c93: 0x517c,\\n\\t\\t\\t\\t\\t\\t0x8c94: 0x5238,\\n\\t\\t\\t\\t\\t\\t0x8c95: 0x5263,\\n\\t\\t\\t\\t\\t\\t0x8c96: 0x55a7,\\n\\t\\t\\t\\t\\t\\t0x8c97: 0x570f,\\n\\t\\t\\t\\t\\t\\t0x8c98: 0x5805,\\n\\t\\t\\t\\t\\t\\t0x8c99: 0x5acc,\\n\\t\\t\\t\\t\\t\\t0x8c9a: 0x5efa,\\n\\t\\t\\t\\t\\t\\t0x8c9b: 0x61b2,\\n\\t\\t\\t\\t\\t\\t0x8c9c: 0x61f8,\\n\\t\\t\\t\\t\\t\\t0x8c9d: 0x62f3,\\n\\t\\t\\t\\t\\t\\t0x8c9e: 0x6372,\\n\\t\\t\\t\\t\\t\\t0x8c9f: 0x691c,\\n\\t\\t\\t\\t\\t\\t0x8ca0: 0x6a29,\\n\\t\\t\\t\\t\\t\\t0x8ca1: 0x727d,\\n\\t\\t\\t\\t\\t\\t0x8ca2: 0x72ac,\\n\\t\\t\\t\\t\\t\\t0x8ca3: 0x732e,\\n\\t\\t\\t\\t\\t\\t0x8ca4: 0x7814,\\n\\t\\t\\t\\t\\t\\t0x8ca5: 0x786f,\\n\\t\\t\\t\\t\\t\\t0x8ca6: 0x7d79,\\n\\t\\t\\t\\t\\t\\t0x8ca7: 0x770c,\\n\\t\\t\\t\\t\\t\\t0x8ca8: 0x80a9,\\n\\t\\t\\t\\t\\t\\t0x8ca9: 0x898b,\\n\\t\\t\\t\\t\\t\\t0x8caa: 0x8b19,\\n\\t\\t\\t\\t\\t\\t0x8cab: 0x8ce2,\\n\\t\\t\\t\\t\\t\\t0x8cac: 0x8ed2,\\n\\t\\t\\t\\t\\t\\t0x8cad: 0x9063,\\n\\t\\t\\t\\t\\t\\t0x8cae: 0x9375,\\n\\t\\t\\t\\t\\t\\t0x8caf: 0x967a,\\n\\t\\t\\t\\t\\t\\t0x8cb0: 0x9855,\\n\\t\\t\\t\\t\\t\\t0x8cb1: 0x9a13,\\n\\t\\t\\t\\t\\t\\t0x8cb2: 0x9e78,\\n\\t\\t\\t\\t\\t\\t0x8cb3: 0x5143,\\n\\t\\t\\t\\t\\t\\t0x8cb4: 0x539f,\\n\\t\\t\\t\\t\\t\\t0x8cb5: 0x53b3,\\n\\t\\t\\t\\t\\t\\t0x8cb6: 0x5e7b,\\n\\t\\t\\t\\t\\t\\t0x8cb7: 0x5f26,\\n\\t\\t\\t\\t\\t\\t0x8cb8: 0x6e1b,\\n\\t\\t\\t\\t\\t\\t0x8cb9: 0x6e90,\\n\\t\\t\\t\\t\\t\\t0x8cba: 0x7384,\\n\\t\\t\\t\\t\\t\\t0x8cbb: 0x73fe,\\n\\t\\t\\t\\t\\t\\t0x8cbc: 0x7d43,\\n\\t\\t\\t\\t\\t\\t0x8cbd: 0x8237,\\n\\t\\t\\t\\t\\t\\t0x8cbe: 0x8a00,\\n\\t\\t\\t\\t\\t\\t0x8cbf: 0x8afa,\\n\\t\\t\\t\\t\\t\\t0x8cc0: 0x9650,\\n\\t\\t\\t\\t\\t\\t0x8cc1: 0x4e4e,\\n\\t\\t\\t\\t\\t\\t0x8cc2: 0x500b,\\n\\t\\t\\t\\t\\t\\t0x8cc3: 0x53e4,\\n\\t\\t\\t\\t\\t\\t0x8cc4: 0x547c,\\n\\t\\t\\t\\t\\t\\t0x8cc5: 0x56fa,\\n\\t\\t\\t\\t\\t\\t0x8cc6: 0x59d1,\\n\\t\\t\\t\\t\\t\\t0x8cc7: 0x5b64,\\n\\t\\t\\t\\t\\t\\t0x8cc8: 0x5df1,\\n\\t\\t\\t\\t\\t\\t0x8cc9: 0x5eab,\\n\\t\\t\\t\\t\\t\\t0x8cca: 0x5f27,\\n\\t\\t\\t\\t\\t\\t0x8ccb: 0x6238,\\n\\t\\t\\t\\t\\t\\t0x8ccc: 0x6545,\\n\\t\\t\\t\\t\\t\\t0x8ccd: 0x67af,\\n\\t\\t\\t\\t\\t\\t0x8cce: 0x6e56,\\n\\t\\t\\t\\t\\t\\t0x8ccf: 0x72d0,\\n\\t\\t\\t\\t\\t\\t0x8cd0: 0x7cca,\\n\\t\\t\\t\\t\\t\\t0x8cd1: 0x88b4,\\n\\t\\t\\t\\t\\t\\t0x8cd2: 0x80a1,\\n\\t\\t\\t\\t\\t\\t0x8cd3: 0x80e1,\\n\\t\\t\\t\\t\\t\\t0x8cd4: 0x83f0,\\n\\t\\t\\t\\t\\t\\t0x8cd5: 0x864e,\\n\\t\\t\\t\\t\\t\\t0x8cd6: 0x8a87,\\n\\t\\t\\t\\t\\t\\t0x8cd7: 0x8de8,\\n\\t\\t\\t\\t\\t\\t0x8cd8: 0x9237,\\n\\t\\t\\t\\t\\t\\t0x8cd9: 0x96c7,\\n\\t\\t\\t\\t\\t\\t0x8cda: 0x9867,\\n\\t\\t\\t\\t\\t\\t0x8cdb: 0x9f13,\\n\\t\\t\\t\\t\\t\\t0x8cdc: 0x4e94,\\n\\t\\t\\t\\t\\t\\t0x8cdd: 0x4e92,\\n\\t\\t\\t\\t\\t\\t0x8cde: 0x4f0d,\\n\\t\\t\\t\\t\\t\\t0x8cdf: 0x5348,\\n\\t\\t\\t\\t\\t\\t0x8ce0: 0x5449,\\n\\t\\t\\t\\t\\t\\t0x8ce1: 0x543e,\\n\\t\\t\\t\\t\\t\\t0x8ce2: 0x5a2f,\\n\\t\\t\\t\\t\\t\\t0x8ce3: 0x5f8c,\\n\\t\\t\\t\\t\\t\\t0x8ce4: 0x5fa1,\\n\\t\\t\\t\\t\\t\\t0x8ce5: 0x609f,\\n\\t\\t\\t\\t\\t\\t0x8ce6: 0x68a7,\\n\\t\\t\\t\\t\\t\\t0x8ce7: 0x6a8e,\\n\\t\\t\\t\\t\\t\\t0x8ce8: 0x745a,\\n\\t\\t\\t\\t\\t\\t0x8ce9: 0x7881,\\n\\t\\t\\t\\t\\t\\t0x8cea: 0x8a9e,\\n\\t\\t\\t\\t\\t\\t0x8ceb: 0x8aa4,\\n\\t\\t\\t\\t\\t\\t0x8cec: 0x8b77,\\n\\t\\t\\t\\t\\t\\t0x8ced: 0x9190,\\n\\t\\t\\t\\t\\t\\t0x8cee: 0x4e5e,\\n\\t\\t\\t\\t\\t\\t0x8cef: 0x9bc9,\\n\\t\\t\\t\\t\\t\\t0x8cf0: 0x4ea4,\\n\\t\\t\\t\\t\\t\\t0x8cf1: 0x4f7c,\\n\\t\\t\\t\\t\\t\\t0x8cf2: 0x4faf,\\n\\t\\t\\t\\t\\t\\t0x8cf3: 0x5019,\\n\\t\\t\\t\\t\\t\\t0x8cf4: 0x5016,\\n\\t\\t\\t\\t\\t\\t0x8cf5: 0x5149,\\n\\t\\t\\t\\t\\t\\t0x8cf6: 0x516c,\\n\\t\\t\\t\\t\\t\\t0x8cf7: 0x529f,\\n\\t\\t\\t\\t\\t\\t0x8cf8: 0x52b9,\\n\\t\\t\\t\\t\\t\\t0x8cf9: 0x52fe,\\n\\t\\t\\t\\t\\t\\t0x8cfa: 0x539a,\\n\\t\\t\\t\\t\\t\\t0x8cfb: 0x53e3,\\n\\t\\t\\t\\t\\t\\t0x8cfc: 0x5411,\\n\\t\\t\\t\\t\\t\\t0x8d40: 0x540e,\\n\\t\\t\\t\\t\\t\\t0x8d41: 0x5589,\\n\\t\\t\\t\\t\\t\\t0x8d42: 0x5751,\\n\\t\\t\\t\\t\\t\\t0x8d43: 0x57a2,\\n\\t\\t\\t\\t\\t\\t0x8d44: 0x597d,\\n\\t\\t\\t\\t\\t\\t0x8d45: 0x5b54,\\n\\t\\t\\t\\t\\t\\t0x8d46: 0x5b5d,\\n\\t\\t\\t\\t\\t\\t0x8d47: 0x5b8f,\\n\\t\\t\\t\\t\\t\\t0x8d48: 0x5de5,\\n\\t\\t\\t\\t\\t\\t0x8d49: 0x5de7,\\n\\t\\t\\t\\t\\t\\t0x8d4a: 0x5df7,\\n\\t\\t\\t\\t\\t\\t0x8d4b: 0x5e78,\\n\\t\\t\\t\\t\\t\\t0x8d4c: 0x5e83,\\n\\t\\t\\t\\t\\t\\t0x8d4d: 0x5e9a,\\n\\t\\t\\t\\t\\t\\t0x8d4e: 0x5eb7,\\n\\t\\t\\t\\t\\t\\t0x8d4f: 0x5f18,\\n\\t\\t\\t\\t\\t\\t0x8d50: 0x6052,\\n\\t\\t\\t\\t\\t\\t0x8d51: 0x614c,\\n\\t\\t\\t\\t\\t\\t0x8d52: 0x6297,\\n\\t\\t\\t\\t\\t\\t0x8d53: 0x62d8,\\n\\t\\t\\t\\t\\t\\t0x8d54: 0x63a7,\\n\\t\\t\\t\\t\\t\\t0x8d55: 0x653b,\\n\\t\\t\\t\\t\\t\\t0x8d56: 0x6602,\\n\\t\\t\\t\\t\\t\\t0x8d57: 0x6643,\\n\\t\\t\\t\\t\\t\\t0x8d58: 0x66f4,\\n\\t\\t\\t\\t\\t\\t0x8d59: 0x676d,\\n\\t\\t\\t\\t\\t\\t0x8d5a: 0x6821,\\n\\t\\t\\t\\t\\t\\t0x8d5b: 0x6897,\\n\\t\\t\\t\\t\\t\\t0x8d5c: 0x69cb,\\n\\t\\t\\t\\t\\t\\t0x8d5d: 0x6c5f,\\n\\t\\t\\t\\t\\t\\t0x8d5e: 0x6d2a,\\n\\t\\t\\t\\t\\t\\t0x8d5f: 0x6d69,\\n\\t\\t\\t\\t\\t\\t0x8d60: 0x6e2f,\\n\\t\\t\\t\\t\\t\\t0x8d61: 0x6e9d,\\n\\t\\t\\t\\t\\t\\t0x8d62: 0x7532,\\n\\t\\t\\t\\t\\t\\t0x8d63: 0x7687,\\n\\t\\t\\t\\t\\t\\t0x8d64: 0x786c,\\n\\t\\t\\t\\t\\t\\t0x8d65: 0x7a3f,\\n\\t\\t\\t\\t\\t\\t0x8d66: 0x7ce0,\\n\\t\\t\\t\\t\\t\\t0x8d67: 0x7d05,\\n\\t\\t\\t\\t\\t\\t0x8d68: 0x7d18,\\n\\t\\t\\t\\t\\t\\t0x8d69: 0x7d5e,\\n\\t\\t\\t\\t\\t\\t0x8d6a: 0x7db1,\\n\\t\\t\\t\\t\\t\\t0x8d6b: 0x8015,\\n\\t\\t\\t\\t\\t\\t0x8d6c: 0x8003,\\n\\t\\t\\t\\t\\t\\t0x8d6d: 0x80af,\\n\\t\\t\\t\\t\\t\\t0x8d6e: 0x80b1,\\n\\t\\t\\t\\t\\t\\t0x8d6f: 0x8154,\\n\\t\\t\\t\\t\\t\\t0x8d70: 0x818f,\\n\\t\\t\\t\\t\\t\\t0x8d71: 0x822a,\\n\\t\\t\\t\\t\\t\\t0x8d72: 0x8352,\\n\\t\\t\\t\\t\\t\\t0x8d73: 0x884c,\\n\\t\\t\\t\\t\\t\\t0x8d74: 0x8861,\\n\\t\\t\\t\\t\\t\\t0x8d75: 0x8b1b,\\n\\t\\t\\t\\t\\t\\t0x8d76: 0x8ca2,\\n\\t\\t\\t\\t\\t\\t0x8d77: 0x8cfc,\\n\\t\\t\\t\\t\\t\\t0x8d78: 0x90ca,\\n\\t\\t\\t\\t\\t\\t0x8d79: 0x9175,\\n\\t\\t\\t\\t\\t\\t0x8d7a: 0x9271,\\n\\t\\t\\t\\t\\t\\t0x8d7b: 0x783f,\\n\\t\\t\\t\\t\\t\\t0x8d7c: 0x92fc,\\n\\t\\t\\t\\t\\t\\t0x8d7d: 0x95a4,\\n\\t\\t\\t\\t\\t\\t0x8d7e: 0x964d,\\n\\t\\t\\t\\t\\t\\t0x8d80: 0x9805,\\n\\t\\t\\t\\t\\t\\t0x8d81: 0x9999,\\n\\t\\t\\t\\t\\t\\t0x8d82: 0x9ad8,\\n\\t\\t\\t\\t\\t\\t0x8d83: 0x9d3b,\\n\\t\\t\\t\\t\\t\\t0x8d84: 0x525b,\\n\\t\\t\\t\\t\\t\\t0x8d85: 0x52ab,\\n\\t\\t\\t\\t\\t\\t0x8d86: 0x53f7,\\n\\t\\t\\t\\t\\t\\t0x8d87: 0x5408,\\n\\t\\t\\t\\t\\t\\t0x8d88: 0x58d5,\\n\\t\\t\\t\\t\\t\\t0x8d89: 0x62f7,\\n\\t\\t\\t\\t\\t\\t0x8d8a: 0x6fe0,\\n\\t\\t\\t\\t\\t\\t0x8d8b: 0x8c6a,\\n\\t\\t\\t\\t\\t\\t0x8d8c: 0x8f5f,\\n\\t\\t\\t\\t\\t\\t0x8d8d: 0x9eb9,\\n\\t\\t\\t\\t\\t\\t0x8d8e: 0x514b,\\n\\t\\t\\t\\t\\t\\t0x8d8f: 0x523b,\\n\\t\\t\\t\\t\\t\\t0x8d90: 0x544a,\\n\\t\\t\\t\\t\\t\\t0x8d91: 0x56fd,\\n\\t\\t\\t\\t\\t\\t0x8d92: 0x7a40,\\n\\t\\t\\t\\t\\t\\t0x8d93: 0x9177,\\n\\t\\t\\t\\t\\t\\t0x8d94: 0x9d60,\\n\\t\\t\\t\\t\\t\\t0x8d95: 0x9ed2,\\n\\t\\t\\t\\t\\t\\t0x8d96: 0x7344,\\n\\t\\t\\t\\t\\t\\t0x8d97: 0x6f09,\\n\\t\\t\\t\\t\\t\\t0x8d98: 0x8170,\\n\\t\\t\\t\\t\\t\\t0x8d99: 0x7511,\\n\\t\\t\\t\\t\\t\\t0x8d9a: 0x5ffd,\\n\\t\\t\\t\\t\\t\\t0x8d9b: 0x60da,\\n\\t\\t\\t\\t\\t\\t0x8d9c: 0x9aa8,\\n\\t\\t\\t\\t\\t\\t0x8d9d: 0x72db,\\n\\t\\t\\t\\t\\t\\t0x8d9e: 0x8fbc,\\n\\t\\t\\t\\t\\t\\t0x8d9f: 0x6b64,\\n\\t\\t\\t\\t\\t\\t0x8da0: 0x9803,\\n\\t\\t\\t\\t\\t\\t0x8da1: 0x4eca,\\n\\t\\t\\t\\t\\t\\t0x8da2: 0x56f0,\\n\\t\\t\\t\\t\\t\\t0x8da3: 0x5764,\\n\\t\\t\\t\\t\\t\\t0x8da4: 0x58be,\\n\\t\\t\\t\\t\\t\\t0x8da5: 0x5a5a,\\n\\t\\t\\t\\t\\t\\t0x8da6: 0x6068,\\n\\t\\t\\t\\t\\t\\t0x8da7: 0x61c7,\\n\\t\\t\\t\\t\\t\\t0x8da8: 0x660f,\\n\\t\\t\\t\\t\\t\\t0x8da9: 0x6606,\\n\\t\\t\\t\\t\\t\\t0x8daa: 0x6839,\\n\\t\\t\\t\\t\\t\\t0x8dab: 0x68b1,\\n\\t\\t\\t\\t\\t\\t0x8dac: 0x6df7,\\n\\t\\t\\t\\t\\t\\t0x8dad: 0x75d5,\\n\\t\\t\\t\\t\\t\\t0x8dae: 0x7d3a,\\n\\t\\t\\t\\t\\t\\t0x8daf: 0x826e,\\n\\t\\t\\t\\t\\t\\t0x8db0: 0x9b42,\\n\\t\\t\\t\\t\\t\\t0x8db1: 0x4e9b,\\n\\t\\t\\t\\t\\t\\t0x8db2: 0x4f50,\\n\\t\\t\\t\\t\\t\\t0x8db3: 0x53c9,\\n\\t\\t\\t\\t\\t\\t0x8db4: 0x5506,\\n\\t\\t\\t\\t\\t\\t0x8db5: 0x5d6f,\\n\\t\\t\\t\\t\\t\\t0x8db6: 0x5de6,\\n\\t\\t\\t\\t\\t\\t0x8db7: 0x5dee,\\n\\t\\t\\t\\t\\t\\t0x8db8: 0x67fb,\\n\\t\\t\\t\\t\\t\\t0x8db9: 0x6c99,\\n\\t\\t\\t\\t\\t\\t0x8dba: 0x7473,\\n\\t\\t\\t\\t\\t\\t0x8dbb: 0x7802,\\n\\t\\t\\t\\t\\t\\t0x8dbc: 0x8a50,\\n\\t\\t\\t\\t\\t\\t0x8dbd: 0x9396,\\n\\t\\t\\t\\t\\t\\t0x8dbe: 0x88df,\\n\\t\\t\\t\\t\\t\\t0x8dbf: 0x5750,\\n\\t\\t\\t\\t\\t\\t0x8dc0: 0x5ea7,\\n\\t\\t\\t\\t\\t\\t0x8dc1: 0x632b,\\n\\t\\t\\t\\t\\t\\t0x8dc2: 0x50b5,\\n\\t\\t\\t\\t\\t\\t0x8dc3: 0x50ac,\\n\\t\\t\\t\\t\\t\\t0x8dc4: 0x518d,\\n\\t\\t\\t\\t\\t\\t0x8dc5: 0x6700,\\n\\t\\t\\t\\t\\t\\t0x8dc6: 0x54c9,\\n\\t\\t\\t\\t\\t\\t0x8dc7: 0x585e,\\n\\t\\t\\t\\t\\t\\t0x8dc8: 0x59bb,\\n\\t\\t\\t\\t\\t\\t0x8dc9: 0x5bb0,\\n\\t\\t\\t\\t\\t\\t0x8dca: 0x5f69,\\n\\t\\t\\t\\t\\t\\t0x8dcb: 0x624d,\\n\\t\\t\\t\\t\\t\\t0x8dcc: 0x63a1,\\n\\t\\t\\t\\t\\t\\t0x8dcd: 0x683d,\\n\\t\\t\\t\\t\\t\\t0x8dce: 0x6b73,\\n\\t\\t\\t\\t\\t\\t0x8dcf: 0x6e08,\\n\\t\\t\\t\\t\\t\\t0x8dd0: 0x707d,\\n\\t\\t\\t\\t\\t\\t0x8dd1: 0x91c7,\\n\\t\\t\\t\\t\\t\\t0x8dd2: 0x7280,\\n\\t\\t\\t\\t\\t\\t0x8dd3: 0x7815,\\n\\t\\t\\t\\t\\t\\t0x8dd4: 0x7826,\\n\\t\\t\\t\\t\\t\\t0x8dd5: 0x796d,\\n\\t\\t\\t\\t\\t\\t0x8dd6: 0x658e,\\n\\t\\t\\t\\t\\t\\t0x8dd7: 0x7d30,\\n\\t\\t\\t\\t\\t\\t0x8dd8: 0x83dc,\\n\\t\\t\\t\\t\\t\\t0x8dd9: 0x88c1,\\n\\t\\t\\t\\t\\t\\t0x8dda: 0x8f09,\\n\\t\\t\\t\\t\\t\\t0x8ddb: 0x969b,\\n\\t\\t\\t\\t\\t\\t0x8ddc: 0x5264,\\n\\t\\t\\t\\t\\t\\t0x8ddd: 0x5728,\\n\\t\\t\\t\\t\\t\\t0x8dde: 0x6750,\\n\\t\\t\\t\\t\\t\\t0x8ddf: 0x7f6a,\\n\\t\\t\\t\\t\\t\\t0x8de0: 0x8ca1,\\n\\t\\t\\t\\t\\t\\t0x8de1: 0x51b4,\\n\\t\\t\\t\\t\\t\\t0x8de2: 0x5742,\\n\\t\\t\\t\\t\\t\\t0x8de3: 0x962a,\\n\\t\\t\\t\\t\\t\\t0x8de4: 0x583a,\\n\\t\\t\\t\\t\\t\\t0x8de5: 0x698a,\\n\\t\\t\\t\\t\\t\\t0x8de6: 0x80b4,\\n\\t\\t\\t\\t\\t\\t0x8de7: 0x54b2,\\n\\t\\t\\t\\t\\t\\t0x8de8: 0x5d0e,\\n\\t\\t\\t\\t\\t\\t0x8de9: 0x57fc,\\n\\t\\t\\t\\t\\t\\t0x8dea: 0x7895,\\n\\t\\t\\t\\t\\t\\t0x8deb: 0x9dfa,\\n\\t\\t\\t\\t\\t\\t0x8dec: 0x4f5c,\\n\\t\\t\\t\\t\\t\\t0x8ded: 0x524a,\\n\\t\\t\\t\\t\\t\\t0x8dee: 0x548b,\\n\\t\\t\\t\\t\\t\\t0x8def: 0x643e,\\n\\t\\t\\t\\t\\t\\t0x8df0: 0x6628,\\n\\t\\t\\t\\t\\t\\t0x8df1: 0x6714,\\n\\t\\t\\t\\t\\t\\t0x8df2: 0x67f5,\\n\\t\\t\\t\\t\\t\\t0x8df3: 0x7a84,\\n\\t\\t\\t\\t\\t\\t0x8df4: 0x7b56,\\n\\t\\t\\t\\t\\t\\t0x8df5: 0x7d22,\\n\\t\\t\\t\\t\\t\\t0x8df6: 0x932f,\\n\\t\\t\\t\\t\\t\\t0x8df7: 0x685c,\\n\\t\\t\\t\\t\\t\\t0x8df8: 0x9bad,\\n\\t\\t\\t\\t\\t\\t0x8df9: 0x7b39,\\n\\t\\t\\t\\t\\t\\t0x8dfa: 0x5319,\\n\\t\\t\\t\\t\\t\\t0x8dfb: 0x518a,\\n\\t\\t\\t\\t\\t\\t0x8dfc: 0x5237,\\n\\t\\t\\t\\t\\t\\t0x8e40: 0x5bdf,\\n\\t\\t\\t\\t\\t\\t0x8e41: 0x62f6,\\n\\t\\t\\t\\t\\t\\t0x8e42: 0x64ae,\\n\\t\\t\\t\\t\\t\\t0x8e43: 0x64e6,\\n\\t\\t\\t\\t\\t\\t0x8e44: 0x672d,\\n\\t\\t\\t\\t\\t\\t0x8e45: 0x6bba,\\n\\t\\t\\t\\t\\t\\t0x8e46: 0x85a9,\\n\\t\\t\\t\\t\\t\\t0x8e47: 0x96d1,\\n\\t\\t\\t\\t\\t\\t0x8e48: 0x7690,\\n\\t\\t\\t\\t\\t\\t0x8e49: 0x9bd6,\\n\\t\\t\\t\\t\\t\\t0x8e4a: 0x634c,\\n\\t\\t\\t\\t\\t\\t0x8e4b: 0x9306,\\n\\t\\t\\t\\t\\t\\t0x8e4c: 0x9bab,\\n\\t\\t\\t\\t\\t\\t0x8e4d: 0x76bf,\\n\\t\\t\\t\\t\\t\\t0x8e4e: 0x6652,\\n\\t\\t\\t\\t\\t\\t0x8e4f: 0x4e09,\\n\\t\\t\\t\\t\\t\\t0x8e50: 0x5098,\\n\\t\\t\\t\\t\\t\\t0x8e51: 0x53c2,\\n\\t\\t\\t\\t\\t\\t0x8e52: 0x5c71,\\n\\t\\t\\t\\t\\t\\t0x8e53: 0x60e8,\\n\\t\\t\\t\\t\\t\\t0x8e54: 0x6492,\\n\\t\\t\\t\\t\\t\\t0x8e55: 0x6563,\\n\\t\\t\\t\\t\\t\\t0x8e56: 0x685f,\\n\\t\\t\\t\\t\\t\\t0x8e57: 0x71e6,\\n\\t\\t\\t\\t\\t\\t0x8e58: 0x73ca,\\n\\t\\t\\t\\t\\t\\t0x8e59: 0x7523,\\n\\t\\t\\t\\t\\t\\t0x8e5a: 0x7b97,\\n\\t\\t\\t\\t\\t\\t0x8e5b: 0x7e82,\\n\\t\\t\\t\\t\\t\\t0x8e5c: 0x8695,\\n\\t\\t\\t\\t\\t\\t0x8e5d: 0x8b83,\\n\\t\\t\\t\\t\\t\\t0x8e5e: 0x8cdb,\\n\\t\\t\\t\\t\\t\\t0x8e5f: 0x9178,\\n\\t\\t\\t\\t\\t\\t0x8e60: 0x9910,\\n\\t\\t\\t\\t\\t\\t0x8e61: 0x65ac,\\n\\t\\t\\t\\t\\t\\t0x8e62: 0x66ab,\\n\\t\\t\\t\\t\\t\\t0x8e63: 0x6b8b,\\n\\t\\t\\t\\t\\t\\t0x8e64: 0x4ed5,\\n\\t\\t\\t\\t\\t\\t0x8e65: 0x4ed4,\\n\\t\\t\\t\\t\\t\\t0x8e66: 0x4f3a,\\n\\t\\t\\t\\t\\t\\t0x8e67: 0x4f7f,\\n\\t\\t\\t\\t\\t\\t0x8e68: 0x523a,\\n\\t\\t\\t\\t\\t\\t0x8e69: 0x53f8,\\n\\t\\t\\t\\t\\t\\t0x8e6a: 0x53f2,\\n\\t\\t\\t\\t\\t\\t0x8e6b: 0x55e3,\\n\\t\\t\\t\\t\\t\\t0x8e6c: 0x56db,\\n\\t\\t\\t\\t\\t\\t0x8e6d: 0x58eb,\\n\\t\\t\\t\\t\\t\\t0x8e6e: 0x59cb,\\n\\t\\t\\t\\t\\t\\t0x8e6f: 0x59c9,\\n\\t\\t\\t\\t\\t\\t0x8e70: 0x59ff,\\n\\t\\t\\t\\t\\t\\t0x8e71: 0x5b50,\\n\\t\\t\\t\\t\\t\\t0x8e72: 0x5c4d,\\n\\t\\t\\t\\t\\t\\t0x8e73: 0x5e02,\\n\\t\\t\\t\\t\\t\\t0x8e74: 0x5e2b,\\n\\t\\t\\t\\t\\t\\t0x8e75: 0x5fd7,\\n\\t\\t\\t\\t\\t\\t0x8e76: 0x601d,\\n\\t\\t\\t\\t\\t\\t0x8e77: 0x6307,\\n\\t\\t\\t\\t\\t\\t0x8e78: 0x652f,\\n\\t\\t\\t\\t\\t\\t0x8e79: 0x5b5c,\\n\\t\\t\\t\\t\\t\\t0x8e7a: 0x65af,\\n\\t\\t\\t\\t\\t\\t0x8e7b: 0x65bd,\\n\\t\\t\\t\\t\\t\\t0x8e7c: 0x65e8,\\n\\t\\t\\t\\t\\t\\t0x8e7d: 0x679d,\\n\\t\\t\\t\\t\\t\\t0x8e7e: 0x6b62,\\n\\t\\t\\t\\t\\t\\t0x8e80: 0x6b7b,\\n\\t\\t\\t\\t\\t\\t0x8e81: 0x6c0f,\\n\\t\\t\\t\\t\\t\\t0x8e82: 0x7345,\\n\\t\\t\\t\\t\\t\\t0x8e83: 0x7949,\\n\\t\\t\\t\\t\\t\\t0x8e84: 0x79c1,\\n\\t\\t\\t\\t\\t\\t0x8e85: 0x7cf8,\\n\\t\\t\\t\\t\\t\\t0x8e86: 0x7d19,\\n\\t\\t\\t\\t\\t\\t0x8e87: 0x7d2b,\\n\\t\\t\\t\\t\\t\\t0x8e88: 0x80a2,\\n\\t\\t\\t\\t\\t\\t0x8e89: 0x8102,\\n\\t\\t\\t\\t\\t\\t0x8e8a: 0x81f3,\\n\\t\\t\\t\\t\\t\\t0x8e8b: 0x8996,\\n\\t\\t\\t\\t\\t\\t0x8e8c: 0x8a5e,\\n\\t\\t\\t\\t\\t\\t0x8e8d: 0x8a69,\\n\\t\\t\\t\\t\\t\\t0x8e8e: 0x8a66,\\n\\t\\t\\t\\t\\t\\t0x8e8f: 0x8a8c,\\n\\t\\t\\t\\t\\t\\t0x8e90: 0x8aee,\\n\\t\\t\\t\\t\\t\\t0x8e91: 0x8cc7,\\n\\t\\t\\t\\t\\t\\t0x8e92: 0x8cdc,\\n\\t\\t\\t\\t\\t\\t0x8e93: 0x96cc,\\n\\t\\t\\t\\t\\t\\t0x8e94: 0x98fc,\\n\\t\\t\\t\\t\\t\\t0x8e95: 0x6b6f,\\n\\t\\t\\t\\t\\t\\t0x8e96: 0x4e8b,\\n\\t\\t\\t\\t\\t\\t0x8e97: 0x4f3c,\\n\\t\\t\\t\\t\\t\\t0x8e98: 0x4f8d,\\n\\t\\t\\t\\t\\t\\t0x8e99: 0x5150,\\n\\t\\t\\t\\t\\t\\t0x8e9a: 0x5b57,\\n\\t\\t\\t\\t\\t\\t0x8e9b: 0x5bfa,\\n\\t\\t\\t\\t\\t\\t0x8e9c: 0x6148,\\n\\t\\t\\t\\t\\t\\t0x8e9d: 0x6301,\\n\\t\\t\\t\\t\\t\\t0x8e9e: 0x6642,\\n\\t\\t\\t\\t\\t\\t0x8e9f: 0x6b21,\\n\\t\\t\\t\\t\\t\\t0x8ea0: 0x6ecb,\\n\\t\\t\\t\\t\\t\\t0x8ea1: 0x6cbb,\\n\\t\\t\\t\\t\\t\\t0x8ea2: 0x723e,\\n\\t\\t\\t\\t\\t\\t0x8ea3: 0x74bd,\\n\\t\\t\\t\\t\\t\\t0x8ea4: 0x75d4,\\n\\t\\t\\t\\t\\t\\t0x8ea5: 0x78c1,\\n\\t\\t\\t\\t\\t\\t0x8ea6: 0x793a,\\n\\t\\t\\t\\t\\t\\t0x8ea7: 0x800c,\\n\\t\\t\\t\\t\\t\\t0x8ea8: 0x8033,\\n\\t\\t\\t\\t\\t\\t0x8ea9: 0x81ea,\\n\\t\\t\\t\\t\\t\\t0x8eaa: 0x8494,\\n\\t\\t\\t\\t\\t\\t0x8eab: 0x8f9e,\\n\\t\\t\\t\\t\\t\\t0x8eac: 0x6c50,\\n\\t\\t\\t\\t\\t\\t0x8ead: 0x9e7f,\\n\\t\\t\\t\\t\\t\\t0x8eae: 0x5f0f,\\n\\t\\t\\t\\t\\t\\t0x8eaf: 0x8b58,\\n\\t\\t\\t\\t\\t\\t0x8eb0: 0x9d2b,\\n\\t\\t\\t\\t\\t\\t0x8eb1: 0x7afa,\\n\\t\\t\\t\\t\\t\\t0x8eb2: 0x8ef8,\\n\\t\\t\\t\\t\\t\\t0x8eb3: 0x5b8d,\\n\\t\\t\\t\\t\\t\\t0x8eb4: 0x96eb,\\n\\t\\t\\t\\t\\t\\t0x8eb5: 0x4e03,\\n\\t\\t\\t\\t\\t\\t0x8eb6: 0x53f1,\\n\\t\\t\\t\\t\\t\\t0x8eb7: 0x57f7,\\n\\t\\t\\t\\t\\t\\t0x8eb8: 0x5931,\\n\\t\\t\\t\\t\\t\\t0x8eb9: 0x5ac9,\\n\\t\\t\\t\\t\\t\\t0x8eba: 0x5ba4,\\n\\t\\t\\t\\t\\t\\t0x8ebb: 0x6089,\\n\\t\\t\\t\\t\\t\\t0x8ebc: 0x6e7f,\\n\\t\\t\\t\\t\\t\\t0x8ebd: 0x6f06,\\n\\t\\t\\t\\t\\t\\t0x8ebe: 0x75be,\\n\\t\\t\\t\\t\\t\\t0x8ebf: 0x8cea,\\n\\t\\t\\t\\t\\t\\t0x8ec0: 0x5b9f,\\n\\t\\t\\t\\t\\t\\t0x8ec1: 0x8500,\\n\\t\\t\\t\\t\\t\\t0x8ec2: 0x7be0,\\n\\t\\t\\t\\t\\t\\t0x8ec3: 0x5072,\\n\\t\\t\\t\\t\\t\\t0x8ec4: 0x67f4,\\n\\t\\t\\t\\t\\t\\t0x8ec5: 0x829d,\\n\\t\\t\\t\\t\\t\\t0x8ec6: 0x5c61,\\n\\t\\t\\t\\t\\t\\t0x8ec7: 0x854a,\\n\\t\\t\\t\\t\\t\\t0x8ec8: 0x7e1e,\\n\\t\\t\\t\\t\\t\\t0x8ec9: 0x820e,\\n\\t\\t\\t\\t\\t\\t0x8eca: 0x5199,\\n\\t\\t\\t\\t\\t\\t0x8ecb: 0x5c04,\\n\\t\\t\\t\\t\\t\\t0x8ecc: 0x6368,\\n\\t\\t\\t\\t\\t\\t0x8ecd: 0x8d66,\\n\\t\\t\\t\\t\\t\\t0x8ece: 0x659c,\\n\\t\\t\\t\\t\\t\\t0x8ecf: 0x716e,\\n\\t\\t\\t\\t\\t\\t0x8ed0: 0x793e,\\n\\t\\t\\t\\t\\t\\t0x8ed1: 0x7d17,\\n\\t\\t\\t\\t\\t\\t0x8ed2: 0x8005,\\n\\t\\t\\t\\t\\t\\t0x8ed3: 0x8b1d,\\n\\t\\t\\t\\t\\t\\t0x8ed4: 0x8eca,\\n\\t\\t\\t\\t\\t\\t0x8ed5: 0x906e,\\n\\t\\t\\t\\t\\t\\t0x8ed6: 0x86c7,\\n\\t\\t\\t\\t\\t\\t0x8ed7: 0x90aa,\\n\\t\\t\\t\\t\\t\\t0x8ed8: 0x501f,\\n\\t\\t\\t\\t\\t\\t0x8ed9: 0x52fa,\\n\\t\\t\\t\\t\\t\\t0x8eda: 0x5c3a,\\n\\t\\t\\t\\t\\t\\t0x8edb: 0x6753,\\n\\t\\t\\t\\t\\t\\t0x8edc: 0x707c,\\n\\t\\t\\t\\t\\t\\t0x8edd: 0x7235,\\n\\t\\t\\t\\t\\t\\t0x8ede: 0x914c,\\n\\t\\t\\t\\t\\t\\t0x8edf: 0x91c8,\\n\\t\\t\\t\\t\\t\\t0x8ee0: 0x932b,\\n\\t\\t\\t\\t\\t\\t0x8ee1: 0x82e5,\\n\\t\\t\\t\\t\\t\\t0x8ee2: 0x5bc2,\\n\\t\\t\\t\\t\\t\\t0x8ee3: 0x5f31,\\n\\t\\t\\t\\t\\t\\t0x8ee4: 0x60f9,\\n\\t\\t\\t\\t\\t\\t0x8ee5: 0x4e3b,\\n\\t\\t\\t\\t\\t\\t0x8ee6: 0x53d6,\\n\\t\\t\\t\\t\\t\\t0x8ee7: 0x5b88,\\n\\t\\t\\t\\t\\t\\t0x8ee8: 0x624b,\\n\\t\\t\\t\\t\\t\\t0x8ee9: 0x6731,\\n\\t\\t\\t\\t\\t\\t0x8eea: 0x6b8a,\\n\\t\\t\\t\\t\\t\\t0x8eeb: 0x72e9,\\n\\t\\t\\t\\t\\t\\t0x8eec: 0x73e0,\\n\\t\\t\\t\\t\\t\\t0x8eed: 0x7a2e,\\n\\t\\t\\t\\t\\t\\t0x8eee: 0x816b,\\n\\t\\t\\t\\t\\t\\t0x8eef: 0x8da3,\\n\\t\\t\\t\\t\\t\\t0x8ef0: 0x9152,\\n\\t\\t\\t\\t\\t\\t0x8ef1: 0x9996,\\n\\t\\t\\t\\t\\t\\t0x8ef2: 0x5112,\\n\\t\\t\\t\\t\\t\\t0x8ef3: 0x53d7,\\n\\t\\t\\t\\t\\t\\t0x8ef4: 0x546a,\\n\\t\\t\\t\\t\\t\\t0x8ef5: 0x5bff,\\n\\t\\t\\t\\t\\t\\t0x8ef6: 0x6388,\\n\\t\\t\\t\\t\\t\\t0x8ef7: 0x6a39,\\n\\t\\t\\t\\t\\t\\t0x8ef8: 0x7dac,\\n\\t\\t\\t\\t\\t\\t0x8ef9: 0x9700,\\n\\t\\t\\t\\t\\t\\t0x8efa: 0x56da,\\n\\t\\t\\t\\t\\t\\t0x8efb: 0x53ce,\\n\\t\\t\\t\\t\\t\\t0x8efc: 0x5468,\\n\\t\\t\\t\\t\\t\\t0x8f40: 0x5b97,\\n\\t\\t\\t\\t\\t\\t0x8f41: 0x5c31,\\n\\t\\t\\t\\t\\t\\t0x8f42: 0x5dde,\\n\\t\\t\\t\\t\\t\\t0x8f43: 0x4fee,\\n\\t\\t\\t\\t\\t\\t0x8f44: 0x6101,\\n\\t\\t\\t\\t\\t\\t0x8f45: 0x62fe,\\n\\t\\t\\t\\t\\t\\t0x8f46: 0x6d32,\\n\\t\\t\\t\\t\\t\\t0x8f47: 0x79c0,\\n\\t\\t\\t\\t\\t\\t0x8f48: 0x79cb,\\n\\t\\t\\t\\t\\t\\t0x8f49: 0x7d42,\\n\\t\\t\\t\\t\\t\\t0x8f4a: 0x7e4d,\\n\\t\\t\\t\\t\\t\\t0x8f4b: 0x7fd2,\\n\\t\\t\\t\\t\\t\\t0x8f4c: 0x81ed,\\n\\t\\t\\t\\t\\t\\t0x8f4d: 0x821f,\\n\\t\\t\\t\\t\\t\\t0x8f4e: 0x8490,\\n\\t\\t\\t\\t\\t\\t0x8f4f: 0x8846,\\n\\t\\t\\t\\t\\t\\t0x8f50: 0x8972,\\n\\t\\t\\t\\t\\t\\t0x8f51: 0x8b90,\\n\\t\\t\\t\\t\\t\\t0x8f52: 0x8e74,\\n\\t\\t\\t\\t\\t\\t0x8f53: 0x8f2f,\\n\\t\\t\\t\\t\\t\\t0x8f54: 0x9031,\\n\\t\\t\\t\\t\\t\\t0x8f55: 0x914b,\\n\\t\\t\\t\\t\\t\\t0x8f56: 0x916c,\\n\\t\\t\\t\\t\\t\\t0x8f57: 0x96c6,\\n\\t\\t\\t\\t\\t\\t0x8f58: 0x919c,\\n\\t\\t\\t\\t\\t\\t0x8f59: 0x4ec0,\\n\\t\\t\\t\\t\\t\\t0x8f5a: 0x4f4f,\\n\\t\\t\\t\\t\\t\\t0x8f5b: 0x5145,\\n\\t\\t\\t\\t\\t\\t0x8f5c: 0x5341,\\n\\t\\t\\t\\t\\t\\t0x8f5d: 0x5f93,\\n\\t\\t\\t\\t\\t\\t0x8f5e: 0x620e,\\n\\t\\t\\t\\t\\t\\t0x8f5f: 0x67d4,\\n\\t\\t\\t\\t\\t\\t0x8f60: 0x6c41,\\n\\t\\t\\t\\t\\t\\t0x8f61: 0x6e0b,\\n\\t\\t\\t\\t\\t\\t0x8f62: 0x7363,\\n\\t\\t\\t\\t\\t\\t0x8f63: 0x7e26,\\n\\t\\t\\t\\t\\t\\t0x8f64: 0x91cd,\\n\\t\\t\\t\\t\\t\\t0x8f65: 0x9283,\\n\\t\\t\\t\\t\\t\\t0x8f66: 0x53d4,\\n\\t\\t\\t\\t\\t\\t0x8f67: 0x5919,\\n\\t\\t\\t\\t\\t\\t0x8f68: 0x5bbf,\\n\\t\\t\\t\\t\\t\\t0x8f69: 0x6dd1,\\n\\t\\t\\t\\t\\t\\t0x8f6a: 0x795d,\\n\\t\\t\\t\\t\\t\\t0x8f6b: 0x7e2e,\\n\\t\\t\\t\\t\\t\\t0x8f6c: 0x7c9b,\\n\\t\\t\\t\\t\\t\\t0x8f6d: 0x587e,\\n\\t\\t\\t\\t\\t\\t0x8f6e: 0x719f,\\n\\t\\t\\t\\t\\t\\t0x8f6f: 0x51fa,\\n\\t\\t\\t\\t\\t\\t0x8f70: 0x8853,\\n\\t\\t\\t\\t\\t\\t0x8f71: 0x8ff0,\\n\\t\\t\\t\\t\\t\\t0x8f72: 0x4fca,\\n\\t\\t\\t\\t\\t\\t0x8f73: 0x5cfb,\\n\\t\\t\\t\\t\\t\\t0x8f74: 0x6625,\\n\\t\\t\\t\\t\\t\\t0x8f75: 0x77ac,\\n\\t\\t\\t\\t\\t\\t0x8f76: 0x7ae3,\\n\\t\\t\\t\\t\\t\\t0x8f77: 0x821c,\\n\\t\\t\\t\\t\\t\\t0x8f78: 0x99ff,\\n\\t\\t\\t\\t\\t\\t0x8f79: 0x51c6,\\n\\t\\t\\t\\t\\t\\t0x8f7a: 0x5faa,\\n\\t\\t\\t\\t\\t\\t0x8f7b: 0x65ec,\\n\\t\\t\\t\\t\\t\\t0x8f7c: 0x696f,\\n\\t\\t\\t\\t\\t\\t0x8f7d: 0x6b89,\\n\\t\\t\\t\\t\\t\\t0x8f7e: 0x6df3,\\n\\t\\t\\t\\t\\t\\t0x8f80: 0x6e96,\\n\\t\\t\\t\\t\\t\\t0x8f81: 0x6f64,\\n\\t\\t\\t\\t\\t\\t0x8f82: 0x76fe,\\n\\t\\t\\t\\t\\t\\t0x8f83: 0x7d14,\\n\\t\\t\\t\\t\\t\\t0x8f84: 0x5de1,\\n\\t\\t\\t\\t\\t\\t0x8f85: 0x9075,\\n\\t\\t\\t\\t\\t\\t0x8f86: 0x9187,\\n\\t\\t\\t\\t\\t\\t0x8f87: 0x9806,\\n\\t\\t\\t\\t\\t\\t0x8f88: 0x51e6,\\n\\t\\t\\t\\t\\t\\t0x8f89: 0x521d,\\n\\t\\t\\t\\t\\t\\t0x8f8a: 0x6240,\\n\\t\\t\\t\\t\\t\\t0x8f8b: 0x6691,\\n\\t\\t\\t\\t\\t\\t0x8f8c: 0x66d9,\\n\\t\\t\\t\\t\\t\\t0x8f8d: 0x6e1a,\\n\\t\\t\\t\\t\\t\\t0x8f8e: 0x5eb6,\\n\\t\\t\\t\\t\\t\\t0x8f8f: 0x7dd2,\\n\\t\\t\\t\\t\\t\\t0x8f90: 0x7f72,\\n\\t\\t\\t\\t\\t\\t0x8f91: 0x66f8,\\n\\t\\t\\t\\t\\t\\t0x8f92: 0x85af,\\n\\t\\t\\t\\t\\t\\t0x8f93: 0x85f7,\\n\\t\\t\\t\\t\\t\\t0x8f94: 0x8af8,\\n\\t\\t\\t\\t\\t\\t0x8f95: 0x52a9,\\n\\t\\t\\t\\t\\t\\t0x8f96: 0x53d9,\\n\\t\\t\\t\\t\\t\\t0x8f97: 0x5973,\\n\\t\\t\\t\\t\\t\\t0x8f98: 0x5e8f,\\n\\t\\t\\t\\t\\t\\t0x8f99: 0x5f90,\\n\\t\\t\\t\\t\\t\\t0x8f9a: 0x6055,\\n\\t\\t\\t\\t\\t\\t0x8f9b: 0x92e4,\\n\\t\\t\\t\\t\\t\\t0x8f9c: 0x9664,\\n\\t\\t\\t\\t\\t\\t0x8f9d: 0x50b7,\\n\\t\\t\\t\\t\\t\\t0x8f9e: 0x511f,\\n\\t\\t\\t\\t\\t\\t0x8f9f: 0x52dd,\\n\\t\\t\\t\\t\\t\\t0x8fa0: 0x5320,\\n\\t\\t\\t\\t\\t\\t0x8fa1: 0x5347,\\n\\t\\t\\t\\t\\t\\t0x8fa2: 0x53ec,\\n\\t\\t\\t\\t\\t\\t0x8fa3: 0x54e8,\\n\\t\\t\\t\\t\\t\\t0x8fa4: 0x5546,\\n\\t\\t\\t\\t\\t\\t0x8fa5: 0x5531,\\n\\t\\t\\t\\t\\t\\t0x8fa6: 0x5617,\\n\\t\\t\\t\\t\\t\\t0x8fa7: 0x5968,\\n\\t\\t\\t\\t\\t\\t0x8fa8: 0x59be,\\n\\t\\t\\t\\t\\t\\t0x8fa9: 0x5a3c,\\n\\t\\t\\t\\t\\t\\t0x8faa: 0x5bb5,\\n\\t\\t\\t\\t\\t\\t0x8fab: 0x5c06,\\n\\t\\t\\t\\t\\t\\t0x8fac: 0x5c0f,\\n\\t\\t\\t\\t\\t\\t0x8fad: 0x5c11,\\n\\t\\t\\t\\t\\t\\t0x8fae: 0x5c1a,\\n\\t\\t\\t\\t\\t\\t0x8faf: 0x5e84,\\n\\t\\t\\t\\t\\t\\t0x8fb0: 0x5e8a,\\n\\t\\t\\t\\t\\t\\t0x8fb1: 0x5ee0,\\n\\t\\t\\t\\t\\t\\t0x8fb2: 0x5f70,\\n\\t\\t\\t\\t\\t\\t0x8fb3: 0x627f,\\n\\t\\t\\t\\t\\t\\t0x8fb4: 0x6284,\\n\\t\\t\\t\\t\\t\\t0x8fb5: 0x62db,\\n\\t\\t\\t\\t\\t\\t0x8fb6: 0x638c,\\n\\t\\t\\t\\t\\t\\t0x8fb7: 0x6377,\\n\\t\\t\\t\\t\\t\\t0x8fb8: 0x6607,\\n\\t\\t\\t\\t\\t\\t0x8fb9: 0x660c,\\n\\t\\t\\t\\t\\t\\t0x8fba: 0x662d,\\n\\t\\t\\t\\t\\t\\t0x8fbb: 0x6676,\\n\\t\\t\\t\\t\\t\\t0x8fbc: 0x677e,\\n\\t\\t\\t\\t\\t\\t0x8fbd: 0x68a2,\\n\\t\\t\\t\\t\\t\\t0x8fbe: 0x6a1f,\\n\\t\\t\\t\\t\\t\\t0x8fbf: 0x6a35,\\n\\t\\t\\t\\t\\t\\t0x8fc0: 0x6cbc,\\n\\t\\t\\t\\t\\t\\t0x8fc1: 0x6d88,\\n\\t\\t\\t\\t\\t\\t0x8fc2: 0x6e09,\\n\\t\\t\\t\\t\\t\\t0x8fc3: 0x6e58,\\n\\t\\t\\t\\t\\t\\t0x8fc4: 0x713c,\\n\\t\\t\\t\\t\\t\\t0x8fc5: 0x7126,\\n\\t\\t\\t\\t\\t\\t0x8fc6: 0x7167,\\n\\t\\t\\t\\t\\t\\t0x8fc7: 0x75c7,\\n\\t\\t\\t\\t\\t\\t0x8fc8: 0x7701,\\n\\t\\t\\t\\t\\t\\t0x8fc9: 0x785d,\\n\\t\\t\\t\\t\\t\\t0x8fca: 0x7901,\\n\\t\\t\\t\\t\\t\\t0x8fcb: 0x7965,\\n\\t\\t\\t\\t\\t\\t0x8fcc: 0x79f0,\\n\\t\\t\\t\\t\\t\\t0x8fcd: 0x7ae0,\\n\\t\\t\\t\\t\\t\\t0x8fce: 0x7b11,\\n\\t\\t\\t\\t\\t\\t0x8fcf: 0x7ca7,\\n\\t\\t\\t\\t\\t\\t0x8fd0: 0x7d39,\\n\\t\\t\\t\\t\\t\\t0x8fd1: 0x8096,\\n\\t\\t\\t\\t\\t\\t0x8fd2: 0x83d6,\\n\\t\\t\\t\\t\\t\\t0x8fd3: 0x848b,\\n\\t\\t\\t\\t\\t\\t0x8fd4: 0x8549,\\n\\t\\t\\t\\t\\t\\t0x8fd5: 0x885d,\\n\\t\\t\\t\\t\\t\\t0x8fd6: 0x88f3,\\n\\t\\t\\t\\t\\t\\t0x8fd7: 0x8a1f,\\n\\t\\t\\t\\t\\t\\t0x8fd8: 0x8a3c,\\n\\t\\t\\t\\t\\t\\t0x8fd9: 0x8a54,\\n\\t\\t\\t\\t\\t\\t0x8fda: 0x8a73,\\n\\t\\t\\t\\t\\t\\t0x8fdb: 0x8c61,\\n\\t\\t\\t\\t\\t\\t0x8fdc: 0x8cde,\\n\\t\\t\\t\\t\\t\\t0x8fdd: 0x91a4,\\n\\t\\t\\t\\t\\t\\t0x8fde: 0x9266,\\n\\t\\t\\t\\t\\t\\t0x8fdf: 0x937e,\\n\\t\\t\\t\\t\\t\\t0x8fe0: 0x9418,\\n\\t\\t\\t\\t\\t\\t0x8fe1: 0x969c,\\n\\t\\t\\t\\t\\t\\t0x8fe2: 0x9798,\\n\\t\\t\\t\\t\\t\\t0x8fe3: 0x4e0a,\\n\\t\\t\\t\\t\\t\\t0x8fe4: 0x4e08,\\n\\t\\t\\t\\t\\t\\t0x8fe5: 0x4e1e,\\n\\t\\t\\t\\t\\t\\t0x8fe6: 0x4e57,\\n\\t\\t\\t\\t\\t\\t0x8fe7: 0x5197,\\n\\t\\t\\t\\t\\t\\t0x8fe8: 0x5270,\\n\\t\\t\\t\\t\\t\\t0x8fe9: 0x57ce,\\n\\t\\t\\t\\t\\t\\t0x8fea: 0x5834,\\n\\t\\t\\t\\t\\t\\t0x8feb: 0x58cc,\\n\\t\\t\\t\\t\\t\\t0x8fec: 0x5b22,\\n\\t\\t\\t\\t\\t\\t0x8fed: 0x5e38,\\n\\t\\t\\t\\t\\t\\t0x8fee: 0x60c5,\\n\\t\\t\\t\\t\\t\\t0x8fef: 0x64fe,\\n\\t\\t\\t\\t\\t\\t0x8ff0: 0x6761,\\n\\t\\t\\t\\t\\t\\t0x8ff1: 0x6756,\\n\\t\\t\\t\\t\\t\\t0x8ff2: 0x6d44,\\n\\t\\t\\t\\t\\t\\t0x8ff3: 0x72b6,\\n\\t\\t\\t\\t\\t\\t0x8ff4: 0x7573,\\n\\t\\t\\t\\t\\t\\t0x8ff5: 0x7a63,\\n\\t\\t\\t\\t\\t\\t0x8ff6: 0x84b8,\\n\\t\\t\\t\\t\\t\\t0x8ff7: 0x8b72,\\n\\t\\t\\t\\t\\t\\t0x8ff8: 0x91b8,\\n\\t\\t\\t\\t\\t\\t0x8ff9: 0x9320,\\n\\t\\t\\t\\t\\t\\t0x8ffa: 0x5631,\\n\\t\\t\\t\\t\\t\\t0x8ffb: 0x57f4,\\n\\t\\t\\t\\t\\t\\t0x8ffc: 0x98fe,\\n\\t\\t\\t\\t\\t\\t0x9040: 0x62ed,\\n\\t\\t\\t\\t\\t\\t0x9041: 0x690d,\\n\\t\\t\\t\\t\\t\\t0x9042: 0x6b96,\\n\\t\\t\\t\\t\\t\\t0x9043: 0x71ed,\\n\\t\\t\\t\\t\\t\\t0x9044: 0x7e54,\\n\\t\\t\\t\\t\\t\\t0x9045: 0x8077,\\n\\t\\t\\t\\t\\t\\t0x9046: 0x8272,\\n\\t\\t\\t\\t\\t\\t0x9047: 0x89e6,\\n\\t\\t\\t\\t\\t\\t0x9048: 0x98df,\\n\\t\\t\\t\\t\\t\\t0x9049: 0x8755,\\n\\t\\t\\t\\t\\t\\t0x904a: 0x8fb1,\\n\\t\\t\\t\\t\\t\\t0x904b: 0x5c3b,\\n\\t\\t\\t\\t\\t\\t0x904c: 0x4f38,\\n\\t\\t\\t\\t\\t\\t0x904d: 0x4fe1,\\n\\t\\t\\t\\t\\t\\t0x904e: 0x4fb5,\\n\\t\\t\\t\\t\\t\\t0x904f: 0x5507,\\n\\t\\t\\t\\t\\t\\t0x9050: 0x5a20,\\n\\t\\t\\t\\t\\t\\t0x9051: 0x5bdd,\\n\\t\\t\\t\\t\\t\\t0x9052: 0x5be9,\\n\\t\\t\\t\\t\\t\\t0x9053: 0x5fc3,\\n\\t\\t\\t\\t\\t\\t0x9054: 0x614e,\\n\\t\\t\\t\\t\\t\\t0x9055: 0x632f,\\n\\t\\t\\t\\t\\t\\t0x9056: 0x65b0,\\n\\t\\t\\t\\t\\t\\t0x9057: 0x664b,\\n\\t\\t\\t\\t\\t\\t0x9058: 0x68ee,\\n\\t\\t\\t\\t\\t\\t0x9059: 0x699b,\\n\\t\\t\\t\\t\\t\\t0x905a: 0x6d78,\\n\\t\\t\\t\\t\\t\\t0x905b: 0x6df1,\\n\\t\\t\\t\\t\\t\\t0x905c: 0x7533,\\n\\t\\t\\t\\t\\t\\t0x905d: 0x75b9,\\n\\t\\t\\t\\t\\t\\t0x905e: 0x771f,\\n\\t\\t\\t\\t\\t\\t0x905f: 0x795e,\\n\\t\\t\\t\\t\\t\\t0x9060: 0x79e6,\\n\\t\\t\\t\\t\\t\\t0x9061: 0x7d33,\\n\\t\\t\\t\\t\\t\\t0x9062: 0x81e3,\\n\\t\\t\\t\\t\\t\\t0x9063: 0x82af,\\n\\t\\t\\t\\t\\t\\t0x9064: 0x85aa,\\n\\t\\t\\t\\t\\t\\t0x9065: 0x89aa,\\n\\t\\t\\t\\t\\t\\t0x9066: 0x8a3a,\\n\\t\\t\\t\\t\\t\\t0x9067: 0x8eab,\\n\\t\\t\\t\\t\\t\\t0x9068: 0x8f9b,\\n\\t\\t\\t\\t\\t\\t0x9069: 0x9032,\\n\\t\\t\\t\\t\\t\\t0x906a: 0x91dd,\\n\\t\\t\\t\\t\\t\\t0x906b: 0x9707,\\n\\t\\t\\t\\t\\t\\t0x906c: 0x4eba,\\n\\t\\t\\t\\t\\t\\t0x906d: 0x4ec1,\\n\\t\\t\\t\\t\\t\\t0x906e: 0x5203,\\n\\t\\t\\t\\t\\t\\t0x906f: 0x5875,\\n\\t\\t\\t\\t\\t\\t0x9070: 0x58ec,\\n\\t\\t\\t\\t\\t\\t0x9071: 0x5c0b,\\n\\t\\t\\t\\t\\t\\t0x9072: 0x751a,\\n\\t\\t\\t\\t\\t\\t0x9073: 0x5c3d,\\n\\t\\t\\t\\t\\t\\t0x9074: 0x814e,\\n\\t\\t\\t\\t\\t\\t0x9075: 0x8a0a,\\n\\t\\t\\t\\t\\t\\t0x9076: 0x8fc5,\\n\\t\\t\\t\\t\\t\\t0x9077: 0x9663,\\n\\t\\t\\t\\t\\t\\t0x9078: 0x976d,\\n\\t\\t\\t\\t\\t\\t0x9079: 0x7b25,\\n\\t\\t\\t\\t\\t\\t0x907a: 0x8acf,\\n\\t\\t\\t\\t\\t\\t0x907b: 0x9808,\\n\\t\\t\\t\\t\\t\\t0x907c: 0x9162,\\n\\t\\t\\t\\t\\t\\t0x907d: 0x56f3,\\n\\t\\t\\t\\t\\t\\t0x907e: 0x53a8,\\n\\t\\t\\t\\t\\t\\t0x9080: 0x9017,\\n\\t\\t\\t\\t\\t\\t0x9081: 0x5439,\\n\\t\\t\\t\\t\\t\\t0x9082: 0x5782,\\n\\t\\t\\t\\t\\t\\t0x9083: 0x5e25,\\n\\t\\t\\t\\t\\t\\t0x9084: 0x63a8,\\n\\t\\t\\t\\t\\t\\t0x9085: 0x6c34,\\n\\t\\t\\t\\t\\t\\t0x9086: 0x708a,\\n\\t\\t\\t\\t\\t\\t0x9087: 0x7761,\\n\\t\\t\\t\\t\\t\\t0x9088: 0x7c8b,\\n\\t\\t\\t\\t\\t\\t0x9089: 0x7fe0,\\n\\t\\t\\t\\t\\t\\t0x908a: 0x8870,\\n\\t\\t\\t\\t\\t\\t0x908b: 0x9042,\\n\\t\\t\\t\\t\\t\\t0x908c: 0x9154,\\n\\t\\t\\t\\t\\t\\t0x908d: 0x9310,\\n\\t\\t\\t\\t\\t\\t0x908e: 0x9318,\\n\\t\\t\\t\\t\\t\\t0x908f: 0x968f,\\n\\t\\t\\t\\t\\t\\t0x9090: 0x745e,\\n\\t\\t\\t\\t\\t\\t0x9091: 0x9ac4,\\n\\t\\t\\t\\t\\t\\t0x9092: 0x5d07,\\n\\t\\t\\t\\t\\t\\t0x9093: 0x5d69,\\n\\t\\t\\t\\t\\t\\t0x9094: 0x6570,\\n\\t\\t\\t\\t\\t\\t0x9095: 0x67a2,\\n\\t\\t\\t\\t\\t\\t0x9096: 0x8da8,\\n\\t\\t\\t\\t\\t\\t0x9097: 0x96db,\\n\\t\\t\\t\\t\\t\\t0x9098: 0x636e,\\n\\t\\t\\t\\t\\t\\t0x9099: 0x6749,\\n\\t\\t\\t\\t\\t\\t0x909a: 0x6919,\\n\\t\\t\\t\\t\\t\\t0x909b: 0x83c5,\\n\\t\\t\\t\\t\\t\\t0x909c: 0x9817,\\n\\t\\t\\t\\t\\t\\t0x909d: 0x96c0,\\n\\t\\t\\t\\t\\t\\t0x909e: 0x88fe,\\n\\t\\t\\t\\t\\t\\t0x909f: 0x6f84,\\n\\t\\t\\t\\t\\t\\t0x90a0: 0x647a,\\n\\t\\t\\t\\t\\t\\t0x90a1: 0x5bf8,\\n\\t\\t\\t\\t\\t\\t0x90a2: 0x4e16,\\n\\t\\t\\t\\t\\t\\t0x90a3: 0x702c,\\n\\t\\t\\t\\t\\t\\t0x90a4: 0x755d,\\n\\t\\t\\t\\t\\t\\t0x90a5: 0x662f,\\n\\t\\t\\t\\t\\t\\t0x90a6: 0x51c4,\\n\\t\\t\\t\\t\\t\\t0x90a7: 0x5236,\\n\\t\\t\\t\\t\\t\\t0x90a8: 0x52e2,\\n\\t\\t\\t\\t\\t\\t0x90a9: 0x59d3,\\n\\t\\t\\t\\t\\t\\t0x90aa: 0x5f81,\\n\\t\\t\\t\\t\\t\\t0x90ab: 0x6027,\\n\\t\\t\\t\\t\\t\\t0x90ac: 0x6210,\\n\\t\\t\\t\\t\\t\\t0x90ad: 0x653f,\\n\\t\\t\\t\\t\\t\\t0x90ae: 0x6574,\\n\\t\\t\\t\\t\\t\\t0x90af: 0x661f,\\n\\t\\t\\t\\t\\t\\t0x90b0: 0x6674,\\n\\t\\t\\t\\t\\t\\t0x90b1: 0x68f2,\\n\\t\\t\\t\\t\\t\\t0x90b2: 0x6816,\\n\\t\\t\\t\\t\\t\\t0x90b3: 0x6b63,\\n\\t\\t\\t\\t\\t\\t0x90b4: 0x6e05,\\n\\t\\t\\t\\t\\t\\t0x90b5: 0x7272,\\n\\t\\t\\t\\t\\t\\t0x90b6: 0x751f,\\n\\t\\t\\t\\t\\t\\t0x90b7: 0x76db,\\n\\t\\t\\t\\t\\t\\t0x90b8: 0x7cbe,\\n\\t\\t\\t\\t\\t\\t0x90b9: 0x8056,\\n\\t\\t\\t\\t\\t\\t0x90ba: 0x58f0,\\n\\t\\t\\t\\t\\t\\t0x90bb: 0x88fd,\\n\\t\\t\\t\\t\\t\\t0x90bc: 0x897f,\\n\\t\\t\\t\\t\\t\\t0x90bd: 0x8aa0,\\n\\t\\t\\t\\t\\t\\t0x90be: 0x8a93,\\n\\t\\t\\t\\t\\t\\t0x90bf: 0x8acb,\\n\\t\\t\\t\\t\\t\\t0x90c0: 0x901d,\\n\\t\\t\\t\\t\\t\\t0x90c1: 0x9192,\\n\\t\\t\\t\\t\\t\\t0x90c2: 0x9752,\\n\\t\\t\\t\\t\\t\\t0x90c3: 0x9759,\\n\\t\\t\\t\\t\\t\\t0x90c4: 0x6589,\\n\\t\\t\\t\\t\\t\\t0x90c5: 0x7a0e,\\n\\t\\t\\t\\t\\t\\t0x90c6: 0x8106,\\n\\t\\t\\t\\t\\t\\t0x90c7: 0x96bb,\\n\\t\\t\\t\\t\\t\\t0x90c8: 0x5e2d,\\n\\t\\t\\t\\t\\t\\t0x90c9: 0x60dc,\\n\\t\\t\\t\\t\\t\\t0x90ca: 0x621a,\\n\\t\\t\\t\\t\\t\\t0x90cb: 0x65a5,\\n\\t\\t\\t\\t\\t\\t0x90cc: 0x6614,\\n\\t\\t\\t\\t\\t\\t0x90cd: 0x6790,\\n\\t\\t\\t\\t\\t\\t0x90ce: 0x77f3,\\n\\t\\t\\t\\t\\t\\t0x90cf: 0x7a4d,\\n\\t\\t\\t\\t\\t\\t0x90d0: 0x7c4d,\\n\\t\\t\\t\\t\\t\\t0x90d1: 0x7e3e,\\n\\t\\t\\t\\t\\t\\t0x90d2: 0x810a,\\n\\t\\t\\t\\t\\t\\t0x90d3: 0x8cac,\\n\\t\\t\\t\\t\\t\\t0x90d4: 0x8d64,\\n\\t\\t\\t\\t\\t\\t0x90d5: 0x8de1,\\n\\t\\t\\t\\t\\t\\t0x90d6: 0x8e5f,\\n\\t\\t\\t\\t\\t\\t0x90d7: 0x78a9,\\n\\t\\t\\t\\t\\t\\t0x90d8: 0x5207,\\n\\t\\t\\t\\t\\t\\t0x90d9: 0x62d9,\\n\\t\\t\\t\\t\\t\\t0x90da: 0x63a5,\\n\\t\\t\\t\\t\\t\\t0x90db: 0x6442,\\n\\t\\t\\t\\t\\t\\t0x90dc: 0x6298,\\n\\t\\t\\t\\t\\t\\t0x90dd: 0x8a2d,\\n\\t\\t\\t\\t\\t\\t0x90de: 0x7a83,\\n\\t\\t\\t\\t\\t\\t0x90df: 0x7bc0,\\n\\t\\t\\t\\t\\t\\t0x90e0: 0x8aac,\\n\\t\\t\\t\\t\\t\\t0x90e1: 0x96ea,\\n\\t\\t\\t\\t\\t\\t0x90e2: 0x7d76,\\n\\t\\t\\t\\t\\t\\t0x90e3: 0x820c,\\n\\t\\t\\t\\t\\t\\t0x90e4: 0x8749,\\n\\t\\t\\t\\t\\t\\t0x90e5: 0x4ed9,\\n\\t\\t\\t\\t\\t\\t0x90e6: 0x5148,\\n\\t\\t\\t\\t\\t\\t0x90e7: 0x5343,\\n\\t\\t\\t\\t\\t\\t0x90e8: 0x5360,\\n\\t\\t\\t\\t\\t\\t0x90e9: 0x5ba3,\\n\\t\\t\\t\\t\\t\\t0x90ea: 0x5c02,\\n\\t\\t\\t\\t\\t\\t0x90eb: 0x5c16,\\n\\t\\t\\t\\t\\t\\t0x90ec: 0x5ddd,\\n\\t\\t\\t\\t\\t\\t0x90ed: 0x6226,\\n\\t\\t\\t\\t\\t\\t0x90ee: 0x6247,\\n\\t\\t\\t\\t\\t\\t0x90ef: 0x64b0,\\n\\t\\t\\t\\t\\t\\t0x90f0: 0x6813,\\n\\t\\t\\t\\t\\t\\t0x90f1: 0x6834,\\n\\t\\t\\t\\t\\t\\t0x90f2: 0x6cc9,\\n\\t\\t\\t\\t\\t\\t0x90f3: 0x6d45,\\n\\t\\t\\t\\t\\t\\t0x90f4: 0x6d17,\\n\\t\\t\\t\\t\\t\\t0x90f5: 0x67d3,\\n\\t\\t\\t\\t\\t\\t0x90f6: 0x6f5c,\\n\\t\\t\\t\\t\\t\\t0x90f7: 0x714e,\\n\\t\\t\\t\\t\\t\\t0x90f8: 0x717d,\\n\\t\\t\\t\\t\\t\\t0x90f9: 0x65cb,\\n\\t\\t\\t\\t\\t\\t0x90fa: 0x7a7f,\\n\\t\\t\\t\\t\\t\\t0x90fb: 0x7bad,\\n\\t\\t\\t\\t\\t\\t0x90fc: 0x7dda,\\n\\t\\t\\t\\t\\t\\t0x9140: 0x7e4a,\\n\\t\\t\\t\\t\\t\\t0x9141: 0x7fa8,\\n\\t\\t\\t\\t\\t\\t0x9142: 0x817a,\\n\\t\\t\\t\\t\\t\\t0x9143: 0x821b,\\n\\t\\t\\t\\t\\t\\t0x9144: 0x8239,\\n\\t\\t\\t\\t\\t\\t0x9145: 0x85a6,\\n\\t\\t\\t\\t\\t\\t0x9146: 0x8a6e,\\n\\t\\t\\t\\t\\t\\t0x9147: 0x8cce,\\n\\t\\t\\t\\t\\t\\t0x9148: 0x8df5,\\n\\t\\t\\t\\t\\t\\t0x9149: 0x9078,\\n\\t\\t\\t\\t\\t\\t0x914a: 0x9077,\\n\\t\\t\\t\\t\\t\\t0x914b: 0x92ad,\\n\\t\\t\\t\\t\\t\\t0x914c: 0x9291,\\n\\t\\t\\t\\t\\t\\t0x914d: 0x9583,\\n\\t\\t\\t\\t\\t\\t0x914e: 0x9bae,\\n\\t\\t\\t\\t\\t\\t0x914f: 0x524d,\\n\\t\\t\\t\\t\\t\\t0x9150: 0x5584,\\n\\t\\t\\t\\t\\t\\t0x9151: 0x6f38,\\n\\t\\t\\t\\t\\t\\t0x9152: 0x7136,\\n\\t\\t\\t\\t\\t\\t0x9153: 0x5168,\\n\\t\\t\\t\\t\\t\\t0x9154: 0x7985,\\n\\t\\t\\t\\t\\t\\t0x9155: 0x7e55,\\n\\t\\t\\t\\t\\t\\t0x9156: 0x81b3,\\n\\t\\t\\t\\t\\t\\t0x9157: 0x7cce,\\n\\t\\t\\t\\t\\t\\t0x9158: 0x564c,\\n\\t\\t\\t\\t\\t\\t0x9159: 0x5851,\\n\\t\\t\\t\\t\\t\\t0x915a: 0x5ca8,\\n\\t\\t\\t\\t\\t\\t0x915b: 0x63aa,\\n\\t\\t\\t\\t\\t\\t0x915c: 0x66fe,\\n\\t\\t\\t\\t\\t\\t0x915d: 0x66fd,\\n\\t\\t\\t\\t\\t\\t0x915e: 0x695a,\\n\\t\\t\\t\\t\\t\\t0x915f: 0x72d9,\\n\\t\\t\\t\\t\\t\\t0x9160: 0x758f,\\n\\t\\t\\t\\t\\t\\t0x9161: 0x758e,\\n\\t\\t\\t\\t\\t\\t0x9162: 0x790e,\\n\\t\\t\\t\\t\\t\\t0x9163: 0x7956,\\n\\t\\t\\t\\t\\t\\t0x9164: 0x79df,\\n\\t\\t\\t\\t\\t\\t0x9165: 0x7c97,\\n\\t\\t\\t\\t\\t\\t0x9166: 0x7d20,\\n\\t\\t\\t\\t\\t\\t0x9167: 0x7d44,\\n\\t\\t\\t\\t\\t\\t0x9168: 0x8607,\\n\\t\\t\\t\\t\\t\\t0x9169: 0x8a34,\\n\\t\\t\\t\\t\\t\\t0x916a: 0x963b,\\n\\t\\t\\t\\t\\t\\t0x916b: 0x9061,\\n\\t\\t\\t\\t\\t\\t0x916c: 0x9f20,\\n\\t\\t\\t\\t\\t\\t0x916d: 0x50e7,\\n\\t\\t\\t\\t\\t\\t0x916e: 0x5275,\\n\\t\\t\\t\\t\\t\\t0x916f: 0x53cc,\\n\\t\\t\\t\\t\\t\\t0x9170: 0x53e2,\\n\\t\\t\\t\\t\\t\\t0x9171: 0x5009,\\n\\t\\t\\t\\t\\t\\t0x9172: 0x55aa,\\n\\t\\t\\t\\t\\t\\t0x9173: 0x58ee,\\n\\t\\t\\t\\t\\t\\t0x9174: 0x594f,\\n\\t\\t\\t\\t\\t\\t0x9175: 0x723d,\\n\\t\\t\\t\\t\\t\\t0x9176: 0x5b8b,\\n\\t\\t\\t\\t\\t\\t0x9177: 0x5c64,\\n\\t\\t\\t\\t\\t\\t0x9178: 0x531d,\\n\\t\\t\\t\\t\\t\\t0x9179: 0x60e3,\\n\\t\\t\\t\\t\\t\\t0x917a: 0x60f3,\\n\\t\\t\\t\\t\\t\\t0x917b: 0x635c,\\n\\t\\t\\t\\t\\t\\t0x917c: 0x6383,\\n\\t\\t\\t\\t\\t\\t0x917d: 0x633f,\\n\\t\\t\\t\\t\\t\\t0x917e: 0x63bb,\\n\\t\\t\\t\\t\\t\\t0x9180: 0x64cd,\\n\\t\\t\\t\\t\\t\\t0x9181: 0x65e9,\\n\\t\\t\\t\\t\\t\\t0x9182: 0x66f9,\\n\\t\\t\\t\\t\\t\\t0x9183: 0x5de3,\\n\\t\\t\\t\\t\\t\\t0x9184: 0x69cd,\\n\\t\\t\\t\\t\\t\\t0x9185: 0x69fd,\\n\\t\\t\\t\\t\\t\\t0x9186: 0x6f15,\\n\\t\\t\\t\\t\\t\\t0x9187: 0x71e5,\\n\\t\\t\\t\\t\\t\\t0x9188: 0x4e89,\\n\\t\\t\\t\\t\\t\\t0x9189: 0x75e9,\\n\\t\\t\\t\\t\\t\\t0x918a: 0x76f8,\\n\\t\\t\\t\\t\\t\\t0x918b: 0x7a93,\\n\\t\\t\\t\\t\\t\\t0x918c: 0x7cdf,\\n\\t\\t\\t\\t\\t\\t0x918d: 0x7dcf,\\n\\t\\t\\t\\t\\t\\t0x918e: 0x7d9c,\\n\\t\\t\\t\\t\\t\\t0x918f: 0x8061,\\n\\t\\t\\t\\t\\t\\t0x9190: 0x8349,\\n\\t\\t\\t\\t\\t\\t0x9191: 0x8358,\\n\\t\\t\\t\\t\\t\\t0x9192: 0x846c,\\n\\t\\t\\t\\t\\t\\t0x9193: 0x84bc,\\n\\t\\t\\t\\t\\t\\t0x9194: 0x85fb,\\n\\t\\t\\t\\t\\t\\t0x9195: 0x88c5,\\n\\t\\t\\t\\t\\t\\t0x9196: 0x8d70,\\n\\t\\t\\t\\t\\t\\t0x9197: 0x9001,\\n\\t\\t\\t\\t\\t\\t0x9198: 0x906d,\\n\\t\\t\\t\\t\\t\\t0x9199: 0x9397,\\n\\t\\t\\t\\t\\t\\t0x919a: 0x971c,\\n\\t\\t\\t\\t\\t\\t0x919b: 0x9a12,\\n\\t\\t\\t\\t\\t\\t0x919c: 0x50cf,\\n\\t\\t\\t\\t\\t\\t0x919d: 0x5897,\\n\\t\\t\\t\\t\\t\\t0x919e: 0x618e,\\n\\t\\t\\t\\t\\t\\t0x919f: 0x81d3,\\n\\t\\t\\t\\t\\t\\t0x91a0: 0x8535,\\n\\t\\t\\t\\t\\t\\t0x91a1: 0x8d08,\\n\\t\\t\\t\\t\\t\\t0x91a2: 0x9020,\\n\\t\\t\\t\\t\\t\\t0x91a3: 0x4fc3,\\n\\t\\t\\t\\t\\t\\t0x91a4: 0x5074,\\n\\t\\t\\t\\t\\t\\t0x91a5: 0x5247,\\n\\t\\t\\t\\t\\t\\t0x91a6: 0x5373,\\n\\t\\t\\t\\t\\t\\t0x91a7: 0x606f,\\n\\t\\t\\t\\t\\t\\t0x91a8: 0x6349,\\n\\t\\t\\t\\t\\t\\t0x91a9: 0x675f,\\n\\t\\t\\t\\t\\t\\t0x91aa: 0x6e2c,\\n\\t\\t\\t\\t\\t\\t0x91ab: 0x8db3,\\n\\t\\t\\t\\t\\t\\t0x91ac: 0x901f,\\n\\t\\t\\t\\t\\t\\t0x91ad: 0x4fd7,\\n\\t\\t\\t\\t\\t\\t0x91ae: 0x5c5e,\\n\\t\\t\\t\\t\\t\\t0x91af: 0x8cca,\\n\\t\\t\\t\\t\\t\\t0x91b0: 0x65cf,\\n\\t\\t\\t\\t\\t\\t0x91b1: 0x7d9a,\\n\\t\\t\\t\\t\\t\\t0x91b2: 0x5352,\\n\\t\\t\\t\\t\\t\\t0x91b3: 0x8896,\\n\\t\\t\\t\\t\\t\\t0x91b4: 0x5176,\\n\\t\\t\\t\\t\\t\\t0x91b5: 0x63c3,\\n\\t\\t\\t\\t\\t\\t0x91b6: 0x5b58,\\n\\t\\t\\t\\t\\t\\t0x91b7: 0x5b6b,\\n\\t\\t\\t\\t\\t\\t0x91b8: 0x5c0a,\\n\\t\\t\\t\\t\\t\\t0x91b9: 0x640d,\\n\\t\\t\\t\\t\\t\\t0x91ba: 0x6751,\\n\\t\\t\\t\\t\\t\\t0x91bb: 0x905c,\\n\\t\\t\\t\\t\\t\\t0x91bc: 0x4ed6,\\n\\t\\t\\t\\t\\t\\t0x91bd: 0x591a,\\n\\t\\t\\t\\t\\t\\t0x91be: 0x592a,\\n\\t\\t\\t\\t\\t\\t0x91bf: 0x6c70,\\n\\t\\t\\t\\t\\t\\t0x91c0: 0x8a51,\\n\\t\\t\\t\\t\\t\\t0x91c1: 0x553e,\\n\\t\\t\\t\\t\\t\\t0x91c2: 0x5815,\\n\\t\\t\\t\\t\\t\\t0x91c3: 0x59a5,\\n\\t\\t\\t\\t\\t\\t0x91c4: 0x60f0,\\n\\t\\t\\t\\t\\t\\t0x91c5: 0x6253,\\n\\t\\t\\t\\t\\t\\t0x91c6: 0x67c1,\\n\\t\\t\\t\\t\\t\\t0x91c7: 0x8235,\\n\\t\\t\\t\\t\\t\\t0x91c8: 0x6955,\\n\\t\\t\\t\\t\\t\\t0x91c9: 0x9640,\\n\\t\\t\\t\\t\\t\\t0x91ca: 0x99c4,\\n\\t\\t\\t\\t\\t\\t0x91cb: 0x9a28,\\n\\t\\t\\t\\t\\t\\t0x91cc: 0x4f53,\\n\\t\\t\\t\\t\\t\\t0x91cd: 0x5806,\\n\\t\\t\\t\\t\\t\\t0x91ce: 0x5bfe,\\n\\t\\t\\t\\t\\t\\t0x91cf: 0x8010,\\n\\t\\t\\t\\t\\t\\t0x91d0: 0x5cb1,\\n\\t\\t\\t\\t\\t\\t0x91d1: 0x5e2f,\\n\\t\\t\\t\\t\\t\\t0x91d2: 0x5f85,\\n\\t\\t\\t\\t\\t\\t0x91d3: 0x6020,\\n\\t\\t\\t\\t\\t\\t0x91d4: 0x614b,\\n\\t\\t\\t\\t\\t\\t0x91d5: 0x6234,\\n\\t\\t\\t\\t\\t\\t0x91d6: 0x66ff,\\n\\t\\t\\t\\t\\t\\t0x91d7: 0x6cf0,\\n\\t\\t\\t\\t\\t\\t0x91d8: 0x6ede,\\n\\t\\t\\t\\t\\t\\t0x91d9: 0x80ce,\\n\\t\\t\\t\\t\\t\\t0x91da: 0x817f,\\n\\t\\t\\t\\t\\t\\t0x91db: 0x82d4,\\n\\t\\t\\t\\t\\t\\t0x91dc: 0x888b,\\n\\t\\t\\t\\t\\t\\t0x91dd: 0x8cb8,\\n\\t\\t\\t\\t\\t\\t0x91de: 0x9000,\\n\\t\\t\\t\\t\\t\\t0x91df: 0x902e,\\n\\t\\t\\t\\t\\t\\t0x91e0: 0x968a,\\n\\t\\t\\t\\t\\t\\t0x91e1: 0x9edb,\\n\\t\\t\\t\\t\\t\\t0x91e2: 0x9bdb,\\n\\t\\t\\t\\t\\t\\t0x91e3: 0x4ee3,\\n\\t\\t\\t\\t\\t\\t0x91e4: 0x53f0,\\n\\t\\t\\t\\t\\t\\t0x91e5: 0x5927,\\n\\t\\t\\t\\t\\t\\t0x91e6: 0x7b2c,\\n\\t\\t\\t\\t\\t\\t0x91e7: 0x918d,\\n\\t\\t\\t\\t\\t\\t0x91e8: 0x984c,\\n\\t\\t\\t\\t\\t\\t0x91e9: 0x9df9,\\n\\t\\t\\t\\t\\t\\t0x91ea: 0x6edd,\\n\\t\\t\\t\\t\\t\\t0x91eb: 0x7027,\\n\\t\\t\\t\\t\\t\\t0x91ec: 0x5353,\\n\\t\\t\\t\\t\\t\\t0x91ed: 0x5544,\\n\\t\\t\\t\\t\\t\\t0x91ee: 0x5b85,\\n\\t\\t\\t\\t\\t\\t0x91ef: 0x6258,\\n\\t\\t\\t\\t\\t\\t0x91f0: 0x629e,\\n\\t\\t\\t\\t\\t\\t0x91f1: 0x62d3,\\n\\t\\t\\t\\t\\t\\t0x91f2: 0x6ca2,\\n\\t\\t\\t\\t\\t\\t0x91f3: 0x6fef,\\n\\t\\t\\t\\t\\t\\t0x91f4: 0x7422,\\n\\t\\t\\t\\t\\t\\t0x91f5: 0x8a17,\\n\\t\\t\\t\\t\\t\\t0x91f6: 0x9438,\\n\\t\\t\\t\\t\\t\\t0x91f7: 0x6fc1,\\n\\t\\t\\t\\t\\t\\t0x91f8: 0x8afe,\\n\\t\\t\\t\\t\\t\\t0x91f9: 0x8338,\\n\\t\\t\\t\\t\\t\\t0x91fa: 0x51e7,\\n\\t\\t\\t\\t\\t\\t0x91fb: 0x86f8,\\n\\t\\t\\t\\t\\t\\t0x91fc: 0x53ea,\\n\\t\\t\\t\\t\\t\\t0x9240: 0x53e9,\\n\\t\\t\\t\\t\\t\\t0x9241: 0x4f46,\\n\\t\\t\\t\\t\\t\\t0x9242: 0x9054,\\n\\t\\t\\t\\t\\t\\t0x9243: 0x8fb0,\\n\\t\\t\\t\\t\\t\\t0x9244: 0x596a,\\n\\t\\t\\t\\t\\t\\t0x9245: 0x8131,\\n\\t\\t\\t\\t\\t\\t0x9246: 0x5dfd,\\n\\t\\t\\t\\t\\t\\t0x9247: 0x7aea,\\n\\t\\t\\t\\t\\t\\t0x9248: 0x8fbf,\\n\\t\\t\\t\\t\\t\\t0x9249: 0x68da,\\n\\t\\t\\t\\t\\t\\t0x924a: 0x8c37,\\n\\t\\t\\t\\t\\t\\t0x924b: 0x72f8,\\n\\t\\t\\t\\t\\t\\t0x924c: 0x9c48,\\n\\t\\t\\t\\t\\t\\t0x924d: 0x6a3d,\\n\\t\\t\\t\\t\\t\\t0x924e: 0x8ab0,\\n\\t\\t\\t\\t\\t\\t0x924f: 0x4e39,\\n\\t\\t\\t\\t\\t\\t0x9250: 0x5358,\\n\\t\\t\\t\\t\\t\\t0x9251: 0x5606,\\n\\t\\t\\t\\t\\t\\t0x9252: 0x5766,\\n\\t\\t\\t\\t\\t\\t0x9253: 0x62c5,\\n\\t\\t\\t\\t\\t\\t0x9254: 0x63a2,\\n\\t\\t\\t\\t\\t\\t0x9255: 0x65e6,\\n\\t\\t\\t\\t\\t\\t0x9256: 0x6b4e,\\n\\t\\t\\t\\t\\t\\t0x9257: 0x6de1,\\n\\t\\t\\t\\t\\t\\t0x9258: 0x6e5b,\\n\\t\\t\\t\\t\\t\\t0x9259: 0x70ad,\\n\\t\\t\\t\\t\\t\\t0x925a: 0x77ed,\\n\\t\\t\\t\\t\\t\\t0x925b: 0x7aef,\\n\\t\\t\\t\\t\\t\\t0x925c: 0x7baa,\\n\\t\\t\\t\\t\\t\\t0x925d: 0x7dbb,\\n\\t\\t\\t\\t\\t\\t0x925e: 0x803d,\\n\\t\\t\\t\\t\\t\\t0x925f: 0x80c6,\\n\\t\\t\\t\\t\\t\\t0x9260: 0x86cb,\\n\\t\\t\\t\\t\\t\\t0x9261: 0x8a95,\\n\\t\\t\\t\\t\\t\\t0x9262: 0x935b,\\n\\t\\t\\t\\t\\t\\t0x9263: 0x56e3,\\n\\t\\t\\t\\t\\t\\t0x9264: 0x58c7,\\n\\t\\t\\t\\t\\t\\t0x9265: 0x5f3e,\\n\\t\\t\\t\\t\\t\\t0x9266: 0x65ad,\\n\\t\\t\\t\\t\\t\\t0x9267: 0x6696,\\n\\t\\t\\t\\t\\t\\t0x9268: 0x6a80,\\n\\t\\t\\t\\t\\t\\t0x9269: 0x6bb5,\\n\\t\\t\\t\\t\\t\\t0x926a: 0x7537,\\n\\t\\t\\t\\t\\t\\t0x926b: 0x8ac7,\\n\\t\\t\\t\\t\\t\\t0x926c: 0x5024,\\n\\t\\t\\t\\t\\t\\t0x926d: 0x77e5,\\n\\t\\t\\t\\t\\t\\t0x926e: 0x5730,\\n\\t\\t\\t\\t\\t\\t0x926f: 0x5f1b,\\n\\t\\t\\t\\t\\t\\t0x9270: 0x6065,\\n\\t\\t\\t\\t\\t\\t0x9271: 0x667a,\\n\\t\\t\\t\\t\\t\\t0x9272: 0x6c60,\\n\\t\\t\\t\\t\\t\\t0x9273: 0x75f4,\\n\\t\\t\\t\\t\\t\\t0x9274: 0x7a1a,\\n\\t\\t\\t\\t\\t\\t0x9275: 0x7f6e,\\n\\t\\t\\t\\t\\t\\t0x9276: 0x81f4,\\n\\t\\t\\t\\t\\t\\t0x9277: 0x8718,\\n\\t\\t\\t\\t\\t\\t0x9278: 0x9045,\\n\\t\\t\\t\\t\\t\\t0x9279: 0x99b3,\\n\\t\\t\\t\\t\\t\\t0x927a: 0x7bc9,\\n\\t\\t\\t\\t\\t\\t0x927b: 0x755c,\\n\\t\\t\\t\\t\\t\\t0x927c: 0x7af9,\\n\\t\\t\\t\\t\\t\\t0x927d: 0x7b51,\\n\\t\\t\\t\\t\\t\\t0x927e: 0x84c4,\\n\\t\\t\\t\\t\\t\\t0x9280: 0x9010,\\n\\t\\t\\t\\t\\t\\t0x9281: 0x79e9,\\n\\t\\t\\t\\t\\t\\t0x9282: 0x7a92,\\n\\t\\t\\t\\t\\t\\t0x9283: 0x8336,\\n\\t\\t\\t\\t\\t\\t0x9284: 0x5ae1,\\n\\t\\t\\t\\t\\t\\t0x9285: 0x7740,\\n\\t\\t\\t\\t\\t\\t0x9286: 0x4e2d,\\n\\t\\t\\t\\t\\t\\t0x9287: 0x4ef2,\\n\\t\\t\\t\\t\\t\\t0x9288: 0x5b99,\\n\\t\\t\\t\\t\\t\\t0x9289: 0x5fe0,\\n\\t\\t\\t\\t\\t\\t0x928a: 0x62bd,\\n\\t\\t\\t\\t\\t\\t0x928b: 0x663c,\\n\\t\\t\\t\\t\\t\\t0x928c: 0x67f1,\\n\\t\\t\\t\\t\\t\\t0x928d: 0x6ce8,\\n\\t\\t\\t\\t\\t\\t0x928e: 0x866b,\\n\\t\\t\\t\\t\\t\\t0x928f: 0x8877,\\n\\t\\t\\t\\t\\t\\t0x9290: 0x8a3b,\\n\\t\\t\\t\\t\\t\\t0x9291: 0x914e,\\n\\t\\t\\t\\t\\t\\t0x9292: 0x92f3,\\n\\t\\t\\t\\t\\t\\t0x9293: 0x99d0,\\n\\t\\t\\t\\t\\t\\t0x9294: 0x6a17,\\n\\t\\t\\t\\t\\t\\t0x9295: 0x7026,\\n\\t\\t\\t\\t\\t\\t0x9296: 0x732a,\\n\\t\\t\\t\\t\\t\\t0x9297: 0x82e7,\\n\\t\\t\\t\\t\\t\\t0x9298: 0x8457,\\n\\t\\t\\t\\t\\t\\t0x9299: 0x8caf,\\n\\t\\t\\t\\t\\t\\t0x929a: 0x4e01,\\n\\t\\t\\t\\t\\t\\t0x929b: 0x5146,\\n\\t\\t\\t\\t\\t\\t0x929c: 0x51cb,\\n\\t\\t\\t\\t\\t\\t0x929d: 0x558b,\\n\\t\\t\\t\\t\\t\\t0x929e: 0x5bf5,\\n\\t\\t\\t\\t\\t\\t0x929f: 0x5e16,\\n\\t\\t\\t\\t\\t\\t0x92a0: 0x5e33,\\n\\t\\t\\t\\t\\t\\t0x92a1: 0x5e81,\\n\\t\\t\\t\\t\\t\\t0x92a2: 0x5f14,\\n\\t\\t\\t\\t\\t\\t0x92a3: 0x5f35,\\n\\t\\t\\t\\t\\t\\t0x92a4: 0x5f6b,\\n\\t\\t\\t\\t\\t\\t0x92a5: 0x5fb4,\\n\\t\\t\\t\\t\\t\\t0x92a6: 0x61f2,\\n\\t\\t\\t\\t\\t\\t0x92a7: 0x6311,\\n\\t\\t\\t\\t\\t\\t0x92a8: 0x66a2,\\n\\t\\t\\t\\t\\t\\t0x92a9: 0x671d,\\n\\t\\t\\t\\t\\t\\t0x92aa: 0x6f6e,\\n\\t\\t\\t\\t\\t\\t0x92ab: 0x7252,\\n\\t\\t\\t\\t\\t\\t0x92ac: 0x753a,\\n\\t\\t\\t\\t\\t\\t0x92ad: 0x773a,\\n\\t\\t\\t\\t\\t\\t0x92ae: 0x8074,\\n\\t\\t\\t\\t\\t\\t0x92af: 0x8139,\\n\\t\\t\\t\\t\\t\\t0x92b0: 0x8178,\\n\\t\\t\\t\\t\\t\\t0x92b1: 0x8776,\\n\\t\\t\\t\\t\\t\\t0x92b2: 0x8abf,\\n\\t\\t\\t\\t\\t\\t0x92b3: 0x8adc,\\n\\t\\t\\t\\t\\t\\t0x92b4: 0x8d85,\\n\\t\\t\\t\\t\\t\\t0x92b5: 0x8df3,\\n\\t\\t\\t\\t\\t\\t0x92b6: 0x929a,\\n\\t\\t\\t\\t\\t\\t0x92b7: 0x9577,\\n\\t\\t\\t\\t\\t\\t0x92b8: 0x9802,\\n\\t\\t\\t\\t\\t\\t0x92b9: 0x9ce5,\\n\\t\\t\\t\\t\\t\\t0x92ba: 0x52c5,\\n\\t\\t\\t\\t\\t\\t0x92bb: 0x6357,\\n\\t\\t\\t\\t\\t\\t0x92bc: 0x76f4,\\n\\t\\t\\t\\t\\t\\t0x92bd: 0x6715,\\n\\t\\t\\t\\t\\t\\t0x92be: 0x6c88,\\n\\t\\t\\t\\t\\t\\t0x92bf: 0x73cd,\\n\\t\\t\\t\\t\\t\\t0x92c0: 0x8cc3,\\n\\t\\t\\t\\t\\t\\t0x92c1: 0x93ae,\\n\\t\\t\\t\\t\\t\\t0x92c2: 0x9673,\\n\\t\\t\\t\\t\\t\\t0x92c3: 0x6d25,\\n\\t\\t\\t\\t\\t\\t0x92c4: 0x589c,\\n\\t\\t\\t\\t\\t\\t0x92c5: 0x690e,\\n\\t\\t\\t\\t\\t\\t0x92c6: 0x69cc,\\n\\t\\t\\t\\t\\t\\t0x92c7: 0x8ffd,\\n\\t\\t\\t\\t\\t\\t0x92c8: 0x939a,\\n\\t\\t\\t\\t\\t\\t0x92c9: 0x75db,\\n\\t\\t\\t\\t\\t\\t0x92ca: 0x901a,\\n\\t\\t\\t\\t\\t\\t0x92cb: 0x585a,\\n\\t\\t\\t\\t\\t\\t0x92cc: 0x6802,\\n\\t\\t\\t\\t\\t\\t0x92cd: 0x63b4,\\n\\t\\t\\t\\t\\t\\t0x92ce: 0x69fb,\\n\\t\\t\\t\\t\\t\\t0x92cf: 0x4f43,\\n\\t\\t\\t\\t\\t\\t0x92d0: 0x6f2c,\\n\\t\\t\\t\\t\\t\\t0x92d1: 0x67d8,\\n\\t\\t\\t\\t\\t\\t0x92d2: 0x8fbb,\\n\\t\\t\\t\\t\\t\\t0x92d3: 0x8526,\\n\\t\\t\\t\\t\\t\\t0x92d4: 0x7db4,\\n\\t\\t\\t\\t\\t\\t0x92d5: 0x9354,\\n\\t\\t\\t\\t\\t\\t0x92d6: 0x693f,\\n\\t\\t\\t\\t\\t\\t0x92d7: 0x6f70,\\n\\t\\t\\t\\t\\t\\t0x92d8: 0x576a,\\n\\t\\t\\t\\t\\t\\t0x92d9: 0x58f7,\\n\\t\\t\\t\\t\\t\\t0x92da: 0x5b2c,\\n\\t\\t\\t\\t\\t\\t0x92db: 0x7d2c,\\n\\t\\t\\t\\t\\t\\t0x92dc: 0x722a,\\n\\t\\t\\t\\t\\t\\t0x92dd: 0x540a,\\n\\t\\t\\t\\t\\t\\t0x92de: 0x91e3,\\n\\t\\t\\t\\t\\t\\t0x92df: 0x9db4,\\n\\t\\t\\t\\t\\t\\t0x92e0: 0x4ead,\\n\\t\\t\\t\\t\\t\\t0x92e1: 0x4f4e,\\n\\t\\t\\t\\t\\t\\t0x92e2: 0x505c,\\n\\t\\t\\t\\t\\t\\t0x92e3: 0x5075,\\n\\t\\t\\t\\t\\t\\t0x92e4: 0x5243,\\n\\t\\t\\t\\t\\t\\t0x92e5: 0x8c9e,\\n\\t\\t\\t\\t\\t\\t0x92e6: 0x5448,\\n\\t\\t\\t\\t\\t\\t0x92e7: 0x5824,\\n\\t\\t\\t\\t\\t\\t0x92e8: 0x5b9a,\\n\\t\\t\\t\\t\\t\\t0x92e9: 0x5e1d,\\n\\t\\t\\t\\t\\t\\t0x92ea: 0x5e95,\\n\\t\\t\\t\\t\\t\\t0x92eb: 0x5ead,\\n\\t\\t\\t\\t\\t\\t0x92ec: 0x5ef7,\\n\\t\\t\\t\\t\\t\\t0x92ed: 0x5f1f,\\n\\t\\t\\t\\t\\t\\t0x92ee: 0x608c,\\n\\t\\t\\t\\t\\t\\t0x92ef: 0x62b5,\\n\\t\\t\\t\\t\\t\\t0x92f0: 0x633a,\\n\\t\\t\\t\\t\\t\\t0x92f1: 0x63d0,\\n\\t\\t\\t\\t\\t\\t0x92f2: 0x68af,\\n\\t\\t\\t\\t\\t\\t0x92f3: 0x6c40,\\n\\t\\t\\t\\t\\t\\t0x92f4: 0x7887,\\n\\t\\t\\t\\t\\t\\t0x92f5: 0x798e,\\n\\t\\t\\t\\t\\t\\t0x92f6: 0x7a0b,\\n\\t\\t\\t\\t\\t\\t0x92f7: 0x7de0,\\n\\t\\t\\t\\t\\t\\t0x92f8: 0x8247,\\n\\t\\t\\t\\t\\t\\t0x92f9: 0x8a02,\\n\\t\\t\\t\\t\\t\\t0x92fa: 0x8ae6,\\n\\t\\t\\t\\t\\t\\t0x92fb: 0x8e44,\\n\\t\\t\\t\\t\\t\\t0x92fc: 0x9013,\\n\\t\\t\\t\\t\\t\\t0x9340: 0x90b8,\\n\\t\\t\\t\\t\\t\\t0x9341: 0x912d,\\n\\t\\t\\t\\t\\t\\t0x9342: 0x91d8,\\n\\t\\t\\t\\t\\t\\t0x9343: 0x9f0e,\\n\\t\\t\\t\\t\\t\\t0x9344: 0x6ce5,\\n\\t\\t\\t\\t\\t\\t0x9345: 0x6458,\\n\\t\\t\\t\\t\\t\\t0x9346: 0x64e2,\\n\\t\\t\\t\\t\\t\\t0x9347: 0x6575,\\n\\t\\t\\t\\t\\t\\t0x9348: 0x6ef4,\\n\\t\\t\\t\\t\\t\\t0x9349: 0x7684,\\n\\t\\t\\t\\t\\t\\t0x934a: 0x7b1b,\\n\\t\\t\\t\\t\\t\\t0x934b: 0x9069,\\n\\t\\t\\t\\t\\t\\t0x934c: 0x93d1,\\n\\t\\t\\t\\t\\t\\t0x934d: 0x6eba,\\n\\t\\t\\t\\t\\t\\t0x934e: 0x54f2,\\n\\t\\t\\t\\t\\t\\t0x934f: 0x5fb9,\\n\\t\\t\\t\\t\\t\\t0x9350: 0x64a4,\\n\\t\\t\\t\\t\\t\\t0x9351: 0x8f4d,\\n\\t\\t\\t\\t\\t\\t0x9352: 0x8fed,\\n\\t\\t\\t\\t\\t\\t0x9353: 0x9244,\\n\\t\\t\\t\\t\\t\\t0x9354: 0x5178,\\n\\t\\t\\t\\t\\t\\t0x9355: 0x586b,\\n\\t\\t\\t\\t\\t\\t0x9356: 0x5929,\\n\\t\\t\\t\\t\\t\\t0x9357: 0x5c55,\\n\\t\\t\\t\\t\\t\\t0x9358: 0x5e97,\\n\\t\\t\\t\\t\\t\\t0x9359: 0x6dfb,\\n\\t\\t\\t\\t\\t\\t0x935a: 0x7e8f,\\n\\t\\t\\t\\t\\t\\t0x935b: 0x751c,\\n\\t\\t\\t\\t\\t\\t0x935c: 0x8cbc,\\n\\t\\t\\t\\t\\t\\t0x935d: 0x8ee2,\\n\\t\\t\\t\\t\\t\\t0x935e: 0x985b,\\n\\t\\t\\t\\t\\t\\t0x935f: 0x70b9,\\n\\t\\t\\t\\t\\t\\t0x9360: 0x4f1d,\\n\\t\\t\\t\\t\\t\\t0x9361: 0x6bbf,\\n\\t\\t\\t\\t\\t\\t0x9362: 0x6fb1,\\n\\t\\t\\t\\t\\t\\t0x9363: 0x7530,\\n\\t\\t\\t\\t\\t\\t0x9364: 0x96fb,\\n\\t\\t\\t\\t\\t\\t0x9365: 0x514e,\\n\\t\\t\\t\\t\\t\\t0x9366: 0x5410,\\n\\t\\t\\t\\t\\t\\t0x9367: 0x5835,\\n\\t\\t\\t\\t\\t\\t0x9368: 0x5857,\\n\\t\\t\\t\\t\\t\\t0x9369: 0x59ac,\\n\\t\\t\\t\\t\\t\\t0x936a: 0x5c60,\\n\\t\\t\\t\\t\\t\\t0x936b: 0x5f92,\\n\\t\\t\\t\\t\\t\\t0x936c: 0x6597,\\n\\t\\t\\t\\t\\t\\t0x936d: 0x675c,\\n\\t\\t\\t\\t\\t\\t0x936e: 0x6e21,\\n\\t\\t\\t\\t\\t\\t0x936f: 0x767b,\\n\\t\\t\\t\\t\\t\\t0x9370: 0x83df,\\n\\t\\t\\t\\t\\t\\t0x9371: 0x8ced,\\n\\t\\t\\t\\t\\t\\t0x9372: 0x9014,\\n\\t\\t\\t\\t\\t\\t0x9373: 0x90fd,\\n\\t\\t\\t\\t\\t\\t0x9374: 0x934d,\\n\\t\\t\\t\\t\\t\\t0x9375: 0x7825,\\n\\t\\t\\t\\t\\t\\t0x9376: 0x783a,\\n\\t\\t\\t\\t\\t\\t0x9377: 0x52aa,\\n\\t\\t\\t\\t\\t\\t0x9378: 0x5ea6,\\n\\t\\t\\t\\t\\t\\t0x9379: 0x571f,\\n\\t\\t\\t\\t\\t\\t0x937a: 0x5974,\\n\\t\\t\\t\\t\\t\\t0x937b: 0x6012,\\n\\t\\t\\t\\t\\t\\t0x937c: 0x5012,\\n\\t\\t\\t\\t\\t\\t0x937d: 0x515a,\\n\\t\\t\\t\\t\\t\\t0x937e: 0x51ac,\\n\\t\\t\\t\\t\\t\\t0x9380: 0x51cd,\\n\\t\\t\\t\\t\\t\\t0x9381: 0x5200,\\n\\t\\t\\t\\t\\t\\t0x9382: 0x5510,\\n\\t\\t\\t\\t\\t\\t0x9383: 0x5854,\\n\\t\\t\\t\\t\\t\\t0x9384: 0x5858,\\n\\t\\t\\t\\t\\t\\t0x9385: 0x5957,\\n\\t\\t\\t\\t\\t\\t0x9386: 0x5b95,\\n\\t\\t\\t\\t\\t\\t0x9387: 0x5cf6,\\n\\t\\t\\t\\t\\t\\t0x9388: 0x5d8b,\\n\\t\\t\\t\\t\\t\\t0x9389: 0x60bc,\\n\\t\\t\\t\\t\\t\\t0x938a: 0x6295,\\n\\t\\t\\t\\t\\t\\t0x938b: 0x642d,\\n\\t\\t\\t\\t\\t\\t0x938c: 0x6771,\\n\\t\\t\\t\\t\\t\\t0x938d: 0x6843,\\n\\t\\t\\t\\t\\t\\t0x938e: 0x68bc,\\n\\t\\t\\t\\t\\t\\t0x938f: 0x68df,\\n\\t\\t\\t\\t\\t\\t0x9390: 0x76d7,\\n\\t\\t\\t\\t\\t\\t0x9391: 0x6dd8,\\n\\t\\t\\t\\t\\t\\t0x9392: 0x6e6f,\\n\\t\\t\\t\\t\\t\\t0x9393: 0x6d9b,\\n\\t\\t\\t\\t\\t\\t0x9394: 0x706f,\\n\\t\\t\\t\\t\\t\\t0x9395: 0x71c8,\\n\\t\\t\\t\\t\\t\\t0x9396: 0x5f53,\\n\\t\\t\\t\\t\\t\\t0x9397: 0x75d8,\\n\\t\\t\\t\\t\\t\\t0x9398: 0x7977,\\n\\t\\t\\t\\t\\t\\t0x9399: 0x7b49,\\n\\t\\t\\t\\t\\t\\t0x939a: 0x7b54,\\n\\t\\t\\t\\t\\t\\t0x939b: 0x7b52,\\n\\t\\t\\t\\t\\t\\t0x939c: 0x7cd6,\\n\\t\\t\\t\\t\\t\\t0x939d: 0x7d71,\\n\\t\\t\\t\\t\\t\\t0x939e: 0x5230,\\n\\t\\t\\t\\t\\t\\t0x939f: 0x8463,\\n\\t\\t\\t\\t\\t\\t0x93a0: 0x8569,\\n\\t\\t\\t\\t\\t\\t0x93a1: 0x85e4,\\n\\t\\t\\t\\t\\t\\t0x93a2: 0x8a0e,\\n\\t\\t\\t\\t\\t\\t0x93a3: 0x8b04,\\n\\t\\t\\t\\t\\t\\t0x93a4: 0x8c46,\\n\\t\\t\\t\\t\\t\\t0x93a5: 0x8e0f,\\n\\t\\t\\t\\t\\t\\t0x93a6: 0x9003,\\n\\t\\t\\t\\t\\t\\t0x93a7: 0x900f,\\n\\t\\t\\t\\t\\t\\t0x93a8: 0x9419,\\n\\t\\t\\t\\t\\t\\t0x93a9: 0x9676,\\n\\t\\t\\t\\t\\t\\t0x93aa: 0x982d,\\n\\t\\t\\t\\t\\t\\t0x93ab: 0x9a30,\\n\\t\\t\\t\\t\\t\\t0x93ac: 0x95d8,\\n\\t\\t\\t\\t\\t\\t0x93ad: 0x50cd,\\n\\t\\t\\t\\t\\t\\t0x93ae: 0x52d5,\\n\\t\\t\\t\\t\\t\\t0x93af: 0x540c,\\n\\t\\t\\t\\t\\t\\t0x93b0: 0x5802,\\n\\t\\t\\t\\t\\t\\t0x93b1: 0x5c0e,\\n\\t\\t\\t\\t\\t\\t0x93b2: 0x61a7,\\n\\t\\t\\t\\t\\t\\t0x93b3: 0x649e,\\n\\t\\t\\t\\t\\t\\t0x93b4: 0x6d1e,\\n\\t\\t\\t\\t\\t\\t0x93b5: 0x77b3,\\n\\t\\t\\t\\t\\t\\t0x93b6: 0x7ae5,\\n\\t\\t\\t\\t\\t\\t0x93b7: 0x80f4,\\n\\t\\t\\t\\t\\t\\t0x93b8: 0x8404,\\n\\t\\t\\t\\t\\t\\t0x93b9: 0x9053,\\n\\t\\t\\t\\t\\t\\t0x93ba: 0x9285,\\n\\t\\t\\t\\t\\t\\t0x93bb: 0x5ce0,\\n\\t\\t\\t\\t\\t\\t0x93bc: 0x9d07,\\n\\t\\t\\t\\t\\t\\t0x93bd: 0x533f,\\n\\t\\t\\t\\t\\t\\t0x93be: 0x5f97,\\n\\t\\t\\t\\t\\t\\t0x93bf: 0x5fb3,\\n\\t\\t\\t\\t\\t\\t0x93c0: 0x6d9c,\\n\\t\\t\\t\\t\\t\\t0x93c1: 0x7279,\\n\\t\\t\\t\\t\\t\\t0x93c2: 0x7763,\\n\\t\\t\\t\\t\\t\\t0x93c3: 0x79bf,\\n\\t\\t\\t\\t\\t\\t0x93c4: 0x7be4,\\n\\t\\t\\t\\t\\t\\t0x93c5: 0x6bd2,\\n\\t\\t\\t\\t\\t\\t0x93c6: 0x72ec,\\n\\t\\t\\t\\t\\t\\t0x93c7: 0x8aad,\\n\\t\\t\\t\\t\\t\\t0x93c8: 0x6803,\\n\\t\\t\\t\\t\\t\\t0x93c9: 0x6a61,\\n\\t\\t\\t\\t\\t\\t0x93ca: 0x51f8,\\n\\t\\t\\t\\t\\t\\t0x93cb: 0x7a81,\\n\\t\\t\\t\\t\\t\\t0x93cc: 0x6934,\\n\\t\\t\\t\\t\\t\\t0x93cd: 0x5c4a,\\n\\t\\t\\t\\t\\t\\t0x93ce: 0x9cf6,\\n\\t\\t\\t\\t\\t\\t0x93cf: 0x82eb,\\n\\t\\t\\t\\t\\t\\t0x93d0: 0x5bc5,\\n\\t\\t\\t\\t\\t\\t0x93d1: 0x9149,\\n\\t\\t\\t\\t\\t\\t0x93d2: 0x701e,\\n\\t\\t\\t\\t\\t\\t0x93d3: 0x5678,\\n\\t\\t\\t\\t\\t\\t0x93d4: 0x5c6f,\\n\\t\\t\\t\\t\\t\\t0x93d5: 0x60c7,\\n\\t\\t\\t\\t\\t\\t0x93d6: 0x6566,\\n\\t\\t\\t\\t\\t\\t0x93d7: 0x6c8c,\\n\\t\\t\\t\\t\\t\\t0x93d8: 0x8c5a,\\n\\t\\t\\t\\t\\t\\t0x93d9: 0x9041,\\n\\t\\t\\t\\t\\t\\t0x93da: 0x9813,\\n\\t\\t\\t\\t\\t\\t0x93db: 0x5451,\\n\\t\\t\\t\\t\\t\\t0x93dc: 0x66c7,\\n\\t\\t\\t\\t\\t\\t0x93dd: 0x920d,\\n\\t\\t\\t\\t\\t\\t0x93de: 0x5948,\\n\\t\\t\\t\\t\\t\\t0x93df: 0x90a3,\\n\\t\\t\\t\\t\\t\\t0x93e0: 0x5185,\\n\\t\\t\\t\\t\\t\\t0x93e1: 0x4e4d,\\n\\t\\t\\t\\t\\t\\t0x93e2: 0x51ea,\\n\\t\\t\\t\\t\\t\\t0x93e3: 0x8599,\\n\\t\\t\\t\\t\\t\\t0x93e4: 0x8b0e,\\n\\t\\t\\t\\t\\t\\t0x93e5: 0x7058,\\n\\t\\t\\t\\t\\t\\t0x93e6: 0x637a,\\n\\t\\t\\t\\t\\t\\t0x93e7: 0x934b,\\n\\t\\t\\t\\t\\t\\t0x93e8: 0x6962,\\n\\t\\t\\t\\t\\t\\t0x93e9: 0x99b4,\\n\\t\\t\\t\\t\\t\\t0x93ea: 0x7e04,\\n\\t\\t\\t\\t\\t\\t0x93eb: 0x7577,\\n\\t\\t\\t\\t\\t\\t0x93ec: 0x5357,\\n\\t\\t\\t\\t\\t\\t0x93ed: 0x6960,\\n\\t\\t\\t\\t\\t\\t0x93ee: 0x8edf,\\n\\t\\t\\t\\t\\t\\t0x93ef: 0x96e3,\\n\\t\\t\\t\\t\\t\\t0x93f0: 0x6c5d,\\n\\t\\t\\t\\t\\t\\t0x93f1: 0x4e8c,\\n\\t\\t\\t\\t\\t\\t0x93f2: 0x5c3c,\\n\\t\\t\\t\\t\\t\\t0x93f3: 0x5f10,\\n\\t\\t\\t\\t\\t\\t0x93f4: 0x8fe9,\\n\\t\\t\\t\\t\\t\\t0x93f5: 0x5302,\\n\\t\\t\\t\\t\\t\\t0x93f6: 0x8cd1,\\n\\t\\t\\t\\t\\t\\t0x93f7: 0x8089,\\n\\t\\t\\t\\t\\t\\t0x93f8: 0x8679,\\n\\t\\t\\t\\t\\t\\t0x93f9: 0x5eff,\\n\\t\\t\\t\\t\\t\\t0x93fa: 0x65e5,\\n\\t\\t\\t\\t\\t\\t0x93fb: 0x4e73,\\n\\t\\t\\t\\t\\t\\t0x93fc: 0x5165,\\n\\t\\t\\t\\t\\t\\t0x9440: 0x5982,\\n\\t\\t\\t\\t\\t\\t0x9441: 0x5c3f,\\n\\t\\t\\t\\t\\t\\t0x9442: 0x97ee,\\n\\t\\t\\t\\t\\t\\t0x9443: 0x4efb,\\n\\t\\t\\t\\t\\t\\t0x9444: 0x598a,\\n\\t\\t\\t\\t\\t\\t0x9445: 0x5fcd,\\n\\t\\t\\t\\t\\t\\t0x9446: 0x8a8d,\\n\\t\\t\\t\\t\\t\\t0x9447: 0x6fe1,\\n\\t\\t\\t\\t\\t\\t0x9448: 0x79b0,\\n\\t\\t\\t\\t\\t\\t0x9449: 0x7962,\\n\\t\\t\\t\\t\\t\\t0x944a: 0x5be7,\\n\\t\\t\\t\\t\\t\\t0x944b: 0x8471,\\n\\t\\t\\t\\t\\t\\t0x944c: 0x732b,\\n\\t\\t\\t\\t\\t\\t0x944d: 0x71b1,\\n\\t\\t\\t\\t\\t\\t0x944e: 0x5e74,\\n\\t\\t\\t\\t\\t\\t0x944f: 0x5ff5,\\n\\t\\t\\t\\t\\t\\t0x9450: 0x637b,\\n\\t\\t\\t\\t\\t\\t0x9451: 0x649a,\\n\\t\\t\\t\\t\\t\\t0x9452: 0x71c3,\\n\\t\\t\\t\\t\\t\\t0x9453: 0x7c98,\\n\\t\\t\\t\\t\\t\\t0x9454: 0x4e43,\\n\\t\\t\\t\\t\\t\\t0x9455: 0x5efc,\\n\\t\\t\\t\\t\\t\\t0x9456: 0x4e4b,\\n\\t\\t\\t\\t\\t\\t0x9457: 0x57dc,\\n\\t\\t\\t\\t\\t\\t0x9458: 0x56a2,\\n\\t\\t\\t\\t\\t\\t0x9459: 0x60a9,\\n\\t\\t\\t\\t\\t\\t0x945a: 0x6fc3,\\n\\t\\t\\t\\t\\t\\t0x945b: 0x7d0d,\\n\\t\\t\\t\\t\\t\\t0x945c: 0x80fd,\\n\\t\\t\\t\\t\\t\\t0x945d: 0x8133,\\n\\t\\t\\t\\t\\t\\t0x945e: 0x81bf,\\n\\t\\t\\t\\t\\t\\t0x945f: 0x8fb2,\\n\\t\\t\\t\\t\\t\\t0x9460: 0x8997,\\n\\t\\t\\t\\t\\t\\t0x9461: 0x86a4,\\n\\t\\t\\t\\t\\t\\t0x9462: 0x5df4,\\n\\t\\t\\t\\t\\t\\t0x9463: 0x628a,\\n\\t\\t\\t\\t\\t\\t0x9464: 0x64ad,\\n\\t\\t\\t\\t\\t\\t0x9465: 0x8987,\\n\\t\\t\\t\\t\\t\\t0x9466: 0x6777,\\n\\t\\t\\t\\t\\t\\t0x9467: 0x6ce2,\\n\\t\\t\\t\\t\\t\\t0x9468: 0x6d3e,\\n\\t\\t\\t\\t\\t\\t0x9469: 0x7436,\\n\\t\\t\\t\\t\\t\\t0x946a: 0x7834,\\n\\t\\t\\t\\t\\t\\t0x946b: 0x5a46,\\n\\t\\t\\t\\t\\t\\t0x946c: 0x7f75,\\n\\t\\t\\t\\t\\t\\t0x946d: 0x82ad,\\n\\t\\t\\t\\t\\t\\t0x946e: 0x99ac,\\n\\t\\t\\t\\t\\t\\t0x946f: 0x4ff3,\\n\\t\\t\\t\\t\\t\\t0x9470: 0x5ec3,\\n\\t\\t\\t\\t\\t\\t0x9471: 0x62dd,\\n\\t\\t\\t\\t\\t\\t0x9472: 0x6392,\\n\\t\\t\\t\\t\\t\\t0x9473: 0x6557,\\n\\t\\t\\t\\t\\t\\t0x9474: 0x676f,\\n\\t\\t\\t\\t\\t\\t0x9475: 0x76c3,\\n\\t\\t\\t\\t\\t\\t0x9476: 0x724c,\\n\\t\\t\\t\\t\\t\\t0x9477: 0x80cc,\\n\\t\\t\\t\\t\\t\\t0x9478: 0x80ba,\\n\\t\\t\\t\\t\\t\\t0x9479: 0x8f29,\\n\\t\\t\\t\\t\\t\\t0x947a: 0x914d,\\n\\t\\t\\t\\t\\t\\t0x947b: 0x500d,\\n\\t\\t\\t\\t\\t\\t0x947c: 0x57f9,\\n\\t\\t\\t\\t\\t\\t0x947d: 0x5a92,\\n\\t\\t\\t\\t\\t\\t0x947e: 0x6885,\\n\\t\\t\\t\\t\\t\\t0x9480: 0x6973,\\n\\t\\t\\t\\t\\t\\t0x9481: 0x7164,\\n\\t\\t\\t\\t\\t\\t0x9482: 0x72fd,\\n\\t\\t\\t\\t\\t\\t0x9483: 0x8cb7,\\n\\t\\t\\t\\t\\t\\t0x9484: 0x58f2,\\n\\t\\t\\t\\t\\t\\t0x9485: 0x8ce0,\\n\\t\\t\\t\\t\\t\\t0x9486: 0x966a,\\n\\t\\t\\t\\t\\t\\t0x9487: 0x9019,\\n\\t\\t\\t\\t\\t\\t0x9488: 0x877f,\\n\\t\\t\\t\\t\\t\\t0x9489: 0x79e4,\\n\\t\\t\\t\\t\\t\\t0x948a: 0x77e7,\\n\\t\\t\\t\\t\\t\\t0x948b: 0x8429,\\n\\t\\t\\t\\t\\t\\t0x948c: 0x4f2f,\\n\\t\\t\\t\\t\\t\\t0x948d: 0x5265,\\n\\t\\t\\t\\t\\t\\t0x948e: 0x535a,\\n\\t\\t\\t\\t\\t\\t0x948f: 0x62cd,\\n\\t\\t\\t\\t\\t\\t0x9490: 0x67cf,\\n\\t\\t\\t\\t\\t\\t0x9491: 0x6cca,\\n\\t\\t\\t\\t\\t\\t0x9492: 0x767d,\\n\\t\\t\\t\\t\\t\\t0x9493: 0x7b94,\\n\\t\\t\\t\\t\\t\\t0x9494: 0x7c95,\\n\\t\\t\\t\\t\\t\\t0x9495: 0x8236,\\n\\t\\t\\t\\t\\t\\t0x9496: 0x8584,\\n\\t\\t\\t\\t\\t\\t0x9497: 0x8feb,\\n\\t\\t\\t\\t\\t\\t0x9498: 0x66dd,\\n\\t\\t\\t\\t\\t\\t0x9499: 0x6f20,\\n\\t\\t\\t\\t\\t\\t0x949a: 0x7206,\\n\\t\\t\\t\\t\\t\\t0x949b: 0x7e1b,\\n\\t\\t\\t\\t\\t\\t0x949c: 0x83ab,\\n\\t\\t\\t\\t\\t\\t0x949d: 0x99c1,\\n\\t\\t\\t\\t\\t\\t0x949e: 0x9ea6,\\n\\t\\t\\t\\t\\t\\t0x949f: 0x51fd,\\n\\t\\t\\t\\t\\t\\t0x94a0: 0x7bb1,\\n\\t\\t\\t\\t\\t\\t0x94a1: 0x7872,\\n\\t\\t\\t\\t\\t\\t0x94a2: 0x7bb8,\\n\\t\\t\\t\\t\\t\\t0x94a3: 0x8087,\\n\\t\\t\\t\\t\\t\\t0x94a4: 0x7b48,\\n\\t\\t\\t\\t\\t\\t0x94a5: 0x6ae8,\\n\\t\\t\\t\\t\\t\\t0x94a6: 0x5e61,\\n\\t\\t\\t\\t\\t\\t0x94a7: 0x808c,\\n\\t\\t\\t\\t\\t\\t0x94a8: 0x7551,\\n\\t\\t\\t\\t\\t\\t0x94a9: 0x7560,\\n\\t\\t\\t\\t\\t\\t0x94aa: 0x516b,\\n\\t\\t\\t\\t\\t\\t0x94ab: 0x9262,\\n\\t\\t\\t\\t\\t\\t0x94ac: 0x6e8c,\\n\\t\\t\\t\\t\\t\\t0x94ad: 0x767a,\\n\\t\\t\\t\\t\\t\\t0x94ae: 0x9197,\\n\\t\\t\\t\\t\\t\\t0x94af: 0x9aea,\\n\\t\\t\\t\\t\\t\\t0x94b0: 0x4f10,\\n\\t\\t\\t\\t\\t\\t0x94b1: 0x7f70,\\n\\t\\t\\t\\t\\t\\t0x94b2: 0x629c,\\n\\t\\t\\t\\t\\t\\t0x94b3: 0x7b4f,\\n\\t\\t\\t\\t\\t\\t0x94b4: 0x95a5,\\n\\t\\t\\t\\t\\t\\t0x94b5: 0x9ce9,\\n\\t\\t\\t\\t\\t\\t0x94b6: 0x567a,\\n\\t\\t\\t\\t\\t\\t0x94b7: 0x5859,\\n\\t\\t\\t\\t\\t\\t0x94b8: 0x86e4,\\n\\t\\t\\t\\t\\t\\t0x94b9: 0x96bc,\\n\\t\\t\\t\\t\\t\\t0x94ba: 0x4f34,\\n\\t\\t\\t\\t\\t\\t0x94bb: 0x5224,\\n\\t\\t\\t\\t\\t\\t0x94bc: 0x534a,\\n\\t\\t\\t\\t\\t\\t0x94bd: 0x53cd,\\n\\t\\t\\t\\t\\t\\t0x94be: 0x53db,\\n\\t\\t\\t\\t\\t\\t0x94bf: 0x5e06,\\n\\t\\t\\t\\t\\t\\t0x94c0: 0x642c,\\n\\t\\t\\t\\t\\t\\t0x94c1: 0x6591,\\n\\t\\t\\t\\t\\t\\t0x94c2: 0x677f,\\n\\t\\t\\t\\t\\t\\t0x94c3: 0x6c3e,\\n\\t\\t\\t\\t\\t\\t0x94c4: 0x6c4e,\\n\\t\\t\\t\\t\\t\\t0x94c5: 0x7248,\\n\\t\\t\\t\\t\\t\\t0x94c6: 0x72af,\\n\\t\\t\\t\\t\\t\\t0x94c7: 0x73ed,\\n\\t\\t\\t\\t\\t\\t0x94c8: 0x7554,\\n\\t\\t\\t\\t\\t\\t0x94c9: 0x7e41,\\n\\t\\t\\t\\t\\t\\t0x94ca: 0x822c,\\n\\t\\t\\t\\t\\t\\t0x94cb: 0x85e9,\\n\\t\\t\\t\\t\\t\\t0x94cc: 0x8ca9,\\n\\t\\t\\t\\t\\t\\t0x94cd: 0x7bc4,\\n\\t\\t\\t\\t\\t\\t0x94ce: 0x91c6,\\n\\t\\t\\t\\t\\t\\t0x94cf: 0x7169,\\n\\t\\t\\t\\t\\t\\t0x94d0: 0x9812,\\n\\t\\t\\t\\t\\t\\t0x94d1: 0x98ef,\\n\\t\\t\\t\\t\\t\\t0x94d2: 0x633d,\\n\\t\\t\\t\\t\\t\\t0x94d3: 0x6669,\\n\\t\\t\\t\\t\\t\\t0x94d4: 0x756a,\\n\\t\\t\\t\\t\\t\\t0x94d5: 0x76e4,\\n\\t\\t\\t\\t\\t\\t0x94d6: 0x78d0,\\n\\t\\t\\t\\t\\t\\t0x94d7: 0x8543,\\n\\t\\t\\t\\t\\t\\t0x94d8: 0x86ee,\\n\\t\\t\\t\\t\\t\\t0x94d9: 0x532a,\\n\\t\\t\\t\\t\\t\\t0x94da: 0x5351,\\n\\t\\t\\t\\t\\t\\t0x94db: 0x5426,\\n\\t\\t\\t\\t\\t\\t0x94dc: 0x5983,\\n\\t\\t\\t\\t\\t\\t0x94dd: 0x5e87,\\n\\t\\t\\t\\t\\t\\t0x94de: 0x5f7c,\\n\\t\\t\\t\\t\\t\\t0x94df: 0x60b2,\\n\\t\\t\\t\\t\\t\\t0x94e0: 0x6249,\\n\\t\\t\\t\\t\\t\\t0x94e1: 0x6279,\\n\\t\\t\\t\\t\\t\\t0x94e2: 0x62ab,\\n\\t\\t\\t\\t\\t\\t0x94e3: 0x6590,\\n\\t\\t\\t\\t\\t\\t0x94e4: 0x6bd4,\\n\\t\\t\\t\\t\\t\\t0x94e5: 0x6ccc,\\n\\t\\t\\t\\t\\t\\t0x94e6: 0x75b2,\\n\\t\\t\\t\\t\\t\\t0x94e7: 0x76ae,\\n\\t\\t\\t\\t\\t\\t0x94e8: 0x7891,\\n\\t\\t\\t\\t\\t\\t0x94e9: 0x79d8,\\n\\t\\t\\t\\t\\t\\t0x94ea: 0x7dcb,\\n\\t\\t\\t\\t\\t\\t0x94eb: 0x7f77,\\n\\t\\t\\t\\t\\t\\t0x94ec: 0x80a5,\\n\\t\\t\\t\\t\\t\\t0x94ed: 0x88ab,\\n\\t\\t\\t\\t\\t\\t0x94ee: 0x8ab9,\\n\\t\\t\\t\\t\\t\\t0x94ef: 0x8cbb,\\n\\t\\t\\t\\t\\t\\t0x94f0: 0x907f,\\n\\t\\t\\t\\t\\t\\t0x94f1: 0x975e,\\n\\t\\t\\t\\t\\t\\t0x94f2: 0x98db,\\n\\t\\t\\t\\t\\t\\t0x94f3: 0x6a0b,\\n\\t\\t\\t\\t\\t\\t0x94f4: 0x7c38,\\n\\t\\t\\t\\t\\t\\t0x94f5: 0x5099,\\n\\t\\t\\t\\t\\t\\t0x94f6: 0x5c3e,\\n\\t\\t\\t\\t\\t\\t0x94f7: 0x5fae,\\n\\t\\t\\t\\t\\t\\t0x94f8: 0x6787,\\n\\t\\t\\t\\t\\t\\t0x94f9: 0x6bd8,\\n\\t\\t\\t\\t\\t\\t0x94fa: 0x7435,\\n\\t\\t\\t\\t\\t\\t0x94fb: 0x7709,\\n\\t\\t\\t\\t\\t\\t0x94fc: 0x7f8e,\\n\\t\\t\\t\\t\\t\\t0x9540: 0x9f3b,\\n\\t\\t\\t\\t\\t\\t0x9541: 0x67ca,\\n\\t\\t\\t\\t\\t\\t0x9542: 0x7a17,\\n\\t\\t\\t\\t\\t\\t0x9543: 0x5339,\\n\\t\\t\\t\\t\\t\\t0x9544: 0x758b,\\n\\t\\t\\t\\t\\t\\t0x9545: 0x9aed,\\n\\t\\t\\t\\t\\t\\t0x9546: 0x5f66,\\n\\t\\t\\t\\t\\t\\t0x9547: 0x819d,\\n\\t\\t\\t\\t\\t\\t0x9548: 0x83f1,\\n\\t\\t\\t\\t\\t\\t0x9549: 0x8098,\\n\\t\\t\\t\\t\\t\\t0x954a: 0x5f3c,\\n\\t\\t\\t\\t\\t\\t0x954b: 0x5fc5,\\n\\t\\t\\t\\t\\t\\t0x954c: 0x7562,\\n\\t\\t\\t\\t\\t\\t0x954d: 0x7b46,\\n\\t\\t\\t\\t\\t\\t0x954e: 0x903c,\\n\\t\\t\\t\\t\\t\\t0x954f: 0x6867,\\n\\t\\t\\t\\t\\t\\t0x9550: 0x59eb,\\n\\t\\t\\t\\t\\t\\t0x9551: 0x5a9b,\\n\\t\\t\\t\\t\\t\\t0x9552: 0x7d10,\\n\\t\\t\\t\\t\\t\\t0x9553: 0x767e,\\n\\t\\t\\t\\t\\t\\t0x9554: 0x8b2c,\\n\\t\\t\\t\\t\\t\\t0x9555: 0x4ff5,\\n\\t\\t\\t\\t\\t\\t0x9556: 0x5f6a,\\n\\t\\t\\t\\t\\t\\t0x9557: 0x6a19,\\n\\t\\t\\t\\t\\t\\t0x9558: 0x6c37,\\n\\t\\t\\t\\t\\t\\t0x9559: 0x6f02,\\n\\t\\t\\t\\t\\t\\t0x955a: 0x74e2,\\n\\t\\t\\t\\t\\t\\t0x955b: 0x7968,\\n\\t\\t\\t\\t\\t\\t0x955c: 0x8868,\\n\\t\\t\\t\\t\\t\\t0x955d: 0x8a55,\\n\\t\\t\\t\\t\\t\\t0x955e: 0x8c79,\\n\\t\\t\\t\\t\\t\\t0x955f: 0x5edf,\\n\\t\\t\\t\\t\\t\\t0x9560: 0x63cf,\\n\\t\\t\\t\\t\\t\\t0x9561: 0x75c5,\\n\\t\\t\\t\\t\\t\\t0x9562: 0x79d2,\\n\\t\\t\\t\\t\\t\\t0x9563: 0x82d7,\\n\\t\\t\\t\\t\\t\\t0x9564: 0x9328,\\n\\t\\t\\t\\t\\t\\t0x9565: 0x92f2,\\n\\t\\t\\t\\t\\t\\t0x9566: 0x849c,\\n\\t\\t\\t\\t\\t\\t0x9567: 0x86ed,\\n\\t\\t\\t\\t\\t\\t0x9568: 0x9c2d,\\n\\t\\t\\t\\t\\t\\t0x9569: 0x54c1,\\n\\t\\t\\t\\t\\t\\t0x956a: 0x5f6c,\\n\\t\\t\\t\\t\\t\\t0x956b: 0x658c,\\n\\t\\t\\t\\t\\t\\t0x956c: 0x6d5c,\\n\\t\\t\\t\\t\\t\\t0x956d: 0x7015,\\n\\t\\t\\t\\t\\t\\t0x956e: 0x8ca7,\\n\\t\\t\\t\\t\\t\\t0x956f: 0x8cd3,\\n\\t\\t\\t\\t\\t\\t0x9570: 0x983b,\\n\\t\\t\\t\\t\\t\\t0x9571: 0x654f,\\n\\t\\t\\t\\t\\t\\t0x9572: 0x74f6,\\n\\t\\t\\t\\t\\t\\t0x9573: 0x4e0d,\\n\\t\\t\\t\\t\\t\\t0x9574: 0x4ed8,\\n\\t\\t\\t\\t\\t\\t0x9575: 0x57e0,\\n\\t\\t\\t\\t\\t\\t0x9576: 0x592b,\\n\\t\\t\\t\\t\\t\\t0x9577: 0x5a66,\\n\\t\\t\\t\\t\\t\\t0x9578: 0x5bcc,\\n\\t\\t\\t\\t\\t\\t0x9579: 0x51a8,\\n\\t\\t\\t\\t\\t\\t0x957a: 0x5e03,\\n\\t\\t\\t\\t\\t\\t0x957b: 0x5e9c,\\n\\t\\t\\t\\t\\t\\t0x957c: 0x6016,\\n\\t\\t\\t\\t\\t\\t0x957d: 0x6276,\\n\\t\\t\\t\\t\\t\\t0x957e: 0x6577,\\n\\t\\t\\t\\t\\t\\t0x9580: 0x65a7,\\n\\t\\t\\t\\t\\t\\t0x9581: 0x666e,\\n\\t\\t\\t\\t\\t\\t0x9582: 0x6d6e,\\n\\t\\t\\t\\t\\t\\t0x9583: 0x7236,\\n\\t\\t\\t\\t\\t\\t0x9584: 0x7b26,\\n\\t\\t\\t\\t\\t\\t0x9585: 0x8150,\\n\\t\\t\\t\\t\\t\\t0x9586: 0x819a,\\n\\t\\t\\t\\t\\t\\t0x9587: 0x8299,\\n\\t\\t\\t\\t\\t\\t0x9588: 0x8b5c,\\n\\t\\t\\t\\t\\t\\t0x9589: 0x8ca0,\\n\\t\\t\\t\\t\\t\\t0x958a: 0x8ce6,\\n\\t\\t\\t\\t\\t\\t0x958b: 0x8d74,\\n\\t\\t\\t\\t\\t\\t0x958c: 0x961c,\\n\\t\\t\\t\\t\\t\\t0x958d: 0x9644,\\n\\t\\t\\t\\t\\t\\t0x958e: 0x4fae,\\n\\t\\t\\t\\t\\t\\t0x958f: 0x64ab,\\n\\t\\t\\t\\t\\t\\t0x9590: 0x6b66,\\n\\t\\t\\t\\t\\t\\t0x9591: 0x821e,\\n\\t\\t\\t\\t\\t\\t0x9592: 0x8461,\\n\\t\\t\\t\\t\\t\\t0x9593: 0x856a,\\n\\t\\t\\t\\t\\t\\t0x9594: 0x90e8,\\n\\t\\t\\t\\t\\t\\t0x9595: 0x5c01,\\n\\t\\t\\t\\t\\t\\t0x9596: 0x6953,\\n\\t\\t\\t\\t\\t\\t0x9597: 0x98a8,\\n\\t\\t\\t\\t\\t\\t0x9598: 0x847a,\\n\\t\\t\\t\\t\\t\\t0x9599: 0x8557,\\n\\t\\t\\t\\t\\t\\t0x959a: 0x4f0f,\\n\\t\\t\\t\\t\\t\\t0x959b: 0x526f,\\n\\t\\t\\t\\t\\t\\t0x959c: 0x5fa9,\\n\\t\\t\\t\\t\\t\\t0x959d: 0x5e45,\\n\\t\\t\\t\\t\\t\\t0x959e: 0x670d,\\n\\t\\t\\t\\t\\t\\t0x959f: 0x798f,\\n\\t\\t\\t\\t\\t\\t0x95a0: 0x8179,\\n\\t\\t\\t\\t\\t\\t0x95a1: 0x8907,\\n\\t\\t\\t\\t\\t\\t0x95a2: 0x8986,\\n\\t\\t\\t\\t\\t\\t0x95a3: 0x6df5,\\n\\t\\t\\t\\t\\t\\t0x95a4: 0x5f17,\\n\\t\\t\\t\\t\\t\\t0x95a5: 0x6255,\\n\\t\\t\\t\\t\\t\\t0x95a6: 0x6cb8,\\n\\t\\t\\t\\t\\t\\t0x95a7: 0x4ecf,\\n\\t\\t\\t\\t\\t\\t0x95a8: 0x7269,\\n\\t\\t\\t\\t\\t\\t0x95a9: 0x9b92,\\n\\t\\t\\t\\t\\t\\t0x95aa: 0x5206,\\n\\t\\t\\t\\t\\t\\t0x95ab: 0x543b,\\n\\t\\t\\t\\t\\t\\t0x95ac: 0x5674,\\n\\t\\t\\t\\t\\t\\t0x95ad: 0x58b3,\\n\\t\\t\\t\\t\\t\\t0x95ae: 0x61a4,\\n\\t\\t\\t\\t\\t\\t0x95af: 0x626e,\\n\\t\\t\\t\\t\\t\\t0x95b0: 0x711a,\\n\\t\\t\\t\\t\\t\\t0x95b1: 0x596e,\\n\\t\\t\\t\\t\\t\\t0x95b2: 0x7c89,\\n\\t\\t\\t\\t\\t\\t0x95b3: 0x7cde,\\n\\t\\t\\t\\t\\t\\t0x95b4: 0x7d1b,\\n\\t\\t\\t\\t\\t\\t0x95b5: 0x96f0,\\n\\t\\t\\t\\t\\t\\t0x95b6: 0x6587,\\n\\t\\t\\t\\t\\t\\t0x95b7: 0x805e,\\n\\t\\t\\t\\t\\t\\t0x95b8: 0x4e19,\\n\\t\\t\\t\\t\\t\\t0x95b9: 0x4f75,\\n\\t\\t\\t\\t\\t\\t0x95ba: 0x5175,\\n\\t\\t\\t\\t\\t\\t0x95bb: 0x5840,\\n\\t\\t\\t\\t\\t\\t0x95bc: 0x5e63,\\n\\t\\t\\t\\t\\t\\t0x95bd: 0x5e73,\\n\\t\\t\\t\\t\\t\\t0x95be: 0x5f0a,\\n\\t\\t\\t\\t\\t\\t0x95bf: 0x67c4,\\n\\t\\t\\t\\t\\t\\t0x95c0: 0x4e26,\\n\\t\\t\\t\\t\\t\\t0x95c1: 0x853d,\\n\\t\\t\\t\\t\\t\\t0x95c2: 0x9589,\\n\\t\\t\\t\\t\\t\\t0x95c3: 0x965b,\\n\\t\\t\\t\\t\\t\\t0x95c4: 0x7c73,\\n\\t\\t\\t\\t\\t\\t0x95c5: 0x9801,\\n\\t\\t\\t\\t\\t\\t0x95c6: 0x50fb,\\n\\t\\t\\t\\t\\t\\t0x95c7: 0x58c1,\\n\\t\\t\\t\\t\\t\\t0x95c8: 0x7656,\\n\\t\\t\\t\\t\\t\\t0x95c9: 0x78a7,\\n\\t\\t\\t\\t\\t\\t0x95ca: 0x5225,\\n\\t\\t\\t\\t\\t\\t0x95cb: 0x77a5,\\n\\t\\t\\t\\t\\t\\t0x95cc: 0x8511,\\n\\t\\t\\t\\t\\t\\t0x95cd: 0x7b86,\\n\\t\\t\\t\\t\\t\\t0x95ce: 0x504f,\\n\\t\\t\\t\\t\\t\\t0x95cf: 0x5909,\\n\\t\\t\\t\\t\\t\\t0x95d0: 0x7247,\\n\\t\\t\\t\\t\\t\\t0x95d1: 0x7bc7,\\n\\t\\t\\t\\t\\t\\t0x95d2: 0x7de8,\\n\\t\\t\\t\\t\\t\\t0x95d3: 0x8fba,\\n\\t\\t\\t\\t\\t\\t0x95d4: 0x8fd4,\\n\\t\\t\\t\\t\\t\\t0x95d5: 0x904d,\\n\\t\\t\\t\\t\\t\\t0x95d6: 0x4fbf,\\n\\t\\t\\t\\t\\t\\t0x95d7: 0x52c9,\\n\\t\\t\\t\\t\\t\\t0x95d8: 0x5a29,\\n\\t\\t\\t\\t\\t\\t0x95d9: 0x5f01,\\n\\t\\t\\t\\t\\t\\t0x95da: 0x97ad,\\n\\t\\t\\t\\t\\t\\t0x95db: 0x4fdd,\\n\\t\\t\\t\\t\\t\\t0x95dc: 0x8217,\\n\\t\\t\\t\\t\\t\\t0x95dd: 0x92ea,\\n\\t\\t\\t\\t\\t\\t0x95de: 0x5703,\\n\\t\\t\\t\\t\\t\\t0x95df: 0x6355,\\n\\t\\t\\t\\t\\t\\t0x95e0: 0x6b69,\\n\\t\\t\\t\\t\\t\\t0x95e1: 0x752b,\\n\\t\\t\\t\\t\\t\\t0x95e2: 0x88dc,\\n\\t\\t\\t\\t\\t\\t0x95e3: 0x8f14,\\n\\t\\t\\t\\t\\t\\t0x95e4: 0x7a42,\\n\\t\\t\\t\\t\\t\\t0x95e5: 0x52df,\\n\\t\\t\\t\\t\\t\\t0x95e6: 0x5893,\\n\\t\\t\\t\\t\\t\\t0x95e7: 0x6155,\\n\\t\\t\\t\\t\\t\\t0x95e8: 0x620a,\\n\\t\\t\\t\\t\\t\\t0x95e9: 0x66ae,\\n\\t\\t\\t\\t\\t\\t0x95ea: 0x6bcd,\\n\\t\\t\\t\\t\\t\\t0x95eb: 0x7c3f,\\n\\t\\t\\t\\t\\t\\t0x95ec: 0x83e9,\\n\\t\\t\\t\\t\\t\\t0x95ed: 0x5023,\\n\\t\\t\\t\\t\\t\\t0x95ee: 0x4ff8,\\n\\t\\t\\t\\t\\t\\t0x95ef: 0x5305,\\n\\t\\t\\t\\t\\t\\t0x95f0: 0x5446,\\n\\t\\t\\t\\t\\t\\t0x95f1: 0x5831,\\n\\t\\t\\t\\t\\t\\t0x95f2: 0x5949,\\n\\t\\t\\t\\t\\t\\t0x95f3: 0x5b9d,\\n\\t\\t\\t\\t\\t\\t0x95f4: 0x5cf0,\\n\\t\\t\\t\\t\\t\\t0x95f5: 0x5cef,\\n\\t\\t\\t\\t\\t\\t0x95f6: 0x5d29,\\n\\t\\t\\t\\t\\t\\t0x95f7: 0x5e96,\\n\\t\\t\\t\\t\\t\\t0x95f8: 0x62b1,\\n\\t\\t\\t\\t\\t\\t0x95f9: 0x6367,\\n\\t\\t\\t\\t\\t\\t0x95fa: 0x653e,\\n\\t\\t\\t\\t\\t\\t0x95fb: 0x65b9,\\n\\t\\t\\t\\t\\t\\t0x95fc: 0x670b,\\n\\t\\t\\t\\t\\t\\t0x9640: 0x6cd5,\\n\\t\\t\\t\\t\\t\\t0x9641: 0x6ce1,\\n\\t\\t\\t\\t\\t\\t0x9642: 0x70f9,\\n\\t\\t\\t\\t\\t\\t0x9643: 0x7832,\\n\\t\\t\\t\\t\\t\\t0x9644: 0x7e2b,\\n\\t\\t\\t\\t\\t\\t0x9645: 0x80de,\\n\\t\\t\\t\\t\\t\\t0x9646: 0x82b3,\\n\\t\\t\\t\\t\\t\\t0x9647: 0x840c,\\n\\t\\t\\t\\t\\t\\t0x9648: 0x84ec,\\n\\t\\t\\t\\t\\t\\t0x9649: 0x8702,\\n\\t\\t\\t\\t\\t\\t0x964a: 0x8912,\\n\\t\\t\\t\\t\\t\\t0x964b: 0x8a2a,\\n\\t\\t\\t\\t\\t\\t0x964c: 0x8c4a,\\n\\t\\t\\t\\t\\t\\t0x964d: 0x90a6,\\n\\t\\t\\t\\t\\t\\t0x964e: 0x92d2,\\n\\t\\t\\t\\t\\t\\t0x964f: 0x98fd,\\n\\t\\t\\t\\t\\t\\t0x9650: 0x9cf3,\\n\\t\\t\\t\\t\\t\\t0x9651: 0x9d6c,\\n\\t\\t\\t\\t\\t\\t0x9652: 0x4e4f,\\n\\t\\t\\t\\t\\t\\t0x9653: 0x4ea1,\\n\\t\\t\\t\\t\\t\\t0x9654: 0x508d,\\n\\t\\t\\t\\t\\t\\t0x9655: 0x5256,\\n\\t\\t\\t\\t\\t\\t0x9656: 0x574a,\\n\\t\\t\\t\\t\\t\\t0x9657: 0x59a8,\\n\\t\\t\\t\\t\\t\\t0x9658: 0x5e3d,\\n\\t\\t\\t\\t\\t\\t0x9659: 0x5fd8,\\n\\t\\t\\t\\t\\t\\t0x965a: 0x5fd9,\\n\\t\\t\\t\\t\\t\\t0x965b: 0x623f,\\n\\t\\t\\t\\t\\t\\t0x965c: 0x66b4,\\n\\t\\t\\t\\t\\t\\t0x965d: 0x671b,\\n\\t\\t\\t\\t\\t\\t0x965e: 0x67d0,\\n\\t\\t\\t\\t\\t\\t0x965f: 0x68d2,\\n\\t\\t\\t\\t\\t\\t0x9660: 0x5192,\\n\\t\\t\\t\\t\\t\\t0x9661: 0x7d21,\\n\\t\\t\\t\\t\\t\\t0x9662: 0x80aa,\\n\\t\\t\\t\\t\\t\\t0x9663: 0x81a8,\\n\\t\\t\\t\\t\\t\\t0x9664: 0x8b00,\\n\\t\\t\\t\\t\\t\\t0x9665: 0x8c8c,\\n\\t\\t\\t\\t\\t\\t0x9666: 0x8cbf,\\n\\t\\t\\t\\t\\t\\t0x9667: 0x927e,\\n\\t\\t\\t\\t\\t\\t0x9668: 0x9632,\\n\\t\\t\\t\\t\\t\\t0x9669: 0x5420,\\n\\t\\t\\t\\t\\t\\t0x966a: 0x982c,\\n\\t\\t\\t\\t\\t\\t0x966b: 0x5317,\\n\\t\\t\\t\\t\\t\\t0x966c: 0x50d5,\\n\\t\\t\\t\\t\\t\\t0x966d: 0x535c,\\n\\t\\t\\t\\t\\t\\t0x966e: 0x58a8,\\n\\t\\t\\t\\t\\t\\t0x966f: 0x64b2,\\n\\t\\t\\t\\t\\t\\t0x9670: 0x6734,\\n\\t\\t\\t\\t\\t\\t0x9671: 0x7267,\\n\\t\\t\\t\\t\\t\\t0x9672: 0x7766,\\n\\t\\t\\t\\t\\t\\t0x9673: 0x7a46,\\n\\t\\t\\t\\t\\t\\t0x9674: 0x91e6,\\n\\t\\t\\t\\t\\t\\t0x9675: 0x52c3,\\n\\t\\t\\t\\t\\t\\t0x9676: 0x6ca1,\\n\\t\\t\\t\\t\\t\\t0x9677: 0x6b86,\\n\\t\\t\\t\\t\\t\\t0x9678: 0x5800,\\n\\t\\t\\t\\t\\t\\t0x9679: 0x5e4c,\\n\\t\\t\\t\\t\\t\\t0x967a: 0x5954,\\n\\t\\t\\t\\t\\t\\t0x967b: 0x672c,\\n\\t\\t\\t\\t\\t\\t0x967c: 0x7ffb,\\n\\t\\t\\t\\t\\t\\t0x967d: 0x51e1,\\n\\t\\t\\t\\t\\t\\t0x967e: 0x76c6,\\n\\t\\t\\t\\t\\t\\t0x9680: 0x6469,\\n\\t\\t\\t\\t\\t\\t0x9681: 0x78e8,\\n\\t\\t\\t\\t\\t\\t0x9682: 0x9b54,\\n\\t\\t\\t\\t\\t\\t0x9683: 0x9ebb,\\n\\t\\t\\t\\t\\t\\t0x9684: 0x57cb,\\n\\t\\t\\t\\t\\t\\t0x9685: 0x59b9,\\n\\t\\t\\t\\t\\t\\t0x9686: 0x6627,\\n\\t\\t\\t\\t\\t\\t0x9687: 0x679a,\\n\\t\\t\\t\\t\\t\\t0x9688: 0x6bce,\\n\\t\\t\\t\\t\\t\\t0x9689: 0x54e9,\\n\\t\\t\\t\\t\\t\\t0x968a: 0x69d9,\\n\\t\\t\\t\\t\\t\\t0x968b: 0x5e55,\\n\\t\\t\\t\\t\\t\\t0x968c: 0x819c,\\n\\t\\t\\t\\t\\t\\t0x968d: 0x6795,\\n\\t\\t\\t\\t\\t\\t0x968e: 0x9baa,\\n\\t\\t\\t\\t\\t\\t0x968f: 0x67fe,\\n\\t\\t\\t\\t\\t\\t0x9690: 0x9c52,\\n\\t\\t\\t\\t\\t\\t0x9691: 0x685d,\\n\\t\\t\\t\\t\\t\\t0x9692: 0x4ea6,\\n\\t\\t\\t\\t\\t\\t0x9693: 0x4fe3,\\n\\t\\t\\t\\t\\t\\t0x9694: 0x53c8,\\n\\t\\t\\t\\t\\t\\t0x9695: 0x62b9,\\n\\t\\t\\t\\t\\t\\t0x9696: 0x672b,\\n\\t\\t\\t\\t\\t\\t0x9697: 0x6cab,\\n\\t\\t\\t\\t\\t\\t0x9698: 0x8fc4,\\n\\t\\t\\t\\t\\t\\t0x9699: 0x4fad,\\n\\t\\t\\t\\t\\t\\t0x969a: 0x7e6d,\\n\\t\\t\\t\\t\\t\\t0x969b: 0x9ebf,\\n\\t\\t\\t\\t\\t\\t0x969c: 0x4e07,\\n\\t\\t\\t\\t\\t\\t0x969d: 0x6162,\\n\\t\\t\\t\\t\\t\\t0x969e: 0x6e80,\\n\\t\\t\\t\\t\\t\\t0x969f: 0x6f2b,\\n\\t\\t\\t\\t\\t\\t0x96a0: 0x8513,\\n\\t\\t\\t\\t\\t\\t0x96a1: 0x5473,\\n\\t\\t\\t\\t\\t\\t0x96a2: 0x672a,\\n\\t\\t\\t\\t\\t\\t0x96a3: 0x9b45,\\n\\t\\t\\t\\t\\t\\t0x96a4: 0x5df3,\\n\\t\\t\\t\\t\\t\\t0x96a5: 0x7b95,\\n\\t\\t\\t\\t\\t\\t0x96a6: 0x5cac,\\n\\t\\t\\t\\t\\t\\t0x96a7: 0x5bc6,\\n\\t\\t\\t\\t\\t\\t0x96a8: 0x871c,\\n\\t\\t\\t\\t\\t\\t0x96a9: 0x6e4a,\\n\\t\\t\\t\\t\\t\\t0x96aa: 0x84d1,\\n\\t\\t\\t\\t\\t\\t0x96ab: 0x7a14,\\n\\t\\t\\t\\t\\t\\t0x96ac: 0x8108,\\n\\t\\t\\t\\t\\t\\t0x96ad: 0x5999,\\n\\t\\t\\t\\t\\t\\t0x96ae: 0x7c8d,\\n\\t\\t\\t\\t\\t\\t0x96af: 0x6c11,\\n\\t\\t\\t\\t\\t\\t0x96b0: 0x7720,\\n\\t\\t\\t\\t\\t\\t0x96b1: 0x52d9,\\n\\t\\t\\t\\t\\t\\t0x96b2: 0x5922,\\n\\t\\t\\t\\t\\t\\t0x96b3: 0x7121,\\n\\t\\t\\t\\t\\t\\t0x96b4: 0x725f,\\n\\t\\t\\t\\t\\t\\t0x96b5: 0x77db,\\n\\t\\t\\t\\t\\t\\t0x96b6: 0x9727,\\n\\t\\t\\t\\t\\t\\t0x96b7: 0x9d61,\\n\\t\\t\\t\\t\\t\\t0x96b8: 0x690b,\\n\\t\\t\\t\\t\\t\\t0x96b9: 0x5a7f,\\n\\t\\t\\t\\t\\t\\t0x96ba: 0x5a18,\\n\\t\\t\\t\\t\\t\\t0x96bb: 0x51a5,\\n\\t\\t\\t\\t\\t\\t0x96bc: 0x540d,\\n\\t\\t\\t\\t\\t\\t0x96bd: 0x547d,\\n\\t\\t\\t\\t\\t\\t0x96be: 0x660e,\\n\\t\\t\\t\\t\\t\\t0x96bf: 0x76df,\\n\\t\\t\\t\\t\\t\\t0x96c0: 0x8ff7,\\n\\t\\t\\t\\t\\t\\t0x96c1: 0x9298,\\n\\t\\t\\t\\t\\t\\t0x96c2: 0x9cf4,\\n\\t\\t\\t\\t\\t\\t0x96c3: 0x59ea,\\n\\t\\t\\t\\t\\t\\t0x96c4: 0x725d,\\n\\t\\t\\t\\t\\t\\t0x96c5: 0x6ec5,\\n\\t\\t\\t\\t\\t\\t0x96c6: 0x514d,\\n\\t\\t\\t\\t\\t\\t0x96c7: 0x68c9,\\n\\t\\t\\t\\t\\t\\t0x96c8: 0x7dbf,\\n\\t\\t\\t\\t\\t\\t0x96c9: 0x7dec,\\n\\t\\t\\t\\t\\t\\t0x96ca: 0x9762,\\n\\t\\t\\t\\t\\t\\t0x96cb: 0x9eba,\\n\\t\\t\\t\\t\\t\\t0x96cc: 0x6478,\\n\\t\\t\\t\\t\\t\\t0x96cd: 0x6a21,\\n\\t\\t\\t\\t\\t\\t0x96ce: 0x8302,\\n\\t\\t\\t\\t\\t\\t0x96cf: 0x5984,\\n\\t\\t\\t\\t\\t\\t0x96d0: 0x5b5f,\\n\\t\\t\\t\\t\\t\\t0x96d1: 0x6bdb,\\n\\t\\t\\t\\t\\t\\t0x96d2: 0x731b,\\n\\t\\t\\t\\t\\t\\t0x96d3: 0x76f2,\\n\\t\\t\\t\\t\\t\\t0x96d4: 0x7db2,\\n\\t\\t\\t\\t\\t\\t0x96d5: 0x8017,\\n\\t\\t\\t\\t\\t\\t0x96d6: 0x8499,\\n\\t\\t\\t\\t\\t\\t0x96d7: 0x5132,\\n\\t\\t\\t\\t\\t\\t0x96d8: 0x6728,\\n\\t\\t\\t\\t\\t\\t0x96d9: 0x9ed9,\\n\\t\\t\\t\\t\\t\\t0x96da: 0x76ee,\\n\\t\\t\\t\\t\\t\\t0x96db: 0x6762,\\n\\t\\t\\t\\t\\t\\t0x96dc: 0x52ff,\\n\\t\\t\\t\\t\\t\\t0x96dd: 0x9905,\\n\\t\\t\\t\\t\\t\\t0x96de: 0x5c24,\\n\\t\\t\\t\\t\\t\\t0x96df: 0x623b,\\n\\t\\t\\t\\t\\t\\t0x96e0: 0x7c7e,\\n\\t\\t\\t\\t\\t\\t0x96e1: 0x8cb0,\\n\\t\\t\\t\\t\\t\\t0x96e2: 0x554f,\\n\\t\\t\\t\\t\\t\\t0x96e3: 0x60b6,\\n\\t\\t\\t\\t\\t\\t0x96e4: 0x7d0b,\\n\\t\\t\\t\\t\\t\\t0x96e5: 0x9580,\\n\\t\\t\\t\\t\\t\\t0x96e6: 0x5301,\\n\\t\\t\\t\\t\\t\\t0x96e7: 0x4e5f,\\n\\t\\t\\t\\t\\t\\t0x96e8: 0x51b6,\\n\\t\\t\\t\\t\\t\\t0x96e9: 0x591c,\\n\\t\\t\\t\\t\\t\\t0x96ea: 0x723a,\\n\\t\\t\\t\\t\\t\\t0x96eb: 0x8036,\\n\\t\\t\\t\\t\\t\\t0x96ec: 0x91ce,\\n\\t\\t\\t\\t\\t\\t0x96ed: 0x5f25,\\n\\t\\t\\t\\t\\t\\t0x96ee: 0x77e2,\\n\\t\\t\\t\\t\\t\\t0x96ef: 0x5384,\\n\\t\\t\\t\\t\\t\\t0x96f0: 0x5f79,\\n\\t\\t\\t\\t\\t\\t0x96f1: 0x7d04,\\n\\t\\t\\t\\t\\t\\t0x96f2: 0x85ac,\\n\\t\\t\\t\\t\\t\\t0x96f3: 0x8a33,\\n\\t\\t\\t\\t\\t\\t0x96f4: 0x8e8d,\\n\\t\\t\\t\\t\\t\\t0x96f5: 0x9756,\\n\\t\\t\\t\\t\\t\\t0x96f6: 0x67f3,\\n\\t\\t\\t\\t\\t\\t0x96f7: 0x85ae,\\n\\t\\t\\t\\t\\t\\t0x96f8: 0x9453,\\n\\t\\t\\t\\t\\t\\t0x96f9: 0x6109,\\n\\t\\t\\t\\t\\t\\t0x96fa: 0x6108,\\n\\t\\t\\t\\t\\t\\t0x96fb: 0x6cb9,\\n\\t\\t\\t\\t\\t\\t0x96fc: 0x7652,\\n\\t\\t\\t\\t\\t\\t0x9740: 0x8aed,\\n\\t\\t\\t\\t\\t\\t0x9741: 0x8f38,\\n\\t\\t\\t\\t\\t\\t0x9742: 0x552f,\\n\\t\\t\\t\\t\\t\\t0x9743: 0x4f51,\\n\\t\\t\\t\\t\\t\\t0x9744: 0x512a,\\n\\t\\t\\t\\t\\t\\t0x9745: 0x52c7,\\n\\t\\t\\t\\t\\t\\t0x9746: 0x53cb,\\n\\t\\t\\t\\t\\t\\t0x9747: 0x5ba5,\\n\\t\\t\\t\\t\\t\\t0x9748: 0x5e7d,\\n\\t\\t\\t\\t\\t\\t0x9749: 0x60a0,\\n\\t\\t\\t\\t\\t\\t0x974a: 0x6182,\\n\\t\\t\\t\\t\\t\\t0x974b: 0x63d6,\\n\\t\\t\\t\\t\\t\\t0x974c: 0x6709,\\n\\t\\t\\t\\t\\t\\t0x974d: 0x67da,\\n\\t\\t\\t\\t\\t\\t0x974e: 0x6e67,\\n\\t\\t\\t\\t\\t\\t0x974f: 0x6d8c,\\n\\t\\t\\t\\t\\t\\t0x9750: 0x7336,\\n\\t\\t\\t\\t\\t\\t0x9751: 0x7337,\\n\\t\\t\\t\\t\\t\\t0x9752: 0x7531,\\n\\t\\t\\t\\t\\t\\t0x9753: 0x7950,\\n\\t\\t\\t\\t\\t\\t0x9754: 0x88d5,\\n\\t\\t\\t\\t\\t\\t0x9755: 0x8a98,\\n\\t\\t\\t\\t\\t\\t0x9756: 0x904a,\\n\\t\\t\\t\\t\\t\\t0x9757: 0x9091,\\n\\t\\t\\t\\t\\t\\t0x9758: 0x90f5,\\n\\t\\t\\t\\t\\t\\t0x9759: 0x96c4,\\n\\t\\t\\t\\t\\t\\t0x975a: 0x878d,\\n\\t\\t\\t\\t\\t\\t0x975b: 0x5915,\\n\\t\\t\\t\\t\\t\\t0x975c: 0x4e88,\\n\\t\\t\\t\\t\\t\\t0x975d: 0x4f59,\\n\\t\\t\\t\\t\\t\\t0x975e: 0x4e0e,\\n\\t\\t\\t\\t\\t\\t0x975f: 0x8a89,\\n\\t\\t\\t\\t\\t\\t0x9760: 0x8f3f,\\n\\t\\t\\t\\t\\t\\t0x9761: 0x9810,\\n\\t\\t\\t\\t\\t\\t0x9762: 0x50ad,\\n\\t\\t\\t\\t\\t\\t0x9763: 0x5e7c,\\n\\t\\t\\t\\t\\t\\t0x9764: 0x5996,\\n\\t\\t\\t\\t\\t\\t0x9765: 0x5bb9,\\n\\t\\t\\t\\t\\t\\t0x9766: 0x5eb8,\\n\\t\\t\\t\\t\\t\\t0x9767: 0x63da,\\n\\t\\t\\t\\t\\t\\t0x9768: 0x63fa,\\n\\t\\t\\t\\t\\t\\t0x9769: 0x64c1,\\n\\t\\t\\t\\t\\t\\t0x976a: 0x66dc,\\n\\t\\t\\t\\t\\t\\t0x976b: 0x694a,\\n\\t\\t\\t\\t\\t\\t0x976c: 0x69d8,\\n\\t\\t\\t\\t\\t\\t0x976d: 0x6d0b,\\n\\t\\t\\t\\t\\t\\t0x976e: 0x6eb6,\\n\\t\\t\\t\\t\\t\\t0x976f: 0x7194,\\n\\t\\t\\t\\t\\t\\t0x9770: 0x7528,\\n\\t\\t\\t\\t\\t\\t0x9771: 0x7aaf,\\n\\t\\t\\t\\t\\t\\t0x9772: 0x7f8a,\\n\\t\\t\\t\\t\\t\\t0x9773: 0x8000,\\n\\t\\t\\t\\t\\t\\t0x9774: 0x8449,\\n\\t\\t\\t\\t\\t\\t0x9775: 0x84c9,\\n\\t\\t\\t\\t\\t\\t0x9776: 0x8981,\\n\\t\\t\\t\\t\\t\\t0x9777: 0x8b21,\\n\\t\\t\\t\\t\\t\\t0x9778: 0x8e0a,\\n\\t\\t\\t\\t\\t\\t0x9779: 0x9065,\\n\\t\\t\\t\\t\\t\\t0x977a: 0x967d,\\n\\t\\t\\t\\t\\t\\t0x977b: 0x990a,\\n\\t\\t\\t\\t\\t\\t0x977c: 0x617e,\\n\\t\\t\\t\\t\\t\\t0x977d: 0x6291,\\n\\t\\t\\t\\t\\t\\t0x977e: 0x6b32,\\n\\t\\t\\t\\t\\t\\t0x9780: 0x6c83,\\n\\t\\t\\t\\t\\t\\t0x9781: 0x6d74,\\n\\t\\t\\t\\t\\t\\t0x9782: 0x7fcc,\\n\\t\\t\\t\\t\\t\\t0x9783: 0x7ffc,\\n\\t\\t\\t\\t\\t\\t0x9784: 0x6dc0,\\n\\t\\t\\t\\t\\t\\t0x9785: 0x7f85,\\n\\t\\t\\t\\t\\t\\t0x9786: 0x87ba,\\n\\t\\t\\t\\t\\t\\t0x9787: 0x88f8,\\n\\t\\t\\t\\t\\t\\t0x9788: 0x6765,\\n\\t\\t\\t\\t\\t\\t0x9789: 0x83b1,\\n\\t\\t\\t\\t\\t\\t0x978a: 0x983c,\\n\\t\\t\\t\\t\\t\\t0x978b: 0x96f7,\\n\\t\\t\\t\\t\\t\\t0x978c: 0x6d1b,\\n\\t\\t\\t\\t\\t\\t0x978d: 0x7d61,\\n\\t\\t\\t\\t\\t\\t0x978e: 0x843d,\\n\\t\\t\\t\\t\\t\\t0x978f: 0x916a,\\n\\t\\t\\t\\t\\t\\t0x9790: 0x4e71,\\n\\t\\t\\t\\t\\t\\t0x9791: 0x5375,\\n\\t\\t\\t\\t\\t\\t0x9792: 0x5d50,\\n\\t\\t\\t\\t\\t\\t0x9793: 0x6b04,\\n\\t\\t\\t\\t\\t\\t0x9794: 0x6feb,\\n\\t\\t\\t\\t\\t\\t0x9795: 0x85cd,\\n\\t\\t\\t\\t\\t\\t0x9796: 0x862d,\\n\\t\\t\\t\\t\\t\\t0x9797: 0x89a7,\\n\\t\\t\\t\\t\\t\\t0x9798: 0x5229,\\n\\t\\t\\t\\t\\t\\t0x9799: 0x540f,\\n\\t\\t\\t\\t\\t\\t0x979a: 0x5c65,\\n\\t\\t\\t\\t\\t\\t0x979b: 0x674e,\\n\\t\\t\\t\\t\\t\\t0x979c: 0x68a8,\\n\\t\\t\\t\\t\\t\\t0x979d: 0x7406,\\n\\t\\t\\t\\t\\t\\t0x979e: 0x7483,\\n\\t\\t\\t\\t\\t\\t0x979f: 0x75e2,\\n\\t\\t\\t\\t\\t\\t0x97a0: 0x88cf,\\n\\t\\t\\t\\t\\t\\t0x97a1: 0x88e1,\\n\\t\\t\\t\\t\\t\\t0x97a2: 0x91cc,\\n\\t\\t\\t\\t\\t\\t0x97a3: 0x96e2,\\n\\t\\t\\t\\t\\t\\t0x97a4: 0x9678,\\n\\t\\t\\t\\t\\t\\t0x97a5: 0x5f8b,\\n\\t\\t\\t\\t\\t\\t0x97a6: 0x7387,\\n\\t\\t\\t\\t\\t\\t0x97a7: 0x7acb,\\n\\t\\t\\t\\t\\t\\t0x97a8: 0x844e,\\n\\t\\t\\t\\t\\t\\t0x97a9: 0x63a0,\\n\\t\\t\\t\\t\\t\\t0x97aa: 0x7565,\\n\\t\\t\\t\\t\\t\\t0x97ab: 0x5289,\\n\\t\\t\\t\\t\\t\\t0x97ac: 0x6d41,\\n\\t\\t\\t\\t\\t\\t0x97ad: 0x6e9c,\\n\\t\\t\\t\\t\\t\\t0x97ae: 0x7409,\\n\\t\\t\\t\\t\\t\\t0x97af: 0x7559,\\n\\t\\t\\t\\t\\t\\t0x97b0: 0x786b,\\n\\t\\t\\t\\t\\t\\t0x97b1: 0x7c92,\\n\\t\\t\\t\\t\\t\\t0x97b2: 0x9686,\\n\\t\\t\\t\\t\\t\\t0x97b3: 0x7adc,\\n\\t\\t\\t\\t\\t\\t0x97b4: 0x9f8d,\\n\\t\\t\\t\\t\\t\\t0x97b5: 0x4fb6,\\n\\t\\t\\t\\t\\t\\t0x97b6: 0x616e,\\n\\t\\t\\t\\t\\t\\t0x97b7: 0x65c5,\\n\\t\\t\\t\\t\\t\\t0x97b8: 0x865c,\\n\\t\\t\\t\\t\\t\\t0x97b9: 0x4e86,\\n\\t\\t\\t\\t\\t\\t0x97ba: 0x4eae,\\n\\t\\t\\t\\t\\t\\t0x97bb: 0x50da,\\n\\t\\t\\t\\t\\t\\t0x97bc: 0x4e21,\\n\\t\\t\\t\\t\\t\\t0x97bd: 0x51cc,\\n\\t\\t\\t\\t\\t\\t0x97be: 0x5bee,\\n\\t\\t\\t\\t\\t\\t0x97bf: 0x6599,\\n\\t\\t\\t\\t\\t\\t0x97c0: 0x6881,\\n\\t\\t\\t\\t\\t\\t0x97c1: 0x6dbc,\\n\\t\\t\\t\\t\\t\\t0x97c2: 0x731f,\\n\\t\\t\\t\\t\\t\\t0x97c3: 0x7642,\\n\\t\\t\\t\\t\\t\\t0x97c4: 0x77ad,\\n\\t\\t\\t\\t\\t\\t0x97c5: 0x7a1c,\\n\\t\\t\\t\\t\\t\\t0x97c6: 0x7ce7,\\n\\t\\t\\t\\t\\t\\t0x97c7: 0x826f,\\n\\t\\t\\t\\t\\t\\t0x97c8: 0x8ad2,\\n\\t\\t\\t\\t\\t\\t0x97c9: 0x907c,\\n\\t\\t\\t\\t\\t\\t0x97ca: 0x91cf,\\n\\t\\t\\t\\t\\t\\t0x97cb: 0x9675,\\n\\t\\t\\t\\t\\t\\t0x97cc: 0x9818,\\n\\t\\t\\t\\t\\t\\t0x97cd: 0x529b,\\n\\t\\t\\t\\t\\t\\t0x97ce: 0x7dd1,\\n\\t\\t\\t\\t\\t\\t0x97cf: 0x502b,\\n\\t\\t\\t\\t\\t\\t0x97d0: 0x5398,\\n\\t\\t\\t\\t\\t\\t0x97d1: 0x6797,\\n\\t\\t\\t\\t\\t\\t0x97d2: 0x6dcb,\\n\\t\\t\\t\\t\\t\\t0x97d3: 0x71d0,\\n\\t\\t\\t\\t\\t\\t0x97d4: 0x7433,\\n\\t\\t\\t\\t\\t\\t0x97d5: 0x81e8,\\n\\t\\t\\t\\t\\t\\t0x97d6: 0x8f2a,\\n\\t\\t\\t\\t\\t\\t0x97d7: 0x96a3,\\n\\t\\t\\t\\t\\t\\t0x97d8: 0x9c57,\\n\\t\\t\\t\\t\\t\\t0x97d9: 0x9e9f,\\n\\t\\t\\t\\t\\t\\t0x97da: 0x7460,\\n\\t\\t\\t\\t\\t\\t0x97db: 0x5841,\\n\\t\\t\\t\\t\\t\\t0x97dc: 0x6d99,\\n\\t\\t\\t\\t\\t\\t0x97dd: 0x7d2f,\\n\\t\\t\\t\\t\\t\\t0x97de: 0x985e,\\n\\t\\t\\t\\t\\t\\t0x97df: 0x4ee4,\\n\\t\\t\\t\\t\\t\\t0x97e0: 0x4f36,\\n\\t\\t\\t\\t\\t\\t0x97e1: 0x4f8b,\\n\\t\\t\\t\\t\\t\\t0x97e2: 0x51b7,\\n\\t\\t\\t\\t\\t\\t0x97e3: 0x52b1,\\n\\t\\t\\t\\t\\t\\t0x97e4: 0x5dba,\\n\\t\\t\\t\\t\\t\\t0x97e5: 0x601c,\\n\\t\\t\\t\\t\\t\\t0x97e6: 0x73b2,\\n\\t\\t\\t\\t\\t\\t0x97e7: 0x793c,\\n\\t\\t\\t\\t\\t\\t0x97e8: 0x82d3,\\n\\t\\t\\t\\t\\t\\t0x97e9: 0x9234,\\n\\t\\t\\t\\t\\t\\t0x97ea: 0x96b7,\\n\\t\\t\\t\\t\\t\\t0x97eb: 0x96f6,\\n\\t\\t\\t\\t\\t\\t0x97ec: 0x970a,\\n\\t\\t\\t\\t\\t\\t0x97ed: 0x9e97,\\n\\t\\t\\t\\t\\t\\t0x97ee: 0x9f62,\\n\\t\\t\\t\\t\\t\\t0x97ef: 0x66a6,\\n\\t\\t\\t\\t\\t\\t0x97f0: 0x6b74,\\n\\t\\t\\t\\t\\t\\t0x97f1: 0x5217,\\n\\t\\t\\t\\t\\t\\t0x97f2: 0x52a3,\\n\\t\\t\\t\\t\\t\\t0x97f3: 0x70c8,\\n\\t\\t\\t\\t\\t\\t0x97f4: 0x88c2,\\n\\t\\t\\t\\t\\t\\t0x97f5: 0x5ec9,\\n\\t\\t\\t\\t\\t\\t0x97f6: 0x604b,\\n\\t\\t\\t\\t\\t\\t0x97f7: 0x6190,\\n\\t\\t\\t\\t\\t\\t0x97f8: 0x6f23,\\n\\t\\t\\t\\t\\t\\t0x97f9: 0x7149,\\n\\t\\t\\t\\t\\t\\t0x97fa: 0x7c3e,\\n\\t\\t\\t\\t\\t\\t0x97fb: 0x7df4,\\n\\t\\t\\t\\t\\t\\t0x97fc: 0x806f,\\n\\t\\t\\t\\t\\t\\t0x9840: 0x84ee,\\n\\t\\t\\t\\t\\t\\t0x9841: 0x9023,\\n\\t\\t\\t\\t\\t\\t0x9842: 0x932c,\\n\\t\\t\\t\\t\\t\\t0x9843: 0x5442,\\n\\t\\t\\t\\t\\t\\t0x9844: 0x9b6f,\\n\\t\\t\\t\\t\\t\\t0x9845: 0x6ad3,\\n\\t\\t\\t\\t\\t\\t0x9846: 0x7089,\\n\\t\\t\\t\\t\\t\\t0x9847: 0x8cc2,\\n\\t\\t\\t\\t\\t\\t0x9848: 0x8def,\\n\\t\\t\\t\\t\\t\\t0x9849: 0x9732,\\n\\t\\t\\t\\t\\t\\t0x984a: 0x52b4,\\n\\t\\t\\t\\t\\t\\t0x984b: 0x5a41,\\n\\t\\t\\t\\t\\t\\t0x984c: 0x5eca,\\n\\t\\t\\t\\t\\t\\t0x984d: 0x5f04,\\n\\t\\t\\t\\t\\t\\t0x984e: 0x6717,\\n\\t\\t\\t\\t\\t\\t0x984f: 0x697c,\\n\\t\\t\\t\\t\\t\\t0x9850: 0x6994,\\n\\t\\t\\t\\t\\t\\t0x9851: 0x6d6a,\\n\\t\\t\\t\\t\\t\\t0x9852: 0x6f0f,\\n\\t\\t\\t\\t\\t\\t0x9853: 0x7262,\\n\\t\\t\\t\\t\\t\\t0x9854: 0x72fc,\\n\\t\\t\\t\\t\\t\\t0x9855: 0x7bed,\\n\\t\\t\\t\\t\\t\\t0x9856: 0x8001,\\n\\t\\t\\t\\t\\t\\t0x9857: 0x807e,\\n\\t\\t\\t\\t\\t\\t0x9858: 0x874b,\\n\\t\\t\\t\\t\\t\\t0x9859: 0x90ce,\\n\\t\\t\\t\\t\\t\\t0x985a: 0x516d,\\n\\t\\t\\t\\t\\t\\t0x985b: 0x9e93,\\n\\t\\t\\t\\t\\t\\t0x985c: 0x7984,\\n\\t\\t\\t\\t\\t\\t0x985d: 0x808b,\\n\\t\\t\\t\\t\\t\\t0x985e: 0x9332,\\n\\t\\t\\t\\t\\t\\t0x985f: 0x8ad6,\\n\\t\\t\\t\\t\\t\\t0x9860: 0x502d,\\n\\t\\t\\t\\t\\t\\t0x9861: 0x548c,\\n\\t\\t\\t\\t\\t\\t0x9862: 0x8a71,\\n\\t\\t\\t\\t\\t\\t0x9863: 0x6b6a,\\n\\t\\t\\t\\t\\t\\t0x9864: 0x8cc4,\\n\\t\\t\\t\\t\\t\\t0x9865: 0x8107,\\n\\t\\t\\t\\t\\t\\t0x9866: 0x60d1,\\n\\t\\t\\t\\t\\t\\t0x9867: 0x67a0,\\n\\t\\t\\t\\t\\t\\t0x9868: 0x9df2,\\n\\t\\t\\t\\t\\t\\t0x9869: 0x4e99,\\n\\t\\t\\t\\t\\t\\t0x986a: 0x4e98,\\n\\t\\t\\t\\t\\t\\t0x986b: 0x9c10,\\n\\t\\t\\t\\t\\t\\t0x986c: 0x8a6b,\\n\\t\\t\\t\\t\\t\\t0x986d: 0x85c1,\\n\\t\\t\\t\\t\\t\\t0x986e: 0x8568,\\n\\t\\t\\t\\t\\t\\t0x986f: 0x6900,\\n\\t\\t\\t\\t\\t\\t0x9870: 0x6e7e,\\n\\t\\t\\t\\t\\t\\t0x9871: 0x7897,\\n\\t\\t\\t\\t\\t\\t0x9872: 0x8155,\\n\\t\\t\\t\\t\\t\\t0x989f: 0x5f0c,\\n\\t\\t\\t\\t\\t\\t0x98a0: 0x4e10,\\n\\t\\t\\t\\t\\t\\t0x98a1: 0x4e15,\\n\\t\\t\\t\\t\\t\\t0x98a2: 0x4e2a,\\n\\t\\t\\t\\t\\t\\t0x98a3: 0x4e31,\\n\\t\\t\\t\\t\\t\\t0x98a4: 0x4e36,\\n\\t\\t\\t\\t\\t\\t0x98a5: 0x4e3c,\\n\\t\\t\\t\\t\\t\\t0x98a6: 0x4e3f,\\n\\t\\t\\t\\t\\t\\t0x98a7: 0x4e42,\\n\\t\\t\\t\\t\\t\\t0x98a8: 0x4e56,\\n\\t\\t\\t\\t\\t\\t0x98a9: 0x4e58,\\n\\t\\t\\t\\t\\t\\t0x98aa: 0x4e82,\\n\\t\\t\\t\\t\\t\\t0x98ab: 0x4e85,\\n\\t\\t\\t\\t\\t\\t0x98ac: 0x8c6b,\\n\\t\\t\\t\\t\\t\\t0x98ad: 0x4e8a,\\n\\t\\t\\t\\t\\t\\t0x98ae: 0x8212,\\n\\t\\t\\t\\t\\t\\t0x98af: 0x5f0d,\\n\\t\\t\\t\\t\\t\\t0x98b0: 0x4e8e,\\n\\t\\t\\t\\t\\t\\t0x98b1: 0x4e9e,\\n\\t\\t\\t\\t\\t\\t0x98b2: 0x4e9f,\\n\\t\\t\\t\\t\\t\\t0x98b3: 0x4ea0,\\n\\t\\t\\t\\t\\t\\t0x98b4: 0x4ea2,\\n\\t\\t\\t\\t\\t\\t0x98b5: 0x4eb0,\\n\\t\\t\\t\\t\\t\\t0x98b6: 0x4eb3,\\n\\t\\t\\t\\t\\t\\t0x98b7: 0x4eb6,\\n\\t\\t\\t\\t\\t\\t0x98b8: 0x4ece,\\n\\t\\t\\t\\t\\t\\t0x98b9: 0x4ecd,\\n\\t\\t\\t\\t\\t\\t0x98ba: 0x4ec4,\\n\\t\\t\\t\\t\\t\\t0x98bb: 0x4ec6,\\n\\t\\t\\t\\t\\t\\t0x98bc: 0x4ec2,\\n\\t\\t\\t\\t\\t\\t0x98bd: 0x4ed7,\\n\\t\\t\\t\\t\\t\\t0x98be: 0x4ede,\\n\\t\\t\\t\\t\\t\\t0x98bf: 0x4eed,\\n\\t\\t\\t\\t\\t\\t0x98c0: 0x4edf,\\n\\t\\t\\t\\t\\t\\t0x98c1: 0x4ef7,\\n\\t\\t\\t\\t\\t\\t0x98c2: 0x4f09,\\n\\t\\t\\t\\t\\t\\t0x98c3: 0x4f5a,\\n\\t\\t\\t\\t\\t\\t0x98c4: 0x4f30,\\n\\t\\t\\t\\t\\t\\t0x98c5: 0x4f5b,\\n\\t\\t\\t\\t\\t\\t0x98c6: 0x4f5d,\\n\\t\\t\\t\\t\\t\\t0x98c7: 0x4f57,\\n\\t\\t\\t\\t\\t\\t0x98c8: 0x4f47,\\n\\t\\t\\t\\t\\t\\t0x98c9: 0x4f76,\\n\\t\\t\\t\\t\\t\\t0x98ca: 0x4f88,\\n\\t\\t\\t\\t\\t\\t0x98cb: 0x4f8f,\\n\\t\\t\\t\\t\\t\\t0x98cc: 0x4f98,\\n\\t\\t\\t\\t\\t\\t0x98cd: 0x4f7b,\\n\\t\\t\\t\\t\\t\\t0x98ce: 0x4f69,\\n\\t\\t\\t\\t\\t\\t0x98cf: 0x4f70,\\n\\t\\t\\t\\t\\t\\t0x98d0: 0x4f91,\\n\\t\\t\\t\\t\\t\\t0x98d1: 0x4f6f,\\n\\t\\t\\t\\t\\t\\t0x98d2: 0x4f86,\\n\\t\\t\\t\\t\\t\\t0x98d3: 0x4f96,\\n\\t\\t\\t\\t\\t\\t0x98d4: 0x5118,\\n\\t\\t\\t\\t\\t\\t0x98d5: 0x4fd4,\\n\\t\\t\\t\\t\\t\\t0x98d6: 0x4fdf,\\n\\t\\t\\t\\t\\t\\t0x98d7: 0x4fce,\\n\\t\\t\\t\\t\\t\\t0x98d8: 0x4fd8,\\n\\t\\t\\t\\t\\t\\t0x98d9: 0x4fdb,\\n\\t\\t\\t\\t\\t\\t0x98da: 0x4fd1,\\n\\t\\t\\t\\t\\t\\t0x98db: 0x4fda,\\n\\t\\t\\t\\t\\t\\t0x98dc: 0x4fd0,\\n\\t\\t\\t\\t\\t\\t0x98dd: 0x4fe4,\\n\\t\\t\\t\\t\\t\\t0x98de: 0x4fe5,\\n\\t\\t\\t\\t\\t\\t0x98df: 0x501a,\\n\\t\\t\\t\\t\\t\\t0x98e0: 0x5028,\\n\\t\\t\\t\\t\\t\\t0x98e1: 0x5014,\\n\\t\\t\\t\\t\\t\\t0x98e2: 0x502a,\\n\\t\\t\\t\\t\\t\\t0x98e3: 0x5025,\\n\\t\\t\\t\\t\\t\\t0x98e4: 0x5005,\\n\\t\\t\\t\\t\\t\\t0x98e5: 0x4f1c,\\n\\t\\t\\t\\t\\t\\t0x98e6: 0x4ff6,\\n\\t\\t\\t\\t\\t\\t0x98e7: 0x5021,\\n\\t\\t\\t\\t\\t\\t0x98e8: 0x5029,\\n\\t\\t\\t\\t\\t\\t0x98e9: 0x502c,\\n\\t\\t\\t\\t\\t\\t0x98ea: 0x4ffe,\\n\\t\\t\\t\\t\\t\\t0x98eb: 0x4fef,\\n\\t\\t\\t\\t\\t\\t0x98ec: 0x5011,\\n\\t\\t\\t\\t\\t\\t0x98ed: 0x5006,\\n\\t\\t\\t\\t\\t\\t0x98ee: 0x5043,\\n\\t\\t\\t\\t\\t\\t0x98ef: 0x5047,\\n\\t\\t\\t\\t\\t\\t0x98f0: 0x6703,\\n\\t\\t\\t\\t\\t\\t0x98f1: 0x5055,\\n\\t\\t\\t\\t\\t\\t0x98f2: 0x5050,\\n\\t\\t\\t\\t\\t\\t0x98f3: 0x5048,\\n\\t\\t\\t\\t\\t\\t0x98f4: 0x505a,\\n\\t\\t\\t\\t\\t\\t0x98f5: 0x5056,\\n\\t\\t\\t\\t\\t\\t0x98f6: 0x506c,\\n\\t\\t\\t\\t\\t\\t0x98f7: 0x5078,\\n\\t\\t\\t\\t\\t\\t0x98f8: 0x5080,\\n\\t\\t\\t\\t\\t\\t0x98f9: 0x509a,\\n\\t\\t\\t\\t\\t\\t0x98fa: 0x5085,\\n\\t\\t\\t\\t\\t\\t0x98fb: 0x50b4,\\n\\t\\t\\t\\t\\t\\t0x98fc: 0x50b2,\\n\\t\\t\\t\\t\\t\\t0x9940: 0x50c9,\\n\\t\\t\\t\\t\\t\\t0x9941: 0x50ca,\\n\\t\\t\\t\\t\\t\\t0x9942: 0x50b3,\\n\\t\\t\\t\\t\\t\\t0x9943: 0x50c2,\\n\\t\\t\\t\\t\\t\\t0x9944: 0x50d6,\\n\\t\\t\\t\\t\\t\\t0x9945: 0x50de,\\n\\t\\t\\t\\t\\t\\t0x9946: 0x50e5,\\n\\t\\t\\t\\t\\t\\t0x9947: 0x50ed,\\n\\t\\t\\t\\t\\t\\t0x9948: 0x50e3,\\n\\t\\t\\t\\t\\t\\t0x9949: 0x50ee,\\n\\t\\t\\t\\t\\t\\t0x994a: 0x50f9,\\n\\t\\t\\t\\t\\t\\t0x994b: 0x50f5,\\n\\t\\t\\t\\t\\t\\t0x994c: 0x5109,\\n\\t\\t\\t\\t\\t\\t0x994d: 0x5101,\\n\\t\\t\\t\\t\\t\\t0x994e: 0x5102,\\n\\t\\t\\t\\t\\t\\t0x994f: 0x5116,\\n\\t\\t\\t\\t\\t\\t0x9950: 0x5115,\\n\\t\\t\\t\\t\\t\\t0x9951: 0x5114,\\n\\t\\t\\t\\t\\t\\t0x9952: 0x511a,\\n\\t\\t\\t\\t\\t\\t0x9953: 0x5121,\\n\\t\\t\\t\\t\\t\\t0x9954: 0x513a,\\n\\t\\t\\t\\t\\t\\t0x9955: 0x5137,\\n\\t\\t\\t\\t\\t\\t0x9956: 0x513c,\\n\\t\\t\\t\\t\\t\\t0x9957: 0x513b,\\n\\t\\t\\t\\t\\t\\t0x9958: 0x513f,\\n\\t\\t\\t\\t\\t\\t0x9959: 0x5140,\\n\\t\\t\\t\\t\\t\\t0x995a: 0x5152,\\n\\t\\t\\t\\t\\t\\t0x995b: 0x514c,\\n\\t\\t\\t\\t\\t\\t0x995c: 0x5154,\\n\\t\\t\\t\\t\\t\\t0x995d: 0x5162,\\n\\t\\t\\t\\t\\t\\t0x995e: 0x7af8,\\n\\t\\t\\t\\t\\t\\t0x995f: 0x5169,\\n\\t\\t\\t\\t\\t\\t0x9960: 0x516a,\\n\\t\\t\\t\\t\\t\\t0x9961: 0x516e,\\n\\t\\t\\t\\t\\t\\t0x9962: 0x5180,\\n\\t\\t\\t\\t\\t\\t0x9963: 0x5182,\\n\\t\\t\\t\\t\\t\\t0x9964: 0x56d8,\\n\\t\\t\\t\\t\\t\\t0x9965: 0x518c,\\n\\t\\t\\t\\t\\t\\t0x9966: 0x5189,\\n\\t\\t\\t\\t\\t\\t0x9967: 0x518f,\\n\\t\\t\\t\\t\\t\\t0x9968: 0x5191,\\n\\t\\t\\t\\t\\t\\t0x9969: 0x5193,\\n\\t\\t\\t\\t\\t\\t0x996a: 0x5195,\\n\\t\\t\\t\\t\\t\\t0x996b: 0x5196,\\n\\t\\t\\t\\t\\t\\t0x996c: 0x51a4,\\n\\t\\t\\t\\t\\t\\t0x996d: 0x51a6,\\n\\t\\t\\t\\t\\t\\t0x996e: 0x51a2,\\n\\t\\t\\t\\t\\t\\t0x996f: 0x51a9,\\n\\t\\t\\t\\t\\t\\t0x9970: 0x51aa,\\n\\t\\t\\t\\t\\t\\t0x9971: 0x51ab,\\n\\t\\t\\t\\t\\t\\t0x9972: 0x51b3,\\n\\t\\t\\t\\t\\t\\t0x9973: 0x51b1,\\n\\t\\t\\t\\t\\t\\t0x9974: 0x51b2,\\n\\t\\t\\t\\t\\t\\t0x9975: 0x51b0,\\n\\t\\t\\t\\t\\t\\t0x9976: 0x51b5,\\n\\t\\t\\t\\t\\t\\t0x9977: 0x51bd,\\n\\t\\t\\t\\t\\t\\t0x9978: 0x51c5,\\n\\t\\t\\t\\t\\t\\t0x9979: 0x51c9,\\n\\t\\t\\t\\t\\t\\t0x997a: 0x51db,\\n\\t\\t\\t\\t\\t\\t0x997b: 0x51e0,\\n\\t\\t\\t\\t\\t\\t0x997c: 0x8655,\\n\\t\\t\\t\\t\\t\\t0x997d: 0x51e9,\\n\\t\\t\\t\\t\\t\\t0x997e: 0x51ed,\\n\\t\\t\\t\\t\\t\\t0x9980: 0x51f0,\\n\\t\\t\\t\\t\\t\\t0x9981: 0x51f5,\\n\\t\\t\\t\\t\\t\\t0x9982: 0x51fe,\\n\\t\\t\\t\\t\\t\\t0x9983: 0x5204,\\n\\t\\t\\t\\t\\t\\t0x9984: 0x520b,\\n\\t\\t\\t\\t\\t\\t0x9985: 0x5214,\\n\\t\\t\\t\\t\\t\\t0x9986: 0x520e,\\n\\t\\t\\t\\t\\t\\t0x9987: 0x5227,\\n\\t\\t\\t\\t\\t\\t0x9988: 0x522a,\\n\\t\\t\\t\\t\\t\\t0x9989: 0x522e,\\n\\t\\t\\t\\t\\t\\t0x998a: 0x5233,\\n\\t\\t\\t\\t\\t\\t0x998b: 0x5239,\\n\\t\\t\\t\\t\\t\\t0x998c: 0x524f,\\n\\t\\t\\t\\t\\t\\t0x998d: 0x5244,\\n\\t\\t\\t\\t\\t\\t0x998e: 0x524b,\\n\\t\\t\\t\\t\\t\\t0x998f: 0x524c,\\n\\t\\t\\t\\t\\t\\t0x9990: 0x525e,\\n\\t\\t\\t\\t\\t\\t0x9991: 0x5254,\\n\\t\\t\\t\\t\\t\\t0x9992: 0x526a,\\n\\t\\t\\t\\t\\t\\t0x9993: 0x5274,\\n\\t\\t\\t\\t\\t\\t0x9994: 0x5269,\\n\\t\\t\\t\\t\\t\\t0x9995: 0x5273,\\n\\t\\t\\t\\t\\t\\t0x9996: 0x527f,\\n\\t\\t\\t\\t\\t\\t0x9997: 0x527d,\\n\\t\\t\\t\\t\\t\\t0x9998: 0x528d,\\n\\t\\t\\t\\t\\t\\t0x9999: 0x5294,\\n\\t\\t\\t\\t\\t\\t0x999a: 0x5292,\\n\\t\\t\\t\\t\\t\\t0x999b: 0x5271,\\n\\t\\t\\t\\t\\t\\t0x999c: 0x5288,\\n\\t\\t\\t\\t\\t\\t0x999d: 0x5291,\\n\\t\\t\\t\\t\\t\\t0x999e: 0x8fa8,\\n\\t\\t\\t\\t\\t\\t0x999f: 0x8fa7,\\n\\t\\t\\t\\t\\t\\t0x99a0: 0x52ac,\\n\\t\\t\\t\\t\\t\\t0x99a1: 0x52ad,\\n\\t\\t\\t\\t\\t\\t0x99a2: 0x52bc,\\n\\t\\t\\t\\t\\t\\t0x99a3: 0x52b5,\\n\\t\\t\\t\\t\\t\\t0x99a4: 0x52c1,\\n\\t\\t\\t\\t\\t\\t0x99a5: 0x52cd,\\n\\t\\t\\t\\t\\t\\t0x99a6: 0x52d7,\\n\\t\\t\\t\\t\\t\\t0x99a7: 0x52de,\\n\\t\\t\\t\\t\\t\\t0x99a8: 0x52e3,\\n\\t\\t\\t\\t\\t\\t0x99a9: 0x52e6,\\n\\t\\t\\t\\t\\t\\t0x99aa: 0x98ed,\\n\\t\\t\\t\\t\\t\\t0x99ab: 0x52e0,\\n\\t\\t\\t\\t\\t\\t0x99ac: 0x52f3,\\n\\t\\t\\t\\t\\t\\t0x99ad: 0x52f5,\\n\\t\\t\\t\\t\\t\\t0x99ae: 0x52f8,\\n\\t\\t\\t\\t\\t\\t0x99af: 0x52f9,\\n\\t\\t\\t\\t\\t\\t0x99b0: 0x5306,\\n\\t\\t\\t\\t\\t\\t0x99b1: 0x5308,\\n\\t\\t\\t\\t\\t\\t0x99b2: 0x7538,\\n\\t\\t\\t\\t\\t\\t0x99b3: 0x530d,\\n\\t\\t\\t\\t\\t\\t0x99b4: 0x5310,\\n\\t\\t\\t\\t\\t\\t0x99b5: 0x530f,\\n\\t\\t\\t\\t\\t\\t0x99b6: 0x5315,\\n\\t\\t\\t\\t\\t\\t0x99b7: 0x531a,\\n\\t\\t\\t\\t\\t\\t0x99b8: 0x5323,\\n\\t\\t\\t\\t\\t\\t0x99b9: 0x532f,\\n\\t\\t\\t\\t\\t\\t0x99ba: 0x5331,\\n\\t\\t\\t\\t\\t\\t0x99bb: 0x5333,\\n\\t\\t\\t\\t\\t\\t0x99bc: 0x5338,\\n\\t\\t\\t\\t\\t\\t0x99bd: 0x5340,\\n\\t\\t\\t\\t\\t\\t0x99be: 0x5346,\\n\\t\\t\\t\\t\\t\\t0x99bf: 0x5345,\\n\\t\\t\\t\\t\\t\\t0x99c0: 0x4e17,\\n\\t\\t\\t\\t\\t\\t0x99c1: 0x5349,\\n\\t\\t\\t\\t\\t\\t0x99c2: 0x534d,\\n\\t\\t\\t\\t\\t\\t0x99c3: 0x51d6,\\n\\t\\t\\t\\t\\t\\t0x99c4: 0x535e,\\n\\t\\t\\t\\t\\t\\t0x99c5: 0x5369,\\n\\t\\t\\t\\t\\t\\t0x99c6: 0x536e,\\n\\t\\t\\t\\t\\t\\t0x99c7: 0x5918,\\n\\t\\t\\t\\t\\t\\t0x99c8: 0x537b,\\n\\t\\t\\t\\t\\t\\t0x99c9: 0x5377,\\n\\t\\t\\t\\t\\t\\t0x99ca: 0x5382,\\n\\t\\t\\t\\t\\t\\t0x99cb: 0x5396,\\n\\t\\t\\t\\t\\t\\t0x99cc: 0x53a0,\\n\\t\\t\\t\\t\\t\\t0x99cd: 0x53a6,\\n\\t\\t\\t\\t\\t\\t0x99ce: 0x53a5,\\n\\t\\t\\t\\t\\t\\t0x99cf: 0x53ae,\\n\\t\\t\\t\\t\\t\\t0x99d0: 0x53b0,\\n\\t\\t\\t\\t\\t\\t0x99d1: 0x53b6,\\n\\t\\t\\t\\t\\t\\t0x99d2: 0x53c3,\\n\\t\\t\\t\\t\\t\\t0x99d3: 0x7c12,\\n\\t\\t\\t\\t\\t\\t0x99d4: 0x96d9,\\n\\t\\t\\t\\t\\t\\t0x99d5: 0x53df,\\n\\t\\t\\t\\t\\t\\t0x99d6: 0x66fc,\\n\\t\\t\\t\\t\\t\\t0x99d7: 0x71ee,\\n\\t\\t\\t\\t\\t\\t0x99d8: 0x53ee,\\n\\t\\t\\t\\t\\t\\t0x99d9: 0x53e8,\\n\\t\\t\\t\\t\\t\\t0x99da: 0x53ed,\\n\\t\\t\\t\\t\\t\\t0x99db: 0x53fa,\\n\\t\\t\\t\\t\\t\\t0x99dc: 0x5401,\\n\\t\\t\\t\\t\\t\\t0x99dd: 0x543d,\\n\\t\\t\\t\\t\\t\\t0x99de: 0x5440,\\n\\t\\t\\t\\t\\t\\t0x99df: 0x542c,\\n\\t\\t\\t\\t\\t\\t0x99e0: 0x542d,\\n\\t\\t\\t\\t\\t\\t0x99e1: 0x543c,\\n\\t\\t\\t\\t\\t\\t0x99e2: 0x542e,\\n\\t\\t\\t\\t\\t\\t0x99e3: 0x5436,\\n\\t\\t\\t\\t\\t\\t0x99e4: 0x5429,\\n\\t\\t\\t\\t\\t\\t0x99e5: 0x541d,\\n\\t\\t\\t\\t\\t\\t0x99e6: 0x544e,\\n\\t\\t\\t\\t\\t\\t0x99e7: 0x548f,\\n\\t\\t\\t\\t\\t\\t0x99e8: 0x5475,\\n\\t\\t\\t\\t\\t\\t0x99e9: 0x548e,\\n\\t\\t\\t\\t\\t\\t0x99ea: 0x545f,\\n\\t\\t\\t\\t\\t\\t0x99eb: 0x5471,\\n\\t\\t\\t\\t\\t\\t0x99ec: 0x5477,\\n\\t\\t\\t\\t\\t\\t0x99ed: 0x5470,\\n\\t\\t\\t\\t\\t\\t0x99ee: 0x5492,\\n\\t\\t\\t\\t\\t\\t0x99ef: 0x547b,\\n\\t\\t\\t\\t\\t\\t0x99f0: 0x5480,\\n\\t\\t\\t\\t\\t\\t0x99f1: 0x5476,\\n\\t\\t\\t\\t\\t\\t0x99f2: 0x5484,\\n\\t\\t\\t\\t\\t\\t0x99f3: 0x5490,\\n\\t\\t\\t\\t\\t\\t0x99f4: 0x5486,\\n\\t\\t\\t\\t\\t\\t0x99f5: 0x54c7,\\n\\t\\t\\t\\t\\t\\t0x99f6: 0x54a2,\\n\\t\\t\\t\\t\\t\\t0x99f7: 0x54b8,\\n\\t\\t\\t\\t\\t\\t0x99f8: 0x54a5,\\n\\t\\t\\t\\t\\t\\t0x99f9: 0x54ac,\\n\\t\\t\\t\\t\\t\\t0x99fa: 0x54c4,\\n\\t\\t\\t\\t\\t\\t0x99fb: 0x54c8,\\n\\t\\t\\t\\t\\t\\t0x99fc: 0x54a8,\\n\\t\\t\\t\\t\\t\\t0x9a40: 0x54ab,\\n\\t\\t\\t\\t\\t\\t0x9a41: 0x54c2,\\n\\t\\t\\t\\t\\t\\t0x9a42: 0x54a4,\\n\\t\\t\\t\\t\\t\\t0x9a43: 0x54be,\\n\\t\\t\\t\\t\\t\\t0x9a44: 0x54bc,\\n\\t\\t\\t\\t\\t\\t0x9a45: 0x54d8,\\n\\t\\t\\t\\t\\t\\t0x9a46: 0x54e5,\\n\\t\\t\\t\\t\\t\\t0x9a47: 0x54e6,\\n\\t\\t\\t\\t\\t\\t0x9a48: 0x550f,\\n\\t\\t\\t\\t\\t\\t0x9a49: 0x5514,\\n\\t\\t\\t\\t\\t\\t0x9a4a: 0x54fd,\\n\\t\\t\\t\\t\\t\\t0x9a4b: 0x54ee,\\n\\t\\t\\t\\t\\t\\t0x9a4c: 0x54ed,\\n\\t\\t\\t\\t\\t\\t0x9a4d: 0x54fa,\\n\\t\\t\\t\\t\\t\\t0x9a4e: 0x54e2,\\n\\t\\t\\t\\t\\t\\t0x9a4f: 0x5539,\\n\\t\\t\\t\\t\\t\\t0x9a50: 0x5540,\\n\\t\\t\\t\\t\\t\\t0x9a51: 0x5563,\\n\\t\\t\\t\\t\\t\\t0x9a52: 0x554c,\\n\\t\\t\\t\\t\\t\\t0x9a53: 0x552e,\\n\\t\\t\\t\\t\\t\\t0x9a54: 0x555c,\\n\\t\\t\\t\\t\\t\\t0x9a55: 0x5545,\\n\\t\\t\\t\\t\\t\\t0x9a56: 0x5556,\\n\\t\\t\\t\\t\\t\\t0x9a57: 0x5557,\\n\\t\\t\\t\\t\\t\\t0x9a58: 0x5538,\\n\\t\\t\\t\\t\\t\\t0x9a59: 0x5533,\\n\\t\\t\\t\\t\\t\\t0x9a5a: 0x555d,\\n\\t\\t\\t\\t\\t\\t0x9a5b: 0x5599,\\n\\t\\t\\t\\t\\t\\t0x9a5c: 0x5580,\\n\\t\\t\\t\\t\\t\\t0x9a5d: 0x54af,\\n\\t\\t\\t\\t\\t\\t0x9a5e: 0x558a,\\n\\t\\t\\t\\t\\t\\t0x9a5f: 0x559f,\\n\\t\\t\\t\\t\\t\\t0x9a60: 0x557b,\\n\\t\\t\\t\\t\\t\\t0x9a61: 0x557e,\\n\\t\\t\\t\\t\\t\\t0x9a62: 0x5598,\\n\\t\\t\\t\\t\\t\\t0x9a63: 0x559e,\\n\\t\\t\\t\\t\\t\\t0x9a64: 0x55ae,\\n\\t\\t\\t\\t\\t\\t0x9a65: 0x557c,\\n\\t\\t\\t\\t\\t\\t0x9a66: 0x5583,\\n\\t\\t\\t\\t\\t\\t0x9a67: 0x55a9,\\n\\t\\t\\t\\t\\t\\t0x9a68: 0x5587,\\n\\t\\t\\t\\t\\t\\t0x9a69: 0x55a8,\\n\\t\\t\\t\\t\\t\\t0x9a6a: 0x55da,\\n\\t\\t\\t\\t\\t\\t0x9a6b: 0x55c5,\\n\\t\\t\\t\\t\\t\\t0x9a6c: 0x55df,\\n\\t\\t\\t\\t\\t\\t0x9a6d: 0x55c4,\\n\\t\\t\\t\\t\\t\\t0x9a6e: 0x55dc,\\n\\t\\t\\t\\t\\t\\t0x9a6f: 0x55e4,\\n\\t\\t\\t\\t\\t\\t0x9a70: 0x55d4,\\n\\t\\t\\t\\t\\t\\t0x9a71: 0x5614,\\n\\t\\t\\t\\t\\t\\t0x9a72: 0x55f7,\\n\\t\\t\\t\\t\\t\\t0x9a73: 0x5616,\\n\\t\\t\\t\\t\\t\\t0x9a74: 0x55fe,\\n\\t\\t\\t\\t\\t\\t0x9a75: 0x55fd,\\n\\t\\t\\t\\t\\t\\t0x9a76: 0x561b,\\n\\t\\t\\t\\t\\t\\t0x9a77: 0x55f9,\\n\\t\\t\\t\\t\\t\\t0x9a78: 0x564e,\\n\\t\\t\\t\\t\\t\\t0x9a79: 0x5650,\\n\\t\\t\\t\\t\\t\\t0x9a7a: 0x71df,\\n\\t\\t\\t\\t\\t\\t0x9a7b: 0x5634,\\n\\t\\t\\t\\t\\t\\t0x9a7c: 0x5636,\\n\\t\\t\\t\\t\\t\\t0x9a7d: 0x5632,\\n\\t\\t\\t\\t\\t\\t0x9a7e: 0x5638,\\n\\t\\t\\t\\t\\t\\t0x9a80: 0x566b,\\n\\t\\t\\t\\t\\t\\t0x9a81: 0x5664,\\n\\t\\t\\t\\t\\t\\t0x9a82: 0x562f,\\n\\t\\t\\t\\t\\t\\t0x9a83: 0x566c,\\n\\t\\t\\t\\t\\t\\t0x9a84: 0x566a,\\n\\t\\t\\t\\t\\t\\t0x9a85: 0x5686,\\n\\t\\t\\t\\t\\t\\t0x9a86: 0x5680,\\n\\t\\t\\t\\t\\t\\t0x9a87: 0x568a,\\n\\t\\t\\t\\t\\t\\t0x9a88: 0x56a0,\\n\\t\\t\\t\\t\\t\\t0x9a89: 0x5694,\\n\\t\\t\\t\\t\\t\\t0x9a8a: 0x568f,\\n\\t\\t\\t\\t\\t\\t0x9a8b: 0x56a5,\\n\\t\\t\\t\\t\\t\\t0x9a8c: 0x56ae,\\n\\t\\t\\t\\t\\t\\t0x9a8d: 0x56b6,\\n\\t\\t\\t\\t\\t\\t0x9a8e: 0x56b4,\\n\\t\\t\\t\\t\\t\\t0x9a8f: 0x56c2,\\n\\t\\t\\t\\t\\t\\t0x9a90: 0x56bc,\\n\\t\\t\\t\\t\\t\\t0x9a91: 0x56c1,\\n\\t\\t\\t\\t\\t\\t0x9a92: 0x56c3,\\n\\t\\t\\t\\t\\t\\t0x9a93: 0x56c0,\\n\\t\\t\\t\\t\\t\\t0x9a94: 0x56c8,\\n\\t\\t\\t\\t\\t\\t0x9a95: 0x56ce,\\n\\t\\t\\t\\t\\t\\t0x9a96: 0x56d1,\\n\\t\\t\\t\\t\\t\\t0x9a97: 0x56d3,\\n\\t\\t\\t\\t\\t\\t0x9a98: 0x56d7,\\n\\t\\t\\t\\t\\t\\t0x9a99: 0x56ee,\\n\\t\\t\\t\\t\\t\\t0x9a9a: 0x56f9,\\n\\t\\t\\t\\t\\t\\t0x9a9b: 0x5700,\\n\\t\\t\\t\\t\\t\\t0x9a9c: 0x56ff,\\n\\t\\t\\t\\t\\t\\t0x9a9d: 0x5704,\\n\\t\\t\\t\\t\\t\\t0x9a9e: 0x5709,\\n\\t\\t\\t\\t\\t\\t0x9a9f: 0x5708,\\n\\t\\t\\t\\t\\t\\t0x9aa0: 0x570b,\\n\\t\\t\\t\\t\\t\\t0x9aa1: 0x570d,\\n\\t\\t\\t\\t\\t\\t0x9aa2: 0x5713,\\n\\t\\t\\t\\t\\t\\t0x9aa3: 0x5718,\\n\\t\\t\\t\\t\\t\\t0x9aa4: 0x5716,\\n\\t\\t\\t\\t\\t\\t0x9aa5: 0x55c7,\\n\\t\\t\\t\\t\\t\\t0x9aa6: 0x571c,\\n\\t\\t\\t\\t\\t\\t0x9aa7: 0x5726,\\n\\t\\t\\t\\t\\t\\t0x9aa8: 0x5737,\\n\\t\\t\\t\\t\\t\\t0x9aa9: 0x5738,\\n\\t\\t\\t\\t\\t\\t0x9aaa: 0x574e,\\n\\t\\t\\t\\t\\t\\t0x9aab: 0x573b,\\n\\t\\t\\t\\t\\t\\t0x9aac: 0x5740,\\n\\t\\t\\t\\t\\t\\t0x9aad: 0x574f,\\n\\t\\t\\t\\t\\t\\t0x9aae: 0x5769,\\n\\t\\t\\t\\t\\t\\t0x9aaf: 0x57c0,\\n\\t\\t\\t\\t\\t\\t0x9ab0: 0x5788,\\n\\t\\t\\t\\t\\t\\t0x9ab1: 0x5761,\\n\\t\\t\\t\\t\\t\\t0x9ab2: 0x577f,\\n\\t\\t\\t\\t\\t\\t0x9ab3: 0x5789,\\n\\t\\t\\t\\t\\t\\t0x9ab4: 0x5793,\\n\\t\\t\\t\\t\\t\\t0x9ab5: 0x57a0,\\n\\t\\t\\t\\t\\t\\t0x9ab6: 0x57b3,\\n\\t\\t\\t\\t\\t\\t0x9ab7: 0x57a4,\\n\\t\\t\\t\\t\\t\\t0x9ab8: 0x57aa,\\n\\t\\t\\t\\t\\t\\t0x9ab9: 0x57b0,\\n\\t\\t\\t\\t\\t\\t0x9aba: 0x57c3,\\n\\t\\t\\t\\t\\t\\t0x9abb: 0x57c6,\\n\\t\\t\\t\\t\\t\\t0x9abc: 0x57d4,\\n\\t\\t\\t\\t\\t\\t0x9abd: 0x57d2,\\n\\t\\t\\t\\t\\t\\t0x9abe: 0x57d3,\\n\\t\\t\\t\\t\\t\\t0x9abf: 0x580a,\\n\\t\\t\\t\\t\\t\\t0x9ac0: 0x57d6,\\n\\t\\t\\t\\t\\t\\t0x9ac1: 0x57e3,\\n\\t\\t\\t\\t\\t\\t0x9ac2: 0x580b,\\n\\t\\t\\t\\t\\t\\t0x9ac3: 0x5819,\\n\\t\\t\\t\\t\\t\\t0x9ac4: 0x581d,\\n\\t\\t\\t\\t\\t\\t0x9ac5: 0x5872,\\n\\t\\t\\t\\t\\t\\t0x9ac6: 0x5821,\\n\\t\\t\\t\\t\\t\\t0x9ac7: 0x5862,\\n\\t\\t\\t\\t\\t\\t0x9ac8: 0x584b,\\n\\t\\t\\t\\t\\t\\t0x9ac9: 0x5870,\\n\\t\\t\\t\\t\\t\\t0x9aca: 0x6bc0,\\n\\t\\t\\t\\t\\t\\t0x9acb: 0x5852,\\n\\t\\t\\t\\t\\t\\t0x9acc: 0x583d,\\n\\t\\t\\t\\t\\t\\t0x9acd: 0x5879,\\n\\t\\t\\t\\t\\t\\t0x9ace: 0x5885,\\n\\t\\t\\t\\t\\t\\t0x9acf: 0x58b9,\\n\\t\\t\\t\\t\\t\\t0x9ad0: 0x589f,\\n\\t\\t\\t\\t\\t\\t0x9ad1: 0x58ab,\\n\\t\\t\\t\\t\\t\\t0x9ad2: 0x58ba,\\n\\t\\t\\t\\t\\t\\t0x9ad3: 0x58de,\\n\\t\\t\\t\\t\\t\\t0x9ad4: 0x58bb,\\n\\t\\t\\t\\t\\t\\t0x9ad5: 0x58b8,\\n\\t\\t\\t\\t\\t\\t0x9ad6: 0x58ae,\\n\\t\\t\\t\\t\\t\\t0x9ad7: 0x58c5,\\n\\t\\t\\t\\t\\t\\t0x9ad8: 0x58d3,\\n\\t\\t\\t\\t\\t\\t0x9ad9: 0x58d1,\\n\\t\\t\\t\\t\\t\\t0x9ada: 0x58d7,\\n\\t\\t\\t\\t\\t\\t0x9adb: 0x58d9,\\n\\t\\t\\t\\t\\t\\t0x9adc: 0x58d8,\\n\\t\\t\\t\\t\\t\\t0x9add: 0x58e5,\\n\\t\\t\\t\\t\\t\\t0x9ade: 0x58dc,\\n\\t\\t\\t\\t\\t\\t0x9adf: 0x58e4,\\n\\t\\t\\t\\t\\t\\t0x9ae0: 0x58df,\\n\\t\\t\\t\\t\\t\\t0x9ae1: 0x58ef,\\n\\t\\t\\t\\t\\t\\t0x9ae2: 0x58fa,\\n\\t\\t\\t\\t\\t\\t0x9ae3: 0x58f9,\\n\\t\\t\\t\\t\\t\\t0x9ae4: 0x58fb,\\n\\t\\t\\t\\t\\t\\t0x9ae5: 0x58fc,\\n\\t\\t\\t\\t\\t\\t0x9ae6: 0x58fd,\\n\\t\\t\\t\\t\\t\\t0x9ae7: 0x5902,\\n\\t\\t\\t\\t\\t\\t0x9ae8: 0x590a,\\n\\t\\t\\t\\t\\t\\t0x9ae9: 0x5910,\\n\\t\\t\\t\\t\\t\\t0x9aea: 0x591b,\\n\\t\\t\\t\\t\\t\\t0x9aeb: 0x68a6,\\n\\t\\t\\t\\t\\t\\t0x9aec: 0x5925,\\n\\t\\t\\t\\t\\t\\t0x9aed: 0x592c,\\n\\t\\t\\t\\t\\t\\t0x9aee: 0x592d,\\n\\t\\t\\t\\t\\t\\t0x9aef: 0x5932,\\n\\t\\t\\t\\t\\t\\t0x9af0: 0x5938,\\n\\t\\t\\t\\t\\t\\t0x9af1: 0x593e,\\n\\t\\t\\t\\t\\t\\t0x9af2: 0x7ad2,\\n\\t\\t\\t\\t\\t\\t0x9af3: 0x5955,\\n\\t\\t\\t\\t\\t\\t0x9af4: 0x5950,\\n\\t\\t\\t\\t\\t\\t0x9af5: 0x594e,\\n\\t\\t\\t\\t\\t\\t0x9af6: 0x595a,\\n\\t\\t\\t\\t\\t\\t0x9af7: 0x5958,\\n\\t\\t\\t\\t\\t\\t0x9af8: 0x5962,\\n\\t\\t\\t\\t\\t\\t0x9af9: 0x5960,\\n\\t\\t\\t\\t\\t\\t0x9afa: 0x5967,\\n\\t\\t\\t\\t\\t\\t0x9afb: 0x596c,\\n\\t\\t\\t\\t\\t\\t0x9afc: 0x5969,\\n\\t\\t\\t\\t\\t\\t0x9b40: 0x5978,\\n\\t\\t\\t\\t\\t\\t0x9b41: 0x5981,\\n\\t\\t\\t\\t\\t\\t0x9b42: 0x599d,\\n\\t\\t\\t\\t\\t\\t0x9b43: 0x4f5e,\\n\\t\\t\\t\\t\\t\\t0x9b44: 0x4fab,\\n\\t\\t\\t\\t\\t\\t0x9b45: 0x59a3,\\n\\t\\t\\t\\t\\t\\t0x9b46: 0x59b2,\\n\\t\\t\\t\\t\\t\\t0x9b47: 0x59c6,\\n\\t\\t\\t\\t\\t\\t0x9b48: 0x59e8,\\n\\t\\t\\t\\t\\t\\t0x9b49: 0x59dc,\\n\\t\\t\\t\\t\\t\\t0x9b4a: 0x598d,\\n\\t\\t\\t\\t\\t\\t0x9b4b: 0x59d9,\\n\\t\\t\\t\\t\\t\\t0x9b4c: 0x59da,\\n\\t\\t\\t\\t\\t\\t0x9b4d: 0x5a25,\\n\\t\\t\\t\\t\\t\\t0x9b4e: 0x5a1f,\\n\\t\\t\\t\\t\\t\\t0x9b4f: 0x5a11,\\n\\t\\t\\t\\t\\t\\t0x9b50: 0x5a1c,\\n\\t\\t\\t\\t\\t\\t0x9b51: 0x5a09,\\n\\t\\t\\t\\t\\t\\t0x9b52: 0x5a1a,\\n\\t\\t\\t\\t\\t\\t0x9b53: 0x5a40,\\n\\t\\t\\t\\t\\t\\t0x9b54: 0x5a6c,\\n\\t\\t\\t\\t\\t\\t0x9b55: 0x5a49,\\n\\t\\t\\t\\t\\t\\t0x9b56: 0x5a35,\\n\\t\\t\\t\\t\\t\\t0x9b57: 0x5a36,\\n\\t\\t\\t\\t\\t\\t0x9b58: 0x5a62,\\n\\t\\t\\t\\t\\t\\t0x9b59: 0x5a6a,\\n\\t\\t\\t\\t\\t\\t0x9b5a: 0x5a9a,\\n\\t\\t\\t\\t\\t\\t0x9b5b: 0x5abc,\\n\\t\\t\\t\\t\\t\\t0x9b5c: 0x5abe,\\n\\t\\t\\t\\t\\t\\t0x9b5d: 0x5acb,\\n\\t\\t\\t\\t\\t\\t0x9b5e: 0x5ac2,\\n\\t\\t\\t\\t\\t\\t0x9b5f: 0x5abd,\\n\\t\\t\\t\\t\\t\\t0x9b60: 0x5ae3,\\n\\t\\t\\t\\t\\t\\t0x9b61: 0x5ad7,\\n\\t\\t\\t\\t\\t\\t0x9b62: 0x5ae6,\\n\\t\\t\\t\\t\\t\\t0x9b63: 0x5ae9,\\n\\t\\t\\t\\t\\t\\t0x9b64: 0x5ad6,\\n\\t\\t\\t\\t\\t\\t0x9b65: 0x5afa,\\n\\t\\t\\t\\t\\t\\t0x9b66: 0x5afb,\\n\\t\\t\\t\\t\\t\\t0x9b67: 0x5b0c,\\n\\t\\t\\t\\t\\t\\t0x9b68: 0x5b0b,\\n\\t\\t\\t\\t\\t\\t0x9b69: 0x5b16,\\n\\t\\t\\t\\t\\t\\t0x9b6a: 0x5b32,\\n\\t\\t\\t\\t\\t\\t0x9b6b: 0x5ad0,\\n\\t\\t\\t\\t\\t\\t0x9b6c: 0x5b2a,\\n\\t\\t\\t\\t\\t\\t0x9b6d: 0x5b36,\\n\\t\\t\\t\\t\\t\\t0x9b6e: 0x5b3e,\\n\\t\\t\\t\\t\\t\\t0x9b6f: 0x5b43,\\n\\t\\t\\t\\t\\t\\t0x9b70: 0x5b45,\\n\\t\\t\\t\\t\\t\\t0x9b71: 0x5b40,\\n\\t\\t\\t\\t\\t\\t0x9b72: 0x5b51,\\n\\t\\t\\t\\t\\t\\t0x9b73: 0x5b55,\\n\\t\\t\\t\\t\\t\\t0x9b74: 0x5b5a,\\n\\t\\t\\t\\t\\t\\t0x9b75: 0x5b5b,\\n\\t\\t\\t\\t\\t\\t0x9b76: 0x5b65,\\n\\t\\t\\t\\t\\t\\t0x9b77: 0x5b69,\\n\\t\\t\\t\\t\\t\\t0x9b78: 0x5b70,\\n\\t\\t\\t\\t\\t\\t0x9b79: 0x5b73,\\n\\t\\t\\t\\t\\t\\t0x9b7a: 0x5b75,\\n\\t\\t\\t\\t\\t\\t0x9b7b: 0x5b78,\\n\\t\\t\\t\\t\\t\\t0x9b7c: 0x6588,\\n\\t\\t\\t\\t\\t\\t0x9b7d: 0x5b7a,\\n\\t\\t\\t\\t\\t\\t0x9b7e: 0x5b80,\\n\\t\\t\\t\\t\\t\\t0x9b80: 0x5b83,\\n\\t\\t\\t\\t\\t\\t0x9b81: 0x5ba6,\\n\\t\\t\\t\\t\\t\\t0x9b82: 0x5bb8,\\n\\t\\t\\t\\t\\t\\t0x9b83: 0x5bc3,\\n\\t\\t\\t\\t\\t\\t0x9b84: 0x5bc7,\\n\\t\\t\\t\\t\\t\\t0x9b85: 0x5bc9,\\n\\t\\t\\t\\t\\t\\t0x9b86: 0x5bd4,\\n\\t\\t\\t\\t\\t\\t0x9b87: 0x5bd0,\\n\\t\\t\\t\\t\\t\\t0x9b88: 0x5be4,\\n\\t\\t\\t\\t\\t\\t0x9b89: 0x5be6,\\n\\t\\t\\t\\t\\t\\t0x9b8a: 0x5be2,\\n\\t\\t\\t\\t\\t\\t0x9b8b: 0x5bde,\\n\\t\\t\\t\\t\\t\\t0x9b8c: 0x5be5,\\n\\t\\t\\t\\t\\t\\t0x9b8d: 0x5beb,\\n\\t\\t\\t\\t\\t\\t0x9b8e: 0x5bf0,\\n\\t\\t\\t\\t\\t\\t0x9b8f: 0x5bf6,\\n\\t\\t\\t\\t\\t\\t0x9b90: 0x5bf3,\\n\\t\\t\\t\\t\\t\\t0x9b91: 0x5c05,\\n\\t\\t\\t\\t\\t\\t0x9b92: 0x5c07,\\n\\t\\t\\t\\t\\t\\t0x9b93: 0x5c08,\\n\\t\\t\\t\\t\\t\\t0x9b94: 0x5c0d,\\n\\t\\t\\t\\t\\t\\t0x9b95: 0x5c13,\\n\\t\\t\\t\\t\\t\\t0x9b96: 0x5c20,\\n\\t\\t\\t\\t\\t\\t0x9b97: 0x5c22,\\n\\t\\t\\t\\t\\t\\t0x9b98: 0x5c28,\\n\\t\\t\\t\\t\\t\\t0x9b99: 0x5c38,\\n\\t\\t\\t\\t\\t\\t0x9b9a: 0x5c39,\\n\\t\\t\\t\\t\\t\\t0x9b9b: 0x5c41,\\n\\t\\t\\t\\t\\t\\t0x9b9c: 0x5c46,\\n\\t\\t\\t\\t\\t\\t0x9b9d: 0x5c4e,\\n\\t\\t\\t\\t\\t\\t0x9b9e: 0x5c53,\\n\\t\\t\\t\\t\\t\\t0x9b9f: 0x5c50,\\n\\t\\t\\t\\t\\t\\t0x9ba0: 0x5c4f,\\n\\t\\t\\t\\t\\t\\t0x9ba1: 0x5b71,\\n\\t\\t\\t\\t\\t\\t0x9ba2: 0x5c6c,\\n\\t\\t\\t\\t\\t\\t0x9ba3: 0x5c6e,\\n\\t\\t\\t\\t\\t\\t0x9ba4: 0x4e62,\\n\\t\\t\\t\\t\\t\\t0x9ba5: 0x5c76,\\n\\t\\t\\t\\t\\t\\t0x9ba6: 0x5c79,\\n\\t\\t\\t\\t\\t\\t0x9ba7: 0x5c8c,\\n\\t\\t\\t\\t\\t\\t0x9ba8: 0x5c91,\\n\\t\\t\\t\\t\\t\\t0x9ba9: 0x5c94,\\n\\t\\t\\t\\t\\t\\t0x9baa: 0x599b,\\n\\t\\t\\t\\t\\t\\t0x9bab: 0x5cab,\\n\\t\\t\\t\\t\\t\\t0x9bac: 0x5cbb,\\n\\t\\t\\t\\t\\t\\t0x9bad: 0x5cb6,\\n\\t\\t\\t\\t\\t\\t0x9bae: 0x5cbc,\\n\\t\\t\\t\\t\\t\\t0x9baf: 0x5cb7,\\n\\t\\t\\t\\t\\t\\t0x9bb0: 0x5cc5,\\n\\t\\t\\t\\t\\t\\t0x9bb1: 0x5cbe,\\n\\t\\t\\t\\t\\t\\t0x9bb2: 0x5cc7,\\n\\t\\t\\t\\t\\t\\t0x9bb3: 0x5cd9,\\n\\t\\t\\t\\t\\t\\t0x9bb4: 0x5ce9,\\n\\t\\t\\t\\t\\t\\t0x9bb5: 0x5cfd,\\n\\t\\t\\t\\t\\t\\t0x9bb6: 0x5cfa,\\n\\t\\t\\t\\t\\t\\t0x9bb7: 0x5ced,\\n\\t\\t\\t\\t\\t\\t0x9bb8: 0x5d8c,\\n\\t\\t\\t\\t\\t\\t0x9bb9: 0x5cea,\\n\\t\\t\\t\\t\\t\\t0x9bba: 0x5d0b,\\n\\t\\t\\t\\t\\t\\t0x9bbb: 0x5d15,\\n\\t\\t\\t\\t\\t\\t0x9bbc: 0x5d17,\\n\\t\\t\\t\\t\\t\\t0x9bbd: 0x5d5c,\\n\\t\\t\\t\\t\\t\\t0x9bbe: 0x5d1f,\\n\\t\\t\\t\\t\\t\\t0x9bbf: 0x5d1b,\\n\\t\\t\\t\\t\\t\\t0x9bc0: 0x5d11,\\n\\t\\t\\t\\t\\t\\t0x9bc1: 0x5d14,\\n\\t\\t\\t\\t\\t\\t0x9bc2: 0x5d22,\\n\\t\\t\\t\\t\\t\\t0x9bc3: 0x5d1a,\\n\\t\\t\\t\\t\\t\\t0x9bc4: 0x5d19,\\n\\t\\t\\t\\t\\t\\t0x9bc5: 0x5d18,\\n\\t\\t\\t\\t\\t\\t0x9bc6: 0x5d4c,\\n\\t\\t\\t\\t\\t\\t0x9bc7: 0x5d52,\\n\\t\\t\\t\\t\\t\\t0x9bc8: 0x5d4e,\\n\\t\\t\\t\\t\\t\\t0x9bc9: 0x5d4b,\\n\\t\\t\\t\\t\\t\\t0x9bca: 0x5d6c,\\n\\t\\t\\t\\t\\t\\t0x9bcb: 0x5d73,\\n\\t\\t\\t\\t\\t\\t0x9bcc: 0x5d76,\\n\\t\\t\\t\\t\\t\\t0x9bcd: 0x5d87,\\n\\t\\t\\t\\t\\t\\t0x9bce: 0x5d84,\\n\\t\\t\\t\\t\\t\\t0x9bcf: 0x5d82,\\n\\t\\t\\t\\t\\t\\t0x9bd0: 0x5da2,\\n\\t\\t\\t\\t\\t\\t0x9bd1: 0x5d9d,\\n\\t\\t\\t\\t\\t\\t0x9bd2: 0x5dac,\\n\\t\\t\\t\\t\\t\\t0x9bd3: 0x5dae,\\n\\t\\t\\t\\t\\t\\t0x9bd4: 0x5dbd,\\n\\t\\t\\t\\t\\t\\t0x9bd5: 0x5d90,\\n\\t\\t\\t\\t\\t\\t0x9bd6: 0x5db7,\\n\\t\\t\\t\\t\\t\\t0x9bd7: 0x5dbc,\\n\\t\\t\\t\\t\\t\\t0x9bd8: 0x5dc9,\\n\\t\\t\\t\\t\\t\\t0x9bd9: 0x5dcd,\\n\\t\\t\\t\\t\\t\\t0x9bda: 0x5dd3,\\n\\t\\t\\t\\t\\t\\t0x9bdb: 0x5dd2,\\n\\t\\t\\t\\t\\t\\t0x9bdc: 0x5dd6,\\n\\t\\t\\t\\t\\t\\t0x9bdd: 0x5ddb,\\n\\t\\t\\t\\t\\t\\t0x9bde: 0x5deb,\\n\\t\\t\\t\\t\\t\\t0x9bdf: 0x5df2,\\n\\t\\t\\t\\t\\t\\t0x9be0: 0x5df5,\\n\\t\\t\\t\\t\\t\\t0x9be1: 0x5e0b,\\n\\t\\t\\t\\t\\t\\t0x9be2: 0x5e1a,\\n\\t\\t\\t\\t\\t\\t0x9be3: 0x5e19,\\n\\t\\t\\t\\t\\t\\t0x9be4: 0x5e11,\\n\\t\\t\\t\\t\\t\\t0x9be5: 0x5e1b,\\n\\t\\t\\t\\t\\t\\t0x9be6: 0x5e36,\\n\\t\\t\\t\\t\\t\\t0x9be7: 0x5e37,\\n\\t\\t\\t\\t\\t\\t0x9be8: 0x5e44,\\n\\t\\t\\t\\t\\t\\t0x9be9: 0x5e43,\\n\\t\\t\\t\\t\\t\\t0x9bea: 0x5e40,\\n\\t\\t\\t\\t\\t\\t0x9beb: 0x5e4e,\\n\\t\\t\\t\\t\\t\\t0x9bec: 0x5e57,\\n\\t\\t\\t\\t\\t\\t0x9bed: 0x5e54,\\n\\t\\t\\t\\t\\t\\t0x9bee: 0x5e5f,\\n\\t\\t\\t\\t\\t\\t0x9bef: 0x5e62,\\n\\t\\t\\t\\t\\t\\t0x9bf0: 0x5e64,\\n\\t\\t\\t\\t\\t\\t0x9bf1: 0x5e47,\\n\\t\\t\\t\\t\\t\\t0x9bf2: 0x5e75,\\n\\t\\t\\t\\t\\t\\t0x9bf3: 0x5e76,\\n\\t\\t\\t\\t\\t\\t0x9bf4: 0x5e7a,\\n\\t\\t\\t\\t\\t\\t0x9bf5: 0x9ebc,\\n\\t\\t\\t\\t\\t\\t0x9bf6: 0x5e7f,\\n\\t\\t\\t\\t\\t\\t0x9bf7: 0x5ea0,\\n\\t\\t\\t\\t\\t\\t0x9bf8: 0x5ec1,\\n\\t\\t\\t\\t\\t\\t0x9bf9: 0x5ec2,\\n\\t\\t\\t\\t\\t\\t0x9bfa: 0x5ec8,\\n\\t\\t\\t\\t\\t\\t0x9bfb: 0x5ed0,\\n\\t\\t\\t\\t\\t\\t0x9bfc: 0x5ecf,\\n\\t\\t\\t\\t\\t\\t0x9c40: 0x5ed6,\\n\\t\\t\\t\\t\\t\\t0x9c41: 0x5ee3,\\n\\t\\t\\t\\t\\t\\t0x9c42: 0x5edd,\\n\\t\\t\\t\\t\\t\\t0x9c43: 0x5eda,\\n\\t\\t\\t\\t\\t\\t0x9c44: 0x5edb,\\n\\t\\t\\t\\t\\t\\t0x9c45: 0x5ee2,\\n\\t\\t\\t\\t\\t\\t0x9c46: 0x5ee1,\\n\\t\\t\\t\\t\\t\\t0x9c47: 0x5ee8,\\n\\t\\t\\t\\t\\t\\t0x9c48: 0x5ee9,\\n\\t\\t\\t\\t\\t\\t0x9c49: 0x5eec,\\n\\t\\t\\t\\t\\t\\t0x9c4a: 0x5ef1,\\n\\t\\t\\t\\t\\t\\t0x9c4b: 0x5ef3,\\n\\t\\t\\t\\t\\t\\t0x9c4c: 0x5ef0,\\n\\t\\t\\t\\t\\t\\t0x9c4d: 0x5ef4,\\n\\t\\t\\t\\t\\t\\t0x9c4e: 0x5ef8,\\n\\t\\t\\t\\t\\t\\t0x9c4f: 0x5efe,\\n\\t\\t\\t\\t\\t\\t0x9c50: 0x5f03,\\n\\t\\t\\t\\t\\t\\t0x9c51: 0x5f09,\\n\\t\\t\\t\\t\\t\\t0x9c52: 0x5f5d,\\n\\t\\t\\t\\t\\t\\t0x9c53: 0x5f5c,\\n\\t\\t\\t\\t\\t\\t0x9c54: 0x5f0b,\\n\\t\\t\\t\\t\\t\\t0x9c55: 0x5f11,\\n\\t\\t\\t\\t\\t\\t0x9c56: 0x5f16,\\n\\t\\t\\t\\t\\t\\t0x9c57: 0x5f29,\\n\\t\\t\\t\\t\\t\\t0x9c58: 0x5f2d,\\n\\t\\t\\t\\t\\t\\t0x9c59: 0x5f38,\\n\\t\\t\\t\\t\\t\\t0x9c5a: 0x5f41,\\n\\t\\t\\t\\t\\t\\t0x9c5b: 0x5f48,\\n\\t\\t\\t\\t\\t\\t0x9c5c: 0x5f4c,\\n\\t\\t\\t\\t\\t\\t0x9c5d: 0x5f4e,\\n\\t\\t\\t\\t\\t\\t0x9c5e: 0x5f2f,\\n\\t\\t\\t\\t\\t\\t0x9c5f: 0x5f51,\\n\\t\\t\\t\\t\\t\\t0x9c60: 0x5f56,\\n\\t\\t\\t\\t\\t\\t0x9c61: 0x5f57,\\n\\t\\t\\t\\t\\t\\t0x9c62: 0x5f59,\\n\\t\\t\\t\\t\\t\\t0x9c63: 0x5f61,\\n\\t\\t\\t\\t\\t\\t0x9c64: 0x5f6d,\\n\\t\\t\\t\\t\\t\\t0x9c65: 0x5f73,\\n\\t\\t\\t\\t\\t\\t0x9c66: 0x5f77,\\n\\t\\t\\t\\t\\t\\t0x9c67: 0x5f83,\\n\\t\\t\\t\\t\\t\\t0x9c68: 0x5f82,\\n\\t\\t\\t\\t\\t\\t0x9c69: 0x5f7f,\\n\\t\\t\\t\\t\\t\\t0x9c6a: 0x5f8a,\\n\\t\\t\\t\\t\\t\\t0x9c6b: 0x5f88,\\n\\t\\t\\t\\t\\t\\t0x9c6c: 0x5f91,\\n\\t\\t\\t\\t\\t\\t0x9c6d: 0x5f87,\\n\\t\\t\\t\\t\\t\\t0x9c6e: 0x5f9e,\\n\\t\\t\\t\\t\\t\\t0x9c6f: 0x5f99,\\n\\t\\t\\t\\t\\t\\t0x9c70: 0x5f98,\\n\\t\\t\\t\\t\\t\\t0x9c71: 0x5fa0,\\n\\t\\t\\t\\t\\t\\t0x9c72: 0x5fa8,\\n\\t\\t\\t\\t\\t\\t0x9c73: 0x5fad,\\n\\t\\t\\t\\t\\t\\t0x9c74: 0x5fbc,\\n\\t\\t\\t\\t\\t\\t0x9c75: 0x5fd6,\\n\\t\\t\\t\\t\\t\\t0x9c76: 0x5ffb,\\n\\t\\t\\t\\t\\t\\t0x9c77: 0x5fe4,\\n\\t\\t\\t\\t\\t\\t0x9c78: 0x5ff8,\\n\\t\\t\\t\\t\\t\\t0x9c79: 0x5ff1,\\n\\t\\t\\t\\t\\t\\t0x9c7a: 0x5fdd,\\n\\t\\t\\t\\t\\t\\t0x9c7b: 0x60b3,\\n\\t\\t\\t\\t\\t\\t0x9c7c: 0x5fff,\\n\\t\\t\\t\\t\\t\\t0x9c7d: 0x6021,\\n\\t\\t\\t\\t\\t\\t0x9c7e: 0x6060,\\n\\t\\t\\t\\t\\t\\t0x9c80: 0x6019,\\n\\t\\t\\t\\t\\t\\t0x9c81: 0x6010,\\n\\t\\t\\t\\t\\t\\t0x9c82: 0x6029,\\n\\t\\t\\t\\t\\t\\t0x9c83: 0x600e,\\n\\t\\t\\t\\t\\t\\t0x9c84: 0x6031,\\n\\t\\t\\t\\t\\t\\t0x9c85: 0x601b,\\n\\t\\t\\t\\t\\t\\t0x9c86: 0x6015,\\n\\t\\t\\t\\t\\t\\t0x9c87: 0x602b,\\n\\t\\t\\t\\t\\t\\t0x9c88: 0x6026,\\n\\t\\t\\t\\t\\t\\t0x9c89: 0x600f,\\n\\t\\t\\t\\t\\t\\t0x9c8a: 0x603a,\\n\\t\\t\\t\\t\\t\\t0x9c8b: 0x605a,\\n\\t\\t\\t\\t\\t\\t0x9c8c: 0x6041,\\n\\t\\t\\t\\t\\t\\t0x9c8d: 0x606a,\\n\\t\\t\\t\\t\\t\\t0x9c8e: 0x6077,\\n\\t\\t\\t\\t\\t\\t0x9c8f: 0x605f,\\n\\t\\t\\t\\t\\t\\t0x9c90: 0x604a,\\n\\t\\t\\t\\t\\t\\t0x9c91: 0x6046,\\n\\t\\t\\t\\t\\t\\t0x9c92: 0x604d,\\n\\t\\t\\t\\t\\t\\t0x9c93: 0x6063,\\n\\t\\t\\t\\t\\t\\t0x9c94: 0x6043,\\n\\t\\t\\t\\t\\t\\t0x9c95: 0x6064,\\n\\t\\t\\t\\t\\t\\t0x9c96: 0x6042,\\n\\t\\t\\t\\t\\t\\t0x9c97: 0x606c,\\n\\t\\t\\t\\t\\t\\t0x9c98: 0x606b,\\n\\t\\t\\t\\t\\t\\t0x9c99: 0x6059,\\n\\t\\t\\t\\t\\t\\t0x9c9a: 0x6081,\\n\\t\\t\\t\\t\\t\\t0x9c9b: 0x608d,\\n\\t\\t\\t\\t\\t\\t0x9c9c: 0x60e7,\\n\\t\\t\\t\\t\\t\\t0x9c9d: 0x6083,\\n\\t\\t\\t\\t\\t\\t0x9c9e: 0x609a,\\n\\t\\t\\t\\t\\t\\t0x9c9f: 0x6084,\\n\\t\\t\\t\\t\\t\\t0x9ca0: 0x609b,\\n\\t\\t\\t\\t\\t\\t0x9ca1: 0x6096,\\n\\t\\t\\t\\t\\t\\t0x9ca2: 0x6097,\\n\\t\\t\\t\\t\\t\\t0x9ca3: 0x6092,\\n\\t\\t\\t\\t\\t\\t0x9ca4: 0x60a7,\\n\\t\\t\\t\\t\\t\\t0x9ca5: 0x608b,\\n\\t\\t\\t\\t\\t\\t0x9ca6: 0x60e1,\\n\\t\\t\\t\\t\\t\\t0x9ca7: 0x60b8,\\n\\t\\t\\t\\t\\t\\t0x9ca8: 0x60e0,\\n\\t\\t\\t\\t\\t\\t0x9ca9: 0x60d3,\\n\\t\\t\\t\\t\\t\\t0x9caa: 0x60b4,\\n\\t\\t\\t\\t\\t\\t0x9cab: 0x5ff0,\\n\\t\\t\\t\\t\\t\\t0x9cac: 0x60bd,\\n\\t\\t\\t\\t\\t\\t0x9cad: 0x60c6,\\n\\t\\t\\t\\t\\t\\t0x9cae: 0x60b5,\\n\\t\\t\\t\\t\\t\\t0x9caf: 0x60d8,\\n\\t\\t\\t\\t\\t\\t0x9cb0: 0x614d,\\n\\t\\t\\t\\t\\t\\t0x9cb1: 0x6115,\\n\\t\\t\\t\\t\\t\\t0x9cb2: 0x6106,\\n\\t\\t\\t\\t\\t\\t0x9cb3: 0x60f6,\\n\\t\\t\\t\\t\\t\\t0x9cb4: 0x60f7,\\n\\t\\t\\t\\t\\t\\t0x9cb5: 0x6100,\\n\\t\\t\\t\\t\\t\\t0x9cb6: 0x60f4,\\n\\t\\t\\t\\t\\t\\t0x9cb7: 0x60fa,\\n\\t\\t\\t\\t\\t\\t0x9cb8: 0x6103,\\n\\t\\t\\t\\t\\t\\t0x9cb9: 0x6121,\\n\\t\\t\\t\\t\\t\\t0x9cba: 0x60fb,\\n\\t\\t\\t\\t\\t\\t0x9cbb: 0x60f1,\\n\\t\\t\\t\\t\\t\\t0x9cbc: 0x610d,\\n\\t\\t\\t\\t\\t\\t0x9cbd: 0x610e,\\n\\t\\t\\t\\t\\t\\t0x9cbe: 0x6147,\\n\\t\\t\\t\\t\\t\\t0x9cbf: 0x613e,\\n\\t\\t\\t\\t\\t\\t0x9cc0: 0x6128,\\n\\t\\t\\t\\t\\t\\t0x9cc1: 0x6127,\\n\\t\\t\\t\\t\\t\\t0x9cc2: 0x614a,\\n\\t\\t\\t\\t\\t\\t0x9cc3: 0x613f,\\n\\t\\t\\t\\t\\t\\t0x9cc4: 0x613c,\\n\\t\\t\\t\\t\\t\\t0x9cc5: 0x612c,\\n\\t\\t\\t\\t\\t\\t0x9cc6: 0x6134,\\n\\t\\t\\t\\t\\t\\t0x9cc7: 0x613d,\\n\\t\\t\\t\\t\\t\\t0x9cc8: 0x6142,\\n\\t\\t\\t\\t\\t\\t0x9cc9: 0x6144,\\n\\t\\t\\t\\t\\t\\t0x9cca: 0x6173,\\n\\t\\t\\t\\t\\t\\t0x9ccb: 0x6177,\\n\\t\\t\\t\\t\\t\\t0x9ccc: 0x6158,\\n\\t\\t\\t\\t\\t\\t0x9ccd: 0x6159,\\n\\t\\t\\t\\t\\t\\t0x9cce: 0x615a,\\n\\t\\t\\t\\t\\t\\t0x9ccf: 0x616b,\\n\\t\\t\\t\\t\\t\\t0x9cd0: 0x6174,\\n\\t\\t\\t\\t\\t\\t0x9cd1: 0x616f,\\n\\t\\t\\t\\t\\t\\t0x9cd2: 0x6165,\\n\\t\\t\\t\\t\\t\\t0x9cd3: 0x6171,\\n\\t\\t\\t\\t\\t\\t0x9cd4: 0x615f,\\n\\t\\t\\t\\t\\t\\t0x9cd5: 0x615d,\\n\\t\\t\\t\\t\\t\\t0x9cd6: 0x6153,\\n\\t\\t\\t\\t\\t\\t0x9cd7: 0x6175,\\n\\t\\t\\t\\t\\t\\t0x9cd8: 0x6199,\\n\\t\\t\\t\\t\\t\\t0x9cd9: 0x6196,\\n\\t\\t\\t\\t\\t\\t0x9cda: 0x6187,\\n\\t\\t\\t\\t\\t\\t0x9cdb: 0x61ac,\\n\\t\\t\\t\\t\\t\\t0x9cdc: 0x6194,\\n\\t\\t\\t\\t\\t\\t0x9cdd: 0x619a,\\n\\t\\t\\t\\t\\t\\t0x9cde: 0x618a,\\n\\t\\t\\t\\t\\t\\t0x9cdf: 0x6191,\\n\\t\\t\\t\\t\\t\\t0x9ce0: 0x61ab,\\n\\t\\t\\t\\t\\t\\t0x9ce1: 0x61ae,\\n\\t\\t\\t\\t\\t\\t0x9ce2: 0x61cc,\\n\\t\\t\\t\\t\\t\\t0x9ce3: 0x61ca,\\n\\t\\t\\t\\t\\t\\t0x9ce4: 0x61c9,\\n\\t\\t\\t\\t\\t\\t0x9ce5: 0x61f7,\\n\\t\\t\\t\\t\\t\\t0x9ce6: 0x61c8,\\n\\t\\t\\t\\t\\t\\t0x9ce7: 0x61c3,\\n\\t\\t\\t\\t\\t\\t0x9ce8: 0x61c6,\\n\\t\\t\\t\\t\\t\\t0x9ce9: 0x61ba,\\n\\t\\t\\t\\t\\t\\t0x9cea: 0x61cb,\\n\\t\\t\\t\\t\\t\\t0x9ceb: 0x7f79,\\n\\t\\t\\t\\t\\t\\t0x9cec: 0x61cd,\\n\\t\\t\\t\\t\\t\\t0x9ced: 0x61e6,\\n\\t\\t\\t\\t\\t\\t0x9cee: 0x61e3,\\n\\t\\t\\t\\t\\t\\t0x9cef: 0x61f6,\\n\\t\\t\\t\\t\\t\\t0x9cf0: 0x61fa,\\n\\t\\t\\t\\t\\t\\t0x9cf1: 0x61f4,\\n\\t\\t\\t\\t\\t\\t0x9cf2: 0x61ff,\\n\\t\\t\\t\\t\\t\\t0x9cf3: 0x61fd,\\n\\t\\t\\t\\t\\t\\t0x9cf4: 0x61fc,\\n\\t\\t\\t\\t\\t\\t0x9cf5: 0x61fe,\\n\\t\\t\\t\\t\\t\\t0x9cf6: 0x6200,\\n\\t\\t\\t\\t\\t\\t0x9cf7: 0x6208,\\n\\t\\t\\t\\t\\t\\t0x9cf8: 0x6209,\\n\\t\\t\\t\\t\\t\\t0x9cf9: 0x620d,\\n\\t\\t\\t\\t\\t\\t0x9cfa: 0x620c,\\n\\t\\t\\t\\t\\t\\t0x9cfb: 0x6214,\\n\\t\\t\\t\\t\\t\\t0x9cfc: 0x621b,\\n\\t\\t\\t\\t\\t\\t0x9d40: 0x621e,\\n\\t\\t\\t\\t\\t\\t0x9d41: 0x6221,\\n\\t\\t\\t\\t\\t\\t0x9d42: 0x622a,\\n\\t\\t\\t\\t\\t\\t0x9d43: 0x622e,\\n\\t\\t\\t\\t\\t\\t0x9d44: 0x6230,\\n\\t\\t\\t\\t\\t\\t0x9d45: 0x6232,\\n\\t\\t\\t\\t\\t\\t0x9d46: 0x6233,\\n\\t\\t\\t\\t\\t\\t0x9d47: 0x6241,\\n\\t\\t\\t\\t\\t\\t0x9d48: 0x624e,\\n\\t\\t\\t\\t\\t\\t0x9d49: 0x625e,\\n\\t\\t\\t\\t\\t\\t0x9d4a: 0x6263,\\n\\t\\t\\t\\t\\t\\t0x9d4b: 0x625b,\\n\\t\\t\\t\\t\\t\\t0x9d4c: 0x6260,\\n\\t\\t\\t\\t\\t\\t0x9d4d: 0x6268,\\n\\t\\t\\t\\t\\t\\t0x9d4e: 0x627c,\\n\\t\\t\\t\\t\\t\\t0x9d4f: 0x6282,\\n\\t\\t\\t\\t\\t\\t0x9d50: 0x6289,\\n\\t\\t\\t\\t\\t\\t0x9d51: 0x627e,\\n\\t\\t\\t\\t\\t\\t0x9d52: 0x6292,\\n\\t\\t\\t\\t\\t\\t0x9d53: 0x6293,\\n\\t\\t\\t\\t\\t\\t0x9d54: 0x6296,\\n\\t\\t\\t\\t\\t\\t0x9d55: 0x62d4,\\n\\t\\t\\t\\t\\t\\t0x9d56: 0x6283,\\n\\t\\t\\t\\t\\t\\t0x9d57: 0x6294,\\n\\t\\t\\t\\t\\t\\t0x9d58: 0x62d7,\\n\\t\\t\\t\\t\\t\\t0x9d59: 0x62d1,\\n\\t\\t\\t\\t\\t\\t0x9d5a: 0x62bb,\\n\\t\\t\\t\\t\\t\\t0x9d5b: 0x62cf,\\n\\t\\t\\t\\t\\t\\t0x9d5c: 0x62ff,\\n\\t\\t\\t\\t\\t\\t0x9d5d: 0x62c6,\\n\\t\\t\\t\\t\\t\\t0x9d5e: 0x64d4,\\n\\t\\t\\t\\t\\t\\t0x9d5f: 0x62c8,\\n\\t\\t\\t\\t\\t\\t0x9d60: 0x62dc,\\n\\t\\t\\t\\t\\t\\t0x9d61: 0x62cc,\\n\\t\\t\\t\\t\\t\\t0x9d62: 0x62ca,\\n\\t\\t\\t\\t\\t\\t0x9d63: 0x62c2,\\n\\t\\t\\t\\t\\t\\t0x9d64: 0x62c7,\\n\\t\\t\\t\\t\\t\\t0x9d65: 0x629b,\\n\\t\\t\\t\\t\\t\\t0x9d66: 0x62c9,\\n\\t\\t\\t\\t\\t\\t0x9d67: 0x630c,\\n\\t\\t\\t\\t\\t\\t0x9d68: 0x62ee,\\n\\t\\t\\t\\t\\t\\t0x9d69: 0x62f1,\\n\\t\\t\\t\\t\\t\\t0x9d6a: 0x6327,\\n\\t\\t\\t\\t\\t\\t0x9d6b: 0x6302,\\n\\t\\t\\t\\t\\t\\t0x9d6c: 0x6308,\\n\\t\\t\\t\\t\\t\\t0x9d6d: 0x62ef,\\n\\t\\t\\t\\t\\t\\t0x9d6e: 0x62f5,\\n\\t\\t\\t\\t\\t\\t0x9d6f: 0x6350,\\n\\t\\t\\t\\t\\t\\t0x9d70: 0x633e,\\n\\t\\t\\t\\t\\t\\t0x9d71: 0x634d,\\n\\t\\t\\t\\t\\t\\t0x9d72: 0x641c,\\n\\t\\t\\t\\t\\t\\t0x9d73: 0x634f,\\n\\t\\t\\t\\t\\t\\t0x9d74: 0x6396,\\n\\t\\t\\t\\t\\t\\t0x9d75: 0x638e,\\n\\t\\t\\t\\t\\t\\t0x9d76: 0x6380,\\n\\t\\t\\t\\t\\t\\t0x9d77: 0x63ab,\\n\\t\\t\\t\\t\\t\\t0x9d78: 0x6376,\\n\\t\\t\\t\\t\\t\\t0x9d79: 0x63a3,\\n\\t\\t\\t\\t\\t\\t0x9d7a: 0x638f,\\n\\t\\t\\t\\t\\t\\t0x9d7b: 0x6389,\\n\\t\\t\\t\\t\\t\\t0x9d7c: 0x639f,\\n\\t\\t\\t\\t\\t\\t0x9d7d: 0x63b5,\\n\\t\\t\\t\\t\\t\\t0x9d7e: 0x636b,\\n\\t\\t\\t\\t\\t\\t0x9d80: 0x6369,\\n\\t\\t\\t\\t\\t\\t0x9d81: 0x63be,\\n\\t\\t\\t\\t\\t\\t0x9d82: 0x63e9,\\n\\t\\t\\t\\t\\t\\t0x9d83: 0x63c0,\\n\\t\\t\\t\\t\\t\\t0x9d84: 0x63c6,\\n\\t\\t\\t\\t\\t\\t0x9d85: 0x63e3,\\n\\t\\t\\t\\t\\t\\t0x9d86: 0x63c9,\\n\\t\\t\\t\\t\\t\\t0x9d87: 0x63d2,\\n\\t\\t\\t\\t\\t\\t0x9d88: 0x63f6,\\n\\t\\t\\t\\t\\t\\t0x9d89: 0x63c4,\\n\\t\\t\\t\\t\\t\\t0x9d8a: 0x6416,\\n\\t\\t\\t\\t\\t\\t0x9d8b: 0x6434,\\n\\t\\t\\t\\t\\t\\t0x9d8c: 0x6406,\\n\\t\\t\\t\\t\\t\\t0x9d8d: 0x6413,\\n\\t\\t\\t\\t\\t\\t0x9d8e: 0x6426,\\n\\t\\t\\t\\t\\t\\t0x9d8f: 0x6436,\\n\\t\\t\\t\\t\\t\\t0x9d90: 0x651d,\\n\\t\\t\\t\\t\\t\\t0x9d91: 0x6417,\\n\\t\\t\\t\\t\\t\\t0x9d92: 0x6428,\\n\\t\\t\\t\\t\\t\\t0x9d93: 0x640f,\\n\\t\\t\\t\\t\\t\\t0x9d94: 0x6467,\\n\\t\\t\\t\\t\\t\\t0x9d95: 0x646f,\\n\\t\\t\\t\\t\\t\\t0x9d96: 0x6476,\\n\\t\\t\\t\\t\\t\\t0x9d97: 0x644e,\\n\\t\\t\\t\\t\\t\\t0x9d98: 0x652a,\\n\\t\\t\\t\\t\\t\\t0x9d99: 0x6495,\\n\\t\\t\\t\\t\\t\\t0x9d9a: 0x6493,\\n\\t\\t\\t\\t\\t\\t0x9d9b: 0x64a5,\\n\\t\\t\\t\\t\\t\\t0x9d9c: 0x64a9,\\n\\t\\t\\t\\t\\t\\t0x9d9d: 0x6488,\\n\\t\\t\\t\\t\\t\\t0x9d9e: 0x64bc,\\n\\t\\t\\t\\t\\t\\t0x9d9f: 0x64da,\\n\\t\\t\\t\\t\\t\\t0x9da0: 0x64d2,\\n\\t\\t\\t\\t\\t\\t0x9da1: 0x64c5,\\n\\t\\t\\t\\t\\t\\t0x9da2: 0x64c7,\\n\\t\\t\\t\\t\\t\\t0x9da3: 0x64bb,\\n\\t\\t\\t\\t\\t\\t0x9da4: 0x64d8,\\n\\t\\t\\t\\t\\t\\t0x9da5: 0x64c2,\\n\\t\\t\\t\\t\\t\\t0x9da6: 0x64f1,\\n\\t\\t\\t\\t\\t\\t0x9da7: 0x64e7,\\n\\t\\t\\t\\t\\t\\t0x9da8: 0x8209,\\n\\t\\t\\t\\t\\t\\t0x9da9: 0x64e0,\\n\\t\\t\\t\\t\\t\\t0x9daa: 0x64e1,\\n\\t\\t\\t\\t\\t\\t0x9dab: 0x62ac,\\n\\t\\t\\t\\t\\t\\t0x9dac: 0x64e3,\\n\\t\\t\\t\\t\\t\\t0x9dad: 0x64ef,\\n\\t\\t\\t\\t\\t\\t0x9dae: 0x652c,\\n\\t\\t\\t\\t\\t\\t0x9daf: 0x64f6,\\n\\t\\t\\t\\t\\t\\t0x9db0: 0x64f4,\\n\\t\\t\\t\\t\\t\\t0x9db1: 0x64f2,\\n\\t\\t\\t\\t\\t\\t0x9db2: 0x64fa,\\n\\t\\t\\t\\t\\t\\t0x9db3: 0x6500,\\n\\t\\t\\t\\t\\t\\t0x9db4: 0x64fd,\\n\\t\\t\\t\\t\\t\\t0x9db5: 0x6518,\\n\\t\\t\\t\\t\\t\\t0x9db6: 0x651c,\\n\\t\\t\\t\\t\\t\\t0x9db7: 0x6505,\\n\\t\\t\\t\\t\\t\\t0x9db8: 0x6524,\\n\\t\\t\\t\\t\\t\\t0x9db9: 0x6523,\\n\\t\\t\\t\\t\\t\\t0x9dba: 0x652b,\\n\\t\\t\\t\\t\\t\\t0x9dbb: 0x6534,\\n\\t\\t\\t\\t\\t\\t0x9dbc: 0x6535,\\n\\t\\t\\t\\t\\t\\t0x9dbd: 0x6537,\\n\\t\\t\\t\\t\\t\\t0x9dbe: 0x6536,\\n\\t\\t\\t\\t\\t\\t0x9dbf: 0x6538,\\n\\t\\t\\t\\t\\t\\t0x9dc0: 0x754b,\\n\\t\\t\\t\\t\\t\\t0x9dc1: 0x6548,\\n\\t\\t\\t\\t\\t\\t0x9dc2: 0x6556,\\n\\t\\t\\t\\t\\t\\t0x9dc3: 0x6555,\\n\\t\\t\\t\\t\\t\\t0x9dc4: 0x654d,\\n\\t\\t\\t\\t\\t\\t0x9dc5: 0x6558,\\n\\t\\t\\t\\t\\t\\t0x9dc6: 0x655e,\\n\\t\\t\\t\\t\\t\\t0x9dc7: 0x655d,\\n\\t\\t\\t\\t\\t\\t0x9dc8: 0x6572,\\n\\t\\t\\t\\t\\t\\t0x9dc9: 0x6578,\\n\\t\\t\\t\\t\\t\\t0x9dca: 0x6582,\\n\\t\\t\\t\\t\\t\\t0x9dcb: 0x6583,\\n\\t\\t\\t\\t\\t\\t0x9dcc: 0x8b8a,\\n\\t\\t\\t\\t\\t\\t0x9dcd: 0x659b,\\n\\t\\t\\t\\t\\t\\t0x9dce: 0x659f,\\n\\t\\t\\t\\t\\t\\t0x9dcf: 0x65ab,\\n\\t\\t\\t\\t\\t\\t0x9dd0: 0x65b7,\\n\\t\\t\\t\\t\\t\\t0x9dd1: 0x65c3,\\n\\t\\t\\t\\t\\t\\t0x9dd2: 0x65c6,\\n\\t\\t\\t\\t\\t\\t0x9dd3: 0x65c1,\\n\\t\\t\\t\\t\\t\\t0x9dd4: 0x65c4,\\n\\t\\t\\t\\t\\t\\t0x9dd5: 0x65cc,\\n\\t\\t\\t\\t\\t\\t0x9dd6: 0x65d2,\\n\\t\\t\\t\\t\\t\\t0x9dd7: 0x65db,\\n\\t\\t\\t\\t\\t\\t0x9dd8: 0x65d9,\\n\\t\\t\\t\\t\\t\\t0x9dd9: 0x65e0,\\n\\t\\t\\t\\t\\t\\t0x9dda: 0x65e1,\\n\\t\\t\\t\\t\\t\\t0x9ddb: 0x65f1,\\n\\t\\t\\t\\t\\t\\t0x9ddc: 0x6772,\\n\\t\\t\\t\\t\\t\\t0x9ddd: 0x660a,\\n\\t\\t\\t\\t\\t\\t0x9dde: 0x6603,\\n\\t\\t\\t\\t\\t\\t0x9ddf: 0x65fb,\\n\\t\\t\\t\\t\\t\\t0x9de0: 0x6773,\\n\\t\\t\\t\\t\\t\\t0x9de1: 0x6635,\\n\\t\\t\\t\\t\\t\\t0x9de2: 0x6636,\\n\\t\\t\\t\\t\\t\\t0x9de3: 0x6634,\\n\\t\\t\\t\\t\\t\\t0x9de4: 0x661c,\\n\\t\\t\\t\\t\\t\\t0x9de5: 0x664f,\\n\\t\\t\\t\\t\\t\\t0x9de6: 0x6644,\\n\\t\\t\\t\\t\\t\\t0x9de7: 0x6649,\\n\\t\\t\\t\\t\\t\\t0x9de8: 0x6641,\\n\\t\\t\\t\\t\\t\\t0x9de9: 0x665e,\\n\\t\\t\\t\\t\\t\\t0x9dea: 0x665d,\\n\\t\\t\\t\\t\\t\\t0x9deb: 0x6664,\\n\\t\\t\\t\\t\\t\\t0x9dec: 0x6667,\\n\\t\\t\\t\\t\\t\\t0x9ded: 0x6668,\\n\\t\\t\\t\\t\\t\\t0x9dee: 0x665f,\\n\\t\\t\\t\\t\\t\\t0x9def: 0x6662,\\n\\t\\t\\t\\t\\t\\t0x9df0: 0x6670,\\n\\t\\t\\t\\t\\t\\t0x9df1: 0x6683,\\n\\t\\t\\t\\t\\t\\t0x9df2: 0x6688,\\n\\t\\t\\t\\t\\t\\t0x9df3: 0x668e,\\n\\t\\t\\t\\t\\t\\t0x9df4: 0x6689,\\n\\t\\t\\t\\t\\t\\t0x9df5: 0x6684,\\n\\t\\t\\t\\t\\t\\t0x9df6: 0x6698,\\n\\t\\t\\t\\t\\t\\t0x9df7: 0x669d,\\n\\t\\t\\t\\t\\t\\t0x9df8: 0x66c1,\\n\\t\\t\\t\\t\\t\\t0x9df9: 0x66b9,\\n\\t\\t\\t\\t\\t\\t0x9dfa: 0x66c9,\\n\\t\\t\\t\\t\\t\\t0x9dfb: 0x66be,\\n\\t\\t\\t\\t\\t\\t0x9dfc: 0x66bc,\\n\\t\\t\\t\\t\\t\\t0x9e40: 0x66c4,\\n\\t\\t\\t\\t\\t\\t0x9e41: 0x66b8,\\n\\t\\t\\t\\t\\t\\t0x9e42: 0x66d6,\\n\\t\\t\\t\\t\\t\\t0x9e43: 0x66da,\\n\\t\\t\\t\\t\\t\\t0x9e44: 0x66e0,\\n\\t\\t\\t\\t\\t\\t0x9e45: 0x663f,\\n\\t\\t\\t\\t\\t\\t0x9e46: 0x66e6,\\n\\t\\t\\t\\t\\t\\t0x9e47: 0x66e9,\\n\\t\\t\\t\\t\\t\\t0x9e48: 0x66f0,\\n\\t\\t\\t\\t\\t\\t0x9e49: 0x66f5,\\n\\t\\t\\t\\t\\t\\t0x9e4a: 0x66f7,\\n\\t\\t\\t\\t\\t\\t0x9e4b: 0x670f,\\n\\t\\t\\t\\t\\t\\t0x9e4c: 0x6716,\\n\\t\\t\\t\\t\\t\\t0x9e4d: 0x671e,\\n\\t\\t\\t\\t\\t\\t0x9e4e: 0x6726,\\n\\t\\t\\t\\t\\t\\t0x9e4f: 0x6727,\\n\\t\\t\\t\\t\\t\\t0x9e50: 0x9738,\\n\\t\\t\\t\\t\\t\\t0x9e51: 0x672e,\\n\\t\\t\\t\\t\\t\\t0x9e52: 0x673f,\\n\\t\\t\\t\\t\\t\\t0x9e53: 0x6736,\\n\\t\\t\\t\\t\\t\\t0x9e54: 0x6741,\\n\\t\\t\\t\\t\\t\\t0x9e55: 0x6738,\\n\\t\\t\\t\\t\\t\\t0x9e56: 0x6737,\\n\\t\\t\\t\\t\\t\\t0x9e57: 0x6746,\\n\\t\\t\\t\\t\\t\\t0x9e58: 0x675e,\\n\\t\\t\\t\\t\\t\\t0x9e59: 0x6760,\\n\\t\\t\\t\\t\\t\\t0x9e5a: 0x6759,\\n\\t\\t\\t\\t\\t\\t0x9e5b: 0x6763,\\n\\t\\t\\t\\t\\t\\t0x9e5c: 0x6764,\\n\\t\\t\\t\\t\\t\\t0x9e5d: 0x6789,\\n\\t\\t\\t\\t\\t\\t0x9e5e: 0x6770,\\n\\t\\t\\t\\t\\t\\t0x9e5f: 0x67a9,\\n\\t\\t\\t\\t\\t\\t0x9e60: 0x677c,\\n\\t\\t\\t\\t\\t\\t0x9e61: 0x676a,\\n\\t\\t\\t\\t\\t\\t0x9e62: 0x678c,\\n\\t\\t\\t\\t\\t\\t0x9e63: 0x678b,\\n\\t\\t\\t\\t\\t\\t0x9e64: 0x67a6,\\n\\t\\t\\t\\t\\t\\t0x9e65: 0x67a1,\\n\\t\\t\\t\\t\\t\\t0x9e66: 0x6785,\\n\\t\\t\\t\\t\\t\\t0x9e67: 0x67b7,\\n\\t\\t\\t\\t\\t\\t0x9e68: 0x67ef,\\n\\t\\t\\t\\t\\t\\t0x9e69: 0x67b4,\\n\\t\\t\\t\\t\\t\\t0x9e6a: 0x67ec,\\n\\t\\t\\t\\t\\t\\t0x9e6b: 0x67b3,\\n\\t\\t\\t\\t\\t\\t0x9e6c: 0x67e9,\\n\\t\\t\\t\\t\\t\\t0x9e6d: 0x67b8,\\n\\t\\t\\t\\t\\t\\t0x9e6e: 0x67e4,\\n\\t\\t\\t\\t\\t\\t0x9e6f: 0x67de,\\n\\t\\t\\t\\t\\t\\t0x9e70: 0x67dd,\\n\\t\\t\\t\\t\\t\\t0x9e71: 0x67e2,\\n\\t\\t\\t\\t\\t\\t0x9e72: 0x67ee,\\n\\t\\t\\t\\t\\t\\t0x9e73: 0x67b9,\\n\\t\\t\\t\\t\\t\\t0x9e74: 0x67ce,\\n\\t\\t\\t\\t\\t\\t0x9e75: 0x67c6,\\n\\t\\t\\t\\t\\t\\t0x9e76: 0x67e7,\\n\\t\\t\\t\\t\\t\\t0x9e77: 0x6a9c,\\n\\t\\t\\t\\t\\t\\t0x9e78: 0x681e,\\n\\t\\t\\t\\t\\t\\t0x9e79: 0x6846,\\n\\t\\t\\t\\t\\t\\t0x9e7a: 0x6829,\\n\\t\\t\\t\\t\\t\\t0x9e7b: 0x6840,\\n\\t\\t\\t\\t\\t\\t0x9e7c: 0x684d,\\n\\t\\t\\t\\t\\t\\t0x9e7d: 0x6832,\\n\\t\\t\\t\\t\\t\\t0x9e7e: 0x684e,\\n\\t\\t\\t\\t\\t\\t0x9e80: 0x68b3,\\n\\t\\t\\t\\t\\t\\t0x9e81: 0x682b,\\n\\t\\t\\t\\t\\t\\t0x9e82: 0x6859,\\n\\t\\t\\t\\t\\t\\t0x9e83: 0x6863,\\n\\t\\t\\t\\t\\t\\t0x9e84: 0x6877,\\n\\t\\t\\t\\t\\t\\t0x9e85: 0x687f,\\n\\t\\t\\t\\t\\t\\t0x9e86: 0x689f,\\n\\t\\t\\t\\t\\t\\t0x9e87: 0x688f,\\n\\t\\t\\t\\t\\t\\t0x9e88: 0x68ad,\\n\\t\\t\\t\\t\\t\\t0x9e89: 0x6894,\\n\\t\\t\\t\\t\\t\\t0x9e8a: 0x689d,\\n\\t\\t\\t\\t\\t\\t0x9e8b: 0x689b,\\n\\t\\t\\t\\t\\t\\t0x9e8c: 0x6883,\\n\\t\\t\\t\\t\\t\\t0x9e8d: 0x6aae,\\n\\t\\t\\t\\t\\t\\t0x9e8e: 0x68b9,\\n\\t\\t\\t\\t\\t\\t0x9e8f: 0x6874,\\n\\t\\t\\t\\t\\t\\t0x9e90: 0x68b5,\\n\\t\\t\\t\\t\\t\\t0x9e91: 0x68a0,\\n\\t\\t\\t\\t\\t\\t0x9e92: 0x68ba,\\n\\t\\t\\t\\t\\t\\t0x9e93: 0x690f,\\n\\t\\t\\t\\t\\t\\t0x9e94: 0x688d,\\n\\t\\t\\t\\t\\t\\t0x9e95: 0x687e,\\n\\t\\t\\t\\t\\t\\t0x9e96: 0x6901,\\n\\t\\t\\t\\t\\t\\t0x9e97: 0x68ca,\\n\\t\\t\\t\\t\\t\\t0x9e98: 0x6908,\\n\\t\\t\\t\\t\\t\\t0x9e99: 0x68d8,\\n\\t\\t\\t\\t\\t\\t0x9e9a: 0x6922,\\n\\t\\t\\t\\t\\t\\t0x9e9b: 0x6926,\\n\\t\\t\\t\\t\\t\\t0x9e9c: 0x68e1,\\n\\t\\t\\t\\t\\t\\t0x9e9d: 0x690c,\\n\\t\\t\\t\\t\\t\\t0x9e9e: 0x68cd,\\n\\t\\t\\t\\t\\t\\t0x9e9f: 0x68d4,\\n\\t\\t\\t\\t\\t\\t0x9ea0: 0x68e7,\\n\\t\\t\\t\\t\\t\\t0x9ea1: 0x68d5,\\n\\t\\t\\t\\t\\t\\t0x9ea2: 0x6936,\\n\\t\\t\\t\\t\\t\\t0x9ea3: 0x6912,\\n\\t\\t\\t\\t\\t\\t0x9ea4: 0x6904,\\n\\t\\t\\t\\t\\t\\t0x9ea5: 0x68d7,\\n\\t\\t\\t\\t\\t\\t0x9ea6: 0x68e3,\\n\\t\\t\\t\\t\\t\\t0x9ea7: 0x6925,\\n\\t\\t\\t\\t\\t\\t0x9ea8: 0x68f9,\\n\\t\\t\\t\\t\\t\\t0x9ea9: 0x68e0,\\n\\t\\t\\t\\t\\t\\t0x9eaa: 0x68ef,\\n\\t\\t\\t\\t\\t\\t0x9eab: 0x6928,\\n\\t\\t\\t\\t\\t\\t0x9eac: 0x692a,\\n\\t\\t\\t\\t\\t\\t0x9ead: 0x691a,\\n\\t\\t\\t\\t\\t\\t0x9eae: 0x6923,\\n\\t\\t\\t\\t\\t\\t0x9eaf: 0x6921,\\n\\t\\t\\t\\t\\t\\t0x9eb0: 0x68c6,\\n\\t\\t\\t\\t\\t\\t0x9eb1: 0x6979,\\n\\t\\t\\t\\t\\t\\t0x9eb2: 0x6977,\\n\\t\\t\\t\\t\\t\\t0x9eb3: 0x695c,\\n\\t\\t\\t\\t\\t\\t0x9eb4: 0x6978,\\n\\t\\t\\t\\t\\t\\t0x9eb5: 0x696b,\\n\\t\\t\\t\\t\\t\\t0x9eb6: 0x6954,\\n\\t\\t\\t\\t\\t\\t0x9eb7: 0x697e,\\n\\t\\t\\t\\t\\t\\t0x9eb8: 0x696e,\\n\\t\\t\\t\\t\\t\\t0x9eb9: 0x6939,\\n\\t\\t\\t\\t\\t\\t0x9eba: 0x6974,\\n\\t\\t\\t\\t\\t\\t0x9ebb: 0x693d,\\n\\t\\t\\t\\t\\t\\t0x9ebc: 0x6959,\\n\\t\\t\\t\\t\\t\\t0x9ebd: 0x6930,\\n\\t\\t\\t\\t\\t\\t0x9ebe: 0x6961,\\n\\t\\t\\t\\t\\t\\t0x9ebf: 0x695e,\\n\\t\\t\\t\\t\\t\\t0x9ec0: 0x695d,\\n\\t\\t\\t\\t\\t\\t0x9ec1: 0x6981,\\n\\t\\t\\t\\t\\t\\t0x9ec2: 0x696a,\\n\\t\\t\\t\\t\\t\\t0x9ec3: 0x69b2,\\n\\t\\t\\t\\t\\t\\t0x9ec4: 0x69ae,\\n\\t\\t\\t\\t\\t\\t0x9ec5: 0x69d0,\\n\\t\\t\\t\\t\\t\\t0x9ec6: 0x69bf,\\n\\t\\t\\t\\t\\t\\t0x9ec7: 0x69c1,\\n\\t\\t\\t\\t\\t\\t0x9ec8: 0x69d3,\\n\\t\\t\\t\\t\\t\\t0x9ec9: 0x69be,\\n\\t\\t\\t\\t\\t\\t0x9eca: 0x69ce,\\n\\t\\t\\t\\t\\t\\t0x9ecb: 0x5be8,\\n\\t\\t\\t\\t\\t\\t0x9ecc: 0x69ca,\\n\\t\\t\\t\\t\\t\\t0x9ecd: 0x69dd,\\n\\t\\t\\t\\t\\t\\t0x9ece: 0x69bb,\\n\\t\\t\\t\\t\\t\\t0x9ecf: 0x69c3,\\n\\t\\t\\t\\t\\t\\t0x9ed0: 0x69a7,\\n\\t\\t\\t\\t\\t\\t0x9ed1: 0x6a2e,\\n\\t\\t\\t\\t\\t\\t0x9ed2: 0x6991,\\n\\t\\t\\t\\t\\t\\t0x9ed3: 0x69a0,\\n\\t\\t\\t\\t\\t\\t0x9ed4: 0x699c,\\n\\t\\t\\t\\t\\t\\t0x9ed5: 0x6995,\\n\\t\\t\\t\\t\\t\\t0x9ed6: 0x69b4,\\n\\t\\t\\t\\t\\t\\t0x9ed7: 0x69de,\\n\\t\\t\\t\\t\\t\\t0x9ed8: 0x69e8,\\n\\t\\t\\t\\t\\t\\t0x9ed9: 0x6a02,\\n\\t\\t\\t\\t\\t\\t0x9eda: 0x6a1b,\\n\\t\\t\\t\\t\\t\\t0x9edb: 0x69ff,\\n\\t\\t\\t\\t\\t\\t0x9edc: 0x6b0a,\\n\\t\\t\\t\\t\\t\\t0x9edd: 0x69f9,\\n\\t\\t\\t\\t\\t\\t0x9ede: 0x69f2,\\n\\t\\t\\t\\t\\t\\t0x9edf: 0x69e7,\\n\\t\\t\\t\\t\\t\\t0x9ee0: 0x6a05,\\n\\t\\t\\t\\t\\t\\t0x9ee1: 0x69b1,\\n\\t\\t\\t\\t\\t\\t0x9ee2: 0x6a1e,\\n\\t\\t\\t\\t\\t\\t0x9ee3: 0x69ed,\\n\\t\\t\\t\\t\\t\\t0x9ee4: 0x6a14,\\n\\t\\t\\t\\t\\t\\t0x9ee5: 0x69eb,\\n\\t\\t\\t\\t\\t\\t0x9ee6: 0x6a0a,\\n\\t\\t\\t\\t\\t\\t0x9ee7: 0x6a12,\\n\\t\\t\\t\\t\\t\\t0x9ee8: 0x6ac1,\\n\\t\\t\\t\\t\\t\\t0x9ee9: 0x6a23,\\n\\t\\t\\t\\t\\t\\t0x9eea: 0x6a13,\\n\\t\\t\\t\\t\\t\\t0x9eeb: 0x6a44,\\n\\t\\t\\t\\t\\t\\t0x9eec: 0x6a0c,\\n\\t\\t\\t\\t\\t\\t0x9eed: 0x6a72,\\n\\t\\t\\t\\t\\t\\t0x9eee: 0x6a36,\\n\\t\\t\\t\\t\\t\\t0x9eef: 0x6a78,\\n\\t\\t\\t\\t\\t\\t0x9ef0: 0x6a47,\\n\\t\\t\\t\\t\\t\\t0x9ef1: 0x6a62,\\n\\t\\t\\t\\t\\t\\t0x9ef2: 0x6a59,\\n\\t\\t\\t\\t\\t\\t0x9ef3: 0x6a66,\\n\\t\\t\\t\\t\\t\\t0x9ef4: 0x6a48,\\n\\t\\t\\t\\t\\t\\t0x9ef5: 0x6a38,\\n\\t\\t\\t\\t\\t\\t0x9ef6: 0x6a22,\\n\\t\\t\\t\\t\\t\\t0x9ef7: 0x6a90,\\n\\t\\t\\t\\t\\t\\t0x9ef8: 0x6a8d,\\n\\t\\t\\t\\t\\t\\t0x9ef9: 0x6aa0,\\n\\t\\t\\t\\t\\t\\t0x9efa: 0x6a84,\\n\\t\\t\\t\\t\\t\\t0x9efb: 0x6aa2,\\n\\t\\t\\t\\t\\t\\t0x9efc: 0x6aa3,\\n\\t\\t\\t\\t\\t\\t0x9f40: 0x6a97,\\n\\t\\t\\t\\t\\t\\t0x9f41: 0x8617,\\n\\t\\t\\t\\t\\t\\t0x9f42: 0x6abb,\\n\\t\\t\\t\\t\\t\\t0x9f43: 0x6ac3,\\n\\t\\t\\t\\t\\t\\t0x9f44: 0x6ac2,\\n\\t\\t\\t\\t\\t\\t0x9f45: 0x6ab8,\\n\\t\\t\\t\\t\\t\\t0x9f46: 0x6ab3,\\n\\t\\t\\t\\t\\t\\t0x9f47: 0x6aac,\\n\\t\\t\\t\\t\\t\\t0x9f48: 0x6ade,\\n\\t\\t\\t\\t\\t\\t0x9f49: 0x6ad1,\\n\\t\\t\\t\\t\\t\\t0x9f4a: 0x6adf,\\n\\t\\t\\t\\t\\t\\t0x9f4b: 0x6aaa,\\n\\t\\t\\t\\t\\t\\t0x9f4c: 0x6ada,\\n\\t\\t\\t\\t\\t\\t0x9f4d: 0x6aea,\\n\\t\\t\\t\\t\\t\\t0x9f4e: 0x6afb,\\n\\t\\t\\t\\t\\t\\t0x9f4f: 0x6b05,\\n\\t\\t\\t\\t\\t\\t0x9f50: 0x8616,\\n\\t\\t\\t\\t\\t\\t0x9f51: 0x6afa,\\n\\t\\t\\t\\t\\t\\t0x9f52: 0x6b12,\\n\\t\\t\\t\\t\\t\\t0x9f53: 0x6b16,\\n\\t\\t\\t\\t\\t\\t0x9f54: 0x9b31,\\n\\t\\t\\t\\t\\t\\t0x9f55: 0x6b1f,\\n\\t\\t\\t\\t\\t\\t0x9f56: 0x6b38,\\n\\t\\t\\t\\t\\t\\t0x9f57: 0x6b37,\\n\\t\\t\\t\\t\\t\\t0x9f58: 0x76dc,\\n\\t\\t\\t\\t\\t\\t0x9f59: 0x6b39,\\n\\t\\t\\t\\t\\t\\t0x9f5a: 0x98ee,\\n\\t\\t\\t\\t\\t\\t0x9f5b: 0x6b47,\\n\\t\\t\\t\\t\\t\\t0x9f5c: 0x6b43,\\n\\t\\t\\t\\t\\t\\t0x9f5d: 0x6b49,\\n\\t\\t\\t\\t\\t\\t0x9f5e: 0x6b50,\\n\\t\\t\\t\\t\\t\\t0x9f5f: 0x6b59,\\n\\t\\t\\t\\t\\t\\t0x9f60: 0x6b54,\\n\\t\\t\\t\\t\\t\\t0x9f61: 0x6b5b,\\n\\t\\t\\t\\t\\t\\t0x9f62: 0x6b5f,\\n\\t\\t\\t\\t\\t\\t0x9f63: 0x6b61,\\n\\t\\t\\t\\t\\t\\t0x9f64: 0x6b78,\\n\\t\\t\\t\\t\\t\\t0x9f65: 0x6b79,\\n\\t\\t\\t\\t\\t\\t0x9f66: 0x6b7f,\\n\\t\\t\\t\\t\\t\\t0x9f67: 0x6b80,\\n\\t\\t\\t\\t\\t\\t0x9f68: 0x6b84,\\n\\t\\t\\t\\t\\t\\t0x9f69: 0x6b83,\\n\\t\\t\\t\\t\\t\\t0x9f6a: 0x6b8d,\\n\\t\\t\\t\\t\\t\\t0x9f6b: 0x6b98,\\n\\t\\t\\t\\t\\t\\t0x9f6c: 0x6b95,\\n\\t\\t\\t\\t\\t\\t0x9f6d: 0x6b9e,\\n\\t\\t\\t\\t\\t\\t0x9f6e: 0x6ba4,\\n\\t\\t\\t\\t\\t\\t0x9f6f: 0x6baa,\\n\\t\\t\\t\\t\\t\\t0x9f70: 0x6bab,\\n\\t\\t\\t\\t\\t\\t0x9f71: 0x6baf,\\n\\t\\t\\t\\t\\t\\t0x9f72: 0x6bb2,\\n\\t\\t\\t\\t\\t\\t0x9f73: 0x6bb1,\\n\\t\\t\\t\\t\\t\\t0x9f74: 0x6bb3,\\n\\t\\t\\t\\t\\t\\t0x9f75: 0x6bb7,\\n\\t\\t\\t\\t\\t\\t0x9f76: 0x6bbc,\\n\\t\\t\\t\\t\\t\\t0x9f77: 0x6bc6,\\n\\t\\t\\t\\t\\t\\t0x9f78: 0x6bcb,\\n\\t\\t\\t\\t\\t\\t0x9f79: 0x6bd3,\\n\\t\\t\\t\\t\\t\\t0x9f7a: 0x6bdf,\\n\\t\\t\\t\\t\\t\\t0x9f7b: 0x6bec,\\n\\t\\t\\t\\t\\t\\t0x9f7c: 0x6beb,\\n\\t\\t\\t\\t\\t\\t0x9f7d: 0x6bf3,\\n\\t\\t\\t\\t\\t\\t0x9f7e: 0x6bef,\\n\\t\\t\\t\\t\\t\\t0x9f80: 0x9ebe,\\n\\t\\t\\t\\t\\t\\t0x9f81: 0x6c08,\\n\\t\\t\\t\\t\\t\\t0x9f82: 0x6c13,\\n\\t\\t\\t\\t\\t\\t0x9f83: 0x6c14,\\n\\t\\t\\t\\t\\t\\t0x9f84: 0x6c1b,\\n\\t\\t\\t\\t\\t\\t0x9f85: 0x6c24,\\n\\t\\t\\t\\t\\t\\t0x9f86: 0x6c23,\\n\\t\\t\\t\\t\\t\\t0x9f87: 0x6c5e,\\n\\t\\t\\t\\t\\t\\t0x9f88: 0x6c55,\\n\\t\\t\\t\\t\\t\\t0x9f89: 0x6c62,\\n\\t\\t\\t\\t\\t\\t0x9f8a: 0x6c6a,\\n\\t\\t\\t\\t\\t\\t0x9f8b: 0x6c82,\\n\\t\\t\\t\\t\\t\\t0x9f8c: 0x6c8d,\\n\\t\\t\\t\\t\\t\\t0x9f8d: 0x6c9a,\\n\\t\\t\\t\\t\\t\\t0x9f8e: 0x6c81,\\n\\t\\t\\t\\t\\t\\t0x9f8f: 0x6c9b,\\n\\t\\t\\t\\t\\t\\t0x9f90: 0x6c7e,\\n\\t\\t\\t\\t\\t\\t0x9f91: 0x6c68,\\n\\t\\t\\t\\t\\t\\t0x9f92: 0x6c73,\\n\\t\\t\\t\\t\\t\\t0x9f93: 0x6c92,\\n\\t\\t\\t\\t\\t\\t0x9f94: 0x6c90,\\n\\t\\t\\t\\t\\t\\t0x9f95: 0x6cc4,\\n\\t\\t\\t\\t\\t\\t0x9f96: 0x6cf1,\\n\\t\\t\\t\\t\\t\\t0x9f97: 0x6cd3,\\n\\t\\t\\t\\t\\t\\t0x9f98: 0x6cbd,\\n\\t\\t\\t\\t\\t\\t0x9f99: 0x6cd7,\\n\\t\\t\\t\\t\\t\\t0x9f9a: 0x6cc5,\\n\\t\\t\\t\\t\\t\\t0x9f9b: 0x6cdd,\\n\\t\\t\\t\\t\\t\\t0x9f9c: 0x6cae,\\n\\t\\t\\t\\t\\t\\t0x9f9d: 0x6cb1,\\n\\t\\t\\t\\t\\t\\t0x9f9e: 0x6cbe,\\n\\t\\t\\t\\t\\t\\t0x9f9f: 0x6cba,\\n\\t\\t\\t\\t\\t\\t0x9fa0: 0x6cdb,\\n\\t\\t\\t\\t\\t\\t0x9fa1: 0x6cef,\\n\\t\\t\\t\\t\\t\\t0x9fa2: 0x6cd9,\\n\\t\\t\\t\\t\\t\\t0x9fa3: 0x6cea,\\n\\t\\t\\t\\t\\t\\t0x9fa4: 0x6d1f,\\n\\t\\t\\t\\t\\t\\t0x9fa5: 0x884d,\\n\\t\\t\\t\\t\\t\\t0x9fa6: 0x6d36,\\n\\t\\t\\t\\t\\t\\t0x9fa7: 0x6d2b,\\n\\t\\t\\t\\t\\t\\t0x9fa8: 0x6d3d,\\n\\t\\t\\t\\t\\t\\t0x9fa9: 0x6d38,\\n\\t\\t\\t\\t\\t\\t0x9faa: 0x6d19,\\n\\t\\t\\t\\t\\t\\t0x9fab: 0x6d35,\\n\\t\\t\\t\\t\\t\\t0x9fac: 0x6d33,\\n\\t\\t\\t\\t\\t\\t0x9fad: 0x6d12,\\n\\t\\t\\t\\t\\t\\t0x9fae: 0x6d0c,\\n\\t\\t\\t\\t\\t\\t0x9faf: 0x6d63,\\n\\t\\t\\t\\t\\t\\t0x9fb0: 0x6d93,\\n\\t\\t\\t\\t\\t\\t0x9fb1: 0x6d64,\\n\\t\\t\\t\\t\\t\\t0x9fb2: 0x6d5a,\\n\\t\\t\\t\\t\\t\\t0x9fb3: 0x6d79,\\n\\t\\t\\t\\t\\t\\t0x9fb4: 0x6d59,\\n\\t\\t\\t\\t\\t\\t0x9fb5: 0x6d8e,\\n\\t\\t\\t\\t\\t\\t0x9fb6: 0x6d95,\\n\\t\\t\\t\\t\\t\\t0x9fb7: 0x6fe4,\\n\\t\\t\\t\\t\\t\\t0x9fb8: 0x6d85,\\n\\t\\t\\t\\t\\t\\t0x9fb9: 0x6df9,\\n\\t\\t\\t\\t\\t\\t0x9fba: 0x6e15,\\n\\t\\t\\t\\t\\t\\t0x9fbb: 0x6e0a,\\n\\t\\t\\t\\t\\t\\t0x9fbc: 0x6db5,\\n\\t\\t\\t\\t\\t\\t0x9fbd: 0x6dc7,\\n\\t\\t\\t\\t\\t\\t0x9fbe: 0x6de6,\\n\\t\\t\\t\\t\\t\\t0x9fbf: 0x6db8,\\n\\t\\t\\t\\t\\t\\t0x9fc0: 0x6dc6,\\n\\t\\t\\t\\t\\t\\t0x9fc1: 0x6dec,\\n\\t\\t\\t\\t\\t\\t0x9fc2: 0x6dde,\\n\\t\\t\\t\\t\\t\\t0x9fc3: 0x6dcc,\\n\\t\\t\\t\\t\\t\\t0x9fc4: 0x6de8,\\n\\t\\t\\t\\t\\t\\t0x9fc5: 0x6dd2,\\n\\t\\t\\t\\t\\t\\t0x9fc6: 0x6dc5,\\n\\t\\t\\t\\t\\t\\t0x9fc7: 0x6dfa,\\n\\t\\t\\t\\t\\t\\t0x9fc8: 0x6dd9,\\n\\t\\t\\t\\t\\t\\t0x9fc9: 0x6de4,\\n\\t\\t\\t\\t\\t\\t0x9fca: 0x6dd5,\\n\\t\\t\\t\\t\\t\\t0x9fcb: 0x6dea,\\n\\t\\t\\t\\t\\t\\t0x9fcc: 0x6dee,\\n\\t\\t\\t\\t\\t\\t0x9fcd: 0x6e2d,\\n\\t\\t\\t\\t\\t\\t0x9fce: 0x6e6e,\\n\\t\\t\\t\\t\\t\\t0x9fcf: 0x6e2e,\\n\\t\\t\\t\\t\\t\\t0x9fd0: 0x6e19,\\n\\t\\t\\t\\t\\t\\t0x9fd1: 0x6e72,\\n\\t\\t\\t\\t\\t\\t0x9fd2: 0x6e5f,\\n\\t\\t\\t\\t\\t\\t0x9fd3: 0x6e3e,\\n\\t\\t\\t\\t\\t\\t0x9fd4: 0x6e23,\\n\\t\\t\\t\\t\\t\\t0x9fd5: 0x6e6b,\\n\\t\\t\\t\\t\\t\\t0x9fd6: 0x6e2b,\\n\\t\\t\\t\\t\\t\\t0x9fd7: 0x6e76,\\n\\t\\t\\t\\t\\t\\t0x9fd8: 0x6e4d,\\n\\t\\t\\t\\t\\t\\t0x9fd9: 0x6e1f,\\n\\t\\t\\t\\t\\t\\t0x9fda: 0x6e43,\\n\\t\\t\\t\\t\\t\\t0x9fdb: 0x6e3a,\\n\\t\\t\\t\\t\\t\\t0x9fdc: 0x6e4e,\\n\\t\\t\\t\\t\\t\\t0x9fdd: 0x6e24,\\n\\t\\t\\t\\t\\t\\t0x9fde: 0x6eff,\\n\\t\\t\\t\\t\\t\\t0x9fdf: 0x6e1d,\\n\\t\\t\\t\\t\\t\\t0x9fe0: 0x6e38,\\n\\t\\t\\t\\t\\t\\t0x9fe1: 0x6e82,\\n\\t\\t\\t\\t\\t\\t0x9fe2: 0x6eaa,\\n\\t\\t\\t\\t\\t\\t0x9fe3: 0x6e98,\\n\\t\\t\\t\\t\\t\\t0x9fe4: 0x6ec9,\\n\\t\\t\\t\\t\\t\\t0x9fe5: 0x6eb7,\\n\\t\\t\\t\\t\\t\\t0x9fe6: 0x6ed3,\\n\\t\\t\\t\\t\\t\\t0x9fe7: 0x6ebd,\\n\\t\\t\\t\\t\\t\\t0x9fe8: 0x6eaf,\\n\\t\\t\\t\\t\\t\\t0x9fe9: 0x6ec4,\\n\\t\\t\\t\\t\\t\\t0x9fea: 0x6eb2,\\n\\t\\t\\t\\t\\t\\t0x9feb: 0x6ed4,\\n\\t\\t\\t\\t\\t\\t0x9fec: 0x6ed5,\\n\\t\\t\\t\\t\\t\\t0x9fed: 0x6e8f,\\n\\t\\t\\t\\t\\t\\t0x9fee: 0x6ea5,\\n\\t\\t\\t\\t\\t\\t0x9fef: 0x6ec2,\\n\\t\\t\\t\\t\\t\\t0x9ff0: 0x6e9f,\\n\\t\\t\\t\\t\\t\\t0x9ff1: 0x6f41,\\n\\t\\t\\t\\t\\t\\t0x9ff2: 0x6f11,\\n\\t\\t\\t\\t\\t\\t0x9ff3: 0x704c,\\n\\t\\t\\t\\t\\t\\t0x9ff4: 0x6eec,\\n\\t\\t\\t\\t\\t\\t0x9ff5: 0x6ef8,\\n\\t\\t\\t\\t\\t\\t0x9ff6: 0x6efe,\\n\\t\\t\\t\\t\\t\\t0x9ff7: 0x6f3f,\\n\\t\\t\\t\\t\\t\\t0x9ff8: 0x6ef2,\\n\\t\\t\\t\\t\\t\\t0x9ff9: 0x6f31,\\n\\t\\t\\t\\t\\t\\t0x9ffa: 0x6eef,\\n\\t\\t\\t\\t\\t\\t0x9ffb: 0x6f32,\\n\\t\\t\\t\\t\\t\\t0x9ffc: 0x6ecc,\\n\\t\\t\\t\\t\\t\\t0xa1: 0xff61,\\n\\t\\t\\t\\t\\t\\t0xa2: 0xff62,\\n\\t\\t\\t\\t\\t\\t0xa3: 0xff63,\\n\\t\\t\\t\\t\\t\\t0xa4: 0xff64,\\n\\t\\t\\t\\t\\t\\t0xa5: 0xff65,\\n\\t\\t\\t\\t\\t\\t0xa6: 0xff66,\\n\\t\\t\\t\\t\\t\\t0xa7: 0xff67,\\n\\t\\t\\t\\t\\t\\t0xa8: 0xff68,\\n\\t\\t\\t\\t\\t\\t0xa9: 0xff69,\\n\\t\\t\\t\\t\\t\\t0xaa: 0xff6a,\\n\\t\\t\\t\\t\\t\\t0xab: 0xff6b,\\n\\t\\t\\t\\t\\t\\t0xac: 0xff6c,\\n\\t\\t\\t\\t\\t\\t0xad: 0xff6d,\\n\\t\\t\\t\\t\\t\\t0xae: 0xff6e,\\n\\t\\t\\t\\t\\t\\t0xaf: 0xff6f,\\n\\t\\t\\t\\t\\t\\t0xb0: 0xff70,\\n\\t\\t\\t\\t\\t\\t0xb1: 0xff71,\\n\\t\\t\\t\\t\\t\\t0xb2: 0xff72,\\n\\t\\t\\t\\t\\t\\t0xb3: 0xff73,\\n\\t\\t\\t\\t\\t\\t0xb4: 0xff74,\\n\\t\\t\\t\\t\\t\\t0xb5: 0xff75,\\n\\t\\t\\t\\t\\t\\t0xb6: 0xff76,\\n\\t\\t\\t\\t\\t\\t0xb7: 0xff77,\\n\\t\\t\\t\\t\\t\\t0xb8: 0xff78,\\n\\t\\t\\t\\t\\t\\t0xb9: 0xff79,\\n\\t\\t\\t\\t\\t\\t0xba: 0xff7a,\\n\\t\\t\\t\\t\\t\\t0xbb: 0xff7b,\\n\\t\\t\\t\\t\\t\\t0xbc: 0xff7c,\\n\\t\\t\\t\\t\\t\\t0xbd: 0xff7d,\\n\\t\\t\\t\\t\\t\\t0xbe: 0xff7e,\\n\\t\\t\\t\\t\\t\\t0xbf: 0xff7f,\\n\\t\\t\\t\\t\\t\\t0xc0: 0xff80,\\n\\t\\t\\t\\t\\t\\t0xc1: 0xff81,\\n\\t\\t\\t\\t\\t\\t0xc2: 0xff82,\\n\\t\\t\\t\\t\\t\\t0xc3: 0xff83,\\n\\t\\t\\t\\t\\t\\t0xc4: 0xff84,\\n\\t\\t\\t\\t\\t\\t0xc5: 0xff85,\\n\\t\\t\\t\\t\\t\\t0xc6: 0xff86,\\n\\t\\t\\t\\t\\t\\t0xc7: 0xff87,\\n\\t\\t\\t\\t\\t\\t0xc8: 0xff88,\\n\\t\\t\\t\\t\\t\\t0xc9: 0xff89,\\n\\t\\t\\t\\t\\t\\t0xca: 0xff8a,\\n\\t\\t\\t\\t\\t\\t0xcb: 0xff8b,\\n\\t\\t\\t\\t\\t\\t0xcc: 0xff8c,\\n\\t\\t\\t\\t\\t\\t0xcd: 0xff8d,\\n\\t\\t\\t\\t\\t\\t0xce: 0xff8e,\\n\\t\\t\\t\\t\\t\\t0xcf: 0xff8f,\\n\\t\\t\\t\\t\\t\\t0xd0: 0xff90,\\n\\t\\t\\t\\t\\t\\t0xd1: 0xff91,\\n\\t\\t\\t\\t\\t\\t0xd2: 0xff92,\\n\\t\\t\\t\\t\\t\\t0xd3: 0xff93,\\n\\t\\t\\t\\t\\t\\t0xd4: 0xff94,\\n\\t\\t\\t\\t\\t\\t0xd5: 0xff95,\\n\\t\\t\\t\\t\\t\\t0xd6: 0xff96,\\n\\t\\t\\t\\t\\t\\t0xd7: 0xff97,\\n\\t\\t\\t\\t\\t\\t0xd8: 0xff98,\\n\\t\\t\\t\\t\\t\\t0xd9: 0xff99,\\n\\t\\t\\t\\t\\t\\t0xda: 0xff9a,\\n\\t\\t\\t\\t\\t\\t0xdb: 0xff9b,\\n\\t\\t\\t\\t\\t\\t0xdc: 0xff9c,\\n\\t\\t\\t\\t\\t\\t0xdd: 0xff9d,\\n\\t\\t\\t\\t\\t\\t0xde: 0xff9e,\\n\\t\\t\\t\\t\\t\\t0xdf: 0xff9f,\\n\\t\\t\\t\\t\\t\\t0xe040: 0x6f3e,\\n\\t\\t\\t\\t\\t\\t0xe041: 0x6f13,\\n\\t\\t\\t\\t\\t\\t0xe042: 0x6ef7,\\n\\t\\t\\t\\t\\t\\t0xe043: 0x6f86,\\n\\t\\t\\t\\t\\t\\t0xe044: 0x6f7a,\\n\\t\\t\\t\\t\\t\\t0xe045: 0x6f78,\\n\\t\\t\\t\\t\\t\\t0xe046: 0x6f81,\\n\\t\\t\\t\\t\\t\\t0xe047: 0x6f80,\\n\\t\\t\\t\\t\\t\\t0xe048: 0x6f6f,\\n\\t\\t\\t\\t\\t\\t0xe049: 0x6f5b,\\n\\t\\t\\t\\t\\t\\t0xe04a: 0x6ff3,\\n\\t\\t\\t\\t\\t\\t0xe04b: 0x6f6d,\\n\\t\\t\\t\\t\\t\\t0xe04c: 0x6f82,\\n\\t\\t\\t\\t\\t\\t0xe04d: 0x6f7c,\\n\\t\\t\\t\\t\\t\\t0xe04e: 0x6f58,\\n\\t\\t\\t\\t\\t\\t0xe04f: 0x6f8e,\\n\\t\\t\\t\\t\\t\\t0xe050: 0x6f91,\\n\\t\\t\\t\\t\\t\\t0xe051: 0x6fc2,\\n\\t\\t\\t\\t\\t\\t0xe052: 0x6f66,\\n\\t\\t\\t\\t\\t\\t0xe053: 0x6fb3,\\n\\t\\t\\t\\t\\t\\t0xe054: 0x6fa3,\\n\\t\\t\\t\\t\\t\\t0xe055: 0x6fa1,\\n\\t\\t\\t\\t\\t\\t0xe056: 0x6fa4,\\n\\t\\t\\t\\t\\t\\t0xe057: 0x6fb9,\\n\\t\\t\\t\\t\\t\\t0xe058: 0x6fc6,\\n\\t\\t\\t\\t\\t\\t0xe059: 0x6faa,\\n\\t\\t\\t\\t\\t\\t0xe05a: 0x6fdf,\\n\\t\\t\\t\\t\\t\\t0xe05b: 0x6fd5,\\n\\t\\t\\t\\t\\t\\t0xe05c: 0x6fec,\\n\\t\\t\\t\\t\\t\\t0xe05d: 0x6fd4,\\n\\t\\t\\t\\t\\t\\t0xe05e: 0x6fd8,\\n\\t\\t\\t\\t\\t\\t0xe05f: 0x6ff1,\\n\\t\\t\\t\\t\\t\\t0xe060: 0x6fee,\\n\\t\\t\\t\\t\\t\\t0xe061: 0x6fdb,\\n\\t\\t\\t\\t\\t\\t0xe062: 0x7009,\\n\\t\\t\\t\\t\\t\\t0xe063: 0x700b,\\n\\t\\t\\t\\t\\t\\t0xe064: 0x6ffa,\\n\\t\\t\\t\\t\\t\\t0xe065: 0x7011,\\n\\t\\t\\t\\t\\t\\t0xe066: 0x7001,\\n\\t\\t\\t\\t\\t\\t0xe067: 0x700f,\\n\\t\\t\\t\\t\\t\\t0xe068: 0x6ffe,\\n\\t\\t\\t\\t\\t\\t0xe069: 0x701b,\\n\\t\\t\\t\\t\\t\\t0xe06a: 0x701a,\\n\\t\\t\\t\\t\\t\\t0xe06b: 0x6f74,\\n\\t\\t\\t\\t\\t\\t0xe06c: 0x701d,\\n\\t\\t\\t\\t\\t\\t0xe06d: 0x7018,\\n\\t\\t\\t\\t\\t\\t0xe06e: 0x701f,\\n\\t\\t\\t\\t\\t\\t0xe06f: 0x7030,\\n\\t\\t\\t\\t\\t\\t0xe070: 0x703e,\\n\\t\\t\\t\\t\\t\\t0xe071: 0x7032,\\n\\t\\t\\t\\t\\t\\t0xe072: 0x7051,\\n\\t\\t\\t\\t\\t\\t0xe073: 0x7063,\\n\\t\\t\\t\\t\\t\\t0xe074: 0x7099,\\n\\t\\t\\t\\t\\t\\t0xe075: 0x7092,\\n\\t\\t\\t\\t\\t\\t0xe076: 0x70af,\\n\\t\\t\\t\\t\\t\\t0xe077: 0x70f1,\\n\\t\\t\\t\\t\\t\\t0xe078: 0x70ac,\\n\\t\\t\\t\\t\\t\\t0xe079: 0x70b8,\\n\\t\\t\\t\\t\\t\\t0xe07a: 0x70b3,\\n\\t\\t\\t\\t\\t\\t0xe07b: 0x70ae,\\n\\t\\t\\t\\t\\t\\t0xe07c: 0x70df,\\n\\t\\t\\t\\t\\t\\t0xe07d: 0x70cb,\\n\\t\\t\\t\\t\\t\\t0xe07e: 0x70dd,\\n\\t\\t\\t\\t\\t\\t0xe080: 0x70d9,\\n\\t\\t\\t\\t\\t\\t0xe081: 0x7109,\\n\\t\\t\\t\\t\\t\\t0xe082: 0x70fd,\\n\\t\\t\\t\\t\\t\\t0xe083: 0x711c,\\n\\t\\t\\t\\t\\t\\t0xe084: 0x7119,\\n\\t\\t\\t\\t\\t\\t0xe085: 0x7165,\\n\\t\\t\\t\\t\\t\\t0xe086: 0x7155,\\n\\t\\t\\t\\t\\t\\t0xe087: 0x7188,\\n\\t\\t\\t\\t\\t\\t0xe088: 0x7166,\\n\\t\\t\\t\\t\\t\\t0xe089: 0x7162,\\n\\t\\t\\t\\t\\t\\t0xe08a: 0x714c,\\n\\t\\t\\t\\t\\t\\t0xe08b: 0x7156,\\n\\t\\t\\t\\t\\t\\t0xe08c: 0x716c,\\n\\t\\t\\t\\t\\t\\t0xe08d: 0x718f,\\n\\t\\t\\t\\t\\t\\t0xe08e: 0x71fb,\\n\\t\\t\\t\\t\\t\\t0xe08f: 0x7184,\\n\\t\\t\\t\\t\\t\\t0xe090: 0x7195,\\n\\t\\t\\t\\t\\t\\t0xe091: 0x71a8,\\n\\t\\t\\t\\t\\t\\t0xe092: 0x71ac,\\n\\t\\t\\t\\t\\t\\t0xe093: 0x71d7,\\n\\t\\t\\t\\t\\t\\t0xe094: 0x71b9,\\n\\t\\t\\t\\t\\t\\t0xe095: 0x71be,\\n\\t\\t\\t\\t\\t\\t0xe096: 0x71d2,\\n\\t\\t\\t\\t\\t\\t0xe097: 0x71c9,\\n\\t\\t\\t\\t\\t\\t0xe098: 0x71d4,\\n\\t\\t\\t\\t\\t\\t0xe099: 0x71ce,\\n\\t\\t\\t\\t\\t\\t0xe09a: 0x71e0,\\n\\t\\t\\t\\t\\t\\t0xe09b: 0x71ec,\\n\\t\\t\\t\\t\\t\\t0xe09c: 0x71e7,\\n\\t\\t\\t\\t\\t\\t0xe09d: 0x71f5,\\n\\t\\t\\t\\t\\t\\t0xe09e: 0x71fc,\\n\\t\\t\\t\\t\\t\\t0xe09f: 0x71f9,\\n\\t\\t\\t\\t\\t\\t0xe0a0: 0x71ff,\\n\\t\\t\\t\\t\\t\\t0xe0a1: 0x720d,\\n\\t\\t\\t\\t\\t\\t0xe0a2: 0x7210,\\n\\t\\t\\t\\t\\t\\t0xe0a3: 0x721b,\\n\\t\\t\\t\\t\\t\\t0xe0a4: 0x7228,\\n\\t\\t\\t\\t\\t\\t0xe0a5: 0x722d,\\n\\t\\t\\t\\t\\t\\t0xe0a6: 0x722c,\\n\\t\\t\\t\\t\\t\\t0xe0a7: 0x7230,\\n\\t\\t\\t\\t\\t\\t0xe0a8: 0x7232,\\n\\t\\t\\t\\t\\t\\t0xe0a9: 0x723b,\\n\\t\\t\\t\\t\\t\\t0xe0aa: 0x723c,\\n\\t\\t\\t\\t\\t\\t0xe0ab: 0x723f,\\n\\t\\t\\t\\t\\t\\t0xe0ac: 0x7240,\\n\\t\\t\\t\\t\\t\\t0xe0ad: 0x7246,\\n\\t\\t\\t\\t\\t\\t0xe0ae: 0x724b,\\n\\t\\t\\t\\t\\t\\t0xe0af: 0x7258,\\n\\t\\t\\t\\t\\t\\t0xe0b0: 0x7274,\\n\\t\\t\\t\\t\\t\\t0xe0b1: 0x727e,\\n\\t\\t\\t\\t\\t\\t0xe0b2: 0x7282,\\n\\t\\t\\t\\t\\t\\t0xe0b3: 0x7281,\\n\\t\\t\\t\\t\\t\\t0xe0b4: 0x7287,\\n\\t\\t\\t\\t\\t\\t0xe0b5: 0x7292,\\n\\t\\t\\t\\t\\t\\t0xe0b6: 0x7296,\\n\\t\\t\\t\\t\\t\\t0xe0b7: 0x72a2,\\n\\t\\t\\t\\t\\t\\t0xe0b8: 0x72a7,\\n\\t\\t\\t\\t\\t\\t0xe0b9: 0x72b9,\\n\\t\\t\\t\\t\\t\\t0xe0ba: 0x72b2,\\n\\t\\t\\t\\t\\t\\t0xe0bb: 0x72c3,\\n\\t\\t\\t\\t\\t\\t0xe0bc: 0x72c6,\\n\\t\\t\\t\\t\\t\\t0xe0bd: 0x72c4,\\n\\t\\t\\t\\t\\t\\t0xe0be: 0x72ce,\\n\\t\\t\\t\\t\\t\\t0xe0bf: 0x72d2,\\n\\t\\t\\t\\t\\t\\t0xe0c0: 0x72e2,\\n\\t\\t\\t\\t\\t\\t0xe0c1: 0x72e0,\\n\\t\\t\\t\\t\\t\\t0xe0c2: 0x72e1,\\n\\t\\t\\t\\t\\t\\t0xe0c3: 0x72f9,\\n\\t\\t\\t\\t\\t\\t0xe0c4: 0x72f7,\\n\\t\\t\\t\\t\\t\\t0xe0c5: 0x500f,\\n\\t\\t\\t\\t\\t\\t0xe0c6: 0x7317,\\n\\t\\t\\t\\t\\t\\t0xe0c7: 0x730a,\\n\\t\\t\\t\\t\\t\\t0xe0c8: 0x731c,\\n\\t\\t\\t\\t\\t\\t0xe0c9: 0x7316,\\n\\t\\t\\t\\t\\t\\t0xe0ca: 0x731d,\\n\\t\\t\\t\\t\\t\\t0xe0cb: 0x7334,\\n\\t\\t\\t\\t\\t\\t0xe0cc: 0x732f,\\n\\t\\t\\t\\t\\t\\t0xe0cd: 0x7329,\\n\\t\\t\\t\\t\\t\\t0xe0ce: 0x7325,\\n\\t\\t\\t\\t\\t\\t0xe0cf: 0x733e,\\n\\t\\t\\t\\t\\t\\t0xe0d0: 0x734e,\\n\\t\\t\\t\\t\\t\\t0xe0d1: 0x734f,\\n\\t\\t\\t\\t\\t\\t0xe0d2: 0x9ed8,\\n\\t\\t\\t\\t\\t\\t0xe0d3: 0x7357,\\n\\t\\t\\t\\t\\t\\t0xe0d4: 0x736a,\\n\\t\\t\\t\\t\\t\\t0xe0d5: 0x7368,\\n\\t\\t\\t\\t\\t\\t0xe0d6: 0x7370,\\n\\t\\t\\t\\t\\t\\t0xe0d7: 0x7378,\\n\\t\\t\\t\\t\\t\\t0xe0d8: 0x7375,\\n\\t\\t\\t\\t\\t\\t0xe0d9: 0x737b,\\n\\t\\t\\t\\t\\t\\t0xe0da: 0x737a,\\n\\t\\t\\t\\t\\t\\t0xe0db: 0x73c8,\\n\\t\\t\\t\\t\\t\\t0xe0dc: 0x73b3,\\n\\t\\t\\t\\t\\t\\t0xe0dd: 0x73ce,\\n\\t\\t\\t\\t\\t\\t0xe0de: 0x73bb,\\n\\t\\t\\t\\t\\t\\t0xe0df: 0x73c0,\\n\\t\\t\\t\\t\\t\\t0xe0e0: 0x73e5,\\n\\t\\t\\t\\t\\t\\t0xe0e1: 0x73ee,\\n\\t\\t\\t\\t\\t\\t0xe0e2: 0x73de,\\n\\t\\t\\t\\t\\t\\t0xe0e3: 0x74a2,\\n\\t\\t\\t\\t\\t\\t0xe0e4: 0x7405,\\n\\t\\t\\t\\t\\t\\t0xe0e5: 0x746f,\\n\\t\\t\\t\\t\\t\\t0xe0e6: 0x7425,\\n\\t\\t\\t\\t\\t\\t0xe0e7: 0x73f8,\\n\\t\\t\\t\\t\\t\\t0xe0e8: 0x7432,\\n\\t\\t\\t\\t\\t\\t0xe0e9: 0x743a,\\n\\t\\t\\t\\t\\t\\t0xe0ea: 0x7455,\\n\\t\\t\\t\\t\\t\\t0xe0eb: 0x743f,\\n\\t\\t\\t\\t\\t\\t0xe0ec: 0x745f,\\n\\t\\t\\t\\t\\t\\t0xe0ed: 0x7459,\\n\\t\\t\\t\\t\\t\\t0xe0ee: 0x7441,\\n\\t\\t\\t\\t\\t\\t0xe0ef: 0x745c,\\n\\t\\t\\t\\t\\t\\t0xe0f0: 0x7469,\\n\\t\\t\\t\\t\\t\\t0xe0f1: 0x7470,\\n\\t\\t\\t\\t\\t\\t0xe0f2: 0x7463,\\n\\t\\t\\t\\t\\t\\t0xe0f3: 0x746a,\\n\\t\\t\\t\\t\\t\\t0xe0f4: 0x7476,\\n\\t\\t\\t\\t\\t\\t0xe0f5: 0x747e,\\n\\t\\t\\t\\t\\t\\t0xe0f6: 0x748b,\\n\\t\\t\\t\\t\\t\\t0xe0f7: 0x749e,\\n\\t\\t\\t\\t\\t\\t0xe0f8: 0x74a7,\\n\\t\\t\\t\\t\\t\\t0xe0f9: 0x74ca,\\n\\t\\t\\t\\t\\t\\t0xe0fa: 0x74cf,\\n\\t\\t\\t\\t\\t\\t0xe0fb: 0x74d4,\\n\\t\\t\\t\\t\\t\\t0xe0fc: 0x73f1,\\n\\t\\t\\t\\t\\t\\t0xe140: 0x74e0,\\n\\t\\t\\t\\t\\t\\t0xe141: 0x74e3,\\n\\t\\t\\t\\t\\t\\t0xe142: 0x74e7,\\n\\t\\t\\t\\t\\t\\t0xe143: 0x74e9,\\n\\t\\t\\t\\t\\t\\t0xe144: 0x74ee,\\n\\t\\t\\t\\t\\t\\t0xe145: 0x74f2,\\n\\t\\t\\t\\t\\t\\t0xe146: 0x74f0,\\n\\t\\t\\t\\t\\t\\t0xe147: 0x74f1,\\n\\t\\t\\t\\t\\t\\t0xe148: 0x74f8,\\n\\t\\t\\t\\t\\t\\t0xe149: 0x74f7,\\n\\t\\t\\t\\t\\t\\t0xe14a: 0x7504,\\n\\t\\t\\t\\t\\t\\t0xe14b: 0x7503,\\n\\t\\t\\t\\t\\t\\t0xe14c: 0x7505,\\n\\t\\t\\t\\t\\t\\t0xe14d: 0x750c,\\n\\t\\t\\t\\t\\t\\t0xe14e: 0x750e,\\n\\t\\t\\t\\t\\t\\t0xe14f: 0x750d,\\n\\t\\t\\t\\t\\t\\t0xe150: 0x7515,\\n\\t\\t\\t\\t\\t\\t0xe151: 0x7513,\\n\\t\\t\\t\\t\\t\\t0xe152: 0x751e,\\n\\t\\t\\t\\t\\t\\t0xe153: 0x7526,\\n\\t\\t\\t\\t\\t\\t0xe154: 0x752c,\\n\\t\\t\\t\\t\\t\\t0xe155: 0x753c,\\n\\t\\t\\t\\t\\t\\t0xe156: 0x7544,\\n\\t\\t\\t\\t\\t\\t0xe157: 0x754d,\\n\\t\\t\\t\\t\\t\\t0xe158: 0x754a,\\n\\t\\t\\t\\t\\t\\t0xe159: 0x7549,\\n\\t\\t\\t\\t\\t\\t0xe15a: 0x755b,\\n\\t\\t\\t\\t\\t\\t0xe15b: 0x7546,\\n\\t\\t\\t\\t\\t\\t0xe15c: 0x755a,\\n\\t\\t\\t\\t\\t\\t0xe15d: 0x7569,\\n\\t\\t\\t\\t\\t\\t0xe15e: 0x7564,\\n\\t\\t\\t\\t\\t\\t0xe15f: 0x7567,\\n\\t\\t\\t\\t\\t\\t0xe160: 0x756b,\\n\\t\\t\\t\\t\\t\\t0xe161: 0x756d,\\n\\t\\t\\t\\t\\t\\t0xe162: 0x7578,\\n\\t\\t\\t\\t\\t\\t0xe163: 0x7576,\\n\\t\\t\\t\\t\\t\\t0xe164: 0x7586,\\n\\t\\t\\t\\t\\t\\t0xe165: 0x7587,\\n\\t\\t\\t\\t\\t\\t0xe166: 0x7574,\\n\\t\\t\\t\\t\\t\\t0xe167: 0x758a,\\n\\t\\t\\t\\t\\t\\t0xe168: 0x7589,\\n\\t\\t\\t\\t\\t\\t0xe169: 0x7582,\\n\\t\\t\\t\\t\\t\\t0xe16a: 0x7594,\\n\\t\\t\\t\\t\\t\\t0xe16b: 0x759a,\\n\\t\\t\\t\\t\\t\\t0xe16c: 0x759d,\\n\\t\\t\\t\\t\\t\\t0xe16d: 0x75a5,\\n\\t\\t\\t\\t\\t\\t0xe16e: 0x75a3,\\n\\t\\t\\t\\t\\t\\t0xe16f: 0x75c2,\\n\\t\\t\\t\\t\\t\\t0xe170: 0x75b3,\\n\\t\\t\\t\\t\\t\\t0xe171: 0x75c3,\\n\\t\\t\\t\\t\\t\\t0xe172: 0x75b5,\\n\\t\\t\\t\\t\\t\\t0xe173: 0x75bd,\\n\\t\\t\\t\\t\\t\\t0xe174: 0x75b8,\\n\\t\\t\\t\\t\\t\\t0xe175: 0x75bc,\\n\\t\\t\\t\\t\\t\\t0xe176: 0x75b1,\\n\\t\\t\\t\\t\\t\\t0xe177: 0x75cd,\\n\\t\\t\\t\\t\\t\\t0xe178: 0x75ca,\\n\\t\\t\\t\\t\\t\\t0xe179: 0x75d2,\\n\\t\\t\\t\\t\\t\\t0xe17a: 0x75d9,\\n\\t\\t\\t\\t\\t\\t0xe17b: 0x75e3,\\n\\t\\t\\t\\t\\t\\t0xe17c: 0x75de,\\n\\t\\t\\t\\t\\t\\t0xe17d: 0x75fe,\\n\\t\\t\\t\\t\\t\\t0xe17e: 0x75ff,\\n\\t\\t\\t\\t\\t\\t0xe180: 0x75fc,\\n\\t\\t\\t\\t\\t\\t0xe181: 0x7601,\\n\\t\\t\\t\\t\\t\\t0xe182: 0x75f0,\\n\\t\\t\\t\\t\\t\\t0xe183: 0x75fa,\\n\\t\\t\\t\\t\\t\\t0xe184: 0x75f2,\\n\\t\\t\\t\\t\\t\\t0xe185: 0x75f3,\\n\\t\\t\\t\\t\\t\\t0xe186: 0x760b,\\n\\t\\t\\t\\t\\t\\t0xe187: 0x760d,\\n\\t\\t\\t\\t\\t\\t0xe188: 0x7609,\\n\\t\\t\\t\\t\\t\\t0xe189: 0x761f,\\n\\t\\t\\t\\t\\t\\t0xe18a: 0x7627,\\n\\t\\t\\t\\t\\t\\t0xe18b: 0x7620,\\n\\t\\t\\t\\t\\t\\t0xe18c: 0x7621,\\n\\t\\t\\t\\t\\t\\t0xe18d: 0x7622,\\n\\t\\t\\t\\t\\t\\t0xe18e: 0x7624,\\n\\t\\t\\t\\t\\t\\t0xe18f: 0x7634,\\n\\t\\t\\t\\t\\t\\t0xe190: 0x7630,\\n\\t\\t\\t\\t\\t\\t0xe191: 0x763b,\\n\\t\\t\\t\\t\\t\\t0xe192: 0x7647,\\n\\t\\t\\t\\t\\t\\t0xe193: 0x7648,\\n\\t\\t\\t\\t\\t\\t0xe194: 0x7646,\\n\\t\\t\\t\\t\\t\\t0xe195: 0x765c,\\n\\t\\t\\t\\t\\t\\t0xe196: 0x7658,\\n\\t\\t\\t\\t\\t\\t0xe197: 0x7661,\\n\\t\\t\\t\\t\\t\\t0xe198: 0x7662,\\n\\t\\t\\t\\t\\t\\t0xe199: 0x7668,\\n\\t\\t\\t\\t\\t\\t0xe19a: 0x7669,\\n\\t\\t\\t\\t\\t\\t0xe19b: 0x766a,\\n\\t\\t\\t\\t\\t\\t0xe19c: 0x7667,\\n\\t\\t\\t\\t\\t\\t0xe19d: 0x766c,\\n\\t\\t\\t\\t\\t\\t0xe19e: 0x7670,\\n\\t\\t\\t\\t\\t\\t0xe19f: 0x7672,\\n\\t\\t\\t\\t\\t\\t0xe1a0: 0x7676,\\n\\t\\t\\t\\t\\t\\t0xe1a1: 0x7678,\\n\\t\\t\\t\\t\\t\\t0xe1a2: 0x767c,\\n\\t\\t\\t\\t\\t\\t0xe1a3: 0x7680,\\n\\t\\t\\t\\t\\t\\t0xe1a4: 0x7683,\\n\\t\\t\\t\\t\\t\\t0xe1a5: 0x7688,\\n\\t\\t\\t\\t\\t\\t0xe1a6: 0x768b,\\n\\t\\t\\t\\t\\t\\t0xe1a7: 0x768e,\\n\\t\\t\\t\\t\\t\\t0xe1a8: 0x7696,\\n\\t\\t\\t\\t\\t\\t0xe1a9: 0x7693,\\n\\t\\t\\t\\t\\t\\t0xe1aa: 0x7699,\\n\\t\\t\\t\\t\\t\\t0xe1ab: 0x769a,\\n\\t\\t\\t\\t\\t\\t0xe1ac: 0x76b0,\\n\\t\\t\\t\\t\\t\\t0xe1ad: 0x76b4,\\n\\t\\t\\t\\t\\t\\t0xe1ae: 0x76b8,\\n\\t\\t\\t\\t\\t\\t0xe1af: 0x76b9,\\n\\t\\t\\t\\t\\t\\t0xe1b0: 0x76ba,\\n\\t\\t\\t\\t\\t\\t0xe1b1: 0x76c2,\\n\\t\\t\\t\\t\\t\\t0xe1b2: 0x76cd,\\n\\t\\t\\t\\t\\t\\t0xe1b3: 0x76d6,\\n\\t\\t\\t\\t\\t\\t0xe1b4: 0x76d2,\\n\\t\\t\\t\\t\\t\\t0xe1b5: 0x76de,\\n\\t\\t\\t\\t\\t\\t0xe1b6: 0x76e1,\\n\\t\\t\\t\\t\\t\\t0xe1b7: 0x76e5,\\n\\t\\t\\t\\t\\t\\t0xe1b8: 0x76e7,\\n\\t\\t\\t\\t\\t\\t0xe1b9: 0x76ea,\\n\\t\\t\\t\\t\\t\\t0xe1ba: 0x862f,\\n\\t\\t\\t\\t\\t\\t0xe1bb: 0x76fb,\\n\\t\\t\\t\\t\\t\\t0xe1bc: 0x7708,\\n\\t\\t\\t\\t\\t\\t0xe1bd: 0x7707,\\n\\t\\t\\t\\t\\t\\t0xe1be: 0x7704,\\n\\t\\t\\t\\t\\t\\t0xe1bf: 0x7729,\\n\\t\\t\\t\\t\\t\\t0xe1c0: 0x7724,\\n\\t\\t\\t\\t\\t\\t0xe1c1: 0x771e,\\n\\t\\t\\t\\t\\t\\t0xe1c2: 0x7725,\\n\\t\\t\\t\\t\\t\\t0xe1c3: 0x7726,\\n\\t\\t\\t\\t\\t\\t0xe1c4: 0x771b,\\n\\t\\t\\t\\t\\t\\t0xe1c5: 0x7737,\\n\\t\\t\\t\\t\\t\\t0xe1c6: 0x7738,\\n\\t\\t\\t\\t\\t\\t0xe1c7: 0x7747,\\n\\t\\t\\t\\t\\t\\t0xe1c8: 0x775a,\\n\\t\\t\\t\\t\\t\\t0xe1c9: 0x7768,\\n\\t\\t\\t\\t\\t\\t0xe1ca: 0x776b,\\n\\t\\t\\t\\t\\t\\t0xe1cb: 0x775b,\\n\\t\\t\\t\\t\\t\\t0xe1cc: 0x7765,\\n\\t\\t\\t\\t\\t\\t0xe1cd: 0x777f,\\n\\t\\t\\t\\t\\t\\t0xe1ce: 0x777e,\\n\\t\\t\\t\\t\\t\\t0xe1cf: 0x7779,\\n\\t\\t\\t\\t\\t\\t0xe1d0: 0x778e,\\n\\t\\t\\t\\t\\t\\t0xe1d1: 0x778b,\\n\\t\\t\\t\\t\\t\\t0xe1d2: 0x7791,\\n\\t\\t\\t\\t\\t\\t0xe1d3: 0x77a0,\\n\\t\\t\\t\\t\\t\\t0xe1d4: 0x779e,\\n\\t\\t\\t\\t\\t\\t0xe1d5: 0x77b0,\\n\\t\\t\\t\\t\\t\\t0xe1d6: 0x77b6,\\n\\t\\t\\t\\t\\t\\t0xe1d7: 0x77b9,\\n\\t\\t\\t\\t\\t\\t0xe1d8: 0x77bf,\\n\\t\\t\\t\\t\\t\\t0xe1d9: 0x77bc,\\n\\t\\t\\t\\t\\t\\t0xe1da: 0x77bd,\\n\\t\\t\\t\\t\\t\\t0xe1db: 0x77bb,\\n\\t\\t\\t\\t\\t\\t0xe1dc: 0x77c7,\\n\\t\\t\\t\\t\\t\\t0xe1dd: 0x77cd,\\n\\t\\t\\t\\t\\t\\t0xe1de: 0x77d7,\\n\\t\\t\\t\\t\\t\\t0xe1df: 0x77da,\\n\\t\\t\\t\\t\\t\\t0xe1e0: 0x77dc,\\n\\t\\t\\t\\t\\t\\t0xe1e1: 0x77e3,\\n\\t\\t\\t\\t\\t\\t0xe1e2: 0x77ee,\\n\\t\\t\\t\\t\\t\\t0xe1e3: 0x77fc,\\n\\t\\t\\t\\t\\t\\t0xe1e4: 0x780c,\\n\\t\\t\\t\\t\\t\\t0xe1e5: 0x7812,\\n\\t\\t\\t\\t\\t\\t0xe1e6: 0x7926,\\n\\t\\t\\t\\t\\t\\t0xe1e7: 0x7820,\\n\\t\\t\\t\\t\\t\\t0xe1e8: 0x792a,\\n\\t\\t\\t\\t\\t\\t0xe1e9: 0x7845,\\n\\t\\t\\t\\t\\t\\t0xe1ea: 0x788e,\\n\\t\\t\\t\\t\\t\\t0xe1eb: 0x7874,\\n\\t\\t\\t\\t\\t\\t0xe1ec: 0x7886,\\n\\t\\t\\t\\t\\t\\t0xe1ed: 0x787c,\\n\\t\\t\\t\\t\\t\\t0xe1ee: 0x789a,\\n\\t\\t\\t\\t\\t\\t0xe1ef: 0x788c,\\n\\t\\t\\t\\t\\t\\t0xe1f0: 0x78a3,\\n\\t\\t\\t\\t\\t\\t0xe1f1: 0x78b5,\\n\\t\\t\\t\\t\\t\\t0xe1f2: 0x78aa,\\n\\t\\t\\t\\t\\t\\t0xe1f3: 0x78af,\\n\\t\\t\\t\\t\\t\\t0xe1f4: 0x78d1,\\n\\t\\t\\t\\t\\t\\t0xe1f5: 0x78c6,\\n\\t\\t\\t\\t\\t\\t0xe1f6: 0x78cb,\\n\\t\\t\\t\\t\\t\\t0xe1f7: 0x78d4,\\n\\t\\t\\t\\t\\t\\t0xe1f8: 0x78be,\\n\\t\\t\\t\\t\\t\\t0xe1f9: 0x78bc,\\n\\t\\t\\t\\t\\t\\t0xe1fa: 0x78c5,\\n\\t\\t\\t\\t\\t\\t0xe1fb: 0x78ca,\\n\\t\\t\\t\\t\\t\\t0xe1fc: 0x78ec,\\n\\t\\t\\t\\t\\t\\t0xe240: 0x78e7,\\n\\t\\t\\t\\t\\t\\t0xe241: 0x78da,\\n\\t\\t\\t\\t\\t\\t0xe242: 0x78fd,\\n\\t\\t\\t\\t\\t\\t0xe243: 0x78f4,\\n\\t\\t\\t\\t\\t\\t0xe244: 0x7907,\\n\\t\\t\\t\\t\\t\\t0xe245: 0x7912,\\n\\t\\t\\t\\t\\t\\t0xe246: 0x7911,\\n\\t\\t\\t\\t\\t\\t0xe247: 0x7919,\\n\\t\\t\\t\\t\\t\\t0xe248: 0x792c,\\n\\t\\t\\t\\t\\t\\t0xe249: 0x792b,\\n\\t\\t\\t\\t\\t\\t0xe24a: 0x7940,\\n\\t\\t\\t\\t\\t\\t0xe24b: 0x7960,\\n\\t\\t\\t\\t\\t\\t0xe24c: 0x7957,\\n\\t\\t\\t\\t\\t\\t0xe24d: 0x795f,\\n\\t\\t\\t\\t\\t\\t0xe24e: 0x795a,\\n\\t\\t\\t\\t\\t\\t0xe24f: 0x7955,\\n\\t\\t\\t\\t\\t\\t0xe250: 0x7953,\\n\\t\\t\\t\\t\\t\\t0xe251: 0x797a,\\n\\t\\t\\t\\t\\t\\t0xe252: 0x797f,\\n\\t\\t\\t\\t\\t\\t0xe253: 0x798a,\\n\\t\\t\\t\\t\\t\\t0xe254: 0x799d,\\n\\t\\t\\t\\t\\t\\t0xe255: 0x79a7,\\n\\t\\t\\t\\t\\t\\t0xe256: 0x9f4b,\\n\\t\\t\\t\\t\\t\\t0xe257: 0x79aa,\\n\\t\\t\\t\\t\\t\\t0xe258: 0x79ae,\\n\\t\\t\\t\\t\\t\\t0xe259: 0x79b3,\\n\\t\\t\\t\\t\\t\\t0xe25a: 0x79b9,\\n\\t\\t\\t\\t\\t\\t0xe25b: 0x79ba,\\n\\t\\t\\t\\t\\t\\t0xe25c: 0x79c9,\\n\\t\\t\\t\\t\\t\\t0xe25d: 0x79d5,\\n\\t\\t\\t\\t\\t\\t0xe25e: 0x79e7,\\n\\t\\t\\t\\t\\t\\t0xe25f: 0x79ec,\\n\\t\\t\\t\\t\\t\\t0xe260: 0x79e1,\\n\\t\\t\\t\\t\\t\\t0xe261: 0x79e3,\\n\\t\\t\\t\\t\\t\\t0xe262: 0x7a08,\\n\\t\\t\\t\\t\\t\\t0xe263: 0x7a0d,\\n\\t\\t\\t\\t\\t\\t0xe264: 0x7a18,\\n\\t\\t\\t\\t\\t\\t0xe265: 0x7a19,\\n\\t\\t\\t\\t\\t\\t0xe266: 0x7a20,\\n\\t\\t\\t\\t\\t\\t0xe267: 0x7a1f,\\n\\t\\t\\t\\t\\t\\t0xe268: 0x7980,\\n\\t\\t\\t\\t\\t\\t0xe269: 0x7a31,\\n\\t\\t\\t\\t\\t\\t0xe26a: 0x7a3b,\\n\\t\\t\\t\\t\\t\\t0xe26b: 0x7a3e,\\n\\t\\t\\t\\t\\t\\t0xe26c: 0x7a37,\\n\\t\\t\\t\\t\\t\\t0xe26d: 0x7a43,\\n\\t\\t\\t\\t\\t\\t0xe26e: 0x7a57,\\n\\t\\t\\t\\t\\t\\t0xe26f: 0x7a49,\\n\\t\\t\\t\\t\\t\\t0xe270: 0x7a61,\\n\\t\\t\\t\\t\\t\\t0xe271: 0x7a62,\\n\\t\\t\\t\\t\\t\\t0xe272: 0x7a69,\\n\\t\\t\\t\\t\\t\\t0xe273: 0x9f9d,\\n\\t\\t\\t\\t\\t\\t0xe274: 0x7a70,\\n\\t\\t\\t\\t\\t\\t0xe275: 0x7a79,\\n\\t\\t\\t\\t\\t\\t0xe276: 0x7a7d,\\n\\t\\t\\t\\t\\t\\t0xe277: 0x7a88,\\n\\t\\t\\t\\t\\t\\t0xe278: 0x7a97,\\n\\t\\t\\t\\t\\t\\t0xe279: 0x7a95,\\n\\t\\t\\t\\t\\t\\t0xe27a: 0x7a98,\\n\\t\\t\\t\\t\\t\\t0xe27b: 0x7a96,\\n\\t\\t\\t\\t\\t\\t0xe27c: 0x7aa9,\\n\\t\\t\\t\\t\\t\\t0xe27d: 0x7ac8,\\n\\t\\t\\t\\t\\t\\t0xe27e: 0x7ab0,\\n\\t\\t\\t\\t\\t\\t0xe280: 0x7ab6,\\n\\t\\t\\t\\t\\t\\t0xe281: 0x7ac5,\\n\\t\\t\\t\\t\\t\\t0xe282: 0x7ac4,\\n\\t\\t\\t\\t\\t\\t0xe283: 0x7abf,\\n\\t\\t\\t\\t\\t\\t0xe284: 0x9083,\\n\\t\\t\\t\\t\\t\\t0xe285: 0x7ac7,\\n\\t\\t\\t\\t\\t\\t0xe286: 0x7aca,\\n\\t\\t\\t\\t\\t\\t0xe287: 0x7acd,\\n\\t\\t\\t\\t\\t\\t0xe288: 0x7acf,\\n\\t\\t\\t\\t\\t\\t0xe289: 0x7ad5,\\n\\t\\t\\t\\t\\t\\t0xe28a: 0x7ad3,\\n\\t\\t\\t\\t\\t\\t0xe28b: 0x7ad9,\\n\\t\\t\\t\\t\\t\\t0xe28c: 0x7ada,\\n\\t\\t\\t\\t\\t\\t0xe28d: 0x7add,\\n\\t\\t\\t\\t\\t\\t0xe28e: 0x7ae1,\\n\\t\\t\\t\\t\\t\\t0xe28f: 0x7ae2,\\n\\t\\t\\t\\t\\t\\t0xe290: 0x7ae6,\\n\\t\\t\\t\\t\\t\\t0xe291: 0x7aed,\\n\\t\\t\\t\\t\\t\\t0xe292: 0x7af0,\\n\\t\\t\\t\\t\\t\\t0xe293: 0x7b02,\\n\\t\\t\\t\\t\\t\\t0xe294: 0x7b0f,\\n\\t\\t\\t\\t\\t\\t0xe295: 0x7b0a,\\n\\t\\t\\t\\t\\t\\t0xe296: 0x7b06,\\n\\t\\t\\t\\t\\t\\t0xe297: 0x7b33,\\n\\t\\t\\t\\t\\t\\t0xe298: 0x7b18,\\n\\t\\t\\t\\t\\t\\t0xe299: 0x7b19,\\n\\t\\t\\t\\t\\t\\t0xe29a: 0x7b1e,\\n\\t\\t\\t\\t\\t\\t0xe29b: 0x7b35,\\n\\t\\t\\t\\t\\t\\t0xe29c: 0x7b28,\\n\\t\\t\\t\\t\\t\\t0xe29d: 0x7b36,\\n\\t\\t\\t\\t\\t\\t0xe29e: 0x7b50,\\n\\t\\t\\t\\t\\t\\t0xe29f: 0x7b7a,\\n\\t\\t\\t\\t\\t\\t0xe2a0: 0x7b04,\\n\\t\\t\\t\\t\\t\\t0xe2a1: 0x7b4d,\\n\\t\\t\\t\\t\\t\\t0xe2a2: 0x7b0b,\\n\\t\\t\\t\\t\\t\\t0xe2a3: 0x7b4c,\\n\\t\\t\\t\\t\\t\\t0xe2a4: 0x7b45,\\n\\t\\t\\t\\t\\t\\t0xe2a5: 0x7b75,\\n\\t\\t\\t\\t\\t\\t0xe2a6: 0x7b65,\\n\\t\\t\\t\\t\\t\\t0xe2a7: 0x7b74,\\n\\t\\t\\t\\t\\t\\t0xe2a8: 0x7b67,\\n\\t\\t\\t\\t\\t\\t0xe2a9: 0x7b70,\\n\\t\\t\\t\\t\\t\\t0xe2aa: 0x7b71,\\n\\t\\t\\t\\t\\t\\t0xe2ab: 0x7b6c,\\n\\t\\t\\t\\t\\t\\t0xe2ac: 0x7b6e,\\n\\t\\t\\t\\t\\t\\t0xe2ad: 0x7b9d,\\n\\t\\t\\t\\t\\t\\t0xe2ae: 0x7b98,\\n\\t\\t\\t\\t\\t\\t0xe2af: 0x7b9f,\\n\\t\\t\\t\\t\\t\\t0xe2b0: 0x7b8d,\\n\\t\\t\\t\\t\\t\\t0xe2b1: 0x7b9c,\\n\\t\\t\\t\\t\\t\\t0xe2b2: 0x7b9a,\\n\\t\\t\\t\\t\\t\\t0xe2b3: 0x7b8b,\\n\\t\\t\\t\\t\\t\\t0xe2b4: 0x7b92,\\n\\t\\t\\t\\t\\t\\t0xe2b5: 0x7b8f,\\n\\t\\t\\t\\t\\t\\t0xe2b6: 0x7b5d,\\n\\t\\t\\t\\t\\t\\t0xe2b7: 0x7b99,\\n\\t\\t\\t\\t\\t\\t0xe2b8: 0x7bcb,\\n\\t\\t\\t\\t\\t\\t0xe2b9: 0x7bc1,\\n\\t\\t\\t\\t\\t\\t0xe2ba: 0x7bcc,\\n\\t\\t\\t\\t\\t\\t0xe2bb: 0x7bcf,\\n\\t\\t\\t\\t\\t\\t0xe2bc: 0x7bb4,\\n\\t\\t\\t\\t\\t\\t0xe2bd: 0x7bc6,\\n\\t\\t\\t\\t\\t\\t0xe2be: 0x7bdd,\\n\\t\\t\\t\\t\\t\\t0xe2bf: 0x7be9,\\n\\t\\t\\t\\t\\t\\t0xe2c0: 0x7c11,\\n\\t\\t\\t\\t\\t\\t0xe2c1: 0x7c14,\\n\\t\\t\\t\\t\\t\\t0xe2c2: 0x7be6,\\n\\t\\t\\t\\t\\t\\t0xe2c3: 0x7be5,\\n\\t\\t\\t\\t\\t\\t0xe2c4: 0x7c60,\\n\\t\\t\\t\\t\\t\\t0xe2c5: 0x7c00,\\n\\t\\t\\t\\t\\t\\t0xe2c6: 0x7c07,\\n\\t\\t\\t\\t\\t\\t0xe2c7: 0x7c13,\\n\\t\\t\\t\\t\\t\\t0xe2c8: 0x7bf3,\\n\\t\\t\\t\\t\\t\\t0xe2c9: 0x7bf7,\\n\\t\\t\\t\\t\\t\\t0xe2ca: 0x7c17,\\n\\t\\t\\t\\t\\t\\t0xe2cb: 0x7c0d,\\n\\t\\t\\t\\t\\t\\t0xe2cc: 0x7bf6,\\n\\t\\t\\t\\t\\t\\t0xe2cd: 0x7c23,\\n\\t\\t\\t\\t\\t\\t0xe2ce: 0x7c27,\\n\\t\\t\\t\\t\\t\\t0xe2cf: 0x7c2a,\\n\\t\\t\\t\\t\\t\\t0xe2d0: 0x7c1f,\\n\\t\\t\\t\\t\\t\\t0xe2d1: 0x7c37,\\n\\t\\t\\t\\t\\t\\t0xe2d2: 0x7c2b,\\n\\t\\t\\t\\t\\t\\t0xe2d3: 0x7c3d,\\n\\t\\t\\t\\t\\t\\t0xe2d4: 0x7c4c,\\n\\t\\t\\t\\t\\t\\t0xe2d5: 0x7c43,\\n\\t\\t\\t\\t\\t\\t0xe2d6: 0x7c54,\\n\\t\\t\\t\\t\\t\\t0xe2d7: 0x7c4f,\\n\\t\\t\\t\\t\\t\\t0xe2d8: 0x7c40,\\n\\t\\t\\t\\t\\t\\t0xe2d9: 0x7c50,\\n\\t\\t\\t\\t\\t\\t0xe2da: 0x7c58,\\n\\t\\t\\t\\t\\t\\t0xe2db: 0x7c5f,\\n\\t\\t\\t\\t\\t\\t0xe2dc: 0x7c64,\\n\\t\\t\\t\\t\\t\\t0xe2dd: 0x7c56,\\n\\t\\t\\t\\t\\t\\t0xe2de: 0x7c65,\\n\\t\\t\\t\\t\\t\\t0xe2df: 0x7c6c,\\n\\t\\t\\t\\t\\t\\t0xe2e0: 0x7c75,\\n\\t\\t\\t\\t\\t\\t0xe2e1: 0x7c83,\\n\\t\\t\\t\\t\\t\\t0xe2e2: 0x7c90,\\n\\t\\t\\t\\t\\t\\t0xe2e3: 0x7ca4,\\n\\t\\t\\t\\t\\t\\t0xe2e4: 0x7cad,\\n\\t\\t\\t\\t\\t\\t0xe2e5: 0x7ca2,\\n\\t\\t\\t\\t\\t\\t0xe2e6: 0x7cab,\\n\\t\\t\\t\\t\\t\\t0xe2e7: 0x7ca1,\\n\\t\\t\\t\\t\\t\\t0xe2e8: 0x7ca8,\\n\\t\\t\\t\\t\\t\\t0xe2e9: 0x7cb3,\\n\\t\\t\\t\\t\\t\\t0xe2ea: 0x7cb2,\\n\\t\\t\\t\\t\\t\\t0xe2eb: 0x7cb1,\\n\\t\\t\\t\\t\\t\\t0xe2ec: 0x7cae,\\n\\t\\t\\t\\t\\t\\t0xe2ed: 0x7cb9,\\n\\t\\t\\t\\t\\t\\t0xe2ee: 0x7cbd,\\n\\t\\t\\t\\t\\t\\t0xe2ef: 0x7cc0,\\n\\t\\t\\t\\t\\t\\t0xe2f0: 0x7cc5,\\n\\t\\t\\t\\t\\t\\t0xe2f1: 0x7cc2,\\n\\t\\t\\t\\t\\t\\t0xe2f2: 0x7cd8,\\n\\t\\t\\t\\t\\t\\t0xe2f3: 0x7cd2,\\n\\t\\t\\t\\t\\t\\t0xe2f4: 0x7cdc,\\n\\t\\t\\t\\t\\t\\t0xe2f5: 0x7ce2,\\n\\t\\t\\t\\t\\t\\t0xe2f6: 0x9b3b,\\n\\t\\t\\t\\t\\t\\t0xe2f7: 0x7cef,\\n\\t\\t\\t\\t\\t\\t0xe2f8: 0x7cf2,\\n\\t\\t\\t\\t\\t\\t0xe2f9: 0x7cf4,\\n\\t\\t\\t\\t\\t\\t0xe2fa: 0x7cf6,\\n\\t\\t\\t\\t\\t\\t0xe2fb: 0x7cfa,\\n\\t\\t\\t\\t\\t\\t0xe2fc: 0x7d06,\\n\\t\\t\\t\\t\\t\\t0xe340: 0x7d02,\\n\\t\\t\\t\\t\\t\\t0xe341: 0x7d1c,\\n\\t\\t\\t\\t\\t\\t0xe342: 0x7d15,\\n\\t\\t\\t\\t\\t\\t0xe343: 0x7d0a,\\n\\t\\t\\t\\t\\t\\t0xe344: 0x7d45,\\n\\t\\t\\t\\t\\t\\t0xe345: 0x7d4b,\\n\\t\\t\\t\\t\\t\\t0xe346: 0x7d2e,\\n\\t\\t\\t\\t\\t\\t0xe347: 0x7d32,\\n\\t\\t\\t\\t\\t\\t0xe348: 0x7d3f,\\n\\t\\t\\t\\t\\t\\t0xe349: 0x7d35,\\n\\t\\t\\t\\t\\t\\t0xe34a: 0x7d46,\\n\\t\\t\\t\\t\\t\\t0xe34b: 0x7d73,\\n\\t\\t\\t\\t\\t\\t0xe34c: 0x7d56,\\n\\t\\t\\t\\t\\t\\t0xe34d: 0x7d4e,\\n\\t\\t\\t\\t\\t\\t0xe34e: 0x7d72,\\n\\t\\t\\t\\t\\t\\t0xe34f: 0x7d68,\\n\\t\\t\\t\\t\\t\\t0xe350: 0x7d6e,\\n\\t\\t\\t\\t\\t\\t0xe351: 0x7d4f,\\n\\t\\t\\t\\t\\t\\t0xe352: 0x7d63,\\n\\t\\t\\t\\t\\t\\t0xe353: 0x7d93,\\n\\t\\t\\t\\t\\t\\t0xe354: 0x7d89,\\n\\t\\t\\t\\t\\t\\t0xe355: 0x7d5b,\\n\\t\\t\\t\\t\\t\\t0xe356: 0x7d8f,\\n\\t\\t\\t\\t\\t\\t0xe357: 0x7d7d,\\n\\t\\t\\t\\t\\t\\t0xe358: 0x7d9b,\\n\\t\\t\\t\\t\\t\\t0xe359: 0x7dba,\\n\\t\\t\\t\\t\\t\\t0xe35a: 0x7dae,\\n\\t\\t\\t\\t\\t\\t0xe35b: 0x7da3,\\n\\t\\t\\t\\t\\t\\t0xe35c: 0x7db5,\\n\\t\\t\\t\\t\\t\\t0xe35d: 0x7dc7,\\n\\t\\t\\t\\t\\t\\t0xe35e: 0x7dbd,\\n\\t\\t\\t\\t\\t\\t0xe35f: 0x7dab,\\n\\t\\t\\t\\t\\t\\t0xe360: 0x7e3d,\\n\\t\\t\\t\\t\\t\\t0xe361: 0x7da2,\\n\\t\\t\\t\\t\\t\\t0xe362: 0x7daf,\\n\\t\\t\\t\\t\\t\\t0xe363: 0x7ddc,\\n\\t\\t\\t\\t\\t\\t0xe364: 0x7db8,\\n\\t\\t\\t\\t\\t\\t0xe365: 0x7d9f,\\n\\t\\t\\t\\t\\t\\t0xe366: 0x7db0,\\n\\t\\t\\t\\t\\t\\t0xe367: 0x7dd8,\\n\\t\\t\\t\\t\\t\\t0xe368: 0x7ddd,\\n\\t\\t\\t\\t\\t\\t0xe369: 0x7de4,\\n\\t\\t\\t\\t\\t\\t0xe36a: 0x7dde,\\n\\t\\t\\t\\t\\t\\t0xe36b: 0x7dfb,\\n\\t\\t\\t\\t\\t\\t0xe36c: 0x7df2,\\n\\t\\t\\t\\t\\t\\t0xe36d: 0x7de1,\\n\\t\\t\\t\\t\\t\\t0xe36e: 0x7e05,\\n\\t\\t\\t\\t\\t\\t0xe36f: 0x7e0a,\\n\\t\\t\\t\\t\\t\\t0xe370: 0x7e23,\\n\\t\\t\\t\\t\\t\\t0xe371: 0x7e21,\\n\\t\\t\\t\\t\\t\\t0xe372: 0x7e12,\\n\\t\\t\\t\\t\\t\\t0xe373: 0x7e31,\\n\\t\\t\\t\\t\\t\\t0xe374: 0x7e1f,\\n\\t\\t\\t\\t\\t\\t0xe375: 0x7e09,\\n\\t\\t\\t\\t\\t\\t0xe376: 0x7e0b,\\n\\t\\t\\t\\t\\t\\t0xe377: 0x7e22,\\n\\t\\t\\t\\t\\t\\t0xe378: 0x7e46,\\n\\t\\t\\t\\t\\t\\t0xe379: 0x7e66,\\n\\t\\t\\t\\t\\t\\t0xe37a: 0x7e3b,\\n\\t\\t\\t\\t\\t\\t0xe37b: 0x7e35,\\n\\t\\t\\t\\t\\t\\t0xe37c: 0x7e39,\\n\\t\\t\\t\\t\\t\\t0xe37d: 0x7e43,\\n\\t\\t\\t\\t\\t\\t0xe37e: 0x7e37,\\n\\t\\t\\t\\t\\t\\t0xe380: 0x7e32,\\n\\t\\t\\t\\t\\t\\t0xe381: 0x7e3a,\\n\\t\\t\\t\\t\\t\\t0xe382: 0x7e67,\\n\\t\\t\\t\\t\\t\\t0xe383: 0x7e5d,\\n\\t\\t\\t\\t\\t\\t0xe384: 0x7e56,\\n\\t\\t\\t\\t\\t\\t0xe385: 0x7e5e,\\n\\t\\t\\t\\t\\t\\t0xe386: 0x7e59,\\n\\t\\t\\t\\t\\t\\t0xe387: 0x7e5a,\\n\\t\\t\\t\\t\\t\\t0xe388: 0x7e79,\\n\\t\\t\\t\\t\\t\\t0xe389: 0x7e6a,\\n\\t\\t\\t\\t\\t\\t0xe38a: 0x7e69,\\n\\t\\t\\t\\t\\t\\t0xe38b: 0x7e7c,\\n\\t\\t\\t\\t\\t\\t0xe38c: 0x7e7b,\\n\\t\\t\\t\\t\\t\\t0xe38d: 0x7e83,\\n\\t\\t\\t\\t\\t\\t0xe38e: 0x7dd5,\\n\\t\\t\\t\\t\\t\\t0xe38f: 0x7e7d,\\n\\t\\t\\t\\t\\t\\t0xe390: 0x8fae,\\n\\t\\t\\t\\t\\t\\t0xe391: 0x7e7f,\\n\\t\\t\\t\\t\\t\\t0xe392: 0x7e88,\\n\\t\\t\\t\\t\\t\\t0xe393: 0x7e89,\\n\\t\\t\\t\\t\\t\\t0xe394: 0x7e8c,\\n\\t\\t\\t\\t\\t\\t0xe395: 0x7e92,\\n\\t\\t\\t\\t\\t\\t0xe396: 0x7e90,\\n\\t\\t\\t\\t\\t\\t0xe397: 0x7e93,\\n\\t\\t\\t\\t\\t\\t0xe398: 0x7e94,\\n\\t\\t\\t\\t\\t\\t0xe399: 0x7e96,\\n\\t\\t\\t\\t\\t\\t0xe39a: 0x7e8e,\\n\\t\\t\\t\\t\\t\\t0xe39b: 0x7e9b,\\n\\t\\t\\t\\t\\t\\t0xe39c: 0x7e9c,\\n\\t\\t\\t\\t\\t\\t0xe39d: 0x7f38,\\n\\t\\t\\t\\t\\t\\t0xe39e: 0x7f3a,\\n\\t\\t\\t\\t\\t\\t0xe39f: 0x7f45,\\n\\t\\t\\t\\t\\t\\t0xe3a0: 0x7f4c,\\n\\t\\t\\t\\t\\t\\t0xe3a1: 0x7f4d,\\n\\t\\t\\t\\t\\t\\t0xe3a2: 0x7f4e,\\n\\t\\t\\t\\t\\t\\t0xe3a3: 0x7f50,\\n\\t\\t\\t\\t\\t\\t0xe3a4: 0x7f51,\\n\\t\\t\\t\\t\\t\\t0xe3a5: 0x7f55,\\n\\t\\t\\t\\t\\t\\t0xe3a6: 0x7f54,\\n\\t\\t\\t\\t\\t\\t0xe3a7: 0x7f58,\\n\\t\\t\\t\\t\\t\\t0xe3a8: 0x7f5f,\\n\\t\\t\\t\\t\\t\\t0xe3a9: 0x7f60,\\n\\t\\t\\t\\t\\t\\t0xe3aa: 0x7f68,\\n\\t\\t\\t\\t\\t\\t0xe3ab: 0x7f69,\\n\\t\\t\\t\\t\\t\\t0xe3ac: 0x7f67,\\n\\t\\t\\t\\t\\t\\t0xe3ad: 0x7f78,\\n\\t\\t\\t\\t\\t\\t0xe3ae: 0x7f82,\\n\\t\\t\\t\\t\\t\\t0xe3af: 0x7f86,\\n\\t\\t\\t\\t\\t\\t0xe3b0: 0x7f83,\\n\\t\\t\\t\\t\\t\\t0xe3b1: 0x7f88,\\n\\t\\t\\t\\t\\t\\t0xe3b2: 0x7f87,\\n\\t\\t\\t\\t\\t\\t0xe3b3: 0x7f8c,\\n\\t\\t\\t\\t\\t\\t0xe3b4: 0x7f94,\\n\\t\\t\\t\\t\\t\\t0xe3b5: 0x7f9e,\\n\\t\\t\\t\\t\\t\\t0xe3b6: 0x7f9d,\\n\\t\\t\\t\\t\\t\\t0xe3b7: 0x7f9a,\\n\\t\\t\\t\\t\\t\\t0xe3b8: 0x7fa3,\\n\\t\\t\\t\\t\\t\\t0xe3b9: 0x7faf,\\n\\t\\t\\t\\t\\t\\t0xe3ba: 0x7fb2,\\n\\t\\t\\t\\t\\t\\t0xe3bb: 0x7fb9,\\n\\t\\t\\t\\t\\t\\t0xe3bc: 0x7fae,\\n\\t\\t\\t\\t\\t\\t0xe3bd: 0x7fb6,\\n\\t\\t\\t\\t\\t\\t0xe3be: 0x7fb8,\\n\\t\\t\\t\\t\\t\\t0xe3bf: 0x8b71,\\n\\t\\t\\t\\t\\t\\t0xe3c0: 0x7fc5,\\n\\t\\t\\t\\t\\t\\t0xe3c1: 0x7fc6,\\n\\t\\t\\t\\t\\t\\t0xe3c2: 0x7fca,\\n\\t\\t\\t\\t\\t\\t0xe3c3: 0x7fd5,\\n\\t\\t\\t\\t\\t\\t0xe3c4: 0x7fd4,\\n\\t\\t\\t\\t\\t\\t0xe3c5: 0x7fe1,\\n\\t\\t\\t\\t\\t\\t0xe3c6: 0x7fe6,\\n\\t\\t\\t\\t\\t\\t0xe3c7: 0x7fe9,\\n\\t\\t\\t\\t\\t\\t0xe3c8: 0x7ff3,\\n\\t\\t\\t\\t\\t\\t0xe3c9: 0x7ff9,\\n\\t\\t\\t\\t\\t\\t0xe3ca: 0x98dc,\\n\\t\\t\\t\\t\\t\\t0xe3cb: 0x8006,\\n\\t\\t\\t\\t\\t\\t0xe3cc: 0x8004,\\n\\t\\t\\t\\t\\t\\t0xe3cd: 0x800b,\\n\\t\\t\\t\\t\\t\\t0xe3ce: 0x8012,\\n\\t\\t\\t\\t\\t\\t0xe3cf: 0x8018,\\n\\t\\t\\t\\t\\t\\t0xe3d0: 0x8019,\\n\\t\\t\\t\\t\\t\\t0xe3d1: 0x801c,\\n\\t\\t\\t\\t\\t\\t0xe3d2: 0x8021,\\n\\t\\t\\t\\t\\t\\t0xe3d3: 0x8028,\\n\\t\\t\\t\\t\\t\\t0xe3d4: 0x803f,\\n\\t\\t\\t\\t\\t\\t0xe3d5: 0x803b,\\n\\t\\t\\t\\t\\t\\t0xe3d6: 0x804a,\\n\\t\\t\\t\\t\\t\\t0xe3d7: 0x8046,\\n\\t\\t\\t\\t\\t\\t0xe3d8: 0x8052,\\n\\t\\t\\t\\t\\t\\t0xe3d9: 0x8058,\\n\\t\\t\\t\\t\\t\\t0xe3da: 0x805a,\\n\\t\\t\\t\\t\\t\\t0xe3db: 0x805f,\\n\\t\\t\\t\\t\\t\\t0xe3dc: 0x8062,\\n\\t\\t\\t\\t\\t\\t0xe3dd: 0x8068,\\n\\t\\t\\t\\t\\t\\t0xe3de: 0x8073,\\n\\t\\t\\t\\t\\t\\t0xe3df: 0x8072,\\n\\t\\t\\t\\t\\t\\t0xe3e0: 0x8070,\\n\\t\\t\\t\\t\\t\\t0xe3e1: 0x8076,\\n\\t\\t\\t\\t\\t\\t0xe3e2: 0x8079,\\n\\t\\t\\t\\t\\t\\t0xe3e3: 0x807d,\\n\\t\\t\\t\\t\\t\\t0xe3e4: 0x807f,\\n\\t\\t\\t\\t\\t\\t0xe3e5: 0x8084,\\n\\t\\t\\t\\t\\t\\t0xe3e6: 0x8086,\\n\\t\\t\\t\\t\\t\\t0xe3e7: 0x8085,\\n\\t\\t\\t\\t\\t\\t0xe3e8: 0x809b,\\n\\t\\t\\t\\t\\t\\t0xe3e9: 0x8093,\\n\\t\\t\\t\\t\\t\\t0xe3ea: 0x809a,\\n\\t\\t\\t\\t\\t\\t0xe3eb: 0x80ad,\\n\\t\\t\\t\\t\\t\\t0xe3ec: 0x5190,\\n\\t\\t\\t\\t\\t\\t0xe3ed: 0x80ac,\\n\\t\\t\\t\\t\\t\\t0xe3ee: 0x80db,\\n\\t\\t\\t\\t\\t\\t0xe3ef: 0x80e5,\\n\\t\\t\\t\\t\\t\\t0xe3f0: 0x80d9,\\n\\t\\t\\t\\t\\t\\t0xe3f1: 0x80dd,\\n\\t\\t\\t\\t\\t\\t0xe3f2: 0x80c4,\\n\\t\\t\\t\\t\\t\\t0xe3f3: 0x80da,\\n\\t\\t\\t\\t\\t\\t0xe3f4: 0x80d6,\\n\\t\\t\\t\\t\\t\\t0xe3f5: 0x8109,\\n\\t\\t\\t\\t\\t\\t0xe3f6: 0x80ef,\\n\\t\\t\\t\\t\\t\\t0xe3f7: 0x80f1,\\n\\t\\t\\t\\t\\t\\t0xe3f8: 0x811b,\\n\\t\\t\\t\\t\\t\\t0xe3f9: 0x8129,\\n\\t\\t\\t\\t\\t\\t0xe3fa: 0x8123,\\n\\t\\t\\t\\t\\t\\t0xe3fb: 0x812f,\\n\\t\\t\\t\\t\\t\\t0xe3fc: 0x814b,\\n\\t\\t\\t\\t\\t\\t0xe440: 0x968b,\\n\\t\\t\\t\\t\\t\\t0xe441: 0x8146,\\n\\t\\t\\t\\t\\t\\t0xe442: 0x813e,\\n\\t\\t\\t\\t\\t\\t0xe443: 0x8153,\\n\\t\\t\\t\\t\\t\\t0xe444: 0x8151,\\n\\t\\t\\t\\t\\t\\t0xe445: 0x80fc,\\n\\t\\t\\t\\t\\t\\t0xe446: 0x8171,\\n\\t\\t\\t\\t\\t\\t0xe447: 0x816e,\\n\\t\\t\\t\\t\\t\\t0xe448: 0x8165,\\n\\t\\t\\t\\t\\t\\t0xe449: 0x8166,\\n\\t\\t\\t\\t\\t\\t0xe44a: 0x8174,\\n\\t\\t\\t\\t\\t\\t0xe44b: 0x8183,\\n\\t\\t\\t\\t\\t\\t0xe44c: 0x8188,\\n\\t\\t\\t\\t\\t\\t0xe44d: 0x818a,\\n\\t\\t\\t\\t\\t\\t0xe44e: 0x8180,\\n\\t\\t\\t\\t\\t\\t0xe44f: 0x8182,\\n\\t\\t\\t\\t\\t\\t0xe450: 0x81a0,\\n\\t\\t\\t\\t\\t\\t0xe451: 0x8195,\\n\\t\\t\\t\\t\\t\\t0xe452: 0x81a4,\\n\\t\\t\\t\\t\\t\\t0xe453: 0x81a3,\\n\\t\\t\\t\\t\\t\\t0xe454: 0x815f,\\n\\t\\t\\t\\t\\t\\t0xe455: 0x8193,\\n\\t\\t\\t\\t\\t\\t0xe456: 0x81a9,\\n\\t\\t\\t\\t\\t\\t0xe457: 0x81b0,\\n\\t\\t\\t\\t\\t\\t0xe458: 0x81b5,\\n\\t\\t\\t\\t\\t\\t0xe459: 0x81be,\\n\\t\\t\\t\\t\\t\\t0xe45a: 0x81b8,\\n\\t\\t\\t\\t\\t\\t0xe45b: 0x81bd,\\n\\t\\t\\t\\t\\t\\t0xe45c: 0x81c0,\\n\\t\\t\\t\\t\\t\\t0xe45d: 0x81c2,\\n\\t\\t\\t\\t\\t\\t0xe45e: 0x81ba,\\n\\t\\t\\t\\t\\t\\t0xe45f: 0x81c9,\\n\\t\\t\\t\\t\\t\\t0xe460: 0x81cd,\\n\\t\\t\\t\\t\\t\\t0xe461: 0x81d1,\\n\\t\\t\\t\\t\\t\\t0xe462: 0x81d9,\\n\\t\\t\\t\\t\\t\\t0xe463: 0x81d8,\\n\\t\\t\\t\\t\\t\\t0xe464: 0x81c8,\\n\\t\\t\\t\\t\\t\\t0xe465: 0x81da,\\n\\t\\t\\t\\t\\t\\t0xe466: 0x81df,\\n\\t\\t\\t\\t\\t\\t0xe467: 0x81e0,\\n\\t\\t\\t\\t\\t\\t0xe468: 0x81e7,\\n\\t\\t\\t\\t\\t\\t0xe469: 0x81fa,\\n\\t\\t\\t\\t\\t\\t0xe46a: 0x81fb,\\n\\t\\t\\t\\t\\t\\t0xe46b: 0x81fe,\\n\\t\\t\\t\\t\\t\\t0xe46c: 0x8201,\\n\\t\\t\\t\\t\\t\\t0xe46d: 0x8202,\\n\\t\\t\\t\\t\\t\\t0xe46e: 0x8205,\\n\\t\\t\\t\\t\\t\\t0xe46f: 0x8207,\\n\\t\\t\\t\\t\\t\\t0xe470: 0x820a,\\n\\t\\t\\t\\t\\t\\t0xe471: 0x820d,\\n\\t\\t\\t\\t\\t\\t0xe472: 0x8210,\\n\\t\\t\\t\\t\\t\\t0xe473: 0x8216,\\n\\t\\t\\t\\t\\t\\t0xe474: 0x8229,\\n\\t\\t\\t\\t\\t\\t0xe475: 0x822b,\\n\\t\\t\\t\\t\\t\\t0xe476: 0x8238,\\n\\t\\t\\t\\t\\t\\t0xe477: 0x8233,\\n\\t\\t\\t\\t\\t\\t0xe478: 0x8240,\\n\\t\\t\\t\\t\\t\\t0xe479: 0x8259,\\n\\t\\t\\t\\t\\t\\t0xe47a: 0x8258,\\n\\t\\t\\t\\t\\t\\t0xe47b: 0x825d,\\n\\t\\t\\t\\t\\t\\t0xe47c: 0x825a,\\n\\t\\t\\t\\t\\t\\t0xe47d: 0x825f,\\n\\t\\t\\t\\t\\t\\t0xe47e: 0x8264,\\n\\t\\t\\t\\t\\t\\t0xe480: 0x8262,\\n\\t\\t\\t\\t\\t\\t0xe481: 0x8268,\\n\\t\\t\\t\\t\\t\\t0xe482: 0x826a,\\n\\t\\t\\t\\t\\t\\t0xe483: 0x826b,\\n\\t\\t\\t\\t\\t\\t0xe484: 0x822e,\\n\\t\\t\\t\\t\\t\\t0xe485: 0x8271,\\n\\t\\t\\t\\t\\t\\t0xe486: 0x8277,\\n\\t\\t\\t\\t\\t\\t0xe487: 0x8278,\\n\\t\\t\\t\\t\\t\\t0xe488: 0x827e,\\n\\t\\t\\t\\t\\t\\t0xe489: 0x828d,\\n\\t\\t\\t\\t\\t\\t0xe48a: 0x8292,\\n\\t\\t\\t\\t\\t\\t0xe48b: 0x82ab,\\n\\t\\t\\t\\t\\t\\t0xe48c: 0x829f,\\n\\t\\t\\t\\t\\t\\t0xe48d: 0x82bb,\\n\\t\\t\\t\\t\\t\\t0xe48e: 0x82ac,\\n\\t\\t\\t\\t\\t\\t0xe48f: 0x82e1,\\n\\t\\t\\t\\t\\t\\t0xe490: 0x82e3,\\n\\t\\t\\t\\t\\t\\t0xe491: 0x82df,\\n\\t\\t\\t\\t\\t\\t0xe492: 0x82d2,\\n\\t\\t\\t\\t\\t\\t0xe493: 0x82f4,\\n\\t\\t\\t\\t\\t\\t0xe494: 0x82f3,\\n\\t\\t\\t\\t\\t\\t0xe495: 0x82fa,\\n\\t\\t\\t\\t\\t\\t0xe496: 0x8393,\\n\\t\\t\\t\\t\\t\\t0xe497: 0x8303,\\n\\t\\t\\t\\t\\t\\t0xe498: 0x82fb,\\n\\t\\t\\t\\t\\t\\t0xe499: 0x82f9,\\n\\t\\t\\t\\t\\t\\t0xe49a: 0x82de,\\n\\t\\t\\t\\t\\t\\t0xe49b: 0x8306,\\n\\t\\t\\t\\t\\t\\t0xe49c: 0x82dc,\\n\\t\\t\\t\\t\\t\\t0xe49d: 0x8309,\\n\\t\\t\\t\\t\\t\\t0xe49e: 0x82d9,\\n\\t\\t\\t\\t\\t\\t0xe49f: 0x8335,\\n\\t\\t\\t\\t\\t\\t0xe4a0: 0x8334,\\n\\t\\t\\t\\t\\t\\t0xe4a1: 0x8316,\\n\\t\\t\\t\\t\\t\\t0xe4a2: 0x8332,\\n\\t\\t\\t\\t\\t\\t0xe4a3: 0x8331,\\n\\t\\t\\t\\t\\t\\t0xe4a4: 0x8340,\\n\\t\\t\\t\\t\\t\\t0xe4a5: 0x8339,\\n\\t\\t\\t\\t\\t\\t0xe4a6: 0x8350,\\n\\t\\t\\t\\t\\t\\t0xe4a7: 0x8345,\\n\\t\\t\\t\\t\\t\\t0xe4a8: 0x832f,\\n\\t\\t\\t\\t\\t\\t0xe4a9: 0x832b,\\n\\t\\t\\t\\t\\t\\t0xe4aa: 0x8317,\\n\\t\\t\\t\\t\\t\\t0xe4ab: 0x8318,\\n\\t\\t\\t\\t\\t\\t0xe4ac: 0x8385,\\n\\t\\t\\t\\t\\t\\t0xe4ad: 0x839a,\\n\\t\\t\\t\\t\\t\\t0xe4ae: 0x83aa,\\n\\t\\t\\t\\t\\t\\t0xe4af: 0x839f,\\n\\t\\t\\t\\t\\t\\t0xe4b0: 0x83a2,\\n\\t\\t\\t\\t\\t\\t0xe4b1: 0x8396,\\n\\t\\t\\t\\t\\t\\t0xe4b2: 0x8323,\\n\\t\\t\\t\\t\\t\\t0xe4b3: 0x838e,\\n\\t\\t\\t\\t\\t\\t0xe4b4: 0x8387,\\n\\t\\t\\t\\t\\t\\t0xe4b5: 0x838a,\\n\\t\\t\\t\\t\\t\\t0xe4b6: 0x837c,\\n\\t\\t\\t\\t\\t\\t0xe4b7: 0x83b5,\\n\\t\\t\\t\\t\\t\\t0xe4b8: 0x8373,\\n\\t\\t\\t\\t\\t\\t0xe4b9: 0x8375,\\n\\t\\t\\t\\t\\t\\t0xe4ba: 0x83a0,\\n\\t\\t\\t\\t\\t\\t0xe4bb: 0x8389,\\n\\t\\t\\t\\t\\t\\t0xe4bc: 0x83a8,\\n\\t\\t\\t\\t\\t\\t0xe4bd: 0x83f4,\\n\\t\\t\\t\\t\\t\\t0xe4be: 0x8413,\\n\\t\\t\\t\\t\\t\\t0xe4bf: 0x83eb,\\n\\t\\t\\t\\t\\t\\t0xe4c0: 0x83ce,\\n\\t\\t\\t\\t\\t\\t0xe4c1: 0x83fd,\\n\\t\\t\\t\\t\\t\\t0xe4c2: 0x8403,\\n\\t\\t\\t\\t\\t\\t0xe4c3: 0x83d8,\\n\\t\\t\\t\\t\\t\\t0xe4c4: 0x840b,\\n\\t\\t\\t\\t\\t\\t0xe4c5: 0x83c1,\\n\\t\\t\\t\\t\\t\\t0xe4c6: 0x83f7,\\n\\t\\t\\t\\t\\t\\t0xe4c7: 0x8407,\\n\\t\\t\\t\\t\\t\\t0xe4c8: 0x83e0,\\n\\t\\t\\t\\t\\t\\t0xe4c9: 0x83f2,\\n\\t\\t\\t\\t\\t\\t0xe4ca: 0x840d,\\n\\t\\t\\t\\t\\t\\t0xe4cb: 0x8422,\\n\\t\\t\\t\\t\\t\\t0xe4cc: 0x8420,\\n\\t\\t\\t\\t\\t\\t0xe4cd: 0x83bd,\\n\\t\\t\\t\\t\\t\\t0xe4ce: 0x8438,\\n\\t\\t\\t\\t\\t\\t0xe4cf: 0x8506,\\n\\t\\t\\t\\t\\t\\t0xe4d0: 0x83fb,\\n\\t\\t\\t\\t\\t\\t0xe4d1: 0x846d,\\n\\t\\t\\t\\t\\t\\t0xe4d2: 0x842a,\\n\\t\\t\\t\\t\\t\\t0xe4d3: 0x843c,\\n\\t\\t\\t\\t\\t\\t0xe4d4: 0x855a,\\n\\t\\t\\t\\t\\t\\t0xe4d5: 0x8484,\\n\\t\\t\\t\\t\\t\\t0xe4d6: 0x8477,\\n\\t\\t\\t\\t\\t\\t0xe4d7: 0x846b,\\n\\t\\t\\t\\t\\t\\t0xe4d8: 0x84ad,\\n\\t\\t\\t\\t\\t\\t0xe4d9: 0x846e,\\n\\t\\t\\t\\t\\t\\t0xe4da: 0x8482,\\n\\t\\t\\t\\t\\t\\t0xe4db: 0x8469,\\n\\t\\t\\t\\t\\t\\t0xe4dc: 0x8446,\\n\\t\\t\\t\\t\\t\\t0xe4dd: 0x842c,\\n\\t\\t\\t\\t\\t\\t0xe4de: 0x846f,\\n\\t\\t\\t\\t\\t\\t0xe4df: 0x8479,\\n\\t\\t\\t\\t\\t\\t0xe4e0: 0x8435,\\n\\t\\t\\t\\t\\t\\t0xe4e1: 0x84ca,\\n\\t\\t\\t\\t\\t\\t0xe4e2: 0x8462,\\n\\t\\t\\t\\t\\t\\t0xe4e3: 0x84b9,\\n\\t\\t\\t\\t\\t\\t0xe4e4: 0x84bf,\\n\\t\\t\\t\\t\\t\\t0xe4e5: 0x849f,\\n\\t\\t\\t\\t\\t\\t0xe4e6: 0x84d9,\\n\\t\\t\\t\\t\\t\\t0xe4e7: 0x84cd,\\n\\t\\t\\t\\t\\t\\t0xe4e8: 0x84bb,\\n\\t\\t\\t\\t\\t\\t0xe4e9: 0x84da,\\n\\t\\t\\t\\t\\t\\t0xe4ea: 0x84d0,\\n\\t\\t\\t\\t\\t\\t0xe4eb: 0x84c1,\\n\\t\\t\\t\\t\\t\\t0xe4ec: 0x84c6,\\n\\t\\t\\t\\t\\t\\t0xe4ed: 0x84d6,\\n\\t\\t\\t\\t\\t\\t0xe4ee: 0x84a1,\\n\\t\\t\\t\\t\\t\\t0xe4ef: 0x8521,\\n\\t\\t\\t\\t\\t\\t0xe4f0: 0x84ff,\\n\\t\\t\\t\\t\\t\\t0xe4f1: 0x84f4,\\n\\t\\t\\t\\t\\t\\t0xe4f2: 0x8517,\\n\\t\\t\\t\\t\\t\\t0xe4f3: 0x8518,\\n\\t\\t\\t\\t\\t\\t0xe4f4: 0x852c,\\n\\t\\t\\t\\t\\t\\t0xe4f5: 0x851f,\\n\\t\\t\\t\\t\\t\\t0xe4f6: 0x8515,\\n\\t\\t\\t\\t\\t\\t0xe4f7: 0x8514,\\n\\t\\t\\t\\t\\t\\t0xe4f8: 0x84fc,\\n\\t\\t\\t\\t\\t\\t0xe4f9: 0x8540,\\n\\t\\t\\t\\t\\t\\t0xe4fa: 0x8563,\\n\\t\\t\\t\\t\\t\\t0xe4fb: 0x8558,\\n\\t\\t\\t\\t\\t\\t0xe4fc: 0x8548,\\n\\t\\t\\t\\t\\t\\t0xe540: 0x8541,\\n\\t\\t\\t\\t\\t\\t0xe541: 0x8602,\\n\\t\\t\\t\\t\\t\\t0xe542: 0x854b,\\n\\t\\t\\t\\t\\t\\t0xe543: 0x8555,\\n\\t\\t\\t\\t\\t\\t0xe544: 0x8580,\\n\\t\\t\\t\\t\\t\\t0xe545: 0x85a4,\\n\\t\\t\\t\\t\\t\\t0xe546: 0x8588,\\n\\t\\t\\t\\t\\t\\t0xe547: 0x8591,\\n\\t\\t\\t\\t\\t\\t0xe548: 0x858a,\\n\\t\\t\\t\\t\\t\\t0xe549: 0x85a8,\\n\\t\\t\\t\\t\\t\\t0xe54a: 0x856d,\\n\\t\\t\\t\\t\\t\\t0xe54b: 0x8594,\\n\\t\\t\\t\\t\\t\\t0xe54c: 0x859b,\\n\\t\\t\\t\\t\\t\\t0xe54d: 0x85ea,\\n\\t\\t\\t\\t\\t\\t0xe54e: 0x8587,\\n\\t\\t\\t\\t\\t\\t0xe54f: 0x859c,\\n\\t\\t\\t\\t\\t\\t0xe550: 0x8577,\\n\\t\\t\\t\\t\\t\\t0xe551: 0x857e,\\n\\t\\t\\t\\t\\t\\t0xe552: 0x8590,\\n\\t\\t\\t\\t\\t\\t0xe553: 0x85c9,\\n\\t\\t\\t\\t\\t\\t0xe554: 0x85ba,\\n\\t\\t\\t\\t\\t\\t0xe555: 0x85cf,\\n\\t\\t\\t\\t\\t\\t0xe556: 0x85b9,\\n\\t\\t\\t\\t\\t\\t0xe557: 0x85d0,\\n\\t\\t\\t\\t\\t\\t0xe558: 0x85d5,\\n\\t\\t\\t\\t\\t\\t0xe559: 0x85dd,\\n\\t\\t\\t\\t\\t\\t0xe55a: 0x85e5,\\n\\t\\t\\t\\t\\t\\t0xe55b: 0x85dc,\\n\\t\\t\\t\\t\\t\\t0xe55c: 0x85f9,\\n\\t\\t\\t\\t\\t\\t0xe55d: 0x860a,\\n\\t\\t\\t\\t\\t\\t0xe55e: 0x8613,\\n\\t\\t\\t\\t\\t\\t0xe55f: 0x860b,\\n\\t\\t\\t\\t\\t\\t0xe560: 0x85fe,\\n\\t\\t\\t\\t\\t\\t0xe561: 0x85fa,\\n\\t\\t\\t\\t\\t\\t0xe562: 0x8606,\\n\\t\\t\\t\\t\\t\\t0xe563: 0x8622,\\n\\t\\t\\t\\t\\t\\t0xe564: 0x861a,\\n\\t\\t\\t\\t\\t\\t0xe565: 0x8630,\\n\\t\\t\\t\\t\\t\\t0xe566: 0x863f,\\n\\t\\t\\t\\t\\t\\t0xe567: 0x864d,\\n\\t\\t\\t\\t\\t\\t0xe568: 0x4e55,\\n\\t\\t\\t\\t\\t\\t0xe569: 0x8654,\\n\\t\\t\\t\\t\\t\\t0xe56a: 0x865f,\\n\\t\\t\\t\\t\\t\\t0xe56b: 0x8667,\\n\\t\\t\\t\\t\\t\\t0xe56c: 0x8671,\\n\\t\\t\\t\\t\\t\\t0xe56d: 0x8693,\\n\\t\\t\\t\\t\\t\\t0xe56e: 0x86a3,\\n\\t\\t\\t\\t\\t\\t0xe56f: 0x86a9,\\n\\t\\t\\t\\t\\t\\t0xe570: 0x86aa,\\n\\t\\t\\t\\t\\t\\t0xe571: 0x868b,\\n\\t\\t\\t\\t\\t\\t0xe572: 0x868c,\\n\\t\\t\\t\\t\\t\\t0xe573: 0x86b6,\\n\\t\\t\\t\\t\\t\\t0xe574: 0x86af,\\n\\t\\t\\t\\t\\t\\t0xe575: 0x86c4,\\n\\t\\t\\t\\t\\t\\t0xe576: 0x86c6,\\n\\t\\t\\t\\t\\t\\t0xe577: 0x86b0,\\n\\t\\t\\t\\t\\t\\t0xe578: 0x86c9,\\n\\t\\t\\t\\t\\t\\t0xe579: 0x8823,\\n\\t\\t\\t\\t\\t\\t0xe57a: 0x86ab,\\n\\t\\t\\t\\t\\t\\t0xe57b: 0x86d4,\\n\\t\\t\\t\\t\\t\\t0xe57c: 0x86de,\\n\\t\\t\\t\\t\\t\\t0xe57d: 0x86e9,\\n\\t\\t\\t\\t\\t\\t0xe57e: 0x86ec,\\n\\t\\t\\t\\t\\t\\t0xe580: 0x86df,\\n\\t\\t\\t\\t\\t\\t0xe581: 0x86db,\\n\\t\\t\\t\\t\\t\\t0xe582: 0x86ef,\\n\\t\\t\\t\\t\\t\\t0xe583: 0x8712,\\n\\t\\t\\t\\t\\t\\t0xe584: 0x8706,\\n\\t\\t\\t\\t\\t\\t0xe585: 0x8708,\\n\\t\\t\\t\\t\\t\\t0xe586: 0x8700,\\n\\t\\t\\t\\t\\t\\t0xe587: 0x8703,\\n\\t\\t\\t\\t\\t\\t0xe588: 0x86fb,\\n\\t\\t\\t\\t\\t\\t0xe589: 0x8711,\\n\\t\\t\\t\\t\\t\\t0xe58a: 0x8709,\\n\\t\\t\\t\\t\\t\\t0xe58b: 0x870d,\\n\\t\\t\\t\\t\\t\\t0xe58c: 0x86f9,\\n\\t\\t\\t\\t\\t\\t0xe58d: 0x870a,\\n\\t\\t\\t\\t\\t\\t0xe58e: 0x8734,\\n\\t\\t\\t\\t\\t\\t0xe58f: 0x873f,\\n\\t\\t\\t\\t\\t\\t0xe590: 0x8737,\\n\\t\\t\\t\\t\\t\\t0xe591: 0x873b,\\n\\t\\t\\t\\t\\t\\t0xe592: 0x8725,\\n\\t\\t\\t\\t\\t\\t0xe593: 0x8729,\\n\\t\\t\\t\\t\\t\\t0xe594: 0x871a,\\n\\t\\t\\t\\t\\t\\t0xe595: 0x8760,\\n\\t\\t\\t\\t\\t\\t0xe596: 0x875f,\\n\\t\\t\\t\\t\\t\\t0xe597: 0x8778,\\n\\t\\t\\t\\t\\t\\t0xe598: 0x874c,\\n\\t\\t\\t\\t\\t\\t0xe599: 0x874e,\\n\\t\\t\\t\\t\\t\\t0xe59a: 0x8774,\\n\\t\\t\\t\\t\\t\\t0xe59b: 0x8757,\\n\\t\\t\\t\\t\\t\\t0xe59c: 0x8768,\\n\\t\\t\\t\\t\\t\\t0xe59d: 0x876e,\\n\\t\\t\\t\\t\\t\\t0xe59e: 0x8759,\\n\\t\\t\\t\\t\\t\\t0xe59f: 0x8753,\\n\\t\\t\\t\\t\\t\\t0xe5a0: 0x8763,\\n\\t\\t\\t\\t\\t\\t0xe5a1: 0x876a,\\n\\t\\t\\t\\t\\t\\t0xe5a2: 0x8805,\\n\\t\\t\\t\\t\\t\\t0xe5a3: 0x87a2,\\n\\t\\t\\t\\t\\t\\t0xe5a4: 0x879f,\\n\\t\\t\\t\\t\\t\\t0xe5a5: 0x8782,\\n\\t\\t\\t\\t\\t\\t0xe5a6: 0x87af,\\n\\t\\t\\t\\t\\t\\t0xe5a7: 0x87cb,\\n\\t\\t\\t\\t\\t\\t0xe5a8: 0x87bd,\\n\\t\\t\\t\\t\\t\\t0xe5a9: 0x87c0,\\n\\t\\t\\t\\t\\t\\t0xe5aa: 0x87d0,\\n\\t\\t\\t\\t\\t\\t0xe5ab: 0x96d6,\\n\\t\\t\\t\\t\\t\\t0xe5ac: 0x87ab,\\n\\t\\t\\t\\t\\t\\t0xe5ad: 0x87c4,\\n\\t\\t\\t\\t\\t\\t0xe5ae: 0x87b3,\\n\\t\\t\\t\\t\\t\\t0xe5af: 0x87c7,\\n\\t\\t\\t\\t\\t\\t0xe5b0: 0x87c6,\\n\\t\\t\\t\\t\\t\\t0xe5b1: 0x87bb,\\n\\t\\t\\t\\t\\t\\t0xe5b2: 0x87ef,\\n\\t\\t\\t\\t\\t\\t0xe5b3: 0x87f2,\\n\\t\\t\\t\\t\\t\\t0xe5b4: 0x87e0,\\n\\t\\t\\t\\t\\t\\t0xe5b5: 0x880f,\\n\\t\\t\\t\\t\\t\\t0xe5b6: 0x880d,\\n\\t\\t\\t\\t\\t\\t0xe5b7: 0x87fe,\\n\\t\\t\\t\\t\\t\\t0xe5b8: 0x87f6,\\n\\t\\t\\t\\t\\t\\t0xe5b9: 0x87f7,\\n\\t\\t\\t\\t\\t\\t0xe5ba: 0x880e,\\n\\t\\t\\t\\t\\t\\t0xe5bb: 0x87d2,\\n\\t\\t\\t\\t\\t\\t0xe5bc: 0x8811,\\n\\t\\t\\t\\t\\t\\t0xe5bd: 0x8816,\\n\\t\\t\\t\\t\\t\\t0xe5be: 0x8815,\\n\\t\\t\\t\\t\\t\\t0xe5bf: 0x8822,\\n\\t\\t\\t\\t\\t\\t0xe5c0: 0x8821,\\n\\t\\t\\t\\t\\t\\t0xe5c1: 0x8831,\\n\\t\\t\\t\\t\\t\\t0xe5c2: 0x8836,\\n\\t\\t\\t\\t\\t\\t0xe5c3: 0x8839,\\n\\t\\t\\t\\t\\t\\t0xe5c4: 0x8827,\\n\\t\\t\\t\\t\\t\\t0xe5c5: 0x883b,\\n\\t\\t\\t\\t\\t\\t0xe5c6: 0x8844,\\n\\t\\t\\t\\t\\t\\t0xe5c7: 0x8842,\\n\\t\\t\\t\\t\\t\\t0xe5c8: 0x8852,\\n\\t\\t\\t\\t\\t\\t0xe5c9: 0x8859,\\n\\t\\t\\t\\t\\t\\t0xe5ca: 0x885e,\\n\\t\\t\\t\\t\\t\\t0xe5cb: 0x8862,\\n\\t\\t\\t\\t\\t\\t0xe5cc: 0x886b,\\n\\t\\t\\t\\t\\t\\t0xe5cd: 0x8881,\\n\\t\\t\\t\\t\\t\\t0xe5ce: 0x887e,\\n\\t\\t\\t\\t\\t\\t0xe5cf: 0x889e,\\n\\t\\t\\t\\t\\t\\t0xe5d0: 0x8875,\\n\\t\\t\\t\\t\\t\\t0xe5d1: 0x887d,\\n\\t\\t\\t\\t\\t\\t0xe5d2: 0x88b5,\\n\\t\\t\\t\\t\\t\\t0xe5d3: 0x8872,\\n\\t\\t\\t\\t\\t\\t0xe5d4: 0x8882,\\n\\t\\t\\t\\t\\t\\t0xe5d5: 0x8897,\\n\\t\\t\\t\\t\\t\\t0xe5d6: 0x8892,\\n\\t\\t\\t\\t\\t\\t0xe5d7: 0x88ae,\\n\\t\\t\\t\\t\\t\\t0xe5d8: 0x8899,\\n\\t\\t\\t\\t\\t\\t0xe5d9: 0x88a2,\\n\\t\\t\\t\\t\\t\\t0xe5da: 0x888d,\\n\\t\\t\\t\\t\\t\\t0xe5db: 0x88a4,\\n\\t\\t\\t\\t\\t\\t0xe5dc: 0x88b0,\\n\\t\\t\\t\\t\\t\\t0xe5dd: 0x88bf,\\n\\t\\t\\t\\t\\t\\t0xe5de: 0x88b1,\\n\\t\\t\\t\\t\\t\\t0xe5df: 0x88c3,\\n\\t\\t\\t\\t\\t\\t0xe5e0: 0x88c4,\\n\\t\\t\\t\\t\\t\\t0xe5e1: 0x88d4,\\n\\t\\t\\t\\t\\t\\t0xe5e2: 0x88d8,\\n\\t\\t\\t\\t\\t\\t0xe5e3: 0x88d9,\\n\\t\\t\\t\\t\\t\\t0xe5e4: 0x88dd,\\n\\t\\t\\t\\t\\t\\t0xe5e5: 0x88f9,\\n\\t\\t\\t\\t\\t\\t0xe5e6: 0x8902,\\n\\t\\t\\t\\t\\t\\t0xe5e7: 0x88fc,\\n\\t\\t\\t\\t\\t\\t0xe5e8: 0x88f4,\\n\\t\\t\\t\\t\\t\\t0xe5e9: 0x88e8,\\n\\t\\t\\t\\t\\t\\t0xe5ea: 0x88f2,\\n\\t\\t\\t\\t\\t\\t0xe5eb: 0x8904,\\n\\t\\t\\t\\t\\t\\t0xe5ec: 0x890c,\\n\\t\\t\\t\\t\\t\\t0xe5ed: 0x890a,\\n\\t\\t\\t\\t\\t\\t0xe5ee: 0x8913,\\n\\t\\t\\t\\t\\t\\t0xe5ef: 0x8943,\\n\\t\\t\\t\\t\\t\\t0xe5f0: 0x891e,\\n\\t\\t\\t\\t\\t\\t0xe5f1: 0x8925,\\n\\t\\t\\t\\t\\t\\t0xe5f2: 0x892a,\\n\\t\\t\\t\\t\\t\\t0xe5f3: 0x892b,\\n\\t\\t\\t\\t\\t\\t0xe5f4: 0x8941,\\n\\t\\t\\t\\t\\t\\t0xe5f5: 0x8944,\\n\\t\\t\\t\\t\\t\\t0xe5f6: 0x893b,\\n\\t\\t\\t\\t\\t\\t0xe5f7: 0x8936,\\n\\t\\t\\t\\t\\t\\t0xe5f8: 0x8938,\\n\\t\\t\\t\\t\\t\\t0xe5f9: 0x894c,\\n\\t\\t\\t\\t\\t\\t0xe5fa: 0x891d,\\n\\t\\t\\t\\t\\t\\t0xe5fb: 0x8960,\\n\\t\\t\\t\\t\\t\\t0xe5fc: 0x895e,\\n\\t\\t\\t\\t\\t\\t0xe640: 0x8966,\\n\\t\\t\\t\\t\\t\\t0xe641: 0x8964,\\n\\t\\t\\t\\t\\t\\t0xe642: 0x896d,\\n\\t\\t\\t\\t\\t\\t0xe643: 0x896a,\\n\\t\\t\\t\\t\\t\\t0xe644: 0x896f,\\n\\t\\t\\t\\t\\t\\t0xe645: 0x8974,\\n\\t\\t\\t\\t\\t\\t0xe646: 0x8977,\\n\\t\\t\\t\\t\\t\\t0xe647: 0x897e,\\n\\t\\t\\t\\t\\t\\t0xe648: 0x8983,\\n\\t\\t\\t\\t\\t\\t0xe649: 0x8988,\\n\\t\\t\\t\\t\\t\\t0xe64a: 0x898a,\\n\\t\\t\\t\\t\\t\\t0xe64b: 0x8993,\\n\\t\\t\\t\\t\\t\\t0xe64c: 0x8998,\\n\\t\\t\\t\\t\\t\\t0xe64d: 0x89a1,\\n\\t\\t\\t\\t\\t\\t0xe64e: 0x89a9,\\n\\t\\t\\t\\t\\t\\t0xe64f: 0x89a6,\\n\\t\\t\\t\\t\\t\\t0xe650: 0x89ac,\\n\\t\\t\\t\\t\\t\\t0xe651: 0x89af,\\n\\t\\t\\t\\t\\t\\t0xe652: 0x89b2,\\n\\t\\t\\t\\t\\t\\t0xe653: 0x89ba,\\n\\t\\t\\t\\t\\t\\t0xe654: 0x89bd,\\n\\t\\t\\t\\t\\t\\t0xe655: 0x89bf,\\n\\t\\t\\t\\t\\t\\t0xe656: 0x89c0,\\n\\t\\t\\t\\t\\t\\t0xe657: 0x89da,\\n\\t\\t\\t\\t\\t\\t0xe658: 0x89dc,\\n\\t\\t\\t\\t\\t\\t0xe659: 0x89dd,\\n\\t\\t\\t\\t\\t\\t0xe65a: 0x89e7,\\n\\t\\t\\t\\t\\t\\t0xe65b: 0x89f4,\\n\\t\\t\\t\\t\\t\\t0xe65c: 0x89f8,\\n\\t\\t\\t\\t\\t\\t0xe65d: 0x8a03,\\n\\t\\t\\t\\t\\t\\t0xe65e: 0x8a16,\\n\\t\\t\\t\\t\\t\\t0xe65f: 0x8a10,\\n\\t\\t\\t\\t\\t\\t0xe660: 0x8a0c,\\n\\t\\t\\t\\t\\t\\t0xe661: 0x8a1b,\\n\\t\\t\\t\\t\\t\\t0xe662: 0x8a1d,\\n\\t\\t\\t\\t\\t\\t0xe663: 0x8a25,\\n\\t\\t\\t\\t\\t\\t0xe664: 0x8a36,\\n\\t\\t\\t\\t\\t\\t0xe665: 0x8a41,\\n\\t\\t\\t\\t\\t\\t0xe666: 0x8a5b,\\n\\t\\t\\t\\t\\t\\t0xe667: 0x8a52,\\n\\t\\t\\t\\t\\t\\t0xe668: 0x8a46,\\n\\t\\t\\t\\t\\t\\t0xe669: 0x8a48,\\n\\t\\t\\t\\t\\t\\t0xe66a: 0x8a7c,\\n\\t\\t\\t\\t\\t\\t0xe66b: 0x8a6d,\\n\\t\\t\\t\\t\\t\\t0xe66c: 0x8a6c,\\n\\t\\t\\t\\t\\t\\t0xe66d: 0x8a62,\\n\\t\\t\\t\\t\\t\\t0xe66e: 0x8a85,\\n\\t\\t\\t\\t\\t\\t0xe66f: 0x8a82,\\n\\t\\t\\t\\t\\t\\t0xe670: 0x8a84,\\n\\t\\t\\t\\t\\t\\t0xe671: 0x8aa8,\\n\\t\\t\\t\\t\\t\\t0xe672: 0x8aa1,\\n\\t\\t\\t\\t\\t\\t0xe673: 0x8a91,\\n\\t\\t\\t\\t\\t\\t0xe674: 0x8aa5,\\n\\t\\t\\t\\t\\t\\t0xe675: 0x8aa6,\\n\\t\\t\\t\\t\\t\\t0xe676: 0x8a9a,\\n\\t\\t\\t\\t\\t\\t0xe677: 0x8aa3,\\n\\t\\t\\t\\t\\t\\t0xe678: 0x8ac4,\\n\\t\\t\\t\\t\\t\\t0xe679: 0x8acd,\\n\\t\\t\\t\\t\\t\\t0xe67a: 0x8ac2,\\n\\t\\t\\t\\t\\t\\t0xe67b: 0x8ada,\\n\\t\\t\\t\\t\\t\\t0xe67c: 0x8aeb,\\n\\t\\t\\t\\t\\t\\t0xe67d: 0x8af3,\\n\\t\\t\\t\\t\\t\\t0xe67e: 0x8ae7,\\n\\t\\t\\t\\t\\t\\t0xe680: 0x8ae4,\\n\\t\\t\\t\\t\\t\\t0xe681: 0x8af1,\\n\\t\\t\\t\\t\\t\\t0xe682: 0x8b14,\\n\\t\\t\\t\\t\\t\\t0xe683: 0x8ae0,\\n\\t\\t\\t\\t\\t\\t0xe684: 0x8ae2,\\n\\t\\t\\t\\t\\t\\t0xe685: 0x8af7,\\n\\t\\t\\t\\t\\t\\t0xe686: 0x8ade,\\n\\t\\t\\t\\t\\t\\t0xe687: 0x8adb,\\n\\t\\t\\t\\t\\t\\t0xe688: 0x8b0c,\\n\\t\\t\\t\\t\\t\\t0xe689: 0x8b07,\\n\\t\\t\\t\\t\\t\\t0xe68a: 0x8b1a,\\n\\t\\t\\t\\t\\t\\t0xe68b: 0x8ae1,\\n\\t\\t\\t\\t\\t\\t0xe68c: 0x8b16,\\n\\t\\t\\t\\t\\t\\t0xe68d: 0x8b10,\\n\\t\\t\\t\\t\\t\\t0xe68e: 0x8b17,\\n\\t\\t\\t\\t\\t\\t0xe68f: 0x8b20,\\n\\t\\t\\t\\t\\t\\t0xe690: 0x8b33,\\n\\t\\t\\t\\t\\t\\t0xe691: 0x97ab,\\n\\t\\t\\t\\t\\t\\t0xe692: 0x8b26,\\n\\t\\t\\t\\t\\t\\t0xe693: 0x8b2b,\\n\\t\\t\\t\\t\\t\\t0xe694: 0x8b3e,\\n\\t\\t\\t\\t\\t\\t0xe695: 0x8b28,\\n\\t\\t\\t\\t\\t\\t0xe696: 0x8b41,\\n\\t\\t\\t\\t\\t\\t0xe697: 0x8b4c,\\n\\t\\t\\t\\t\\t\\t0xe698: 0x8b4f,\\n\\t\\t\\t\\t\\t\\t0xe699: 0x8b4e,\\n\\t\\t\\t\\t\\t\\t0xe69a: 0x8b49,\\n\\t\\t\\t\\t\\t\\t0xe69b: 0x8b56,\\n\\t\\t\\t\\t\\t\\t0xe69c: 0x8b5b,\\n\\t\\t\\t\\t\\t\\t0xe69d: 0x8b5a,\\n\\t\\t\\t\\t\\t\\t0xe69e: 0x8b6b,\\n\\t\\t\\t\\t\\t\\t0xe69f: 0x8b5f,\\n\\t\\t\\t\\t\\t\\t0xe6a0: 0x8b6c,\\n\\t\\t\\t\\t\\t\\t0xe6a1: 0x8b6f,\\n\\t\\t\\t\\t\\t\\t0xe6a2: 0x8b74,\\n\\t\\t\\t\\t\\t\\t0xe6a3: 0x8b7d,\\n\\t\\t\\t\\t\\t\\t0xe6a4: 0x8b80,\\n\\t\\t\\t\\t\\t\\t0xe6a5: 0x8b8c,\\n\\t\\t\\t\\t\\t\\t0xe6a6: 0x8b8e,\\n\\t\\t\\t\\t\\t\\t0xe6a7: 0x8b92,\\n\\t\\t\\t\\t\\t\\t0xe6a8: 0x8b93,\\n\\t\\t\\t\\t\\t\\t0xe6a9: 0x8b96,\\n\\t\\t\\t\\t\\t\\t0xe6aa: 0x8b99,\\n\\t\\t\\t\\t\\t\\t0xe6ab: 0x8b9a,\\n\\t\\t\\t\\t\\t\\t0xe6ac: 0x8c3a,\\n\\t\\t\\t\\t\\t\\t0xe6ad: 0x8c41,\\n\\t\\t\\t\\t\\t\\t0xe6ae: 0x8c3f,\\n\\t\\t\\t\\t\\t\\t0xe6af: 0x8c48,\\n\\t\\t\\t\\t\\t\\t0xe6b0: 0x8c4c,\\n\\t\\t\\t\\t\\t\\t0xe6b1: 0x8c4e,\\n\\t\\t\\t\\t\\t\\t0xe6b2: 0x8c50,\\n\\t\\t\\t\\t\\t\\t0xe6b3: 0x8c55,\\n\\t\\t\\t\\t\\t\\t0xe6b4: 0x8c62,\\n\\t\\t\\t\\t\\t\\t0xe6b5: 0x8c6c,\\n\\t\\t\\t\\t\\t\\t0xe6b6: 0x8c78,\\n\\t\\t\\t\\t\\t\\t0xe6b7: 0x8c7a,\\n\\t\\t\\t\\t\\t\\t0xe6b8: 0x8c82,\\n\\t\\t\\t\\t\\t\\t0xe6b9: 0x8c89,\\n\\t\\t\\t\\t\\t\\t0xe6ba: 0x8c85,\\n\\t\\t\\t\\t\\t\\t0xe6bb: 0x8c8a,\\n\\t\\t\\t\\t\\t\\t0xe6bc: 0x8c8d,\\n\\t\\t\\t\\t\\t\\t0xe6bd: 0x8c8e,\\n\\t\\t\\t\\t\\t\\t0xe6be: 0x8c94,\\n\\t\\t\\t\\t\\t\\t0xe6bf: 0x8c7c,\\n\\t\\t\\t\\t\\t\\t0xe6c0: 0x8c98,\\n\\t\\t\\t\\t\\t\\t0xe6c1: 0x621d,\\n\\t\\t\\t\\t\\t\\t0xe6c2: 0x8cad,\\n\\t\\t\\t\\t\\t\\t0xe6c3: 0x8caa,\\n\\t\\t\\t\\t\\t\\t0xe6c4: 0x8cbd,\\n\\t\\t\\t\\t\\t\\t0xe6c5: 0x8cb2,\\n\\t\\t\\t\\t\\t\\t0xe6c6: 0x8cb3,\\n\\t\\t\\t\\t\\t\\t0xe6c7: 0x8cae,\\n\\t\\t\\t\\t\\t\\t0xe6c8: 0x8cb6,\\n\\t\\t\\t\\t\\t\\t0xe6c9: 0x8cc8,\\n\\t\\t\\t\\t\\t\\t0xe6ca: 0x8cc1,\\n\\t\\t\\t\\t\\t\\t0xe6cb: 0x8ce4,\\n\\t\\t\\t\\t\\t\\t0xe6cc: 0x8ce3,\\n\\t\\t\\t\\t\\t\\t0xe6cd: 0x8cda,\\n\\t\\t\\t\\t\\t\\t0xe6ce: 0x8cfd,\\n\\t\\t\\t\\t\\t\\t0xe6cf: 0x8cfa,\\n\\t\\t\\t\\t\\t\\t0xe6d0: 0x8cfb,\\n\\t\\t\\t\\t\\t\\t0xe6d1: 0x8d04,\\n\\t\\t\\t\\t\\t\\t0xe6d2: 0x8d05,\\n\\t\\t\\t\\t\\t\\t0xe6d3: 0x8d0a,\\n\\t\\t\\t\\t\\t\\t0xe6d4: 0x8d07,\\n\\t\\t\\t\\t\\t\\t0xe6d5: 0x8d0f,\\n\\t\\t\\t\\t\\t\\t0xe6d6: 0x8d0d,\\n\\t\\t\\t\\t\\t\\t0xe6d7: 0x8d10,\\n\\t\\t\\t\\t\\t\\t0xe6d8: 0x9f4e,\\n\\t\\t\\t\\t\\t\\t0xe6d9: 0x8d13,\\n\\t\\t\\t\\t\\t\\t0xe6da: 0x8ccd,\\n\\t\\t\\t\\t\\t\\t0xe6db: 0x8d14,\\n\\t\\t\\t\\t\\t\\t0xe6dc: 0x8d16,\\n\\t\\t\\t\\t\\t\\t0xe6dd: 0x8d67,\\n\\t\\t\\t\\t\\t\\t0xe6de: 0x8d6d,\\n\\t\\t\\t\\t\\t\\t0xe6df: 0x8d71,\\n\\t\\t\\t\\t\\t\\t0xe6e0: 0x8d73,\\n\\t\\t\\t\\t\\t\\t0xe6e1: 0x8d81,\\n\\t\\t\\t\\t\\t\\t0xe6e2: 0x8d99,\\n\\t\\t\\t\\t\\t\\t0xe6e3: 0x8dc2,\\n\\t\\t\\t\\t\\t\\t0xe6e4: 0x8dbe,\\n\\t\\t\\t\\t\\t\\t0xe6e5: 0x8dba,\\n\\t\\t\\t\\t\\t\\t0xe6e6: 0x8dcf,\\n\\t\\t\\t\\t\\t\\t0xe6e7: 0x8dda,\\n\\t\\t\\t\\t\\t\\t0xe6e8: 0x8dd6,\\n\\t\\t\\t\\t\\t\\t0xe6e9: 0x8dcc,\\n\\t\\t\\t\\t\\t\\t0xe6ea: 0x8ddb,\\n\\t\\t\\t\\t\\t\\t0xe6eb: 0x8dcb,\\n\\t\\t\\t\\t\\t\\t0xe6ec: 0x8dea,\\n\\t\\t\\t\\t\\t\\t0xe6ed: 0x8deb,\\n\\t\\t\\t\\t\\t\\t0xe6ee: 0x8ddf,\\n\\t\\t\\t\\t\\t\\t0xe6ef: 0x8de3,\\n\\t\\t\\t\\t\\t\\t0xe6f0: 0x8dfc,\\n\\t\\t\\t\\t\\t\\t0xe6f1: 0x8e08,\\n\\t\\t\\t\\t\\t\\t0xe6f2: 0x8e09,\\n\\t\\t\\t\\t\\t\\t0xe6f3: 0x8dff,\\n\\t\\t\\t\\t\\t\\t0xe6f4: 0x8e1d,\\n\\t\\t\\t\\t\\t\\t0xe6f5: 0x8e1e,\\n\\t\\t\\t\\t\\t\\t0xe6f6: 0x8e10,\\n\\t\\t\\t\\t\\t\\t0xe6f7: 0x8e1f,\\n\\t\\t\\t\\t\\t\\t0xe6f8: 0x8e42,\\n\\t\\t\\t\\t\\t\\t0xe6f9: 0x8e35,\\n\\t\\t\\t\\t\\t\\t0xe6fa: 0x8e30,\\n\\t\\t\\t\\t\\t\\t0xe6fb: 0x8e34,\\n\\t\\t\\t\\t\\t\\t0xe6fc: 0x8e4a,\\n\\t\\t\\t\\t\\t\\t0xe740: 0x8e47,\\n\\t\\t\\t\\t\\t\\t0xe741: 0x8e49,\\n\\t\\t\\t\\t\\t\\t0xe742: 0x8e4c,\\n\\t\\t\\t\\t\\t\\t0xe743: 0x8e50,\\n\\t\\t\\t\\t\\t\\t0xe744: 0x8e48,\\n\\t\\t\\t\\t\\t\\t0xe745: 0x8e59,\\n\\t\\t\\t\\t\\t\\t0xe746: 0x8e64,\\n\\t\\t\\t\\t\\t\\t0xe747: 0x8e60,\\n\\t\\t\\t\\t\\t\\t0xe748: 0x8e2a,\\n\\t\\t\\t\\t\\t\\t0xe749: 0x8e63,\\n\\t\\t\\t\\t\\t\\t0xe74a: 0x8e55,\\n\\t\\t\\t\\t\\t\\t0xe74b: 0x8e76,\\n\\t\\t\\t\\t\\t\\t0xe74c: 0x8e72,\\n\\t\\t\\t\\t\\t\\t0xe74d: 0x8e7c,\\n\\t\\t\\t\\t\\t\\t0xe74e: 0x8e81,\\n\\t\\t\\t\\t\\t\\t0xe74f: 0x8e87,\\n\\t\\t\\t\\t\\t\\t0xe750: 0x8e85,\\n\\t\\t\\t\\t\\t\\t0xe751: 0x8e84,\\n\\t\\t\\t\\t\\t\\t0xe752: 0x8e8b,\\n\\t\\t\\t\\t\\t\\t0xe753: 0x8e8a,\\n\\t\\t\\t\\t\\t\\t0xe754: 0x8e93,\\n\\t\\t\\t\\t\\t\\t0xe755: 0x8e91,\\n\\t\\t\\t\\t\\t\\t0xe756: 0x8e94,\\n\\t\\t\\t\\t\\t\\t0xe757: 0x8e99,\\n\\t\\t\\t\\t\\t\\t0xe758: 0x8eaa,\\n\\t\\t\\t\\t\\t\\t0xe759: 0x8ea1,\\n\\t\\t\\t\\t\\t\\t0xe75a: 0x8eac,\\n\\t\\t\\t\\t\\t\\t0xe75b: 0x8eb0,\\n\\t\\t\\t\\t\\t\\t0xe75c: 0x8ec6,\\n\\t\\t\\t\\t\\t\\t0xe75d: 0x8eb1,\\n\\t\\t\\t\\t\\t\\t0xe75e: 0x8ebe,\\n\\t\\t\\t\\t\\t\\t0xe75f: 0x8ec5,\\n\\t\\t\\t\\t\\t\\t0xe760: 0x8ec8,\\n\\t\\t\\t\\t\\t\\t0xe761: 0x8ecb,\\n\\t\\t\\t\\t\\t\\t0xe762: 0x8edb,\\n\\t\\t\\t\\t\\t\\t0xe763: 0x8ee3,\\n\\t\\t\\t\\t\\t\\t0xe764: 0x8efc,\\n\\t\\t\\t\\t\\t\\t0xe765: 0x8efb,\\n\\t\\t\\t\\t\\t\\t0xe766: 0x8eeb,\\n\\t\\t\\t\\t\\t\\t0xe767: 0x8efe,\\n\\t\\t\\t\\t\\t\\t0xe768: 0x8f0a,\\n\\t\\t\\t\\t\\t\\t0xe769: 0x8f05,\\n\\t\\t\\t\\t\\t\\t0xe76a: 0x8f15,\\n\\t\\t\\t\\t\\t\\t0xe76b: 0x8f12,\\n\\t\\t\\t\\t\\t\\t0xe76c: 0x8f19,\\n\\t\\t\\t\\t\\t\\t0xe76d: 0x8f13,\\n\\t\\t\\t\\t\\t\\t0xe76e: 0x8f1c,\\n\\t\\t\\t\\t\\t\\t0xe76f: 0x8f1f,\\n\\t\\t\\t\\t\\t\\t0xe770: 0x8f1b,\\n\\t\\t\\t\\t\\t\\t0xe771: 0x8f0c,\\n\\t\\t\\t\\t\\t\\t0xe772: 0x8f26,\\n\\t\\t\\t\\t\\t\\t0xe773: 0x8f33,\\n\\t\\t\\t\\t\\t\\t0xe774: 0x8f3b,\\n\\t\\t\\t\\t\\t\\t0xe775: 0x8f39,\\n\\t\\t\\t\\t\\t\\t0xe776: 0x8f45,\\n\\t\\t\\t\\t\\t\\t0xe777: 0x8f42,\\n\\t\\t\\t\\t\\t\\t0xe778: 0x8f3e,\\n\\t\\t\\t\\t\\t\\t0xe779: 0x8f4c,\\n\\t\\t\\t\\t\\t\\t0xe77a: 0x8f49,\\n\\t\\t\\t\\t\\t\\t0xe77b: 0x8f46,\\n\\t\\t\\t\\t\\t\\t0xe77c: 0x8f4e,\\n\\t\\t\\t\\t\\t\\t0xe77d: 0x8f57,\\n\\t\\t\\t\\t\\t\\t0xe77e: 0x8f5c,\\n\\t\\t\\t\\t\\t\\t0xe780: 0x8f62,\\n\\t\\t\\t\\t\\t\\t0xe781: 0x8f63,\\n\\t\\t\\t\\t\\t\\t0xe782: 0x8f64,\\n\\t\\t\\t\\t\\t\\t0xe783: 0x8f9c,\\n\\t\\t\\t\\t\\t\\t0xe784: 0x8f9f,\\n\\t\\t\\t\\t\\t\\t0xe785: 0x8fa3,\\n\\t\\t\\t\\t\\t\\t0xe786: 0x8fad,\\n\\t\\t\\t\\t\\t\\t0xe787: 0x8faf,\\n\\t\\t\\t\\t\\t\\t0xe788: 0x8fb7,\\n\\t\\t\\t\\t\\t\\t0xe789: 0x8fda,\\n\\t\\t\\t\\t\\t\\t0xe78a: 0x8fe5,\\n\\t\\t\\t\\t\\t\\t0xe78b: 0x8fe2,\\n\\t\\t\\t\\t\\t\\t0xe78c: 0x8fea,\\n\\t\\t\\t\\t\\t\\t0xe78d: 0x8fef,\\n\\t\\t\\t\\t\\t\\t0xe78e: 0x9087,\\n\\t\\t\\t\\t\\t\\t0xe78f: 0x8ff4,\\n\\t\\t\\t\\t\\t\\t0xe790: 0x9005,\\n\\t\\t\\t\\t\\t\\t0xe791: 0x8ff9,\\n\\t\\t\\t\\t\\t\\t0xe792: 0x8ffa,\\n\\t\\t\\t\\t\\t\\t0xe793: 0x9011,\\n\\t\\t\\t\\t\\t\\t0xe794: 0x9015,\\n\\t\\t\\t\\t\\t\\t0xe795: 0x9021,\\n\\t\\t\\t\\t\\t\\t0xe796: 0x900d,\\n\\t\\t\\t\\t\\t\\t0xe797: 0x901e,\\n\\t\\t\\t\\t\\t\\t0xe798: 0x9016,\\n\\t\\t\\t\\t\\t\\t0xe799: 0x900b,\\n\\t\\t\\t\\t\\t\\t0xe79a: 0x9027,\\n\\t\\t\\t\\t\\t\\t0xe79b: 0x9036,\\n\\t\\t\\t\\t\\t\\t0xe79c: 0x9035,\\n\\t\\t\\t\\t\\t\\t0xe79d: 0x9039,\\n\\t\\t\\t\\t\\t\\t0xe79e: 0x8ff8,\\n\\t\\t\\t\\t\\t\\t0xe79f: 0x904f,\\n\\t\\t\\t\\t\\t\\t0xe7a0: 0x9050,\\n\\t\\t\\t\\t\\t\\t0xe7a1: 0x9051,\\n\\t\\t\\t\\t\\t\\t0xe7a2: 0x9052,\\n\\t\\t\\t\\t\\t\\t0xe7a3: 0x900e,\\n\\t\\t\\t\\t\\t\\t0xe7a4: 0x9049,\\n\\t\\t\\t\\t\\t\\t0xe7a5: 0x903e,\\n\\t\\t\\t\\t\\t\\t0xe7a6: 0x9056,\\n\\t\\t\\t\\t\\t\\t0xe7a7: 0x9058,\\n\\t\\t\\t\\t\\t\\t0xe7a8: 0x905e,\\n\\t\\t\\t\\t\\t\\t0xe7a9: 0x9068,\\n\\t\\t\\t\\t\\t\\t0xe7aa: 0x906f,\\n\\t\\t\\t\\t\\t\\t0xe7ab: 0x9076,\\n\\t\\t\\t\\t\\t\\t0xe7ac: 0x96a8,\\n\\t\\t\\t\\t\\t\\t0xe7ad: 0x9072,\\n\\t\\t\\t\\t\\t\\t0xe7ae: 0x9082,\\n\\t\\t\\t\\t\\t\\t0xe7af: 0x907d,\\n\\t\\t\\t\\t\\t\\t0xe7b0: 0x9081,\\n\\t\\t\\t\\t\\t\\t0xe7b1: 0x9080,\\n\\t\\t\\t\\t\\t\\t0xe7b2: 0x908a,\\n\\t\\t\\t\\t\\t\\t0xe7b3: 0x9089,\\n\\t\\t\\t\\t\\t\\t0xe7b4: 0x908f,\\n\\t\\t\\t\\t\\t\\t0xe7b5: 0x90a8,\\n\\t\\t\\t\\t\\t\\t0xe7b6: 0x90af,\\n\\t\\t\\t\\t\\t\\t0xe7b7: 0x90b1,\\n\\t\\t\\t\\t\\t\\t0xe7b8: 0x90b5,\\n\\t\\t\\t\\t\\t\\t0xe7b9: 0x90e2,\\n\\t\\t\\t\\t\\t\\t0xe7ba: 0x90e4,\\n\\t\\t\\t\\t\\t\\t0xe7bb: 0x6248,\\n\\t\\t\\t\\t\\t\\t0xe7bc: 0x90db,\\n\\t\\t\\t\\t\\t\\t0xe7bd: 0x9102,\\n\\t\\t\\t\\t\\t\\t0xe7be: 0x9112,\\n\\t\\t\\t\\t\\t\\t0xe7bf: 0x9119,\\n\\t\\t\\t\\t\\t\\t0xe7c0: 0x9132,\\n\\t\\t\\t\\t\\t\\t0xe7c1: 0x9130,\\n\\t\\t\\t\\t\\t\\t0xe7c2: 0x914a,\\n\\t\\t\\t\\t\\t\\t0xe7c3: 0x9156,\\n\\t\\t\\t\\t\\t\\t0xe7c4: 0x9158,\\n\\t\\t\\t\\t\\t\\t0xe7c5: 0x9163,\\n\\t\\t\\t\\t\\t\\t0xe7c6: 0x9165,\\n\\t\\t\\t\\t\\t\\t0xe7c7: 0x9169,\\n\\t\\t\\t\\t\\t\\t0xe7c8: 0x9173,\\n\\t\\t\\t\\t\\t\\t0xe7c9: 0x9172,\\n\\t\\t\\t\\t\\t\\t0xe7ca: 0x918b,\\n\\t\\t\\t\\t\\t\\t0xe7cb: 0x9189,\\n\\t\\t\\t\\t\\t\\t0xe7cc: 0x9182,\\n\\t\\t\\t\\t\\t\\t0xe7cd: 0x91a2,\\n\\t\\t\\t\\t\\t\\t0xe7ce: 0x91ab,\\n\\t\\t\\t\\t\\t\\t0xe7cf: 0x91af,\\n\\t\\t\\t\\t\\t\\t0xe7d0: 0x91aa,\\n\\t\\t\\t\\t\\t\\t0xe7d1: 0x91b5,\\n\\t\\t\\t\\t\\t\\t0xe7d2: 0x91b4,\\n\\t\\t\\t\\t\\t\\t0xe7d3: 0x91ba,\\n\\t\\t\\t\\t\\t\\t0xe7d4: 0x91c0,\\n\\t\\t\\t\\t\\t\\t0xe7d5: 0x91c1,\\n\\t\\t\\t\\t\\t\\t0xe7d6: 0x91c9,\\n\\t\\t\\t\\t\\t\\t0xe7d7: 0x91cb,\\n\\t\\t\\t\\t\\t\\t0xe7d8: 0x91d0,\\n\\t\\t\\t\\t\\t\\t0xe7d9: 0x91d6,\\n\\t\\t\\t\\t\\t\\t0xe7da: 0x91df,\\n\\t\\t\\t\\t\\t\\t0xe7db: 0x91e1,\\n\\t\\t\\t\\t\\t\\t0xe7dc: 0x91db,\\n\\t\\t\\t\\t\\t\\t0xe7dd: 0x91fc,\\n\\t\\t\\t\\t\\t\\t0xe7de: 0x91f5,\\n\\t\\t\\t\\t\\t\\t0xe7df: 0x91f6,\\n\\t\\t\\t\\t\\t\\t0xe7e0: 0x921e,\\n\\t\\t\\t\\t\\t\\t0xe7e1: 0x91ff,\\n\\t\\t\\t\\t\\t\\t0xe7e2: 0x9214,\\n\\t\\t\\t\\t\\t\\t0xe7e3: 0x922c,\\n\\t\\t\\t\\t\\t\\t0xe7e4: 0x9215,\\n\\t\\t\\t\\t\\t\\t0xe7e5: 0x9211,\\n\\t\\t\\t\\t\\t\\t0xe7e6: 0x925e,\\n\\t\\t\\t\\t\\t\\t0xe7e7: 0x9257,\\n\\t\\t\\t\\t\\t\\t0xe7e8: 0x9245,\\n\\t\\t\\t\\t\\t\\t0xe7e9: 0x9249,\\n\\t\\t\\t\\t\\t\\t0xe7ea: 0x9264,\\n\\t\\t\\t\\t\\t\\t0xe7eb: 0x9248,\\n\\t\\t\\t\\t\\t\\t0xe7ec: 0x9295,\\n\\t\\t\\t\\t\\t\\t0xe7ed: 0x923f,\\n\\t\\t\\t\\t\\t\\t0xe7ee: 0x924b,\\n\\t\\t\\t\\t\\t\\t0xe7ef: 0x9250,\\n\\t\\t\\t\\t\\t\\t0xe7f0: 0x929c,\\n\\t\\t\\t\\t\\t\\t0xe7f1: 0x9296,\\n\\t\\t\\t\\t\\t\\t0xe7f2: 0x9293,\\n\\t\\t\\t\\t\\t\\t0xe7f3: 0x929b,\\n\\t\\t\\t\\t\\t\\t0xe7f4: 0x925a,\\n\\t\\t\\t\\t\\t\\t0xe7f5: 0x92cf,\\n\\t\\t\\t\\t\\t\\t0xe7f6: 0x92b9,\\n\\t\\t\\t\\t\\t\\t0xe7f7: 0x92b7,\\n\\t\\t\\t\\t\\t\\t0xe7f8: 0x92e9,\\n\\t\\t\\t\\t\\t\\t0xe7f9: 0x930f,\\n\\t\\t\\t\\t\\t\\t0xe7fa: 0x92fa,\\n\\t\\t\\t\\t\\t\\t0xe7fb: 0x9344,\\n\\t\\t\\t\\t\\t\\t0xe7fc: 0x932e,\\n\\t\\t\\t\\t\\t\\t0xe840: 0x9319,\\n\\t\\t\\t\\t\\t\\t0xe841: 0x9322,\\n\\t\\t\\t\\t\\t\\t0xe842: 0x931a,\\n\\t\\t\\t\\t\\t\\t0xe843: 0x9323,\\n\\t\\t\\t\\t\\t\\t0xe844: 0x933a,\\n\\t\\t\\t\\t\\t\\t0xe845: 0x9335,\\n\\t\\t\\t\\t\\t\\t0xe846: 0x933b,\\n\\t\\t\\t\\t\\t\\t0xe847: 0x935c,\\n\\t\\t\\t\\t\\t\\t0xe848: 0x9360,\\n\\t\\t\\t\\t\\t\\t0xe849: 0x937c,\\n\\t\\t\\t\\t\\t\\t0xe84a: 0x936e,\\n\\t\\t\\t\\t\\t\\t0xe84b: 0x9356,\\n\\t\\t\\t\\t\\t\\t0xe84c: 0x93b0,\\n\\t\\t\\t\\t\\t\\t0xe84d: 0x93ac,\\n\\t\\t\\t\\t\\t\\t0xe84e: 0x93ad,\\n\\t\\t\\t\\t\\t\\t0xe84f: 0x9394,\\n\\t\\t\\t\\t\\t\\t0xe850: 0x93b9,\\n\\t\\t\\t\\t\\t\\t0xe851: 0x93d6,\\n\\t\\t\\t\\t\\t\\t0xe852: 0x93d7,\\n\\t\\t\\t\\t\\t\\t0xe853: 0x93e8,\\n\\t\\t\\t\\t\\t\\t0xe854: 0x93e5,\\n\\t\\t\\t\\t\\t\\t0xe855: 0x93d8,\\n\\t\\t\\t\\t\\t\\t0xe856: 0x93c3,\\n\\t\\t\\t\\t\\t\\t0xe857: 0x93dd,\\n\\t\\t\\t\\t\\t\\t0xe858: 0x93d0,\\n\\t\\t\\t\\t\\t\\t0xe859: 0x93c8,\\n\\t\\t\\t\\t\\t\\t0xe85a: 0x93e4,\\n\\t\\t\\t\\t\\t\\t0xe85b: 0x941a,\\n\\t\\t\\t\\t\\t\\t0xe85c: 0x9414,\\n\\t\\t\\t\\t\\t\\t0xe85d: 0x9413,\\n\\t\\t\\t\\t\\t\\t0xe85e: 0x9403,\\n\\t\\t\\t\\t\\t\\t0xe85f: 0x9407,\\n\\t\\t\\t\\t\\t\\t0xe860: 0x9410,\\n\\t\\t\\t\\t\\t\\t0xe861: 0x9436,\\n\\t\\t\\t\\t\\t\\t0xe862: 0x942b,\\n\\t\\t\\t\\t\\t\\t0xe863: 0x9435,\\n\\t\\t\\t\\t\\t\\t0xe864: 0x9421,\\n\\t\\t\\t\\t\\t\\t0xe865: 0x943a,\\n\\t\\t\\t\\t\\t\\t0xe866: 0x9441,\\n\\t\\t\\t\\t\\t\\t0xe867: 0x9452,\\n\\t\\t\\t\\t\\t\\t0xe868: 0x9444,\\n\\t\\t\\t\\t\\t\\t0xe869: 0x945b,\\n\\t\\t\\t\\t\\t\\t0xe86a: 0x9460,\\n\\t\\t\\t\\t\\t\\t0xe86b: 0x9462,\\n\\t\\t\\t\\t\\t\\t0xe86c: 0x945e,\\n\\t\\t\\t\\t\\t\\t0xe86d: 0x946a,\\n\\t\\t\\t\\t\\t\\t0xe86e: 0x9229,\\n\\t\\t\\t\\t\\t\\t0xe86f: 0x9470,\\n\\t\\t\\t\\t\\t\\t0xe870: 0x9475,\\n\\t\\t\\t\\t\\t\\t0xe871: 0x9477,\\n\\t\\t\\t\\t\\t\\t0xe872: 0x947d,\\n\\t\\t\\t\\t\\t\\t0xe873: 0x945a,\\n\\t\\t\\t\\t\\t\\t0xe874: 0x947c,\\n\\t\\t\\t\\t\\t\\t0xe875: 0x947e,\\n\\t\\t\\t\\t\\t\\t0xe876: 0x9481,\\n\\t\\t\\t\\t\\t\\t0xe877: 0x947f,\\n\\t\\t\\t\\t\\t\\t0xe878: 0x9582,\\n\\t\\t\\t\\t\\t\\t0xe879: 0x9587,\\n\\t\\t\\t\\t\\t\\t0xe87a: 0x958a,\\n\\t\\t\\t\\t\\t\\t0xe87b: 0x9594,\\n\\t\\t\\t\\t\\t\\t0xe87c: 0x9596,\\n\\t\\t\\t\\t\\t\\t0xe87d: 0x9598,\\n\\t\\t\\t\\t\\t\\t0xe87e: 0x9599,\\n\\t\\t\\t\\t\\t\\t0xe880: 0x95a0,\\n\\t\\t\\t\\t\\t\\t0xe881: 0x95a8,\\n\\t\\t\\t\\t\\t\\t0xe882: 0x95a7,\\n\\t\\t\\t\\t\\t\\t0xe883: 0x95ad,\\n\\t\\t\\t\\t\\t\\t0xe884: 0x95bc,\\n\\t\\t\\t\\t\\t\\t0xe885: 0x95bb,\\n\\t\\t\\t\\t\\t\\t0xe886: 0x95b9,\\n\\t\\t\\t\\t\\t\\t0xe887: 0x95be,\\n\\t\\t\\t\\t\\t\\t0xe888: 0x95ca,\\n\\t\\t\\t\\t\\t\\t0xe889: 0x6ff6,\\n\\t\\t\\t\\t\\t\\t0xe88a: 0x95c3,\\n\\t\\t\\t\\t\\t\\t0xe88b: 0x95cd,\\n\\t\\t\\t\\t\\t\\t0xe88c: 0x95cc,\\n\\t\\t\\t\\t\\t\\t0xe88d: 0x95d5,\\n\\t\\t\\t\\t\\t\\t0xe88e: 0x95d4,\\n\\t\\t\\t\\t\\t\\t0xe88f: 0x95d6,\\n\\t\\t\\t\\t\\t\\t0xe890: 0x95dc,\\n\\t\\t\\t\\t\\t\\t0xe891: 0x95e1,\\n\\t\\t\\t\\t\\t\\t0xe892: 0x95e5,\\n\\t\\t\\t\\t\\t\\t0xe893: 0x95e2,\\n\\t\\t\\t\\t\\t\\t0xe894: 0x9621,\\n\\t\\t\\t\\t\\t\\t0xe895: 0x9628,\\n\\t\\t\\t\\t\\t\\t0xe896: 0x962e,\\n\\t\\t\\t\\t\\t\\t0xe897: 0x962f,\\n\\t\\t\\t\\t\\t\\t0xe898: 0x9642,\\n\\t\\t\\t\\t\\t\\t0xe899: 0x964c,\\n\\t\\t\\t\\t\\t\\t0xe89a: 0x964f,\\n\\t\\t\\t\\t\\t\\t0xe89b: 0x964b,\\n\\t\\t\\t\\t\\t\\t0xe89c: 0x9677,\\n\\t\\t\\t\\t\\t\\t0xe89d: 0x965c,\\n\\t\\t\\t\\t\\t\\t0xe89e: 0x965e,\\n\\t\\t\\t\\t\\t\\t0xe89f: 0x965d,\\n\\t\\t\\t\\t\\t\\t0xe8a0: 0x965f,\\n\\t\\t\\t\\t\\t\\t0xe8a1: 0x9666,\\n\\t\\t\\t\\t\\t\\t0xe8a2: 0x9672,\\n\\t\\t\\t\\t\\t\\t0xe8a3: 0x966c,\\n\\t\\t\\t\\t\\t\\t0xe8a4: 0x968d,\\n\\t\\t\\t\\t\\t\\t0xe8a5: 0x9698,\\n\\t\\t\\t\\t\\t\\t0xe8a6: 0x9695,\\n\\t\\t\\t\\t\\t\\t0xe8a7: 0x9697,\\n\\t\\t\\t\\t\\t\\t0xe8a8: 0x96aa,\\n\\t\\t\\t\\t\\t\\t0xe8a9: 0x96a7,\\n\\t\\t\\t\\t\\t\\t0xe8aa: 0x96b1,\\n\\t\\t\\t\\t\\t\\t0xe8ab: 0x96b2,\\n\\t\\t\\t\\t\\t\\t0xe8ac: 0x96b0,\\n\\t\\t\\t\\t\\t\\t0xe8ad: 0x96b4,\\n\\t\\t\\t\\t\\t\\t0xe8ae: 0x96b6,\\n\\t\\t\\t\\t\\t\\t0xe8af: 0x96b8,\\n\\t\\t\\t\\t\\t\\t0xe8b0: 0x96b9,\\n\\t\\t\\t\\t\\t\\t0xe8b1: 0x96ce,\\n\\t\\t\\t\\t\\t\\t0xe8b2: 0x96cb,\\n\\t\\t\\t\\t\\t\\t0xe8b3: 0x96c9,\\n\\t\\t\\t\\t\\t\\t0xe8b4: 0x96cd,\\n\\t\\t\\t\\t\\t\\t0xe8b5: 0x894d,\\n\\t\\t\\t\\t\\t\\t0xe8b6: 0x96dc,\\n\\t\\t\\t\\t\\t\\t0xe8b7: 0x970d,\\n\\t\\t\\t\\t\\t\\t0xe8b8: 0x96d5,\\n\\t\\t\\t\\t\\t\\t0xe8b9: 0x96f9,\\n\\t\\t\\t\\t\\t\\t0xe8ba: 0x9704,\\n\\t\\t\\t\\t\\t\\t0xe8bb: 0x9706,\\n\\t\\t\\t\\t\\t\\t0xe8bc: 0x9708,\\n\\t\\t\\t\\t\\t\\t0xe8bd: 0x9713,\\n\\t\\t\\t\\t\\t\\t0xe8be: 0x970e,\\n\\t\\t\\t\\t\\t\\t0xe8bf: 0x9711,\\n\\t\\t\\t\\t\\t\\t0xe8c0: 0x970f,\\n\\t\\t\\t\\t\\t\\t0xe8c1: 0x9716,\\n\\t\\t\\t\\t\\t\\t0xe8c2: 0x9719,\\n\\t\\t\\t\\t\\t\\t0xe8c3: 0x9724,\\n\\t\\t\\t\\t\\t\\t0xe8c4: 0x972a,\\n\\t\\t\\t\\t\\t\\t0xe8c5: 0x9730,\\n\\t\\t\\t\\t\\t\\t0xe8c6: 0x9739,\\n\\t\\t\\t\\t\\t\\t0xe8c7: 0x973d,\\n\\t\\t\\t\\t\\t\\t0xe8c8: 0x973e,\\n\\t\\t\\t\\t\\t\\t0xe8c9: 0x9744,\\n\\t\\t\\t\\t\\t\\t0xe8ca: 0x9746,\\n\\t\\t\\t\\t\\t\\t0xe8cb: 0x9748,\\n\\t\\t\\t\\t\\t\\t0xe8cc: 0x9742,\\n\\t\\t\\t\\t\\t\\t0xe8cd: 0x9749,\\n\\t\\t\\t\\t\\t\\t0xe8ce: 0x975c,\\n\\t\\t\\t\\t\\t\\t0xe8cf: 0x9760,\\n\\t\\t\\t\\t\\t\\t0xe8d0: 0x9764,\\n\\t\\t\\t\\t\\t\\t0xe8d1: 0x9766,\\n\\t\\t\\t\\t\\t\\t0xe8d2: 0x9768,\\n\\t\\t\\t\\t\\t\\t0xe8d3: 0x52d2,\\n\\t\\t\\t\\t\\t\\t0xe8d4: 0x976b,\\n\\t\\t\\t\\t\\t\\t0xe8d5: 0x9771,\\n\\t\\t\\t\\t\\t\\t0xe8d6: 0x9779,\\n\\t\\t\\t\\t\\t\\t0xe8d7: 0x9785,\\n\\t\\t\\t\\t\\t\\t0xe8d8: 0x977c,\\n\\t\\t\\t\\t\\t\\t0xe8d9: 0x9781,\\n\\t\\t\\t\\t\\t\\t0xe8da: 0x977a,\\n\\t\\t\\t\\t\\t\\t0xe8db: 0x9786,\\n\\t\\t\\t\\t\\t\\t0xe8dc: 0x978b,\\n\\t\\t\\t\\t\\t\\t0xe8dd: 0x978f,\\n\\t\\t\\t\\t\\t\\t0xe8de: 0x9790,\\n\\t\\t\\t\\t\\t\\t0xe8df: 0x979c,\\n\\t\\t\\t\\t\\t\\t0xe8e0: 0x97a8,\\n\\t\\t\\t\\t\\t\\t0xe8e1: 0x97a6,\\n\\t\\t\\t\\t\\t\\t0xe8e2: 0x97a3,\\n\\t\\t\\t\\t\\t\\t0xe8e3: 0x97b3,\\n\\t\\t\\t\\t\\t\\t0xe8e4: 0x97b4,\\n\\t\\t\\t\\t\\t\\t0xe8e5: 0x97c3,\\n\\t\\t\\t\\t\\t\\t0xe8e6: 0x97c6,\\n\\t\\t\\t\\t\\t\\t0xe8e7: 0x97c8,\\n\\t\\t\\t\\t\\t\\t0xe8e8: 0x97cb,\\n\\t\\t\\t\\t\\t\\t0xe8e9: 0x97dc,\\n\\t\\t\\t\\t\\t\\t0xe8ea: 0x97ed,\\n\\t\\t\\t\\t\\t\\t0xe8eb: 0x9f4f,\\n\\t\\t\\t\\t\\t\\t0xe8ec: 0x97f2,\\n\\t\\t\\t\\t\\t\\t0xe8ed: 0x7adf,\\n\\t\\t\\t\\t\\t\\t0xe8ee: 0x97f6,\\n\\t\\t\\t\\t\\t\\t0xe8ef: 0x97f5,\\n\\t\\t\\t\\t\\t\\t0xe8f0: 0x980f,\\n\\t\\t\\t\\t\\t\\t0xe8f1: 0x980c,\\n\\t\\t\\t\\t\\t\\t0xe8f2: 0x9838,\\n\\t\\t\\t\\t\\t\\t0xe8f3: 0x9824,\\n\\t\\t\\t\\t\\t\\t0xe8f4: 0x9821,\\n\\t\\t\\t\\t\\t\\t0xe8f5: 0x9837,\\n\\t\\t\\t\\t\\t\\t0xe8f6: 0x983d,\\n\\t\\t\\t\\t\\t\\t0xe8f7: 0x9846,\\n\\t\\t\\t\\t\\t\\t0xe8f8: 0x984f,\\n\\t\\t\\t\\t\\t\\t0xe8f9: 0x984b,\\n\\t\\t\\t\\t\\t\\t0xe8fa: 0x986b,\\n\\t\\t\\t\\t\\t\\t0xe8fb: 0x986f,\\n\\t\\t\\t\\t\\t\\t0xe8fc: 0x9870,\\n\\t\\t\\t\\t\\t\\t0xe940: 0x9871,\\n\\t\\t\\t\\t\\t\\t0xe941: 0x9874,\\n\\t\\t\\t\\t\\t\\t0xe942: 0x9873,\\n\\t\\t\\t\\t\\t\\t0xe943: 0x98aa,\\n\\t\\t\\t\\t\\t\\t0xe944: 0x98af,\\n\\t\\t\\t\\t\\t\\t0xe945: 0x98b1,\\n\\t\\t\\t\\t\\t\\t0xe946: 0x98b6,\\n\\t\\t\\t\\t\\t\\t0xe947: 0x98c4,\\n\\t\\t\\t\\t\\t\\t0xe948: 0x98c3,\\n\\t\\t\\t\\t\\t\\t0xe949: 0x98c6,\\n\\t\\t\\t\\t\\t\\t0xe94a: 0x98e9,\\n\\t\\t\\t\\t\\t\\t0xe94b: 0x98eb,\\n\\t\\t\\t\\t\\t\\t0xe94c: 0x9903,\\n\\t\\t\\t\\t\\t\\t0xe94d: 0x9909,\\n\\t\\t\\t\\t\\t\\t0xe94e: 0x9912,\\n\\t\\t\\t\\t\\t\\t0xe94f: 0x9914,\\n\\t\\t\\t\\t\\t\\t0xe950: 0x9918,\\n\\t\\t\\t\\t\\t\\t0xe951: 0x9921,\\n\\t\\t\\t\\t\\t\\t0xe952: 0x991d,\\n\\t\\t\\t\\t\\t\\t0xe953: 0x991e,\\n\\t\\t\\t\\t\\t\\t0xe954: 0x9924,\\n\\t\\t\\t\\t\\t\\t0xe955: 0x9920,\\n\\t\\t\\t\\t\\t\\t0xe956: 0x992c,\\n\\t\\t\\t\\t\\t\\t0xe957: 0x992e,\\n\\t\\t\\t\\t\\t\\t0xe958: 0x993d,\\n\\t\\t\\t\\t\\t\\t0xe959: 0x993e,\\n\\t\\t\\t\\t\\t\\t0xe95a: 0x9942,\\n\\t\\t\\t\\t\\t\\t0xe95b: 0x9949,\\n\\t\\t\\t\\t\\t\\t0xe95c: 0x9945,\\n\\t\\t\\t\\t\\t\\t0xe95d: 0x9950,\\n\\t\\t\\t\\t\\t\\t0xe95e: 0x994b,\\n\\t\\t\\t\\t\\t\\t0xe95f: 0x9951,\\n\\t\\t\\t\\t\\t\\t0xe960: 0x9952,\\n\\t\\t\\t\\t\\t\\t0xe961: 0x994c,\\n\\t\\t\\t\\t\\t\\t0xe962: 0x9955,\\n\\t\\t\\t\\t\\t\\t0xe963: 0x9997,\\n\\t\\t\\t\\t\\t\\t0xe964: 0x9998,\\n\\t\\t\\t\\t\\t\\t0xe965: 0x99a5,\\n\\t\\t\\t\\t\\t\\t0xe966: 0x99ad,\\n\\t\\t\\t\\t\\t\\t0xe967: 0x99ae,\\n\\t\\t\\t\\t\\t\\t0xe968: 0x99bc,\\n\\t\\t\\t\\t\\t\\t0xe969: 0x99df,\\n\\t\\t\\t\\t\\t\\t0xe96a: 0x99db,\\n\\t\\t\\t\\t\\t\\t0xe96b: 0x99dd,\\n\\t\\t\\t\\t\\t\\t0xe96c: 0x99d8,\\n\\t\\t\\t\\t\\t\\t0xe96d: 0x99d1,\\n\\t\\t\\t\\t\\t\\t0xe96e: 0x99ed,\\n\\t\\t\\t\\t\\t\\t0xe96f: 0x99ee,\\n\\t\\t\\t\\t\\t\\t0xe970: 0x99f1,\\n\\t\\t\\t\\t\\t\\t0xe971: 0x99f2,\\n\\t\\t\\t\\t\\t\\t0xe972: 0x99fb,\\n\\t\\t\\t\\t\\t\\t0xe973: 0x99f8,\\n\\t\\t\\t\\t\\t\\t0xe974: 0x9a01,\\n\\t\\t\\t\\t\\t\\t0xe975: 0x9a0f,\\n\\t\\t\\t\\t\\t\\t0xe976: 0x9a05,\\n\\t\\t\\t\\t\\t\\t0xe977: 0x99e2,\\n\\t\\t\\t\\t\\t\\t0xe978: 0x9a19,\\n\\t\\t\\t\\t\\t\\t0xe979: 0x9a2b,\\n\\t\\t\\t\\t\\t\\t0xe97a: 0x9a37,\\n\\t\\t\\t\\t\\t\\t0xe97b: 0x9a45,\\n\\t\\t\\t\\t\\t\\t0xe97c: 0x9a42,\\n\\t\\t\\t\\t\\t\\t0xe97d: 0x9a40,\\n\\t\\t\\t\\t\\t\\t0xe97e: 0x9a43,\\n\\t\\t\\t\\t\\t\\t0xe980: 0x9a3e,\\n\\t\\t\\t\\t\\t\\t0xe981: 0x9a55,\\n\\t\\t\\t\\t\\t\\t0xe982: 0x9a4d,\\n\\t\\t\\t\\t\\t\\t0xe983: 0x9a5b,\\n\\t\\t\\t\\t\\t\\t0xe984: 0x9a57,\\n\\t\\t\\t\\t\\t\\t0xe985: 0x9a5f,\\n\\t\\t\\t\\t\\t\\t0xe986: 0x9a62,\\n\\t\\t\\t\\t\\t\\t0xe987: 0x9a65,\\n\\t\\t\\t\\t\\t\\t0xe988: 0x9a64,\\n\\t\\t\\t\\t\\t\\t0xe989: 0x9a69,\\n\\t\\t\\t\\t\\t\\t0xe98a: 0x9a6b,\\n\\t\\t\\t\\t\\t\\t0xe98b: 0x9a6a,\\n\\t\\t\\t\\t\\t\\t0xe98c: 0x9aad,\\n\\t\\t\\t\\t\\t\\t0xe98d: 0x9ab0,\\n\\t\\t\\t\\t\\t\\t0xe98e: 0x9abc,\\n\\t\\t\\t\\t\\t\\t0xe98f: 0x9ac0,\\n\\t\\t\\t\\t\\t\\t0xe990: 0x9acf,\\n\\t\\t\\t\\t\\t\\t0xe991: 0x9ad1,\\n\\t\\t\\t\\t\\t\\t0xe992: 0x9ad3,\\n\\t\\t\\t\\t\\t\\t0xe993: 0x9ad4,\\n\\t\\t\\t\\t\\t\\t0xe994: 0x9ade,\\n\\t\\t\\t\\t\\t\\t0xe995: 0x9adf,\\n\\t\\t\\t\\t\\t\\t0xe996: 0x9ae2,\\n\\t\\t\\t\\t\\t\\t0xe997: 0x9ae3,\\n\\t\\t\\t\\t\\t\\t0xe998: 0x9ae6,\\n\\t\\t\\t\\t\\t\\t0xe999: 0x9aef,\\n\\t\\t\\t\\t\\t\\t0xe99a: 0x9aeb,\\n\\t\\t\\t\\t\\t\\t0xe99b: 0x9aee,\\n\\t\\t\\t\\t\\t\\t0xe99c: 0x9af4,\\n\\t\\t\\t\\t\\t\\t0xe99d: 0x9af1,\\n\\t\\t\\t\\t\\t\\t0xe99e: 0x9af7,\\n\\t\\t\\t\\t\\t\\t0xe99f: 0x9afb,\\n\\t\\t\\t\\t\\t\\t0xe9a0: 0x9b06,\\n\\t\\t\\t\\t\\t\\t0xe9a1: 0x9b18,\\n\\t\\t\\t\\t\\t\\t0xe9a2: 0x9b1a,\\n\\t\\t\\t\\t\\t\\t0xe9a3: 0x9b1f,\\n\\t\\t\\t\\t\\t\\t0xe9a4: 0x9b22,\\n\\t\\t\\t\\t\\t\\t0xe9a5: 0x9b23,\\n\\t\\t\\t\\t\\t\\t0xe9a6: 0x9b25,\\n\\t\\t\\t\\t\\t\\t0xe9a7: 0x9b27,\\n\\t\\t\\t\\t\\t\\t0xe9a8: 0x9b28,\\n\\t\\t\\t\\t\\t\\t0xe9a9: 0x9b29,\\n\\t\\t\\t\\t\\t\\t0xe9aa: 0x9b2a,\\n\\t\\t\\t\\t\\t\\t0xe9ab: 0x9b2e,\\n\\t\\t\\t\\t\\t\\t0xe9ac: 0x9b2f,\\n\\t\\t\\t\\t\\t\\t0xe9ad: 0x9b32,\\n\\t\\t\\t\\t\\t\\t0xe9ae: 0x9b44,\\n\\t\\t\\t\\t\\t\\t0xe9af: 0x9b43,\\n\\t\\t\\t\\t\\t\\t0xe9b0: 0x9b4f,\\n\\t\\t\\t\\t\\t\\t0xe9b1: 0x9b4d,\\n\\t\\t\\t\\t\\t\\t0xe9b2: 0x9b4e,\\n\\t\\t\\t\\t\\t\\t0xe9b3: 0x9b51,\\n\\t\\t\\t\\t\\t\\t0xe9b4: 0x9b58,\\n\\t\\t\\t\\t\\t\\t0xe9b5: 0x9b74,\\n\\t\\t\\t\\t\\t\\t0xe9b6: 0x9b93,\\n\\t\\t\\t\\t\\t\\t0xe9b7: 0x9b83,\\n\\t\\t\\t\\t\\t\\t0xe9b8: 0x9b91,\\n\\t\\t\\t\\t\\t\\t0xe9b9: 0x9b96,\\n\\t\\t\\t\\t\\t\\t0xe9ba: 0x9b97,\\n\\t\\t\\t\\t\\t\\t0xe9bb: 0x9b9f,\\n\\t\\t\\t\\t\\t\\t0xe9bc: 0x9ba0,\\n\\t\\t\\t\\t\\t\\t0xe9bd: 0x9ba8,\\n\\t\\t\\t\\t\\t\\t0xe9be: 0x9bb4,\\n\\t\\t\\t\\t\\t\\t0xe9bf: 0x9bc0,\\n\\t\\t\\t\\t\\t\\t0xe9c0: 0x9bca,\\n\\t\\t\\t\\t\\t\\t0xe9c1: 0x9bb9,\\n\\t\\t\\t\\t\\t\\t0xe9c2: 0x9bc6,\\n\\t\\t\\t\\t\\t\\t0xe9c3: 0x9bcf,\\n\\t\\t\\t\\t\\t\\t0xe9c4: 0x9bd1,\\n\\t\\t\\t\\t\\t\\t0xe9c5: 0x9bd2,\\n\\t\\t\\t\\t\\t\\t0xe9c6: 0x9be3,\\n\\t\\t\\t\\t\\t\\t0xe9c7: 0x9be2,\\n\\t\\t\\t\\t\\t\\t0xe9c8: 0x9be4,\\n\\t\\t\\t\\t\\t\\t0xe9c9: 0x9bd4,\\n\\t\\t\\t\\t\\t\\t0xe9ca: 0x9be1,\\n\\t\\t\\t\\t\\t\\t0xe9cb: 0x9c3a,\\n\\t\\t\\t\\t\\t\\t0xe9cc: 0x9bf2,\\n\\t\\t\\t\\t\\t\\t0xe9cd: 0x9bf1,\\n\\t\\t\\t\\t\\t\\t0xe9ce: 0x9bf0,\\n\\t\\t\\t\\t\\t\\t0xe9cf: 0x9c15,\\n\\t\\t\\t\\t\\t\\t0xe9d0: 0x9c14,\\n\\t\\t\\t\\t\\t\\t0xe9d1: 0x9c09,\\n\\t\\t\\t\\t\\t\\t0xe9d2: 0x9c13,\\n\\t\\t\\t\\t\\t\\t0xe9d3: 0x9c0c,\\n\\t\\t\\t\\t\\t\\t0xe9d4: 0x9c06,\\n\\t\\t\\t\\t\\t\\t0xe9d5: 0x9c08,\\n\\t\\t\\t\\t\\t\\t0xe9d6: 0x9c12,\\n\\t\\t\\t\\t\\t\\t0xe9d7: 0x9c0a,\\n\\t\\t\\t\\t\\t\\t0xe9d8: 0x9c04,\\n\\t\\t\\t\\t\\t\\t0xe9d9: 0x9c2e,\\n\\t\\t\\t\\t\\t\\t0xe9da: 0x9c1b,\\n\\t\\t\\t\\t\\t\\t0xe9db: 0x9c25,\\n\\t\\t\\t\\t\\t\\t0xe9dc: 0x9c24,\\n\\t\\t\\t\\t\\t\\t0xe9dd: 0x9c21,\\n\\t\\t\\t\\t\\t\\t0xe9de: 0x9c30,\\n\\t\\t\\t\\t\\t\\t0xe9df: 0x9c47,\\n\\t\\t\\t\\t\\t\\t0xe9e0: 0x9c32,\\n\\t\\t\\t\\t\\t\\t0xe9e1: 0x9c46,\\n\\t\\t\\t\\t\\t\\t0xe9e2: 0x9c3e,\\n\\t\\t\\t\\t\\t\\t0xe9e3: 0x9c5a,\\n\\t\\t\\t\\t\\t\\t0xe9e4: 0x9c60,\\n\\t\\t\\t\\t\\t\\t0xe9e5: 0x9c67,\\n\\t\\t\\t\\t\\t\\t0xe9e6: 0x9c76,\\n\\t\\t\\t\\t\\t\\t0xe9e7: 0x9c78,\\n\\t\\t\\t\\t\\t\\t0xe9e8: 0x9ce7,\\n\\t\\t\\t\\t\\t\\t0xe9e9: 0x9cec,\\n\\t\\t\\t\\t\\t\\t0xe9ea: 0x9cf0,\\n\\t\\t\\t\\t\\t\\t0xe9eb: 0x9d09,\\n\\t\\t\\t\\t\\t\\t0xe9ec: 0x9d08,\\n\\t\\t\\t\\t\\t\\t0xe9ed: 0x9ceb,\\n\\t\\t\\t\\t\\t\\t0xe9ee: 0x9d03,\\n\\t\\t\\t\\t\\t\\t0xe9ef: 0x9d06,\\n\\t\\t\\t\\t\\t\\t0xe9f0: 0x9d2a,\\n\\t\\t\\t\\t\\t\\t0xe9f1: 0x9d26,\\n\\t\\t\\t\\t\\t\\t0xe9f2: 0x9daf,\\n\\t\\t\\t\\t\\t\\t0xe9f3: 0x9d23,\\n\\t\\t\\t\\t\\t\\t0xe9f4: 0x9d1f,\\n\\t\\t\\t\\t\\t\\t0xe9f5: 0x9d44,\\n\\t\\t\\t\\t\\t\\t0xe9f6: 0x9d15,\\n\\t\\t\\t\\t\\t\\t0xe9f7: 0x9d12,\\n\\t\\t\\t\\t\\t\\t0xe9f8: 0x9d41,\\n\\t\\t\\t\\t\\t\\t0xe9f9: 0x9d3f,\\n\\t\\t\\t\\t\\t\\t0xe9fa: 0x9d3e,\\n\\t\\t\\t\\t\\t\\t0xe9fb: 0x9d46,\\n\\t\\t\\t\\t\\t\\t0xe9fc: 0x9d48,\\n\\t\\t\\t\\t\\t\\t0xea40: 0x9d5d,\\n\\t\\t\\t\\t\\t\\t0xea41: 0x9d5e,\\n\\t\\t\\t\\t\\t\\t0xea42: 0x9d64,\\n\\t\\t\\t\\t\\t\\t0xea43: 0x9d51,\\n\\t\\t\\t\\t\\t\\t0xea44: 0x9d50,\\n\\t\\t\\t\\t\\t\\t0xea45: 0x9d59,\\n\\t\\t\\t\\t\\t\\t0xea46: 0x9d72,\\n\\t\\t\\t\\t\\t\\t0xea47: 0x9d89,\\n\\t\\t\\t\\t\\t\\t0xea48: 0x9d87,\\n\\t\\t\\t\\t\\t\\t0xea49: 0x9dab,\\n\\t\\t\\t\\t\\t\\t0xea4a: 0x9d6f,\\n\\t\\t\\t\\t\\t\\t0xea4b: 0x9d7a,\\n\\t\\t\\t\\t\\t\\t0xea4c: 0x9d9a,\\n\\t\\t\\t\\t\\t\\t0xea4d: 0x9da4,\\n\\t\\t\\t\\t\\t\\t0xea4e: 0x9da9,\\n\\t\\t\\t\\t\\t\\t0xea4f: 0x9db2,\\n\\t\\t\\t\\t\\t\\t0xea50: 0x9dc4,\\n\\t\\t\\t\\t\\t\\t0xea51: 0x9dc1,\\n\\t\\t\\t\\t\\t\\t0xea52: 0x9dbb,\\n\\t\\t\\t\\t\\t\\t0xea53: 0x9db8,\\n\\t\\t\\t\\t\\t\\t0xea54: 0x9dba,\\n\\t\\t\\t\\t\\t\\t0xea55: 0x9dc6,\\n\\t\\t\\t\\t\\t\\t0xea56: 0x9dcf,\\n\\t\\t\\t\\t\\t\\t0xea57: 0x9dc2,\\n\\t\\t\\t\\t\\t\\t0xea58: 0x9dd9,\\n\\t\\t\\t\\t\\t\\t0xea59: 0x9dd3,\\n\\t\\t\\t\\t\\t\\t0xea5a: 0x9df8,\\n\\t\\t\\t\\t\\t\\t0xea5b: 0x9de6,\\n\\t\\t\\t\\t\\t\\t0xea5c: 0x9ded,\\n\\t\\t\\t\\t\\t\\t0xea5d: 0x9def,\\n\\t\\t\\t\\t\\t\\t0xea5e: 0x9dfd,\\n\\t\\t\\t\\t\\t\\t0xea5f: 0x9e1a,\\n\\t\\t\\t\\t\\t\\t0xea60: 0x9e1b,\\n\\t\\t\\t\\t\\t\\t0xea61: 0x9e1e,\\n\\t\\t\\t\\t\\t\\t0xea62: 0x9e75,\\n\\t\\t\\t\\t\\t\\t0xea63: 0x9e79,\\n\\t\\t\\t\\t\\t\\t0xea64: 0x9e7d,\\n\\t\\t\\t\\t\\t\\t0xea65: 0x9e81,\\n\\t\\t\\t\\t\\t\\t0xea66: 0x9e88,\\n\\t\\t\\t\\t\\t\\t0xea67: 0x9e8b,\\n\\t\\t\\t\\t\\t\\t0xea68: 0x9e8c,\\n\\t\\t\\t\\t\\t\\t0xea69: 0x9e92,\\n\\t\\t\\t\\t\\t\\t0xea6a: 0x9e95,\\n\\t\\t\\t\\t\\t\\t0xea6b: 0x9e91,\\n\\t\\t\\t\\t\\t\\t0xea6c: 0x9e9d,\\n\\t\\t\\t\\t\\t\\t0xea6d: 0x9ea5,\\n\\t\\t\\t\\t\\t\\t0xea6e: 0x9ea9,\\n\\t\\t\\t\\t\\t\\t0xea6f: 0x9eb8,\\n\\t\\t\\t\\t\\t\\t0xea70: 0x9eaa,\\n\\t\\t\\t\\t\\t\\t0xea71: 0x9ead,\\n\\t\\t\\t\\t\\t\\t0xea72: 0x9761,\\n\\t\\t\\t\\t\\t\\t0xea73: 0x9ecc,\\n\\t\\t\\t\\t\\t\\t0xea74: 0x9ece,\\n\\t\\t\\t\\t\\t\\t0xea75: 0x9ecf,\\n\\t\\t\\t\\t\\t\\t0xea76: 0x9ed0,\\n\\t\\t\\t\\t\\t\\t0xea77: 0x9ed4,\\n\\t\\t\\t\\t\\t\\t0xea78: 0x9edc,\\n\\t\\t\\t\\t\\t\\t0xea79: 0x9ede,\\n\\t\\t\\t\\t\\t\\t0xea7a: 0x9edd,\\n\\t\\t\\t\\t\\t\\t0xea7b: 0x9ee0,\\n\\t\\t\\t\\t\\t\\t0xea7c: 0x9ee5,\\n\\t\\t\\t\\t\\t\\t0xea7d: 0x9ee8,\\n\\t\\t\\t\\t\\t\\t0xea7e: 0x9eef,\\n\\t\\t\\t\\t\\t\\t0xea80: 0x9ef4,\\n\\t\\t\\t\\t\\t\\t0xea81: 0x9ef6,\\n\\t\\t\\t\\t\\t\\t0xea82: 0x9ef7,\\n\\t\\t\\t\\t\\t\\t0xea83: 0x9ef9,\\n\\t\\t\\t\\t\\t\\t0xea84: 0x9efb,\\n\\t\\t\\t\\t\\t\\t0xea85: 0x9efc,\\n\\t\\t\\t\\t\\t\\t0xea86: 0x9efd,\\n\\t\\t\\t\\t\\t\\t0xea87: 0x9f07,\\n\\t\\t\\t\\t\\t\\t0xea88: 0x9f08,\\n\\t\\t\\t\\t\\t\\t0xea89: 0x76b7,\\n\\t\\t\\t\\t\\t\\t0xea8a: 0x9f15,\\n\\t\\t\\t\\t\\t\\t0xea8b: 0x9f21,\\n\\t\\t\\t\\t\\t\\t0xea8c: 0x9f2c,\\n\\t\\t\\t\\t\\t\\t0xea8d: 0x9f3e,\\n\\t\\t\\t\\t\\t\\t0xea8e: 0x9f4a,\\n\\t\\t\\t\\t\\t\\t0xea8f: 0x9f52,\\n\\t\\t\\t\\t\\t\\t0xea90: 0x9f54,\\n\\t\\t\\t\\t\\t\\t0xea91: 0x9f63,\\n\\t\\t\\t\\t\\t\\t0xea92: 0x9f5f,\\n\\t\\t\\t\\t\\t\\t0xea93: 0x9f60,\\n\\t\\t\\t\\t\\t\\t0xea94: 0x9f61,\\n\\t\\t\\t\\t\\t\\t0xea95: 0x9f66,\\n\\t\\t\\t\\t\\t\\t0xea96: 0x9f67,\\n\\t\\t\\t\\t\\t\\t0xea97: 0x9f6c,\\n\\t\\t\\t\\t\\t\\t0xea98: 0x9f6a,\\n\\t\\t\\t\\t\\t\\t0xea99: 0x9f77,\\n\\t\\t\\t\\t\\t\\t0xea9a: 0x9f72,\\n\\t\\t\\t\\t\\t\\t0xea9b: 0x9f76,\\n\\t\\t\\t\\t\\t\\t0xea9c: 0x9f95,\\n\\t\\t\\t\\t\\t\\t0xea9d: 0x9f9c,\\n\\t\\t\\t\\t\\t\\t0xea9e: 0x9fa0,\\n\\t\\t\\t\\t\\t\\t0xea9f: 0x582f,\\n\\t\\t\\t\\t\\t\\t0xeaa0: 0x69c7,\\n\\t\\t\\t\\t\\t\\t0xeaa1: 0x9059,\\n\\t\\t\\t\\t\\t\\t0xeaa2: 0x7464,\\n\\t\\t\\t\\t\\t\\t0xeaa3: 0x51dc,\\n\\t\\t\\t\\t\\t\\t0xeaa4: 0x7199\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 9 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar GenericGF_1 = __webpack_require__(1);\\n\\t\\t\\t\\t\\tvar GenericGFPoly_1 = __webpack_require__(2);\\n\\t\\t\\t\\t\\tfunction runEuclideanAlgorithm(field, a, b, R) {\\n\\t\\t\\t\\t\\t\\tvar _a;\\n\\t\\t\\t\\t\\t\\t// Assume a's degree is >= b's\\n\\t\\t\\t\\t\\t\\tif (a.degree() < b.degree()) {\\n\\t\\t\\t\\t\\t\\t\\t(_a = [b, a]), (a = _a[0]), (b = _a[1]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar rLast = a;\\n\\t\\t\\t\\t\\t\\tvar r = b;\\n\\t\\t\\t\\t\\t\\tvar tLast = field.zero;\\n\\t\\t\\t\\t\\t\\tvar t = field.one;\\n\\t\\t\\t\\t\\t\\t// Run Euclidean algorithm until r's degree is less than R/2\\n\\t\\t\\t\\t\\t\\twhile (r.degree() >= R / 2) {\\n\\t\\t\\t\\t\\t\\t\\tvar rLastLast = rLast;\\n\\t\\t\\t\\t\\t\\t\\tvar tLastLast = tLast;\\n\\t\\t\\t\\t\\t\\t\\trLast = r;\\n\\t\\t\\t\\t\\t\\t\\ttLast = t;\\n\\t\\t\\t\\t\\t\\t\\t// Divide rLastLast by rLast, with quotient in q and remainder in r\\n\\t\\t\\t\\t\\t\\t\\tif (rLast.isZero()) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Euclidean algorithm already terminated?\\n\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tr = rLastLast;\\n\\t\\t\\t\\t\\t\\t\\tvar q = field.zero;\\n\\t\\t\\t\\t\\t\\t\\tvar denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\\n\\t\\t\\t\\t\\t\\t\\tvar dltInverse = field.inverse(denominatorLeadingTerm);\\n\\t\\t\\t\\t\\t\\t\\twhile (r.degree() >= rLast.degree() && !r.isZero()) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar degreeDiff = r.degree() - rLast.degree();\\n\\t\\t\\t\\t\\t\\t\\t\\tvar scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\\n\\t\\t\\t\\t\\t\\t\\t\\tq = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\\n\\t\\t\\t\\t\\t\\t\\t\\tr = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tt = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\\n\\t\\t\\t\\t\\t\\t\\tif (r.degree() >= rLast.degree()) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar sigmaTildeAtZero = t.getCoefficient(0);\\n\\t\\t\\t\\t\\t\\tif (sigmaTildeAtZero === 0) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar inverse = field.inverse(sigmaTildeAtZero);\\n\\t\\t\\t\\t\\t\\treturn [t.multiply(inverse), r.multiply(inverse)];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction findErrorLocations(field, errorLocator) {\\n\\t\\t\\t\\t\\t\\t// This is a direct application of Chien's search\\n\\t\\t\\t\\t\\t\\tvar numErrors = errorLocator.degree();\\n\\t\\t\\t\\t\\t\\tif (numErrors === 1) {\\n\\t\\t\\t\\t\\t\\t\\treturn [errorLocator.getCoefficient(1)];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar result = new Array(numErrors);\\n\\t\\t\\t\\t\\t\\tvar errorCount = 0;\\n\\t\\t\\t\\t\\t\\tfor (var i = 1; i < field.size && errorCount < numErrors; i++) {\\n\\t\\t\\t\\t\\t\\t\\tif (errorLocator.evaluateAt(i) === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresult[errorCount] = field.inverse(i);\\n\\t\\t\\t\\t\\t\\t\\t\\terrorCount++;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (errorCount !== numErrors) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction findErrorMagnitudes(field, errorEvaluator, errorLocations) {\\n\\t\\t\\t\\t\\t\\t// This is directly applying Forney's Formula\\n\\t\\t\\t\\t\\t\\tvar s = errorLocations.length;\\n\\t\\t\\t\\t\\t\\tvar result = new Array(s);\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < s; i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar xiInverse = field.inverse(errorLocations[i]);\\n\\t\\t\\t\\t\\t\\t\\tvar denominator = 1;\\n\\t\\t\\t\\t\\t\\t\\tfor (var j = 0; j < s; j++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i !== j) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdenominator = field.multiply(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdenominator,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tGenericGF_1.addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse))\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tresult[i] = field.multiply(\\n\\t\\t\\t\\t\\t\\t\\t\\terrorEvaluator.evaluateAt(xiInverse),\\n\\t\\t\\t\\t\\t\\t\\t\\tfield.inverse(denominator)\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tif (field.generatorBase !== 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresult[i] = field.multiply(result[i], xiInverse);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction decode(bytes, twoS) {\\n\\t\\t\\t\\t\\t\\tvar outputBytes = new Uint8ClampedArray(bytes.length);\\n\\t\\t\\t\\t\\t\\toutputBytes.set(bytes);\\n\\t\\t\\t\\t\\t\\tvar field = new GenericGF_1.default(0x011d, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\\n\\t\\t\\t\\t\\t\\tvar poly = new GenericGFPoly_1.default(field, outputBytes);\\n\\t\\t\\t\\t\\t\\tvar syndromeCoefficients = new Uint8ClampedArray(twoS);\\n\\t\\t\\t\\t\\t\\tvar error = false;\\n\\t\\t\\t\\t\\t\\tfor (var s = 0; s < twoS; s++) {\\n\\t\\t\\t\\t\\t\\t\\tvar evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\\n\\t\\t\\t\\t\\t\\t\\tsyndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\\n\\t\\t\\t\\t\\t\\t\\tif (evaluation !== 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\terror = true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (!error) {\\n\\t\\t\\t\\t\\t\\t\\treturn outputBytes;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar syndrome = new GenericGFPoly_1.default(field, syndromeCoefficients);\\n\\t\\t\\t\\t\\t\\tvar sigmaOmega = runEuclideanAlgorithm(\\n\\t\\t\\t\\t\\t\\t\\tfield,\\n\\t\\t\\t\\t\\t\\t\\tfield.buildMonomial(twoS, 1),\\n\\t\\t\\t\\t\\t\\t\\tsyndrome,\\n\\t\\t\\t\\t\\t\\t\\ttwoS\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tif (sigmaOmega === null) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar errorLocations = findErrorLocations(field, sigmaOmega[0]);\\n\\t\\t\\t\\t\\t\\tif (errorLocations == null) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < errorLocations.length; i++) {\\n\\t\\t\\t\\t\\t\\t\\tvar position = outputBytes.length - 1 - field.log(errorLocations[i]);\\n\\t\\t\\t\\t\\t\\t\\tif (position < 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\toutputBytes[position] = GenericGF_1.addOrSubtractGF(\\n\\t\\t\\t\\t\\t\\t\\t\\toutputBytes[position],\\n\\t\\t\\t\\t\\t\\t\\t\\terrorMagnitudes[i]\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn outputBytes;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.decode = decode;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 10 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\texports.VERSIONS = [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 1,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 7,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 10,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 13,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 17,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 2,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 18],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 10,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 16,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 3,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 22],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 15,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 4,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 20,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 16,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 5,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 11 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 12 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: null,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 6,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 16,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x07c94,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 7,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 22, 38],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 20,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 14 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 15 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 13 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 14 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x085bc,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 8,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 24, 42],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 38 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 39 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 18 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 19 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 14 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 15 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x09a99,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 9,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 46],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 36 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 37 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 20,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 12 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 13 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0a4d3,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 10,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 28, 50],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 18,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 68 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 69 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 43 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 44 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 19 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 20 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0bbf6,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 11,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 54],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 20,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 50 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 51 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 22 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 23 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 12 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 13 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0c762,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 12,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 32, 58],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 92 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 93 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 36 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 37 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 20 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 21 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 14 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 15 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0d847,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 13,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34, 62],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 37 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 38 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 20 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 21 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 12, dataCodewordsPerBlock: 11 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 12 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0e60d,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 14,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 46, 66],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 115 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 116 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 40 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 41 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 20,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 12 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 13 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x0f928,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 15,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 48, 70],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 22,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 87 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 88 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 41 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 42 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 12 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 13 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x10b78,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 16,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 50, 74],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 98 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 99 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 45 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 46 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 15, dataCodewordsPerBlock: 19 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 20 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1145d,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 17,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 54, 78],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 107 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 108 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 22 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 15, dataCodewordsPerBlock: 23 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 14 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 15 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x12a17,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 18,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 56, 82],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 120 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 121 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 9, dataCodewordsPerBlock: 43 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 44 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 22 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 23 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 14 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 15 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x13532,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 19,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 58, 86],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 113 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 114 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 44 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 45 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 21 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 22 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 9, dataCodewordsPerBlock: 13 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 16, dataCodewordsPerBlock: 14 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x149a6,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 20,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34, 62, 90],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 107 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 108 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 41 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 42 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 15, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 15, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x15683,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 21,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 28, 50, 72, 94],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 116 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 117 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 22 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 23 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x168c9,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 22,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 50, 74, 98],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 111 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 112 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 16, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 24,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x177ec,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 23,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 54, 74, 102],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 121 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 122 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 16, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x18ec4,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 24,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 28, 54, 80, 106],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 117 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 118 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 45 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 46 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 16, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 30, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x191e1,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 25,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 32, 58, 84, 110],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 26,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 106 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 107 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 22, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 22, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1afab,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 26,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 58, 86, 114],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 114 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 115 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 28, dataCodewordsPerBlock: 22 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 23 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 33, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1b08e,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 27,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34, 62, 90, 118],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 122 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 123 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 22, dataCodewordsPerBlock: 45 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 46 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 8, dataCodewordsPerBlock: 23 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 26, dataCodewordsPerBlock: 24 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 12, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 28, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1cc1a,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 28,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 50, 74, 98, 122],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 117 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 118 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 45 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 23, dataCodewordsPerBlock: 46 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 31, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 31, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1d33f,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 29,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 54, 78, 102, 126],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 116 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 117 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 21, dataCodewordsPerBlock: 45 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 46 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 23 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 37, dataCodewordsPerBlock: 24 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 26, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1ed75,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 30,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 52, 78, 104, 130],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 5, dataCodewordsPerBlock: 115 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 116 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 15, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 25, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 23, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 25, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x1f250,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 31,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 56, 82, 108, 134],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 115 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 3, dataCodewordsPerBlock: 116 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 29, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 42, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 23, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 28, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x209d5,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 32,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34, 60, 86, 112, 138],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 23, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 35, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 35, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x216f0,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 33,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 58, 86, 114, 142],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 115 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 116 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 21, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 29, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 11, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 46, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x228ba,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 34,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 34, 62, 90, 118, 146],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 115 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 116 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 23, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 44, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 59, dataCodewordsPerBlock: 16 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 1, dataCodewordsPerBlock: 17 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x2379f,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 35,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 12, dataCodewordsPerBlock: 121 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 122 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 12, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 26, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 39, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 22, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 41, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x24b0b,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 36,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 121 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 122 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 34, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 46, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 2, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 64, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x2542e,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 37,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 17, dataCodewordsPerBlock: 122 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 123 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 29, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 49, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 24, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 46, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x26a64,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 38,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 122 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 18, dataCodewordsPerBlock: 123 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 13, dataCodewordsPerBlock: 46 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 32, dataCodewordsPerBlock: 47 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 48, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 14, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 42, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 32, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x27541,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 39,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 20, dataCodewordsPerBlock: 117 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 4, dataCodewordsPerBlock: 118 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 40, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 7, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 43, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 22, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 10, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 67, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tinfoBits: 0x28c69,\\n\\t\\t\\t\\t\\t\\t\\tversionNumber: 40,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\\n\\t\\t\\t\\t\\t\\t\\terrorCorrectionLevels: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 19, dataCodewordsPerBlock: 118 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 6, dataCodewordsPerBlock: 119 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 28,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 18, dataCodewordsPerBlock: 47 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 31, dataCodewordsPerBlock: 48 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 34, dataCodewordsPerBlock: 24 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 34, dataCodewordsPerBlock: 25 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecCodewordsPerBlock: 30,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tecBlocks: [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 20, dataCodewordsPerBlock: 15 },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ numBlocks: 61, dataCodewordsPerBlock: 16 }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 11 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar BitMatrix_1 = __webpack_require__(0);\\n\\t\\t\\t\\t\\tfunction squareToQuadrilateral(p1, p2, p3, p4) {\\n\\t\\t\\t\\t\\t\\tvar dx3 = p1.x - p2.x + p3.x - p4.x;\\n\\t\\t\\t\\t\\t\\tvar dy3 = p1.y - p2.y + p3.y - p4.y;\\n\\t\\t\\t\\t\\t\\tif (dx3 === 0 && dy3 === 0) {\\n\\t\\t\\t\\t\\t\\t\\t// Affine\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\ta11: p2.x - p1.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta12: p2.y - p1.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta13: 0,\\n\\t\\t\\t\\t\\t\\t\\t\\ta21: p3.x - p2.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta22: p3.y - p2.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta23: 0,\\n\\t\\t\\t\\t\\t\\t\\t\\ta31: p1.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta32: p1.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta33: 1\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tvar dx1 = p2.x - p3.x;\\n\\t\\t\\t\\t\\t\\t\\tvar dx2 = p4.x - p3.x;\\n\\t\\t\\t\\t\\t\\t\\tvar dy1 = p2.y - p3.y;\\n\\t\\t\\t\\t\\t\\t\\tvar dy2 = p4.y - p3.y;\\n\\t\\t\\t\\t\\t\\t\\tvar denominator = dx1 * dy2 - dx2 * dy1;\\n\\t\\t\\t\\t\\t\\t\\tvar a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\\n\\t\\t\\t\\t\\t\\t\\tvar a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\ta11: p2.x - p1.x + a13 * p2.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta12: p2.y - p1.y + a13 * p2.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta13: a13,\\n\\t\\t\\t\\t\\t\\t\\t\\ta21: p4.x - p1.x + a23 * p4.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta22: p4.y - p1.y + a23 * p4.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta23: a23,\\n\\t\\t\\t\\t\\t\\t\\t\\ta31: p1.x,\\n\\t\\t\\t\\t\\t\\t\\t\\ta32: p1.y,\\n\\t\\t\\t\\t\\t\\t\\t\\ta33: 1\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction quadrilateralToSquare(p1, p2, p3, p4) {\\n\\t\\t\\t\\t\\t\\t// Here, the adjoint serves as the inverse:\\n\\t\\t\\t\\t\\t\\tvar sToQ = squareToQuadrilateral(p1, p2, p3, p4);\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\ta11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\\n\\t\\t\\t\\t\\t\\t\\ta12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\\n\\t\\t\\t\\t\\t\\t\\ta13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\\n\\t\\t\\t\\t\\t\\t\\ta21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\\n\\t\\t\\t\\t\\t\\t\\ta22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\\n\\t\\t\\t\\t\\t\\t\\ta23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\\n\\t\\t\\t\\t\\t\\t\\ta31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\\n\\t\\t\\t\\t\\t\\t\\ta32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\\n\\t\\t\\t\\t\\t\\t\\ta33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction times(a, b) {\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\ta11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\\n\\t\\t\\t\\t\\t\\t\\ta12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\\n\\t\\t\\t\\t\\t\\t\\ta13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\\n\\t\\t\\t\\t\\t\\t\\ta21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\\n\\t\\t\\t\\t\\t\\t\\ta22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\\n\\t\\t\\t\\t\\t\\t\\ta23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\\n\\t\\t\\t\\t\\t\\t\\ta31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\\n\\t\\t\\t\\t\\t\\t\\ta32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\\n\\t\\t\\t\\t\\t\\t\\ta33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction extract(image, location) {\\n\\t\\t\\t\\t\\t\\tvar qToS = quadrilateralToSquare(\\n\\t\\t\\t\\t\\t\\t\\t{ x: 3.5, y: 3.5 },\\n\\t\\t\\t\\t\\t\\t\\t{ x: location.dimension - 3.5, y: 3.5 },\\n\\t\\t\\t\\t\\t\\t\\t{ x: location.dimension - 6.5, y: location.dimension - 6.5 },\\n\\t\\t\\t\\t\\t\\t\\t{ x: 3.5, y: location.dimension - 3.5 }\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tvar sToQ = squareToQuadrilateral(\\n\\t\\t\\t\\t\\t\\t\\tlocation.topLeft,\\n\\t\\t\\t\\t\\t\\t\\tlocation.topRight,\\n\\t\\t\\t\\t\\t\\t\\tlocation.alignmentPattern,\\n\\t\\t\\t\\t\\t\\t\\tlocation.bottomLeft\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tvar transform = times(sToQ, qToS);\\n\\t\\t\\t\\t\\t\\tvar matrix = BitMatrix_1.BitMatrix.createEmpty(location.dimension, location.dimension);\\n\\t\\t\\t\\t\\t\\tvar mappingFunction = function (x, y) {\\n\\t\\t\\t\\t\\t\\t\\tvar denominator = transform.a13 * x + transform.a23 * y + transform.a33;\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tx: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\\n\\t\\t\\t\\t\\t\\t\\t\\ty: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tfor (var y = 0; y < location.dimension; y++) {\\n\\t\\t\\t\\t\\t\\t\\tfor (var x = 0; x < location.dimension; x++) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar xValue = x + 0.5;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar yValue = y + 0.5;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar sourcePixel = mappingFunction(xValue, yValue);\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\tmatrix: matrix,\\n\\t\\t\\t\\t\\t\\t\\tmappingFunction: mappingFunction\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.extract = extract;\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t/* 12 */\\n\\t\\t\\t\\t/***/ function (module, exports, __webpack_require__) {\\n\\t\\t\\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n\\t\\t\\t\\t\\tvar MAX_FINDERPATTERNS_TO_SEARCH = 4;\\n\\t\\t\\t\\t\\tvar MIN_QUAD_RATIO = 0.5;\\n\\t\\t\\t\\t\\tvar MAX_QUAD_RATIO = 1.5;\\n\\t\\t\\t\\t\\tvar distance = function (a, b) {\\n\\t\\t\\t\\t\\t\\treturn Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tfunction sum(values) {\\n\\t\\t\\t\\t\\t\\treturn values.reduce(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\treturn a + b;\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Takes three finder patterns and organizes them into topLeft, topRight, etc\\n\\t\\t\\t\\t\\tfunction reorderFinderPatterns(pattern1, pattern2, pattern3) {\\n\\t\\t\\t\\t\\t\\tvar _a, _b, _c, _d;\\n\\t\\t\\t\\t\\t\\t// Find distances between pattern centers\\n\\t\\t\\t\\t\\t\\tvar oneTwoDistance = distance(pattern1, pattern2);\\n\\t\\t\\t\\t\\t\\tvar twoThreeDistance = distance(pattern2, pattern3);\\n\\t\\t\\t\\t\\t\\tvar oneThreeDistance = distance(pattern1, pattern3);\\n\\t\\t\\t\\t\\t\\tvar bottomLeft;\\n\\t\\t\\t\\t\\t\\tvar topLeft;\\n\\t\\t\\t\\t\\t\\tvar topRight;\\n\\t\\t\\t\\t\\t\\t// Assume one closest to other two is B; A and C will just be guesses at first\\n\\t\\t\\t\\t\\t\\tif (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\\n\\t\\t\\t\\t\\t\\t\\t(_a = [pattern2, pattern1, pattern3]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(bottomLeft = _a[0]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topLeft = _a[1]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topRight = _a[2]);\\n\\t\\t\\t\\t\\t\\t} else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\\n\\t\\t\\t\\t\\t\\t\\t(_b = [pattern1, pattern2, pattern3]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(bottomLeft = _b[0]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topLeft = _b[1]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topRight = _b[2]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t(_c = [pattern1, pattern3, pattern2]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(bottomLeft = _c[0]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topLeft = _c[1]),\\n\\t\\t\\t\\t\\t\\t\\t\\t(topRight = _c[2]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\\n\\t\\t\\t\\t\\t\\t// This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\\n\\t\\t\\t\\t\\t\\t// we've got it flipped around and should swap topRight and bottomLeft.\\n\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t(topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y) -\\n\\t\\t\\t\\t\\t\\t\\t\\t(topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x) <\\n\\t\\t\\t\\t\\t\\t\\t0\\n\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t(_d = [topRight, bottomLeft]), (bottomLeft = _d[0]), (topRight = _d[1]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { bottomLeft: bottomLeft, topLeft: topLeft, topRight: topRight };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\\n\\t\\t\\t\\t\\tfunction computeDimension(topLeft, topRight, bottomLeft, matrix) {\\n\\t\\t\\t\\t\\t\\tvar moduleSize =\\n\\t\\t\\t\\t\\t\\t\\t(sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) /\\n\\t\\t\\t\\t\\t\\t\\t4;\\n\\t\\t\\t\\t\\t\\tif (moduleSize < 1) {\\n\\t\\t\\t\\t\\t\\t\\tthrow new Error('Invalid module size');\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\\n\\t\\t\\t\\t\\t\\tvar sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\\n\\t\\t\\t\\t\\t\\tvar dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\\n\\t\\t\\t\\t\\t\\tswitch (dimension % 4) {\\n\\t\\t\\t\\t\\t\\t\\tcase 0:\\n\\t\\t\\t\\t\\t\\t\\t\\tdimension++;\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\tcase 2:\\n\\t\\t\\t\\t\\t\\t\\t\\tdimension--;\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn { dimension: dimension, moduleSize: moduleSize };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\\n\\t\\t\\t\\t\\t// Returns an array of elements, representing the pixel size of the black white run.\\n\\t\\t\\t\\t\\t// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\\n\\t\\t\\t\\t\\tfunction countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\\n\\t\\t\\t\\t\\t\\tvar switchPoints = [{ x: Math.floor(origin.x), y: Math.floor(origin.y) }];\\n\\t\\t\\t\\t\\t\\tvar steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\\n\\t\\t\\t\\t\\t\\tvar fromX;\\n\\t\\t\\t\\t\\t\\tvar fromY;\\n\\t\\t\\t\\t\\t\\tvar toX;\\n\\t\\t\\t\\t\\t\\tvar toY;\\n\\t\\t\\t\\t\\t\\tif (steep) {\\n\\t\\t\\t\\t\\t\\t\\tfromX = Math.floor(origin.y);\\n\\t\\t\\t\\t\\t\\t\\tfromY = Math.floor(origin.x);\\n\\t\\t\\t\\t\\t\\t\\ttoX = Math.floor(end.y);\\n\\t\\t\\t\\t\\t\\t\\ttoY = Math.floor(end.x);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tfromX = Math.floor(origin.x);\\n\\t\\t\\t\\t\\t\\t\\tfromY = Math.floor(origin.y);\\n\\t\\t\\t\\t\\t\\t\\ttoX = Math.floor(end.x);\\n\\t\\t\\t\\t\\t\\t\\ttoY = Math.floor(end.y);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar dx = Math.abs(toX - fromX);\\n\\t\\t\\t\\t\\t\\tvar dy = Math.abs(toY - fromY);\\n\\t\\t\\t\\t\\t\\tvar error = Math.floor(-dx / 2);\\n\\t\\t\\t\\t\\t\\tvar xStep = fromX < toX ? 1 : -1;\\n\\t\\t\\t\\t\\t\\tvar yStep = fromY < toY ? 1 : -1;\\n\\t\\t\\t\\t\\t\\tvar currentPixel = true;\\n\\t\\t\\t\\t\\t\\t// Loop up until x == toX, but not beyond\\n\\t\\t\\t\\t\\t\\tfor (var x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\\n\\t\\t\\t\\t\\t\\t\\t// Does current pixel mean we have moved white to black or vice versa?\\n\\t\\t\\t\\t\\t\\t\\t// Scanning black in state 0,2 and white in state 1, so if we find the wrong\\n\\t\\t\\t\\t\\t\\t\\t// color, advance to next state or end if we are in state 2 already\\n\\t\\t\\t\\t\\t\\t\\tvar realX = steep ? y : x;\\n\\t\\t\\t\\t\\t\\t\\tvar realY = steep ? x : y;\\n\\t\\t\\t\\t\\t\\t\\tif (matrix.get(realX, realY) !== currentPixel) {\\n\\t\\t\\t\\t\\t\\t\\t\\tcurrentPixel = !currentPixel;\\n\\t\\t\\t\\t\\t\\t\\t\\tswitchPoints.push({ x: realX, y: realY });\\n\\t\\t\\t\\t\\t\\t\\t\\tif (switchPoints.length === length + 1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\terror += dy;\\n\\t\\t\\t\\t\\t\\t\\tif (error > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (y === toY) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\ty += yStep;\\n\\t\\t\\t\\t\\t\\t\\t\\terror -= dx;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar distances = [];\\n\\t\\t\\t\\t\\t\\tfor (var i = 0; i < length; i++) {\\n\\t\\t\\t\\t\\t\\t\\tif (switchPoints[i] && switchPoints[i + 1]) {\\n\\t\\t\\t\\t\\t\\t\\t\\tdistances.push(distance(switchPoints[i], switchPoints[i + 1]));\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tdistances.push(0);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn distances;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\\n\\t\\t\\t\\t\\t// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\\n\\t\\t\\t\\t\\t// of the black white run. Takes a length which represents the number of switches from black to white to look for.\\n\\t\\t\\t\\t\\tfunction countBlackWhiteRun(origin, end, matrix, length) {\\n\\t\\t\\t\\t\\t\\tvar _a;\\n\\t\\t\\t\\t\\t\\tvar rise = end.y - origin.y;\\n\\t\\t\\t\\t\\t\\tvar run = end.x - origin.x;\\n\\t\\t\\t\\t\\t\\tvar towardsEnd = countBlackWhiteRunTowardsPoint(\\n\\t\\t\\t\\t\\t\\t\\torigin,\\n\\t\\t\\t\\t\\t\\t\\tend,\\n\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\tMath.ceil(length / 2)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tvar awayFromEnd = countBlackWhiteRunTowardsPoint(\\n\\t\\t\\t\\t\\t\\t\\torigin,\\n\\t\\t\\t\\t\\t\\t\\t{ x: origin.x - run, y: origin.y - rise },\\n\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\tMath.ceil(length / 2)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tvar middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\\n\\t\\t\\t\\t\\t\\treturn (_a = awayFromEnd.concat(middleValue)).concat.apply(_a, towardsEnd);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \\\"error\\\" -\\n\\t\\t\\t\\t\\t// that is the amount the run diverges from the expected ratio\\n\\t\\t\\t\\t\\tfunction scoreBlackWhiteRun(sequence, ratios) {\\n\\t\\t\\t\\t\\t\\tvar averageSize = sum(sequence) / sum(ratios);\\n\\t\\t\\t\\t\\t\\tvar error = 0;\\n\\t\\t\\t\\t\\t\\tratios.forEach(function (ratio, i) {\\n\\t\\t\\t\\t\\t\\t\\terror += Math.pow(sequence[i] - ratio * averageSize, 2);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\treturn { averageSize: averageSize, error: error };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Takes an X,Y point and an array of sizes and scores the point against those ratios.\\n\\t\\t\\t\\t\\t// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\\n\\t\\t\\t\\t\\t// against that.\\n\\t\\t\\t\\t\\tfunction scorePattern(point, ratios, matrix) {\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\tvar horizontalRun = countBlackWhiteRun(\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint,\\n\\t\\t\\t\\t\\t\\t\\t\\t{ x: -1, y: point.y },\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\t\\tratios.length\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tvar verticalRun = countBlackWhiteRun(\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint,\\n\\t\\t\\t\\t\\t\\t\\t\\t{ x: point.x, y: -1 },\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\t\\tratios.length\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tvar topLeftPoint = {\\n\\t\\t\\t\\t\\t\\t\\t\\tx: Math.max(0, point.x - point.y) - 1,\\n\\t\\t\\t\\t\\t\\t\\t\\ty: Math.max(0, point.y - point.x) - 1\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tvar topLeftBottomRightRun = countBlackWhiteRun(\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint,\\n\\t\\t\\t\\t\\t\\t\\t\\ttopLeftPoint,\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\t\\tratios.length\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tvar bottomLeftPoint = {\\n\\t\\t\\t\\t\\t\\t\\t\\tx: Math.min(matrix.width, point.x + point.y) + 1,\\n\\t\\t\\t\\t\\t\\t\\t\\ty: Math.min(matrix.height, point.y + point.x) + 1\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tvar bottomLeftTopRightRun = countBlackWhiteRun(\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint,\\n\\t\\t\\t\\t\\t\\t\\t\\tbottomLeftPoint,\\n\\t\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\t\\tratios.length\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tvar horzError = scoreBlackWhiteRun(horizontalRun, ratios);\\n\\t\\t\\t\\t\\t\\t\\tvar vertError = scoreBlackWhiteRun(verticalRun, ratios);\\n\\t\\t\\t\\t\\t\\t\\tvar diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\\n\\t\\t\\t\\t\\t\\t\\tvar diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\\n\\t\\t\\t\\t\\t\\t\\tvar ratioError = Math.sqrt(\\n\\t\\t\\t\\t\\t\\t\\t\\thorzError.error * horzError.error +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvertError.error * vertError.error +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdiagDownError.error * diagDownError.error +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdiagUpError.error * diagUpError.error\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tvar avgSize =\\n\\t\\t\\t\\t\\t\\t\\t\\t(horzError.averageSize +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvertError.averageSize +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdiagDownError.averageSize +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdiagUpError.averageSize) /\\n\\t\\t\\t\\t\\t\\t\\t\\t4;\\n\\t\\t\\t\\t\\t\\t\\tvar sizeError =\\n\\t\\t\\t\\t\\t\\t\\t\\t(Math.pow(horzError.averageSize - avgSize, 2) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.pow(vertError.averageSize - avgSize, 2) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.pow(diagDownError.averageSize - avgSize, 2) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.pow(diagUpError.averageSize - avgSize, 2)) /\\n\\t\\t\\t\\t\\t\\t\\t\\tavgSize;\\n\\t\\t\\t\\t\\t\\t\\treturn ratioError + sizeError;\\n\\t\\t\\t\\t\\t\\t} catch (_a) {\\n\\t\\t\\t\\t\\t\\t\\treturn Infinity;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction recenterLocation(matrix, p) {\\n\\t\\t\\t\\t\\t\\tvar leftX = Math.round(p.x);\\n\\t\\t\\t\\t\\t\\twhile (matrix.get(leftX, Math.round(p.y))) {\\n\\t\\t\\t\\t\\t\\t\\tleftX--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar rightX = Math.round(p.x);\\n\\t\\t\\t\\t\\t\\twhile (matrix.get(rightX, Math.round(p.y))) {\\n\\t\\t\\t\\t\\t\\t\\trightX++;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar x = (leftX + rightX) / 2;\\n\\t\\t\\t\\t\\t\\tvar topY = Math.round(p.y);\\n\\t\\t\\t\\t\\t\\twhile (matrix.get(Math.round(x), topY)) {\\n\\t\\t\\t\\t\\t\\t\\ttopY--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar bottomY = Math.round(p.y);\\n\\t\\t\\t\\t\\t\\twhile (matrix.get(Math.round(x), bottomY)) {\\n\\t\\t\\t\\t\\t\\t\\tbottomY++;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar y = (topY + bottomY) / 2;\\n\\t\\t\\t\\t\\t\\treturn { x: x, y: y };\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfunction locate(matrix) {\\n\\t\\t\\t\\t\\t\\tvar finderPatternQuads = [];\\n\\t\\t\\t\\t\\t\\tvar activeFinderPatternQuads = [];\\n\\t\\t\\t\\t\\t\\tvar alignmentPatternQuads = [];\\n\\t\\t\\t\\t\\t\\tvar activeAlignmentPatternQuads = [];\\n\\t\\t\\t\\t\\t\\tvar _loop_1 = function (y) {\\n\\t\\t\\t\\t\\t\\t\\tvar length_1 = 0;\\n\\t\\t\\t\\t\\t\\t\\tvar lastBit = false;\\n\\t\\t\\t\\t\\t\\t\\tvar scans = [0, 0, 0, 0, 0];\\n\\t\\t\\t\\t\\t\\t\\tvar _loop_2 = function (x) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar v = matrix.get(x, y);\\n\\t\\t\\t\\t\\t\\t\\t\\tif (v === lastBit) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlength_1++;\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tscans = [scans[1], scans[2], scans[3], scans[4], length_1];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlength_1 = 1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlastBit = v;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar averageFinderPatternBlocksize = sum(scans) / 7;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar validFinderPattern =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[0] - averageFinderPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageFinderPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[1] - averageFinderPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageFinderPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[2] - 3 * averageFinderPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t3 * averageFinderPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[3] - averageFinderPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageFinderPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[4] - averageFinderPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageFinderPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t!v; // And make sure the current pixel is white since finder patterns are bordered in white\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar validAlignmentPattern =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[2] - averageAlignmentPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageAlignmentPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[3] - averageAlignmentPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageAlignmentPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMath.abs(scans[4] - averageAlignmentPatternBlocksize) <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taverageAlignmentPatternBlocksize &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tv; // Is the current pixel black since alignment patterns are bordered in black\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (validFinderPattern) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Compute the start and end x values of the large center black square\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar endX_1 = x - scans[3] - scans[4];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar startX_1 = endX_1 - scans[2];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar line = { startX: startX_1, endX: endX_1, y: y };\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// that line as the starting point.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar matchingQuads = activeFinderPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(startX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(endX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(startX_1 <= q.bottom.startX &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tendX_1 >= q.bottom.endX &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tscans[2] / (q.bottom.endX - q.bottom.startX) < MAX_QUAD_RATIO &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tscans[2] / (q.bottom.endX - q.bottom.startX) > MIN_QUAD_RATIO)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (matchingQuads.length > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatchingQuads[0].bottom = line;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveFinderPatternQuads.push({ top: line, bottom: line });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (validAlignmentPattern) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Compute the start and end x values of the center black square\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar endX_2 = x - scans[4];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar startX_2 = endX_2 - scans[3];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar line = { startX: startX_2, y: y, endX: endX_2 };\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// that line as the starting point.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar matchingQuads = activeAlignmentPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(startX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(endX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(startX_2 <= q.bottom.startX &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tendX_2 >= q.bottom.endX &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tscans[2] / (q.bottom.endX - q.bottom.startX) < MAX_QUAD_RATIO &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tscans[2] / (q.bottom.endX - q.bottom.startX) > MIN_QUAD_RATIO)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (matchingQuads.length > 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatchingQuads[0].bottom = line;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveAlignmentPatternQuads.push({ top: line, bottom: line });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tfor (var x = -1; x <= matrix.width; x++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t_loop_2(x);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfinderPatternQuads.push.apply(\\n\\t\\t\\t\\t\\t\\t\\t\\tfinderPatternQuads,\\n\\t\\t\\t\\t\\t\\t\\t\\tactiveFinderPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y !== y && q.bottom.y - q.top.y >= 2;\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tactiveFinderPatternQuads = activeFinderPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y === y;\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternQuads.push.apply(\\n\\t\\t\\t\\t\\t\\t\\t\\talignmentPatternQuads,\\n\\t\\t\\t\\t\\t\\t\\t\\tactiveAlignmentPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y !== y;\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tactiveAlignmentPatternQuads = activeAlignmentPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y === y;\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tfor (var y = 0; y <= matrix.height; y++) {\\n\\t\\t\\t\\t\\t\\t\\t_loop_1(y);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfinderPatternQuads.push.apply(\\n\\t\\t\\t\\t\\t\\t\\tfinderPatternQuads,\\n\\t\\t\\t\\t\\t\\t\\tactiveFinderPatternQuads.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y - q.top.y >= 2;\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\talignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads);\\n\\t\\t\\t\\t\\t\\tvar finderPatternGroups = finderPatternQuads\\n\\t\\t\\t\\t\\t\\t\\t.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn q.bottom.y - q.top.y >= 2;\\n\\t\\t\\t\\t\\t\\t\\t}) // All quads must be at least 2px tall since the center square is larger than a block\\n\\t\\t\\t\\t\\t\\t\\t.map(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar y = (q.top.y + q.bottom.y + 1) / 2;\\n\\t\\t\\t\\t\\t\\t\\t\\tif (!matrix.get(Math.round(x), Math.round(y))) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar lengths = [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.top.endX - q.top.startX,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.bottom.endX - q.bottom.startX,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.bottom.y - q.top.y + 1\\n\\t\\t\\t\\t\\t\\t\\t\\t];\\n\\t\\t\\t\\t\\t\\t\\t\\tvar size = sum(lengths) / lengths.length;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar score = scorePattern(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{ x: Math.round(x), y: Math.round(y) },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[1, 1, 3, 1, 1],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmatrix\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\treturn { score: score, x: x, y: y, size: size };\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn !!q;\\n\\t\\t\\t\\t\\t\\t\\t}) // Filter out any rejected quads from above\\n\\t\\t\\t\\t\\t\\t\\t.sort(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn a.score - b.score;\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t// Now take the top finder pattern options and try to find 2 other options with a similar size.\\n\\t\\t\\t\\t\\t\\t\\t.map(function (point, i, finderPatterns) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i > MAX_FINDERPATTERNS_TO_SEARCH) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar otherPoints = finderPatterns\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.filter(function (p, ii) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn i !== ii;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.map(function (p) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tx: p.x,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ty: p.y,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tscore: p.score + Math.pow(p.size - point.size, 2) / point.size,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize: p.size\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.sort(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn a.score - b.score;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\tif (otherPoints.length < 2) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar score = point.score + otherPoints[0].score + otherPoints[1].score;\\n\\t\\t\\t\\t\\t\\t\\t\\treturn { points: [point].concat(otherPoints.slice(0, 2)), score: score };\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t.filter(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn !!q;\\n\\t\\t\\t\\t\\t\\t\\t}) // Filter out any rejected finder patterns from above\\n\\t\\t\\t\\t\\t\\t\\t.sort(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn a.score - b.score;\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\tif (finderPatternGroups.length === 0) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tvar _a = reorderFinderPatterns(\\n\\t\\t\\t\\t\\t\\t\\t\\tfinderPatternGroups[0].points[0],\\n\\t\\t\\t\\t\\t\\t\\t\\tfinderPatternGroups[0].points[1],\\n\\t\\t\\t\\t\\t\\t\\t\\tfinderPatternGroups[0].points[2]\\n\\t\\t\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t\\t\\t\\ttopRight = _a.topRight,\\n\\t\\t\\t\\t\\t\\t\\ttopLeft = _a.topLeft,\\n\\t\\t\\t\\t\\t\\t\\tbottomLeft = _a.bottomLeft;\\n\\t\\t\\t\\t\\t\\tvar alignment = findAlignmentPattern(\\n\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternQuads,\\n\\t\\t\\t\\t\\t\\t\\ttopRight,\\n\\t\\t\\t\\t\\t\\t\\ttopLeft,\\n\\t\\t\\t\\t\\t\\t\\tbottomLeft\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tvar result = [];\\n\\t\\t\\t\\t\\t\\tif (alignment) {\\n\\t\\t\\t\\t\\t\\t\\tresult.push({\\n\\t\\t\\t\\t\\t\\t\\t\\talignmentPattern: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tx: alignment.alignmentPattern.x,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ty: alignment.alignmentPattern.y\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\tbottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\\n\\t\\t\\t\\t\\t\\t\\t\\tdimension: alignment.dimension,\\n\\t\\t\\t\\t\\t\\t\\t\\ttopLeft: { x: topLeft.x, y: topLeft.y },\\n\\t\\t\\t\\t\\t\\t\\t\\ttopRight: { x: topRight.x, y: topRight.y }\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\\n\\t\\t\\t\\t\\t\\t// for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\\n\\t\\t\\t\\t\\t\\t// errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\\n\\t\\t\\t\\t\\t\\t// compute and return the location data for the naively centered points as it is little additional work and allows for multiple\\n\\t\\t\\t\\t\\t\\t// attempts at decoding harder images.\\n\\t\\t\\t\\t\\t\\tvar midTopRight = recenterLocation(matrix, topRight);\\n\\t\\t\\t\\t\\t\\tvar midTopLeft = recenterLocation(matrix, topLeft);\\n\\t\\t\\t\\t\\t\\tvar midBottomLeft = recenterLocation(matrix, bottomLeft);\\n\\t\\t\\t\\t\\t\\tvar centeredAlignment = findAlignmentPattern(\\n\\t\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\t\\talignmentPatternQuads,\\n\\t\\t\\t\\t\\t\\t\\tmidTopRight,\\n\\t\\t\\t\\t\\t\\t\\tmidTopLeft,\\n\\t\\t\\t\\t\\t\\t\\tmidBottomLeft\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tif (centeredAlignment) {\\n\\t\\t\\t\\t\\t\\t\\tresult.push({\\n\\t\\t\\t\\t\\t\\t\\t\\talignmentPattern: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tx: centeredAlignment.alignmentPattern.x,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ty: centeredAlignment.alignmentPattern.y\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\tbottomLeft: { x: midBottomLeft.x, y: midBottomLeft.y },\\n\\t\\t\\t\\t\\t\\t\\t\\ttopLeft: { x: midTopLeft.x, y: midTopLeft.y },\\n\\t\\t\\t\\t\\t\\t\\t\\ttopRight: { x: midTopRight.x, y: midTopRight.y },\\n\\t\\t\\t\\t\\t\\t\\t\\tdimension: centeredAlignment.dimension\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (result.length === 0) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\texports.locate = locate;\\n\\t\\t\\t\\t\\tfunction findAlignmentPattern(\\n\\t\\t\\t\\t\\t\\tmatrix,\\n\\t\\t\\t\\t\\t\\talignmentPatternQuads,\\n\\t\\t\\t\\t\\t\\ttopRight,\\n\\t\\t\\t\\t\\t\\ttopLeft,\\n\\t\\t\\t\\t\\t\\tbottomLeft\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tvar _a;\\n\\t\\t\\t\\t\\t\\t// Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\\n\\t\\t\\t\\t\\t\\t// We'll use these to help find the alignment pattern but also later when we do the extraction.\\n\\t\\t\\t\\t\\t\\tvar dimension;\\n\\t\\t\\t\\t\\t\\tvar moduleSize;\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t(_a = computeDimension(topLeft, topRight, bottomLeft, matrix)),\\n\\t\\t\\t\\t\\t\\t\\t\\t(dimension = _a.dimension),\\n\\t\\t\\t\\t\\t\\t\\t\\t(moduleSize = _a.moduleSize);\\n\\t\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// Now find the alignment pattern\\n\\t\\t\\t\\t\\t\\tvar bottomRightFinderPattern = {\\n\\t\\t\\t\\t\\t\\t\\tx: topRight.x - topLeft.x + bottomLeft.x,\\n\\t\\t\\t\\t\\t\\t\\ty: topRight.y - topLeft.y + bottomLeft.y\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tvar modulesBetweenFinderPatterns =\\n\\t\\t\\t\\t\\t\\t\\t(distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize;\\n\\t\\t\\t\\t\\t\\tvar correctionToTopLeft = 1 - 3 / modulesBetweenFinderPatterns;\\n\\t\\t\\t\\t\\t\\tvar expectedAlignmentPattern = {\\n\\t\\t\\t\\t\\t\\t\\tx: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\\n\\t\\t\\t\\t\\t\\t\\ty: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y)\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tvar alignmentPatterns = alignmentPatternQuads\\n\\t\\t\\t\\t\\t\\t\\t.map(function (q) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar y = (q.top.y + q.bottom.y + 1) / 2;\\n\\t\\t\\t\\t\\t\\t\\t\\tif (!matrix.get(Math.floor(x), Math.floor(y))) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar lengths = [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.top.endX - q.top.startX,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.bottom.endX - q.bottom.startX,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tq.bottom.y - q.top.y + 1\\n\\t\\t\\t\\t\\t\\t\\t\\t];\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(lengths) / lengths.length;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar sizeScore = scorePattern(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{ x: Math.floor(x), y: Math.floor(y) },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[1, 1, 1],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmatrix\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\tvar score = sizeScore + distance({ x: x, y: y }, expectedAlignmentPattern);\\n\\t\\t\\t\\t\\t\\t\\t\\treturn { x: x, y: y, score: score };\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t.filter(function (v) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn !!v;\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t.sort(function (a, b) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn a.score - b.score;\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t// If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\\n\\t\\t\\t\\t\\t\\t// so we can only use our best guess.\\n\\t\\t\\t\\t\\t\\tvar alignmentPattern =\\n\\t\\t\\t\\t\\t\\t\\tmodulesBetweenFinderPatterns >= 15 && alignmentPatterns.length\\n\\t\\t\\t\\t\\t\\t\\t\\t? alignmentPatterns[0]\\n\\t\\t\\t\\t\\t\\t\\t\\t: expectedAlignmentPattern;\\n\\t\\t\\t\\t\\t\\treturn { alignmentPattern: alignmentPattern, dimension: dimension };\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/***/\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t/******/\\n\\t\\t\\t]\\n\\t\\t)['default'];\\n\\t});\\n})(jsQR$1);\\n\\nvar jsQR = /*@__PURE__*/ getDefaultExportFromCjs(jsQR$1.exports);\\n\\n/* ..\\\\qrcode-scanner-svelte\\\\src\\\\lib\\\\components\\\\ScannerBorders.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$2(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-yg5u4i-ContactList',\\n\\t\\t':root{--border-thickness:3px;--border-radius:40%;--border-offset:5%;--border-color:#cbf3f0}.scanner-border.svelte-yg5u4i-ContactList{position:absolute;width:20%;height:20%}.scanner-border--top-left.svelte-yg5u4i-ContactList{top:var(--border-offset);left:var(--border-offset);border-top:var(--border-thickness) solid var(--border-color);border-left:var(--border-thickness) solid var(--border-color);border-top-left-radius:var(--border-radius)}.scanner-border--top-right.svelte-yg5u4i-ContactList{top:var(--border-offset);right:var(--border-offset);border-top:var(--border-thickness) solid var(--border-color);border-right:var(--border-thickness) solid var(--border-color);border-top-right-radius:var(--border-radius)}.scanner-border--bottom-left.svelte-yg5u4i-ContactList{bottom:var(--border-offset);left:var(--border-offset);border-bottom:var(--border-thickness) solid var(--border-color);border-left:var(--border-thickness) solid var(--border-color);border-bottom-left-radius:var(--border-radius)}.scanner-border--bottom-right.svelte-yg5u4i-ContactList{right:var(--border-offset);bottom:var(--border-offset);border-right:var(--border-thickness) solid var(--border-color);border-bottom:var(--border-thickness) solid var(--border-color);border-bottom-right-radius:var(--border-radius)}'\\n\\t);\\n}\\n\\nfunction create_fragment$2(ctx) {\\n\\tlet div4;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv4 = element('div');\\n\\n\\t\\t\\tdiv4.innerHTML = `<div class=\\\"scanner-border scanner-border--top-left svelte-yg5u4i-ContactList\\\"></div> \\n\\t<div class=\\\"scanner-border scanner-border--top-right svelte-yg5u4i-ContactList\\\"></div> \\n\\t<div class=\\\"scanner-border scanner-border--bottom-left svelte-yg5u4i-ContactList\\\"></div> \\n\\t<div class=\\\"scanner-border scanner-border--bottom-right svelte-yg5u4i-ContactList\\\"></div>`;\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div4, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div4);\\n\\t\\t}\\n\\t};\\n}\\n\\nclass ScannerBorders extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, null, create_fragment$2, safe_not_equal, {}, add_css$2);\\n\\t}\\n}\\n\\n/* ..\\\\qrcode-scanner-svelte\\\\src\\\\lib\\\\components\\\\Results.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$1(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-8prxng-ContactList',\\n\\t\\t'.results.svelte-8prxng-ContactList{width:100%;max-width:500px}.results__data.svelte-8prxng-ContactList{margin:50px 0 80px 0;padding:20px 20px 27px 20px;word-break:break-all;border:2px dashed #3d3d3d;border-radius:20px;font-size:1.3rem}.results__empty.svelte-8prxng-ContactList{color:#959595;font-style:italic}.results__button-container.svelte-8prxng-ContactList{display:flex;justify-content:center}.results__button.svelte-8prxng-ContactList{display:flex;align-items:center;padding:14px 16px;cursor:pointer;transition-duration:300ms;transition-property:background-color, transform;color:white;border:0;border-radius:8px;background-color:#23cd00;font-size:1.5rem;font-weight:500}.results__button.svelte-8prxng-ContactList:hover{background-color:#39b300}.results__link.svelte-8prxng-ContactList,.results__link.svelte-8prxng-ContactList:visited{transition:color 200ms;color:#7094ff}.results__link.svelte-8prxng-ContactList:hover,.results__link.svelte-8prxng-ContactList:active{color:#486cd9}'\\n\\t);\\n}\\n\\nconst get_default_slot_changes$1 = (dirty) => ({ decodedData: dirty & /*decodedData*/ 1 });\\nconst get_default_slot_context$1 = (ctx) => ({ decodedData: /*decodedData*/ ctx[0] });\\n\\n// (21:25)\\nfunction create_if_block_2(ctx) {\\n\\tlet t0;\\n\\tlet t1;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tt0 = text(/*decodedData*/ ctx[0]);\\n\\t\\t\\tt1 = text(';');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\t\\t\\tinsert(target, t1, anchor);\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*decodedData*/ 1) set_data(t0, /*decodedData*/ ctx[0]);\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (detaching) detach(t1);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (17:39)\\nfunction create_if_block_1(ctx) {\\n\\tlet a;\\n\\tlet t;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\ta = element('a');\\n\\t\\t\\tt = text(/*decodedData*/ ctx[0]);\\n\\t\\t\\tattr(a, 'class', 'results__link svelte-8prxng-ContactList');\\n\\t\\t\\tattr(a, 'href', /*decodedData*/ ctx[0]);\\n\\t\\t\\tattr(a, 'target', '_blank');\\n\\t\\t\\tattr(a, 'rel', 'noopener noreferrer');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, a, anchor);\\n\\t\\t\\tappend(a, t);\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*decodedData*/ 1) set_data(t, /*decodedData*/ ctx[0]);\\n\\n\\t\\t\\tif (dirty & /*decodedData*/ 1) {\\n\\t\\t\\t\\tattr(a, 'href', /*decodedData*/ ctx[0]);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(a);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (15:3) {#if !decodedData || decodedData === ''}\\nfunction create_if_block(ctx) {\\n\\tlet span;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element('span');\\n\\t\\t\\tspan.textContent = 'Scan a QR Code to send data here.';\\n\\t\\t\\tattr(span, 'class', 'results__empty svelte-8prxng-ContactList');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (12:20)\\nfunction fallback_block$1(ctx) {\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet show_if;\\n\\tlet t0;\\n\\tlet div1;\\n\\tlet button;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\tfunction select_block_type(ctx, dirty) {\\n\\t\\tif (dirty & /*decodedData, regex*/ 5) show_if = null;\\n\\t\\tif (!(/*decodedData*/ ctx[0]) || /*decodedData*/ ctx[0] === '') return create_if_block;\\n\\t\\tif (show_if == null) show_if = !!(/*decodedData*/ ctx[0]?.match(/*regex*/ ctx[2]));\\n\\t\\tif (show_if) return create_if_block_1;\\n\\t\\tif (/*decodedData*/ ctx[0]) return create_if_block_2;\\n\\t}\\n\\n\\tlet current_block_type = select_block_type(ctx, -1);\\n\\tlet if_block = current_block_type && current_block_type(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element('div');\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tdiv1 = element('div');\\n\\t\\t\\tbutton = element('button');\\n\\t\\t\\tbutton.innerHTML = `<span>New Scan</span>`;\\n\\t\\t\\tattr(div0, 'class', 'results__data svelte-8prxng-ContactList');\\n\\t\\t\\tattr(button, 'type', 'button');\\n\\t\\t\\tattr(button, 'class', 'results__button svelte-8prxng-ContactList');\\n\\t\\t\\tattr(div1, 'class', 'results__button-container svelte-8prxng-ContactList');\\n\\t\\t\\tattr(div2, 'class', 'results svelte-8prxng-ContactList');\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div0);\\n\\t\\t\\tif (if_block) if_block.m(div0, null);\\n\\t\\t\\tappend(div2, t0);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, button);\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(button, 'click', function () {\\n\\t\\t\\t\\t\\tif (is_function(/*onNewScan*/ ctx[1])) /*onNewScan*/ ctx[1].apply(this, arguments);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\n\\t\\t\\tif (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {\\n\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (if_block) if_block.d(1);\\n\\t\\t\\t\\tif_block = current_block_type && current_block_type(ctx);\\n\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\tif_block.m(div0, null);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\n\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\tif_block.d();\\n\\t\\t\\t}\\n\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$1(ctx) {\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[5].default;\\n\\tconst default_slot = create_slot(\\n\\t\\tdefault_slot_template,\\n\\t\\tctx,\\n\\t\\t/*$$scope*/ ctx[4],\\n\\t\\tget_default_slot_context$1\\n\\t);\\n\\tconst default_slot_or_fallback = default_slot || fallback_block$1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (default_slot_or_fallback) {\\n\\t\\t\\t\\tdefault_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope, decodedData*/ 17)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[4],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[4])\\n\\t\\t\\t\\t\\t\\t\\t: get_slot_changes(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[4],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdirty,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tget_default_slot_changes$1\\n\\t\\t\\t\\t\\t\\t\\t  ),\\n\\t\\t\\t\\t\\t\\tget_default_slot_context$1\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback &&\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p &&\\n\\t\\t\\t\\t\\t(!current || dirty & /*onNewScan, decodedData, regex*/ 7)\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$2($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { active } = $$props;\\n\\tlet { decodedData } = $$props;\\n\\tlet { onNewScan } = $$props;\\n\\tlet regex;\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('active' in $$props) $$invalidate(3, (active = $$props.active));\\n\\t\\tif ('decodedData' in $$props) $$invalidate(0, (decodedData = $$props.decodedData));\\n\\t\\tif ('onNewScan' in $$props) $$invalidate(1, (onNewScan = $$props.onNewScan));\\n\\t\\tif ('$$scope' in $$props) $$invalidate(4, ($$scope = $$props.$$scope));\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*active*/ 8) {\\n\\t\\t\\tif (active) {\\n\\t\\t\\t\\tconst urlExp =\\n\\t\\t\\t\\t\\t/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/g;\\n\\t\\t\\t\\t$$invalidate(2, (regex = new RegExp(urlExp)));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [decodedData, onNewScan, regex, active, $$scope, slots];\\n}\\n\\nclass Results extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(\\n\\t\\t\\tthis,\\n\\t\\t\\toptions,\\n\\t\\t\\tinstance$2,\\n\\t\\t\\tcreate_fragment$1,\\n\\t\\t\\tsafe_not_equal,\\n\\t\\t\\t{ active: 3, decodedData: 0, onNewScan: 1 },\\n\\t\\t\\tadd_css$1\\n\\t\\t);\\n\\t}\\n\\n\\tget active() {\\n\\t\\treturn this.$$.ctx[3];\\n\\t}\\n\\n\\tset active(active) {\\n\\t\\tthis.$$set({ active });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget decodedData() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset decodedData(decodedData) {\\n\\t\\tthis.$$set({ decodedData });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget onNewScan() {\\n\\t\\treturn this.$$.ctx[1];\\n\\t}\\n\\n\\tset onNewScan(onNewScan) {\\n\\t\\tthis.$$set({ onNewScan });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* ..\\\\qrcode-scanner-svelte\\\\src\\\\lib\\\\utils\\\\use-usermedia.svelte generated by Svelte v3.48.0 */\\n\\nfunction instance$1($$self, $$props, $$invalidate) {\\n\\tlet $stream;\\n\\tlet $error;\\n\\tlet $status;\\n\\tcomponent_subscribe($$self, stream, ($$value) => $$invalidate(2, ($stream = $$value)));\\n\\tcomponent_subscribe($$self, error, ($$value) => $$invalidate(3, ($error = $$value)));\\n\\tcomponent_subscribe($$self, status, ($$value) => $$invalidate(4, ($status = $$value)));\\n\\n\\tonMount(() => {\\n\\t\\treturn () => {\\n\\t\\t\\tconsole.log('stop Component destroyed');\\n\\t\\t}; // stopMedia();\\n\\t});\\n\\n\\tconst isMediaStream = (candidate) => candidate !== null && 'getTracks' in candidate;\\n\\n\\tfunction setStatus(params) {\\n\\t\\tconsole.log(`Setting status ${params}`);\\n\\t\\tset_store_value(status, ($status = params), $status);\\n\\t}\\n\\n\\tconst useUserMedia = () => {\\n\\t\\tset_store_value(stream, ($stream = null), $stream);\\n\\t\\tset_store_value(error, ($error = null), $error);\\n\\t\\tset_store_value(status, ($status = 'stopped'), $status);\\n\\n\\t\\tfunction setError(params) {\\n\\t\\t\\tconsole.log('Setting erro');\\n\\t\\t\\tset_store_value(error, ($error = params), $error);\\n\\t\\t}\\n\\n\\t\\tfunction setStream(params) {\\n\\t\\t\\tconsole.log(`Setting stream`, { params });\\n\\t\\t\\tset_store_value(stream, ($stream = params), $stream);\\n\\t\\t}\\n\\n\\t\\tconst startMediaStream = () => {\\n\\t\\t\\tsetStatus('pending');\\n\\n\\t\\t\\tnavigator.mediaDevices\\n\\t\\t\\t\\t.getUserMedia({\\n\\t\\t\\t\\t\\taudio: false,\\n\\t\\t\\t\\t\\tvideo: { facingMode: 'environment' }\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\t.then((userStream) => {\\n\\t\\t\\t\\t\\tsetStream(userStream);\\n\\t\\t\\t\\t\\tsetStatus('resolved');\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\t.catch((err) => {\\n\\t\\t\\t\\t\\tsetError(err);\\n\\t\\t\\t\\t\\tsetStatus('rejected');\\n\\t\\t\\t\\t});\\n\\t\\t};\\n\\n\\t\\tconst stopMediaStream = stopMedia;\\n\\t\\treturn { stopMediaStream, startMediaStream };\\n\\t};\\n\\n\\tfunction stopMedia() {\\n\\t\\tconsole.log('stopping media stream');\\n\\n\\t\\tif (isMediaStream($stream)) {\\n\\t\\t\\t$stream.getTracks().forEach((track) => {\\n\\t\\t\\t\\ttrack.stop();\\n\\t\\t\\t\\t$stream.removeTrack(track);\\n\\t\\t\\t});\\n\\n\\t\\t\\tconsole.log({ streams: $stream });\\n\\t\\t\\tsetStatus('stopped');\\n\\t\\t}\\n\\t}\\n\\n\\treturn [useUserMedia];\\n}\\n\\nclass Use_usermedia extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$1, null, safe_not_equal, { useUserMedia: 0 });\\n\\t}\\n\\n\\tget useUserMedia() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n}\\n\\n/* ..\\\\qrcode-scanner-svelte\\\\src\\\\lib\\\\components\\\\Scanner.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(\\n\\t\\ttarget,\\n\\t\\t'svelte-1drrksk-ContactList',\\n\\t\\t'.scanner.svelte-1drrksk-ContactList{width:100%;max-width:500px}.scanner--hidden.svelte-1drrksk-ContactList{display:none}.scanner__aspect-ratio-container.svelte-1drrksk-ContactList{position:relative;overflow:hidden;padding-bottom:100%;border-radius:10%}.scanner__video.svelte-1drrksk-ContactList{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;outline:none;-o-object-fit:cover;object-fit:cover}.scanner__canvas.svelte-1drrksk-ContactList{display:none}.scanner-tip.svelte-1drrksk-ContactList{display:flex;justify-content:center;margin-top:15px;font-size:0.8rem}'\\n\\t);\\n}\\n\\nconst get_default_slot_changes = (dirty) => ({ result: dirty & /*result*/ 1 });\\nconst get_default_slot_context = (ctx) => ({ result: /*result*/ ctx[0] });\\n\\n// (87:15)\\nfunction fallback_block(ctx) {\\n\\tlet results;\\n\\tlet current;\\n\\n\\tresults = new Results({\\n\\t\\tprops: {\\n\\t\\t\\tactive: /*result*/ ctx[0] !== null,\\n\\t\\t\\tdecodedData: /*result*/ ctx[0],\\n\\t\\t\\tonNewScan: /*func*/ ctx[15]\\n\\t\\t}\\n\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(results.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(results, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst results_changes = {};\\n\\t\\t\\tif (dirty & /*result*/ 1) results_changes.active = /*result*/ ctx[0] !== null;\\n\\t\\t\\tif (dirty & /*result*/ 1) results_changes.decodedData = /*result*/ ctx[0];\\n\\t\\t\\tif (dirty & /*result*/ 1) results_changes.onNewScan = /*func*/ ctx[15];\\n\\t\\t\\tresults.$set(results_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(results.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(results.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(results, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment(ctx) {\\n\\tlet usermedia;\\n\\tlet updating_useUserMedia;\\n\\tlet t0;\\n\\tlet div3;\\n\\tlet div0;\\n\\tlet canvas_1;\\n\\tlet t1;\\n\\tlet video_1;\\n\\tlet t2;\\n\\tlet scannerborders;\\n\\tlet t3;\\n\\tlet div2;\\n\\tlet div3_class_value;\\n\\tlet t5;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\tfunction usermedia_useUserMedia_binding(value) {\\n\\t\\t/*usermedia_useUserMedia_binding*/ ctx[12](value);\\n\\t}\\n\\n\\tlet usermedia_props = {};\\n\\n\\tif (/*useUserMedia*/ ctx[4] !== void 0) {\\n\\t\\tusermedia_props.useUserMedia = /*useUserMedia*/ ctx[4];\\n\\t}\\n\\n\\tusermedia = new Use_usermedia({ props: usermedia_props });\\n\\tbinding_callbacks.push(() => bind(usermedia, 'useUserMedia', usermedia_useUserMedia_binding));\\n\\tscannerborders = new ScannerBorders({});\\n\\tconst default_slot_template = /*#slots*/ ctx[11].default;\\n\\tconst default_slot = create_slot(\\n\\t\\tdefault_slot_template,\\n\\t\\tctx,\\n\\t\\t/*$$scope*/ ctx[10],\\n\\t\\tget_default_slot_context\\n\\t);\\n\\tconst default_slot_or_fallback = default_slot || fallback_block(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(usermedia.$$.fragment);\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tdiv3 = element('div');\\n\\t\\t\\tdiv0 = element('div');\\n\\t\\t\\tcanvas_1 = element('canvas');\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tvideo_1 = element('video');\\n\\t\\t\\tt2 = space();\\n\\t\\t\\tcreate_component(scannerborders.$$.fragment);\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tdiv2 = element('div');\\n\\t\\t\\tdiv2.innerHTML = `<div>Scan a QR code with your camera to see what it says.</div>`;\\n\\t\\t\\tt5 = space();\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.c();\\n\\t\\t\\tattr(canvas_1, 'class', 'scanner__canvas svelte-1drrksk-ContactList');\\n\\t\\t\\tattr(video_1, 'class', 'scanner__video svelte-1drrksk-ContactList');\\n\\t\\t\\tattr(div0, 'class', 'scanner__aspect-ratio-container svelte-1drrksk-ContactList');\\n\\t\\t\\tattr(div2, 'class', 'scanner-tip svelte-1drrksk-ContactList');\\n\\t\\t\\tattr(\\n\\t\\t\\t\\tdiv3,\\n\\t\\t\\t\\t'class',\\n\\t\\t\\t\\t(div3_class_value =\\n\\t\\t\\t\\t\\t'' +\\n\\t\\t\\t\\t\\t(null_to_empty(`scanner ${/*active*/ ctx[2] ? '' : 'scanner--hidden'}`) +\\n\\t\\t\\t\\t\\t\\t' svelte-1drrksk-ContactList'))\\n\\t\\t\\t);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(usermedia, target, anchor);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\t\\t\\tinsert(target, div3, anchor);\\n\\t\\t\\tappend(div3, div0);\\n\\t\\t\\tappend(div0, canvas_1);\\n\\t\\t\\t/*canvas_1_binding*/ ctx[13](canvas_1);\\n\\t\\t\\tappend(div0, t1);\\n\\t\\t\\tappend(div0, video_1);\\n\\t\\t\\t/*video_1_binding*/ ctx[14](video_1);\\n\\t\\t\\tappend(div0, t2);\\n\\t\\t\\tmount_component(scannerborders, div0, null);\\n\\t\\t\\tappend(div3, t3);\\n\\t\\t\\tappend(div3, div2);\\n\\t\\t\\tinsert(target, t5, anchor);\\n\\n\\t\\t\\tif (default_slot_or_fallback) {\\n\\t\\t\\t\\tdefault_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(video_1, 'canplay', /*handleCanPlay*/ ctx[5]);\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tconst usermedia_changes = {};\\n\\n\\t\\t\\tif (!updating_useUserMedia && dirty & /*useUserMedia*/ 16) {\\n\\t\\t\\t\\tupdating_useUserMedia = true;\\n\\t\\t\\t\\tusermedia_changes.useUserMedia = /*useUserMedia*/ ctx[4];\\n\\t\\t\\t\\tadd_flush_callback(() => (updating_useUserMedia = false));\\n\\t\\t\\t}\\n\\n\\t\\t\\tusermedia.$set(usermedia_changes);\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!current ||\\n\\t\\t\\t\\t(dirty & /*active*/ 4 &&\\n\\t\\t\\t\\t\\tdiv3_class_value !==\\n\\t\\t\\t\\t\\t\\t(div3_class_value =\\n\\t\\t\\t\\t\\t\\t\\t'' +\\n\\t\\t\\t\\t\\t\\t\\t(null_to_empty(`scanner ${/*active*/ ctx[2] ? '' : 'scanner--hidden'}`) +\\n\\t\\t\\t\\t\\t\\t\\t\\t' svelte-1drrksk-ContactList')))\\n\\t\\t\\t) {\\n\\t\\t\\t\\tattr(div3, 'class', div3_class_value);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope, result*/ 1025)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[10],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[10])\\n\\t\\t\\t\\t\\t\\t\\t: get_slot_changes(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[10],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdirty,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tget_default_slot_changes\\n\\t\\t\\t\\t\\t\\t\\t  ),\\n\\t\\t\\t\\t\\t\\tget_default_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback &&\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p &&\\n\\t\\t\\t\\t\\t(!current || dirty & /*result*/ 1)\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(usermedia.$$.fragment, local);\\n\\t\\t\\ttransition_in(scannerborders.$$.fragment, local);\\n\\t\\t\\ttransition_in(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(usermedia.$$.fragment, local);\\n\\t\\t\\ttransition_out(scannerborders.$$.fragment, local);\\n\\t\\t\\ttransition_out(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(usermedia, detaching);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (detaching) detach(div3);\\n\\t\\t\\t/*canvas_1_binding*/ ctx[13](null);\\n\\t\\t\\t/*video_1_binding*/ ctx[14](null);\\n\\t\\t\\tdestroy_component(scannerborders);\\n\\t\\t\\tif (detaching) detach(t5);\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tlet active;\\n\\tlet $status;\\n\\tlet $stream;\\n\\tlet $error;\\n\\tcomponent_subscribe($$self, status, ($$value) => $$invalidate(8, ($status = $$value)));\\n\\tcomponent_subscribe($$self, stream, ($$value) => $$invalidate(9, ($stream = $$value)));\\n\\tcomponent_subscribe($$self, error, ($$value) => $$invalidate(17, ($error = $$value)));\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { result = null } = $$props;\\n\\tlet { stopMediaStream = null } = $$props;\\n\\tlet startMediaStream;\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet video = null;\\n\\tlet canvas = null;\\n\\tlet useUserMedia;\\n\\n\\tonMount(() => {\\n\\t\\t$$invalidate(\\n\\t\\t\\t6,\\n\\t\\t\\t({ stopMediaStream, startMediaStream } = useUserMedia()),\\n\\t\\t\\tstopMediaStream,\\n\\t\\t\\t$$invalidate(7, startMediaStream)\\n\\t\\t);\\n\\n\\t\\treturn () => {\\n\\t\\t\\tconsole.log('Component destroyed');\\n\\t\\t\\tstopMediaStream();\\n\\t\\t\\t$$invalidate(1, (video.srcObject = null), video);\\n\\t\\t};\\n\\t});\\n\\n\\tconst startCapturing = () => {\\n\\t\\tif (!canvas || !video) return;\\n\\t\\tconst context = canvas.getContext('2d');\\n\\t\\tif (!context) return;\\n\\t\\tconst { width, height } = canvas;\\n\\t\\tcontext.drawImage(video, 0, 0, width, height);\\n\\t\\tconst imageData = context.getImageData(0, 0, width, height);\\n\\t\\tconst qrCode = jsQR(imageData.data, width, height);\\n\\n\\t\\tif (qrCode === null) {\\n\\t\\t\\tconsole.log('timeout');\\n\\t\\t\\tsetTimeout(startCapturing, 750);\\n\\t\\t} else {\\n\\t\\t\\t$$invalidate(0, (result = qrCode.data));\\n\\t\\t\\tdispatch('successfulScan', qrCode.data);\\n\\t\\t\\tstopMediaStream();\\n\\t\\t\\t$$invalidate(1, (video.srcObject = null), video);\\n\\t\\t}\\n\\t};\\n\\n\\tconst handleCanPlay = () => {\\n\\t\\tconsole.log('canplay');\\n\\n\\t\\tif (canvas === null || canvas === null || video === null || video === null) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$$invalidate(3, (canvas.width = video.videoWidth), canvas);\\n\\t\\t$$invalidate(3, (canvas.height = video.videoHeight), canvas);\\n\\n\\t\\tif ($error !== null);\\n\\t\\telse {\\n\\t\\t\\tstartCapturing(); // TODO: show dialog to user with an error\\n\\t\\t}\\n\\t};\\n\\n\\tfunction usermedia_useUserMedia_binding(value) {\\n\\t\\tuseUserMedia = value;\\n\\t\\t$$invalidate(4, useUserMedia);\\n\\t}\\n\\n\\tfunction canvas_1_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tcanvas = $$value;\\n\\t\\t\\t$$invalidate(3, canvas);\\n\\t\\t});\\n\\t}\\n\\n\\tfunction video_1_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tvideo = $$value;\\n\\t\\t\\t($$invalidate(1, video), $$invalidate(8, $status)), $$invalidate(9, $stream);\\n\\t\\t});\\n\\t}\\n\\n\\tconst func = () => $$invalidate(0, (result = null));\\n\\n\\t$$self.$$set = ($$props) => {\\n\\t\\tif ('result' in $$props) $$invalidate(0, (result = $$props.result));\\n\\t\\tif ('stopMediaStream' in $$props) $$invalidate(6, (stopMediaStream = $$props.stopMediaStream));\\n\\t\\tif ('$$scope' in $$props) $$invalidate(10, ($$scope = $$props.$$scope));\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*result*/ 1) {\\n\\t\\t\\t$$invalidate(2, (active = !result));\\n\\t\\t}\\n\\n\\t\\tif ($$self.$$.dirty & /*$status, video, $stream*/ 770) {\\n\\t\\t\\tif ($status === 'resolved' && video !== null && $stream) {\\n\\t\\t\\t\\tconsole.log('Resolve, stream');\\n\\t\\t\\t\\t$$invalidate(1, (video.srcObject = $stream), video);\\n\\t\\t\\t\\tvideo.play().catch(console.error);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ($$self.$$.dirty & /*active, $status, startMediaStream*/ 388) {\\n\\t\\t\\tif (active && $status === 'stopped' && startMediaStream) {\\n\\t\\t\\t\\tstartMediaStream();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [\\n\\t\\tresult,\\n\\t\\tvideo,\\n\\t\\tactive,\\n\\t\\tcanvas,\\n\\t\\tuseUserMedia,\\n\\t\\thandleCanPlay,\\n\\t\\tstopMediaStream,\\n\\t\\tstartMediaStream,\\n\\t\\t$status,\\n\\t\\t$stream,\\n\\t\\t$$scope,\\n\\t\\tslots,\\n\\t\\tusermedia_useUserMedia_binding,\\n\\t\\tcanvas_1_binding,\\n\\t\\tvideo_1_binding,\\n\\t\\tfunc\\n\\t];\\n}\\n\\nclass Scanner extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(\\n\\t\\t\\tthis,\\n\\t\\t\\toptions,\\n\\t\\t\\tinstance,\\n\\t\\t\\tcreate_fragment,\\n\\t\\t\\tsafe_not_equal,\\n\\t\\t\\t{ result: 0, stopMediaStream: 6 },\\n\\t\\t\\tadd_css\\n\\t\\t);\\n\\t}\\n\\n\\tget result() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset result(result) {\\n\\t\\tthis.$$set({ result });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget stopMediaStream() {\\n\\t\\treturn this.$$.ctx[6];\\n\\t}\\n\\n\\tset stopMediaStream(stopMediaStream) {\\n\\t\\tthis.$$set({ stopMediaStream });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nvar Scanner$1 = Scanner;\\n\\nvar index = /*#__PURE__*/ Object.freeze({\\n\\t__proto__: null,\\n\\tScanner: Scanner$1\\n});\\n\\nexport { ContactList as default };\\n\"","<script>\r\n\t/**\r\n\t * Allows a user to do 2 things:\r\n\t * 1. Load a new es module and associate it with a tag\r\n\t * 2. Decrypt existing Tag Node data for initial display, by passing the data to the slot\r\n\t */\r\n\r\n\t// TEMPORARY: until we load from ID, IPFS, Arweave, or URL\r\n\t// @ts-ignore\r\n\timport ContactCard from '../../../../compiled/@peerpiper/ContactCard.svelte.js?raw';\r\n\t// @ts-ignore\r\n\timport ContactList from '../../../../compiled/@peerpiper/ContactList.svelte.js?raw';\r\n\r\n\texport let tagNodes;\r\n\texport let decryptTagNode;\r\n\r\n\tlet params;\r\n\r\n\tif (tagNodes) {\r\n\t\t// iterate through tagNodes for each tag, await decryptTagNode (tag) then set the params object key of tag to the result\r\n\t\tconst promises = Object.keys(tagNodes).map(async (tag) => {\r\n\t\t\tif (tag === 'prev') return null;\r\n\t\t\tconst decrypted = await decryptTagNode(tag);\r\n\t\t\tif (!decrypted.hasOwnProperty('esModule') || !decrypted.hasOwnProperty('props')) return null;\r\n\r\n\t\t\treturn [\r\n\t\t\t\t[tag],\r\n\t\t\t\t{\r\n\t\t\t\t\tesModule: decrypted.esModule,\r\n\t\t\t\t\tprops: decrypted.props\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tPromise.all(promises).then((result) => {\r\n\t\t\tconsole.log({ result }, Object.fromEntries(result.filter((r) => r)));\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tparams = Object.fromEntries(result.filter((r) => r));\r\n\t\t});\r\n\t} else {\r\n\t\t// default vals\r\n\t\tparams = {\r\n\t\t\tContacts: {\r\n\t\t\t\tesModule: ContactList\r\n\t\t\t},\r\n\t\t\tProfile: {\r\n\t\t\t\tesModule: ContactCard\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tlet tagValue, esModuleValue;\r\n\r\n\tfunction handleNewTag(e) {\r\n\t\tparams[tagValue] = {\r\n\t\t\tesModule: esModuleValue,\r\n\t\t\tprops: {}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<!-- <div>\r\n\t<div class=\"p-4\">\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h1 class=\"text-2xl font-bold\">Set Tag Value</h1>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclass=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n\t\t\t\t\ton:click={handleNewTag}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"p-4\">\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h2 class=\"text-xl font-bold\">Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Tag\"\r\n\t\t\t\t\tbind:value={tagValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h2 class=\"text-xl font-bold\">Module</h2>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Module\"\r\n\t\t\t\t\tbind:value={esModuleValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n\r\n{#if params}\r\n\t<slot {params} />\r\n{/if}\r\n","export default \"function noop() { }\\nfunction assign(tar, src) {\\n    // @ts-ignore\\n    for (const k in src)\\n        tar[k] = src[k];\\n    return tar;\\n}\\nfunction run(fn) {\\n    return fn();\\n}\\nfunction blank_object() {\\n    return Object.create(null);\\n}\\nfunction run_all(fns) {\\n    fns.forEach(run);\\n}\\nfunction is_function(thing) {\\n    return typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\\n}\\nfunction is_empty(obj) {\\n    return Object.keys(obj).length === 0;\\n}\\nfunction create_slot(definition, ctx, $$scope, fn) {\\n    if (definition) {\\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\\n        return definition[0](slot_ctx);\\n    }\\n}\\nfunction get_slot_context(definition, ctx, $$scope, fn) {\\n    return definition[1] && fn\\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\\n        : $$scope.ctx;\\n}\\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\\n    if (definition[2] && fn) {\\n        const lets = definition[2](fn(dirty));\\n        if ($$scope.dirty === undefined) {\\n            return lets;\\n        }\\n        if (typeof lets === 'object') {\\n            const merged = [];\\n            const len = Math.max($$scope.dirty.length, lets.length);\\n            for (let i = 0; i < len; i += 1) {\\n                merged[i] = $$scope.dirty[i] | lets[i];\\n            }\\n            return merged;\\n        }\\n        return $$scope.dirty | lets;\\n    }\\n    return $$scope.dirty;\\n}\\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\\n    if (slot_changes) {\\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\\n        slot.p(slot_context, slot_changes);\\n    }\\n}\\nfunction get_all_dirty_from_scope($$scope) {\\n    if ($$scope.ctx.length > 32) {\\n        const dirty = [];\\n        const length = $$scope.ctx.length / 32;\\n        for (let i = 0; i < length; i++) {\\n            dirty[i] = -1;\\n        }\\n        return dirty;\\n    }\\n    return -1;\\n}\\nfunction append(target, node) {\\n    target.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n    const append_styles_to = get_root_for_style(target);\\n    if (!append_styles_to.getElementById(style_sheet_id)) {\\n        const style = element('style');\\n        style.id = style_sheet_id;\\n        style.textContent = styles;\\n        append_stylesheet(append_styles_to, style);\\n    }\\n}\\nfunction get_root_for_style(node) {\\n    if (!node)\\n        return document;\\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n    if (root && root.host) {\\n        return root;\\n    }\\n    return node.ownerDocument;\\n}\\nfunction append_stylesheet(node, style) {\\n    append(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n    target.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n    node.parentNode.removeChild(node);\\n}\\nfunction destroy_each(iterations, detaching) {\\n    for (let i = 0; i < iterations.length; i += 1) {\\n        if (iterations[i])\\n            iterations[i].d(detaching);\\n    }\\n}\\nfunction element(name) {\\n    return document.createElement(name);\\n}\\nfunction svg_element(name) {\\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\\n}\\nfunction text(data) {\\n    return document.createTextNode(data);\\n}\\nfunction space() {\\n    return text(' ');\\n}\\nfunction empty() {\\n    return text('');\\n}\\nfunction attr(node, attribute, value) {\\n    if (value == null)\\n        node.removeAttribute(attribute);\\n    else if (node.getAttribute(attribute) !== value)\\n        node.setAttribute(attribute, value);\\n}\\nfunction children(element) {\\n    return Array.from(element.childNodes);\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n    const e = document.createEvent('CustomEvent');\\n    e.initCustomEvent(type, bubbles, cancelable, detail);\\n    return e;\\n}\\nclass HtmlTag {\\n    constructor(is_svg = false) {\\n        this.is_svg = false;\\n        this.is_svg = is_svg;\\n        this.e = this.n = null;\\n    }\\n    c(html) {\\n        this.h(html);\\n    }\\n    m(html, target, anchor = null) {\\n        if (!this.e) {\\n            if (this.is_svg)\\n                this.e = svg_element(target.nodeName);\\n            else\\n                this.e = element(target.nodeName);\\n            this.t = target;\\n            this.c(html);\\n        }\\n        this.i(anchor);\\n    }\\n    h(html) {\\n        this.e.innerHTML = html;\\n        this.n = Array.from(this.e.childNodes);\\n    }\\n    i(anchor) {\\n        for (let i = 0; i < this.n.length; i += 1) {\\n            insert(this.t, this.n[i], anchor);\\n        }\\n    }\\n    p(html) {\\n        this.d();\\n        this.h(html);\\n        this.i(this.a);\\n    }\\n    d() {\\n        this.n.forEach(detach);\\n    }\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n    current_component = component;\\n}\\nfunction get_current_component() {\\n    if (!current_component)\\n        throw new Error('Function called outside component initialization');\\n    return current_component;\\n}\\nfunction onMount(fn) {\\n    get_current_component().$$.on_mount.push(fn);\\n}\\nfunction onDestroy(fn) {\\n    get_current_component().$$.on_destroy.push(fn);\\n}\\nfunction createEventDispatcher() {\\n    const component = get_current_component();\\n    return (type, detail, { cancelable = false } = {}) => {\\n        const callbacks = component.$$.callbacks[type];\\n        if (callbacks) {\\n            // TODO are there situations where events could be dispatched\\n            // in a server (non-DOM) environment?\\n            const event = custom_event(type, detail, { cancelable });\\n            callbacks.slice().forEach(fn => {\\n                fn.call(component, event);\\n            });\\n            return !event.defaultPrevented;\\n        }\\n        return true;\\n    };\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n    if (!update_scheduled) {\\n        update_scheduled = true;\\n        resolved_promise.then(flush);\\n    }\\n}\\nfunction add_render_callback(fn) {\\n    render_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n    const saved_component = current_component;\\n    do {\\n        // first, call beforeUpdate functions\\n        // and update components\\n        while (flushidx < dirty_components.length) {\\n            const component = dirty_components[flushidx];\\n            flushidx++;\\n            set_current_component(component);\\n            update(component.$$);\\n        }\\n        set_current_component(null);\\n        dirty_components.length = 0;\\n        flushidx = 0;\\n        while (binding_callbacks.length)\\n            binding_callbacks.pop()();\\n        // then, once components are updated, call\\n        // afterUpdate functions. This may cause\\n        // subsequent updates...\\n        for (let i = 0; i < render_callbacks.length; i += 1) {\\n            const callback = render_callbacks[i];\\n            if (!seen_callbacks.has(callback)) {\\n                // ...so guard against infinite loops\\n                seen_callbacks.add(callback);\\n                callback();\\n            }\\n        }\\n        render_callbacks.length = 0;\\n    } while (dirty_components.length);\\n    while (flush_callbacks.length) {\\n        flush_callbacks.pop()();\\n    }\\n    update_scheduled = false;\\n    seen_callbacks.clear();\\n    set_current_component(saved_component);\\n}\\nfunction update($$) {\\n    if ($$.fragment !== null) {\\n        $$.update();\\n        run_all($$.before_update);\\n        const dirty = $$.dirty;\\n        $$.dirty = [-1];\\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\\n        $$.after_update.forEach(add_render_callback);\\n    }\\n}\\nconst outroing = new Set();\\nlet outros;\\nfunction group_outros() {\\n    outros = {\\n        r: 0,\\n        c: [],\\n        p: outros // parent group\\n    };\\n}\\nfunction check_outros() {\\n    if (!outros.r) {\\n        run_all(outros.c);\\n    }\\n    outros = outros.p;\\n}\\nfunction transition_in(block, local) {\\n    if (block && block.i) {\\n        outroing.delete(block);\\n        block.i(local);\\n    }\\n}\\nfunction transition_out(block, local, detach, callback) {\\n    if (block && block.o) {\\n        if (outroing.has(block))\\n            return;\\n        outroing.add(block);\\n        outros.c.push(() => {\\n            outroing.delete(block);\\n            if (callback) {\\n                if (detach)\\n                    block.d(1);\\n                callback();\\n            }\\n        });\\n        block.o(local);\\n    }\\n}\\nfunction create_component(block) {\\n    block && block.c();\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\\n    fragment && fragment.m(target, anchor);\\n    if (!customElement) {\\n        // onMount happens before the initial afterUpdate\\n        add_render_callback(() => {\\n            const new_on_destroy = on_mount.map(run).filter(is_function);\\n            if (on_destroy) {\\n                on_destroy.push(...new_on_destroy);\\n            }\\n            else {\\n                // Edge case - component was destroyed immediately,\\n                // most likely as a result of a binding initialising\\n                run_all(new_on_destroy);\\n            }\\n            component.$$.on_mount = [];\\n        });\\n    }\\n    after_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n    const $$ = component.$$;\\n    if ($$.fragment !== null) {\\n        run_all($$.on_destroy);\\n        $$.fragment && $$.fragment.d(detaching);\\n        // TODO null out other refs, including component.$$ (but need to\\n        // preserve final state?)\\n        $$.on_destroy = $$.fragment = null;\\n        $$.ctx = [];\\n    }\\n}\\nfunction make_dirty(component, i) {\\n    if (component.$$.dirty[0] === -1) {\\n        dirty_components.push(component);\\n        schedule_update();\\n        component.$$.dirty.fill(0);\\n    }\\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\\n}\\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\\n    const parent_component = current_component;\\n    set_current_component(component);\\n    const $$ = component.$$ = {\\n        fragment: null,\\n        ctx: null,\\n        // state\\n        props,\\n        update: noop,\\n        not_equal,\\n        bound: blank_object(),\\n        // lifecycle\\n        on_mount: [],\\n        on_destroy: [],\\n        on_disconnect: [],\\n        before_update: [],\\n        after_update: [],\\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n        // everything else\\n        callbacks: blank_object(),\\n        dirty,\\n        skip_bound: false,\\n        root: options.target || parent_component.$$.root\\n    };\\n    append_styles && append_styles($$.root);\\n    let ready = false;\\n    $$.ctx = instance\\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\\n            const value = rest.length ? rest[0] : ret;\\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\\n                if (!$$.skip_bound && $$.bound[i])\\n                    $$.bound[i](value);\\n                if (ready)\\n                    make_dirty(component, i);\\n            }\\n            return ret;\\n        })\\n        : [];\\n    $$.update();\\n    ready = true;\\n    run_all($$.before_update);\\n    // `false` as a special case of no DOM component\\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n    if (options.target) {\\n        if (options.hydrate) {\\n            const nodes = children(options.target);\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.l(nodes);\\n            nodes.forEach(detach);\\n        }\\n        else {\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.c();\\n        }\\n        if (options.intro)\\n            transition_in(component.$$.fragment);\\n        mount_component(component, options.target, options.anchor, options.customElement);\\n        flush();\\n    }\\n    set_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n    $destroy() {\\n        destroy_component(this, 1);\\n        this.$destroy = noop;\\n    }\\n    $on(type, callback) {\\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\\n        callbacks.push(callback);\\n        return () => {\\n            const index = callbacks.indexOf(callback);\\n            if (index !== -1)\\n                callbacks.splice(index, 1);\\n        };\\n    }\\n    $set($$props) {\\n        if (this.$$set && !is_empty($$props)) {\\n            this.$$.skip_bound = true;\\n            this.$$set($$props);\\n            this.$$.skip_bound = false;\\n        }\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\OutterWraper.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$1(target) {\\n\\tappend_styles(target, \\\"svelte-l2rleg-TagManager\\\", \\\".svelte-l2rleg-TagManager,.svelte-l2rleg-TagManager::before,.svelte-l2rleg-TagManager::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-l2rleg-TagManager::before,.svelte-l2rleg-TagManager::after{--tw-content:''}.svelte-l2rleg-TagManager:-moz-focusring{outline:auto}.svelte-l2rleg-TagManager:-moz-ui-invalid{box-shadow:none}.svelte-l2rleg-TagManager::-webkit-inner-spin-button,.svelte-l2rleg-TagManager::-webkit-outer-spin-button{height:auto}.svelte-l2rleg-TagManager::-webkit-search-decoration{-webkit-appearance:none}.svelte-l2rleg-TagManager::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-l2rleg-TagManager:disabled{cursor:default}.svelte-l2rleg-TagManager::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-l2rleg-TagManager::-webkit-date-and-time-value{min-height:1.5em}.svelte-l2rleg-TagManager{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-l2rleg-TagManager,.svelte-l2rleg-TagManager::before,.svelte-l2rleg-TagManager::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-l2rleg-TagManager::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-l2rleg-TagManager::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.m-2.svelte-l2rleg-TagManager{margin:0.5rem}.flex.svelte-l2rleg-TagManager{display:flex}@-webkit-keyframes svelte-l2rleg-TagManager-spin{to{transform:rotate(360deg)}}@keyframes svelte-l2rleg-TagManager-spin{to{transform:rotate(360deg)}}.flex-col.svelte-l2rleg-TagManager{flex-direction:column}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nfunction create_fragment$3(ctx) {\\n\\tlet div;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[1].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"flex flex-col m-2 svelte-l2rleg-TagManager\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[0],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$3($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [$$scope, slots];\\n}\\n\\nclass OutterWraper extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, {}, add_css$1);\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Wrapper.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(target, \\\"svelte-1p680oz-TagManager\\\", \\\"@tailwind base;@tailwind components;@tailwind utilities;.svelte-1p680oz-TagManager,.svelte-1p680oz-TagManager::before,.svelte-1p680oz-TagManager::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-1p680oz-TagManager::before,.svelte-1p680oz-TagManager::after{--tw-content:''}.svelte-1p680oz-TagManager:-moz-focusring{outline:auto}.svelte-1p680oz-TagManager:-moz-ui-invalid{box-shadow:none}.svelte-1p680oz-TagManager::-webkit-inner-spin-button,.svelte-1p680oz-TagManager::-webkit-outer-spin-button{height:auto}.svelte-1p680oz-TagManager::-webkit-search-decoration{-webkit-appearance:none}.svelte-1p680oz-TagManager::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-1p680oz-TagManager:disabled{cursor:default}.svelte-1p680oz-TagManager::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-1p680oz-TagManager::-webkit-date-and-time-value{min-height:1.5em}.svelte-1p680oz-TagManager{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-1p680oz-TagManager,.svelte-1p680oz-TagManager::before,.svelte-1p680oz-TagManager::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1p680oz-TagManager::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-1p680oz-TagManager::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.m-2.svelte-1p680oz-TagManager{margin:0.5rem}.flex-1.svelte-1p680oz-TagManager{flex:1 1 0%}@-webkit-keyframes svelte-1p680oz-TagManager-spin{to{transform:rotate(360deg)}}@keyframes svelte-1p680oz-TagManager-spin{to{transform:rotate(360deg)}}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nfunction create_fragment$2(ctx) {\\n\\tlet div;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[1].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"flex-1 m-2 svelte-1p680oz-TagManager\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[0],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$2($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [$$scope, slots];\\n}\\n\\nclass Wrapper extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, {}, add_css);\\n\\t}\\n}\\n\\nfunction canonicalize(obj) {\\n    var buffer = '';\\n    serialize(obj);\\n    return buffer;\\n    function serialize(object) {\\n        if (object === null ||\\n            typeof object !== 'object' ||\\n            object.toJSON != null) {\\n            /////////////////////////////////////////////////\\n            // Primitive data type - Use ES6/JSON          //\\n            /////////////////////////////////////////////////\\n            buffer += JSON.stringify(object);\\n            // } else if (object instanceof Date) {\\n            //   buffer += JSON.stringify(object);\\n        }\\n        else if (Array.isArray(object)) {\\n            /////////////////////////////////////////////////\\n            // Array - Maintain element order              //\\n            /////////////////////////////////////////////////\\n            buffer += '[';\\n            var next_1 = false;\\n            object.forEach(function (element) {\\n                if (next_1) {\\n                    buffer += ',';\\n                }\\n                next_1 = true;\\n                /////////////////////////////////////////\\n                // Array element - Recursive expansion //\\n                /////////////////////////////////////////\\n                serialize(element);\\n            });\\n            buffer += ']';\\n        }\\n        else {\\n            /////////////////////////////////////////////////\\n            // Object - Sort properties before serializing //\\n            /////////////////////////////////////////////////\\n            buffer += '{';\\n            var vKeys = Object.keys(object).sort();\\n            vKeys.forEach(function (property, index) { return addProp(object, property, index); });\\n            buffer += '}';\\n        }\\n    }\\n    function addProp(object, property, index) {\\n        if (index > 0) {\\n            buffer += ',';\\n        }\\n        ///////////////////////////////////////////////\\n        // Property names are strings - Use ES6/JSON //\\n        ///////////////////////////////////////////////\\n        buffer += JSON.stringify(property);\\n        buffer += ':';\\n        //////////////////////////////////////////\\n        // Property value - Recursive expansion //\\n        //////////////////////////////////////////\\n        serialize(object[property]);\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\TagManager.svelte generated by Svelte v3.48.0 */\\n\\nfunction get_each_context(ctx, list, i) {\\n\\tconst child_ctx = ctx.slice();\\n\\tchild_ctx[5] = list[i][0];\\n\\tchild_ctx[6] = list[i][1].esModule;\\n\\tchild_ctx[7] = list[i][1].props !== undefined ? list[i][1].props : {};\\n\\treturn child_ctx;\\n}\\n\\n// (27:0) {#if ComponentMounter && params && Object.entries(params).length > 0}\\nfunction create_if_block(ctx) {\\n\\tlet outterwraper;\\n\\tlet current;\\n\\n\\toutterwraper = new OutterWraper({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(outterwraper.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(outterwraper, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst outterwraper_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, params, ComponentMounter*/ 1027) {\\n\\t\\t\\t\\toutterwraper_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\toutterwraper.$set(outterwraper_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(outterwraper.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(outterwraper.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(outterwraper, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (31:3) <ComponentWrapper>\\nfunction create_default_slot_1(ctx) {\\n\\tlet switch_instance;\\n\\tlet t;\\n\\tlet current;\\n\\n\\tfunction change_handler(...args) {\\n\\t\\treturn /*change_handler*/ ctx[4](/*props*/ ctx[7], /*tag*/ ctx[5], /*esModule*/ ctx[6], ...args);\\n\\t}\\n\\n\\tvar switch_value = /*ComponentMounter*/ ctx[1];\\n\\n\\tfunction switch_props(ctx) {\\n\\t\\treturn {\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tesModule: /*esModule*/ ctx[6],\\n\\t\\t\\t\\tprops: /*props*/ ctx[7]\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\tif (switch_value) {\\n\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\tswitch_instance.$on(\\\"change\\\", change_handler);\\n\\t}\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (switch_instance) create_component(switch_instance.$$.fragment);\\n\\t\\t\\tt = space();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\tmount_component(switch_instance, target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tconst switch_instance_changes = {};\\n\\t\\t\\tif (dirty & /*params*/ 1) switch_instance_changes.esModule = /*esModule*/ ctx[6];\\n\\t\\t\\tif (dirty & /*params*/ 1) switch_instance_changes.props = /*props*/ ctx[7];\\n\\n\\t\\t\\tif (switch_value !== (switch_value = /*ComponentMounter*/ ctx[1])) {\\n\\t\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\t\\tgroup_outros();\\n\\t\\t\\t\\t\\tconst old_component = switch_instance;\\n\\n\\t\\t\\t\\t\\ttransition_out(old_component.$$.fragment, 1, 0, () => {\\n\\t\\t\\t\\t\\t\\tdestroy_component(old_component, 1);\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (switch_value) {\\n\\t\\t\\t\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\t\\t\\t\\tswitch_instance.$on(\\\"change\\\", change_handler);\\n\\t\\t\\t\\t\\tcreate_component(switch_instance.$$.fragment);\\n\\t\\t\\t\\t\\ttransition_in(switch_instance.$$.fragment, 1);\\n\\t\\t\\t\\t\\tmount_component(switch_instance, t.parentNode, t);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tswitch_instance = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (switch_value) {\\n\\t\\t\\t\\tswitch_instance.$set(switch_instance_changes);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (switch_instance) destroy_component(switch_instance, detaching);\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (29:2) {#each [...Object.entries(params)] as [tag, { esModule, props = { }\\nfunction create_each_block(ctx) {\\n\\tlet componentwrapper;\\n\\tlet current;\\n\\n\\tcomponentwrapper = new Wrapper({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_1] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(componentwrapper.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(componentwrapper, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst componentwrapper_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, ComponentMounter, params*/ 1027) {\\n\\t\\t\\t\\tcomponentwrapper_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcomponentwrapper.$set(componentwrapper_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(componentwrapper.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(componentwrapper.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(componentwrapper, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (28:1) <OutterWraper>\\nfunction create_default_slot(ctx) {\\n\\tlet each_1_anchor;\\n\\tlet current;\\n\\tlet each_value = [...Object.entries(/*params*/ ctx[0])];\\n\\tlet each_blocks = [];\\n\\n\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\\n\\t}\\n\\n\\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\\n\\t\\teach_blocks[i] = null;\\n\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t}\\n\\n\\t\\t\\teach_1_anchor = empty();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, each_1_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*ComponentMounter, Object, params, dispatch, canonicalize, update, JSON*/ 15) {\\n\\t\\t\\t\\teach_value = [...Object.entries(/*params*/ ctx[0])];\\n\\t\\t\\t\\tlet i;\\n\\n\\t\\t\\t\\tfor (i = 0; i < each_value.length; i += 1) {\\n\\t\\t\\t\\t\\tconst child_ctx = get_each_context(ctx, each_value, i);\\n\\n\\t\\t\\t\\t\\tif (each_blocks[i]) {\\n\\t\\t\\t\\t\\t\\teach_blocks[i].p(child_ctx, dirty);\\n\\t\\t\\t\\t\\t\\ttransition_in(each_blocks[i], 1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\teach_blocks[i] = create_each_block(child_ctx);\\n\\t\\t\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t\\t\\t\\ttransition_in(each_blocks[i], 1);\\n\\t\\t\\t\\t\\t\\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\t\\tout(i);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\n\\t\\t\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\t\\t\\ttransition_in(each_blocks[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\teach_blocks = each_blocks.filter(Boolean);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\ttransition_out(each_blocks[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_each(each_blocks, detaching);\\n\\t\\t\\tif (detaching) detach(each_1_anchor);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$1(ctx) {\\n\\tlet show_if = /*ComponentMounter*/ ctx[1] && /*params*/ ctx[0] && Object.entries(/*params*/ ctx[0]).length > 0;\\n\\tlet if_block_anchor;\\n\\tlet current;\\n\\tlet if_block = show_if && create_if_block(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tif_block_anchor = empty();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (if_block) if_block.m(target, anchor);\\n\\t\\t\\tinsert(target, if_block_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*ComponentMounter, params*/ 3) show_if = /*ComponentMounter*/ ctx[1] && /*params*/ ctx[0] && Object.entries(/*params*/ ctx[0]).length > 0;\\n\\n\\t\\t\\tif (show_if) {\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\n\\t\\t\\t\\t\\tif (dirty & /*ComponentMounter, params*/ 3) {\\n\\t\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block = create_if_block(ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (if_block) {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_block, 1, 1, () => {\\n\\t\\t\\t\\t\\tif_block = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (if_block) if_block.d(detaching);\\n\\t\\t\\tif (detaching) detach(if_block_anchor);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$1($$self, $$props, $$invalidate) {\\n\\tlet { params } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet ComponentMounter;\\n\\n\\tonMount(async () => {\\n\\t\\t// not SSR compatible\\n\\t\\t$$invalidate(1, ComponentMounter = (await Promise.resolve().then(function () { return ComponentMounter$1; })).default);\\n\\t});\\n\\n\\t// sends update for each individual tag as they change\\n\\tfunction update({ tag, value }) {\\n\\t\\t$$invalidate(0, params[tag] = Object.assign({}, params[tag], { ...value }), params);\\n\\n\\t\\t// dispatch update for this tag\\n\\t\\tdispatch('change', { tag, props: { ...params[tag] } });\\n\\t}\\n\\n\\tconst change_handler = (props, tag, esModule, e) => {\\n\\t\\t// loading contacts?\\n\\t\\tif (e.detail.contacts) dispatch('change', { contacts: e.detail.contacts });\\n\\n\\t\\t// cleanse and compare\\n\\t\\tcanonicalize(e.detail) != canonicalize(props) && update({\\n\\t\\t\\ttag,\\n\\t\\t\\tvalue: {\\n\\t\\t\\t\\tesModule,\\n\\t\\t\\t\\tprops: JSON.parse(canonicalize(e.detail))\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('params' in $$props) $$invalidate(0, params = $$props.params);\\n\\t};\\n\\n\\treturn [params, ComponentMounter, dispatch, update, change_handler];\\n}\\n\\nclass TagManager extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { params: 0 });\\n\\t}\\n\\n\\tget params() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset params(params) {\\n\\t\\tthis.$$set({ params });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ComponentMounter.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment(ctx) {\\n\\tlet html_tag;\\n\\tlet html_anchor;\\n\\tlet t;\\n\\tlet div;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\thtml_tag = new HtmlTag(false);\\n\\t\\t\\thtml_anchor = empty();\\n\\t\\t\\tt = space();\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\thtml_tag.a = html_anchor;\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\thtml_tag.m(/*css*/ ctx[0], document.head);\\n\\t\\t\\tappend(document.head, html_anchor);\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\t/*div_binding*/ ctx[6](div);\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*css*/ 1) html_tag.p(/*css*/ ctx[0]);\\n\\t\\t},\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tdetach(html_anchor);\\n\\t\\t\\tif (detaching) html_tag.d();\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\t/*div_binding*/ ctx[6](null);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tlet { esModule } = $$props;\\n\\tlet { props } = $$props;\\n\\tlet { css } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet component; // the esModule component to be mounted in this gateway\\n\\tlet url;\\n\\tlet target; // where we mount this component\\n\\tlet mounted;\\n\\n\\tasync function loadEsModuleComponent() {\\n\\t\\t$$invalidate(0, css = css ? `<style>${css}<\\\\/style>` : '');\\n\\n\\t\\t// cleanup from prior loads\\n\\t\\tif (component) {\\n\\t\\t\\tcomponent.$destroy();\\n\\t\\t\\tURL.revokeObjectURL(url); // memory management\\n\\t\\t}\\n\\n\\t\\tconst blob = new Blob([esModule], { type: 'text/javascript' });\\n\\t\\turl = URL.createObjectURL(blob);\\n\\n\\t\\tconst App = (await import(/* @vite-ignore */\\n\\t\\turl)).default;\\n\\n\\t\\tif (!App || !target) return;\\n\\t\\t$$invalidate(1, target.innerHTML = '', target);\\n\\t\\t$$invalidate(4, component = new App({ target, props: {} }));\\n\\n\\t\\t// get the default values of component for each of the keys of component.$$.props\\n\\t\\t// this way the parent component can deduce the schema of the data\\n\\t\\tconst initProps = component['$$'].props;\\n\\n\\t\\tlet inits = {};\\n\\n\\t\\tObject.keys(initProps).map(k => {\\n\\t\\t\\tinits[k] = component[k]; // load default initial props\\n\\t\\t});\\n\\n\\t\\tlet allProps = Object.assign(inits, props);\\n\\t\\tdispatch('change', allProps); // trigger \\\"rendered\\\" in Gateway, plus push any default values to the db to save\\n\\n\\t\\t// on change, Pass props message up to iframe parent so it can be saved/updated\\n\\t\\tcomponent.$on('change', event => {\\n\\t\\t\\tdispatch('change', event.detail);\\n\\t\\t});\\n\\n\\t\\tsetProps(allProps); // set them after we emit the defaults back to the user to save/display\\n\\t} // if (url) URL.revokeObjectURL(url); // memory management\\n\\n\\tfunction setProps(props) {\\n\\t\\tif (!component) return;\\n\\t\\tcomponent.$set({ ...props });\\n\\t}\\n\\n\\tonMount(() => {\\n\\t\\t$$invalidate(5, mounted = true);\\n\\t});\\n\\n\\tonDestroy(() => {\\n\\t\\tif (component) component.$destroy();\\n\\t\\tif (url) URL.revokeObjectURL(url); // memory management\\n\\t});\\n\\n\\tfunction div_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\ttarget = $$value;\\n\\t\\t\\t$$invalidate(1, target);\\n\\t\\t});\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('esModule' in $$props) $$invalidate(2, esModule = $$props.esModule);\\n\\t\\tif ('props' in $$props) $$invalidate(3, props = $$props.props);\\n\\t\\tif ('css' in $$props) $$invalidate(0, css = $$props.css);\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*mounted, esModule*/ 36) {\\n\\t\\t\\tif (mounted && esModule) loadEsModuleComponent();\\n\\t\\t}\\n\\n\\t\\tif ($$self.$$.dirty & /*component, props*/ 24) {\\n\\t\\t\\tif (component && props) setProps();\\n\\t\\t}\\n\\t};\\n\\n\\treturn [css, target, esModule, props, component, mounted, div_binding];\\n}\\n\\nclass ComponentMounter extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance, create_fragment, safe_not_equal, { esModule: 2, props: 3, css: 0 });\\n\\t}\\n\\n\\tget esModule() {\\n\\t\\treturn this.$$.ctx[2];\\n\\t}\\n\\n\\tset esModule(esModule) {\\n\\t\\tthis.$$set({ esModule });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget props() {\\n\\t\\treturn this.$$.ctx[3];\\n\\t}\\n\\n\\tset props(props) {\\n\\t\\tthis.$$set({ props });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget css() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset css(css) {\\n\\t\\tthis.$$set({ css });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nvar ComponentMounter$1 = /*#__PURE__*/Object.freeze({\\n    __proto__: null,\\n    'default': ComponentMounter\\n});\\n\\nexport { TagManager as default };\\n\"","<script>\r\n\timport PiperNet from './templates/Hypns/PiperNet.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let openHypns;\r\n\r\n\tlet contacts;\r\n\tfunction handleLoadContacts(e) {\r\n\t\t// get props fron e.detail, iterate through each contact, and update the contact's props\r\n\t\tcontacts = e.detail\r\n\t\t\t.map((contact) => {\r\n\t\t\t\tconst vpk = validatePubKey(contact.pubkey);\r\n\t\t\t\tif (!vpk) return null;\r\n\r\n\t\t\t\treturn { pubkey: vpk, handle: contact.handle };\r\n\t\t\t})\r\n\t\t\t.filter((contact) => contact);\r\n\r\n\t\tconsole.log('Piper Manager handleLoadContacts', contacts);\r\n\t}\r\n</script>\r\n\r\n{#if contacts}\r\n\t<div class=\"m-2 p-2 border bg-slate-200 rounded min-h-[100px]\">\r\n\t\t{#each contacts as contact}\r\n\t\t\t<div class=\"main m-1 p-2 rounded bg-neutral-800 text-slate-50 break-words\">\r\n\t\t\t\t<PiperNet pubkey={contact.pubkey} handle={contact.handle} {openHypns} />\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t</div>\r\n{/if}\r\n\r\n<slot {handleLoadContacts} />\r\n","<script>\r\n\timport { Gateway, FetchComponent } from '@douganderson444/svelte-component-gateway';\r\n\timport Proxcryptor from './Proxcryptor.svelte';\r\n\timport IPFSManager from './IPFSManager.svelte';\r\n\r\n\timport { Peerpiper } from '@peerpiper/awesome-peerpiper-components';\r\n\timport TagManager from '../../../awesome-peerpiper-components/compiled/@peerpiper/TagManager.svelte.js?raw';\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport HypnsManager from './HypnsManager.svelte';\r\n\timport PiperNetManager from './PiperNetManager.svelte';\r\n\r\n\texport let wallet = null; // possible the user has their own wallet?\r\n\r\n\t//props\r\n\tlet Web3WalletMenu;\r\n\tlet rootCID;\r\n\tlet openHypns;\r\n\tlet handleLoadContacts;\r\n\r\n\t// Option A, get compoennts from url\r\n\tlet url =\r\n\t\t'https://raw.githubusercontent.com/PeerPiper/awesome-peerpiper-components/master/compiled/@peerpiper/ContactCard.svelte.js';\r\n\r\n\t// Option B, get component from library\r\n\t// let component = '../../';\r\n\r\n\tlet start = Date.now();\r\n\r\n\tonMount(async () => {\r\n\t\tif (!wallet) {\r\n\t\t\t// @ts-ignore\r\n\t\t\t({ Web3WalletMenu } = await import('@peerpiper/svelte-web3-wallet-connector'));\r\n\t\t}\r\n\t});\r\n\r\n\tfunction refresh() {\r\n\t\tglobalThis.ipfsNode.stop();\r\n\t\tglobalThis.ipfsNode = null;\r\n\t\tglobalThis.location.reload();\r\n\t\treturn 'Reloading page...';\r\n\t}\r\n</script>\r\n\r\n<!-- First, you need a wallet -->\r\n{#if Web3WalletMenu}\r\n\t<svelte:component this={Web3WalletMenu} bind:wallet />\r\n{/if}\r\n\r\n<!-- HypnsManager for YOUR details...  -->\r\n<!-- When there is data saved to ILPD, why not save it to PipeNet?  -->\r\n\r\n<div class=\"m-2 p-2 border bg-slate-200 rounded min-h-[100px]\">\r\n\t<HypnsManager {wallet} {rootCID} bind:openHypns />\r\n</div>\r\n\r\n<!-- PiperNetManager for your CONTACTS details -->\r\n<!-- listens for updates in contacts, then listens for updates on PiperNet  -->\r\n<PiperNetManager let:handleLoadContacts {openHypns}>\r\n\t<!-- IPFS Manager will only load the slot content once it's a had a chance to load the rootCID, if any  -->\r\n\t<!-- IPFS Manager passes both ipfs and rootCID back to this component once intiialized -->\r\n\t<!-- IPFS Manager will also pass the preferred tag to load up (current defaults to first entry in rootCID object) -->\r\n\t<IPFSManager let:ipfsNode bind:rootCID let:tagNodes>\r\n\t\t<!-- <DataDisplay {ipfsNode} {rootCID} /> -->\r\n\t\t<!-- Fetch gets the component from the interwebs and passes it back up here through let:component  -->\r\n\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t<!-- <FetchComponent {url} let:component> -->\r\n\t\t{!ipfsNode ? refresh() : ''}\r\n\t\t{!wallet ? 'Connect to PeerPiper Wallet' : ''}\r\n\r\n\t\t<!-- // TODO: Refresh the component when the rootCID changes  -->\r\n\t\t<div class=\"flex flex-1\">\r\n\t\t\t{#if ipfsNode && wallet}\r\n\t\t\t\t<!-- on:change bubbles the emited 'change' event to the parent component, if bind:props isn't avail -->\r\n\t\t\t\t<!-- <Proxcryptor\r\n\t\t\t\t\tproxcryptor={wallet?.proxcryptor}\r\n\t\t\t\t\ttag={'Contacts'}\r\n\t\t\t\t\t{ipfsNode}\r\n\t\t\t\t\t{rootCID}\r\n\t\t\t\t\tlet:props\r\n\t\t\t\t\tlet:handleChange\r\n\t\t\t\t\ton:rootCID={(e) => (rootCID = e.detail)}>\r\n\t\t\t\t-->\r\n\r\n\t\t\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t\t\t<!-- <PeerContacts {props} on:change={handleChange} /> -->\r\n\t\t\t\t<!-- </Proxcryptor> -->\r\n\t\t\t\t{#if TagManager}\r\n\t\t\t\t\t<Proxcryptor\r\n\t\t\t\t\t\tproxcryptor={wallet?.proxcryptor}\r\n\t\t\t\t\t\t{ipfsNode}\r\n\t\t\t\t\t\t{rootCID}\r\n\t\t\t\t\t\tlet:decryptTagNode\r\n\t\t\t\t\t\tlet:handleTagChange\r\n\t\t\t\t\t\ton:rootCID={(e) => (rootCID = e.detail)}\r\n\t\t\t\t\t\ton:loadContacts={handleLoadContacts}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<!-- Publishing our latest rootCID to a public Key -->\r\n\t\t\t\t\t\t<!-- Getting the latest rootCID for Contacts... -->\r\n\t\t\t\t\t\t<Peerpiper.TagConfig {tagNodes} {decryptTagNode} let:params>\r\n\t\t\t\t\t\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t\t\t\t\t\t<Gateway esModule={TagManager} props={{ params }} on:change={handleTagChange} />\r\n\t\t\t\t\t\t</Peerpiper.TagConfig>\r\n\t\t\t\t\t</Proxcryptor>\r\n\t\t\t\t{/if}\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<!-- </FetchComponent> -->\r\n\t</IPFSManager>\r\n</PiperNetManager>\r\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\n\timport App from '$lib/App.svelte';\n\timport Demo from '$lib/Demo.svelte';\n\n\tonMount(async () => {});\n</script>\n\n<!-- <App /> -->\n\n<Demo />\n"],"file":"pages/index.svelte-6f72c0ca.js"}