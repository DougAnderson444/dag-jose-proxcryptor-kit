{"version":3,"mappings":";;;;;;;;;;;AAAA,IAAef,IAAeiBC4GV,IAAM;;;;;;;;;;;;;;;;;;;UAAN,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA/FC,aAAQ;QACR,mBAAc;MAErB;MAEA,UAAQ;UAEL,WAAW,OAAO,KAAK,QAAQ,EAAE,IAAG,OAAQ,QAAG;UAChD,QAAQ;AAAM,eAAS;YACrB,YAAS,MAAS,eAAe,GAAG;WACrC,UAAU,eAAe,UAAU,MAAM,UAAU,eAAe,OAAO;AAAA,eAAU;;SAGtF,GAAG;AAAA;UAEH,UAAU,UAAU;AAAA,UACpB,OAAO,UAAU;AAAA;;;AAKpB,YAAQ,IAAI,QAAQ,EAAE,KAAM,YAAM;AACjC,cAAQ,IAAM,SAAM,GAAI,OAAO,YAAY,OAAO,OAAQ,OAAM,CAAC;sBAGjE,SAAS,OAAO,YAAY,OAAO,OAAQ,OAAM,CAAC;AAAA;;AAInD,aAAM;AAAA,MACL,UAAQ,EACP,UAAU,YAAW;AAAA,MAEtB,SAAO,EACN,UAAU,YAAW;AAAA;;;;;;;;;;;;;;;;;;AC/CzB,IAAemBCuBP,IAAQ;;iCAAb,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAAC,KAAQ;;mCAAb,QAAI;;;;;;;;;;;;;4BAAJ,QAAI;;;;;;;;;qCAAJ,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;MAEc,eAAQ;AAAA,MAAgB,eAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;AADnD,uBAEM;;;;;;;AADa;AAAA,0CAAQ;AAAgB;AAAA,0CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;iBAHhD,IAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAR,KAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAlBD,cAAS;MAEhB;AACK,8BAAmB,GAAC;AAE5B,+BAAW,EAAE,OACX,IAAK,aAAO;AACN,kBAAM,eAAe,QAAQ,MAAM;AACpC;eAAY;AAER,uBAAQ,KAAK,QAAQ,QAAQ,OAAM;AAAA,OAE5C,OAAQ,aAAY,OAAO;AAE7B,YAAQ,IAAI,oCAAoC,QAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;qBC+BjC,IAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAAd,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAyCpB;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;MAEA,iDAAQ;AAAA;;;;;;;;;;;;;;AAMJ;AAAA,UAAkB;AAAA;;;;;;;;;;;;;;;;AANtB;AAAA,gFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAYD;AAAA,MAAqB,qBAAM;AAAA;;;AAAe;AAAA,UAAe;AAAA;;;;;;;;;;;;;;;AAApC;AAAA,8CAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAlCjD,IAAQ,MAAG,QAAO,IAAK,MAAE;;;kBACzB,IAAM,KAAG,gCAAgC;;;;;AAIrC,4BAAY,IAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADxB,uBAmCM;;;;;;mEAvCJ,KAAQ,MAAG,QAAO,IAAK,MAAE;AAAA;+DACzB,KAAM,KAAG,gCAAgC;AAAE;AAIvC,sBAAY,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA3BrB,IAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHlB,uBAAuF;;;;;AAUxF,uBAEM;;;;;;;UATD,KAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAZF;AACf,aAAW,SAAS;AACpB,aAAW,WAAW;AACtB,aAAW,SAAS;SACb;;;AA5BG,iBAAS,SAAI;MAGpB;MACA;MACA;MACA;AAWJ,UAAO;SACD,QAAM;AAEP,uCAAc,mQAA2D;AAAA;;;;;;;;;;AAiE5D,iCAAO,0BAAU,EAAE,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3F3C,UAAO;AAAA","names":[],"sources":["../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/ContactCard.svelte.js?raw","../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/ContactList.svelte.js?raw","../../../../../../../awesome-peerpiper-components/src/lib/components/@peerpiper/_TagConfig.svelte","../../../../../../../awesome-peerpiper-components/compiled/@peerpiper/TagManager.svelte.js?raw","../../../../../../src/lib/PiperNetManager.svelte","../../../../../../src/lib/Demo.svelte","../../../../../../src/routes/index.svelte"],"sourcesContent":["export default \"function noop() { }\\nconst identity = x => x;\\nfunction assign(tar, src) {\\n    // @ts-ignore\\n    for (const k in src)\\n        tar[k] = src[k];\\n    return tar;\\n}\\nfunction run(fn) {\\n    return fn();\\n}\\nfunction blank_object() {\\n    return Object.create(null);\\n}\\nfunction run_all(fns) {\\n    fns.forEach(run);\\n}\\nfunction is_function(thing) {\\n    return typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\\n}\\nlet src_url_equal_anchor;\\nfunction src_url_equal(element_src, url) {\\n    if (!src_url_equal_anchor) {\\n        src_url_equal_anchor = document.createElement('a');\\n    }\\n    src_url_equal_anchor.href = url;\\n    return element_src === src_url_equal_anchor.href;\\n}\\nfunction is_empty(obj) {\\n    return Object.keys(obj).length === 0;\\n}\\nfunction create_slot(definition, ctx, $$scope, fn) {\\n    if (definition) {\\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\\n        return definition[0](slot_ctx);\\n    }\\n}\\nfunction get_slot_context(definition, ctx, $$scope, fn) {\\n    return definition[1] && fn\\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\\n        : $$scope.ctx;\\n}\\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\\n    if (definition[2] && fn) {\\n        const lets = definition[2](fn(dirty));\\n        if ($$scope.dirty === undefined) {\\n            return lets;\\n        }\\n        if (typeof lets === 'object') {\\n            const merged = [];\\n            const len = Math.max($$scope.dirty.length, lets.length);\\n            for (let i = 0; i < len; i += 1) {\\n                merged[i] = $$scope.dirty[i] | lets[i];\\n            }\\n            return merged;\\n        }\\n        return $$scope.dirty | lets;\\n    }\\n    return $$scope.dirty;\\n}\\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\\n    if (slot_changes) {\\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\\n        slot.p(slot_context, slot_changes);\\n    }\\n}\\nfunction get_all_dirty_from_scope($$scope) {\\n    if ($$scope.ctx.length > 32) {\\n        const dirty = [];\\n        const length = $$scope.ctx.length / 32;\\n        for (let i = 0; i < length; i++) {\\n            dirty[i] = -1;\\n        }\\n        return dirty;\\n    }\\n    return -1;\\n}\\nfunction action_destroyer(action_result) {\\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\\n}\\n\\nconst is_client = typeof window !== 'undefined';\\nlet now = is_client\\n    ? () => window.performance.now()\\n    : () => Date.now();\\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\\n\\nconst tasks = new Set();\\nfunction run_tasks(now) {\\n    tasks.forEach(task => {\\n        if (!task.c(now)) {\\n            tasks.delete(task);\\n            task.f();\\n        }\\n    });\\n    if (tasks.size !== 0)\\n        raf(run_tasks);\\n}\\n/**\\n * Creates a new task that runs on each raf frame\\n * until it returns a falsy value or is aborted\\n */\\nfunction loop(callback) {\\n    let task;\\n    if (tasks.size === 0)\\n        raf(run_tasks);\\n    return {\\n        promise: new Promise(fulfill => {\\n            tasks.add(task = { c: callback, f: fulfill });\\n        }),\\n        abort() {\\n            tasks.delete(task);\\n        }\\n    };\\n}\\nfunction append(target, node) {\\n    target.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n    const append_styles_to = get_root_for_style(target);\\n    if (!append_styles_to.getElementById(style_sheet_id)) {\\n        const style = element('style');\\n        style.id = style_sheet_id;\\n        style.textContent = styles;\\n        append_stylesheet(append_styles_to, style);\\n    }\\n}\\nfunction get_root_for_style(node) {\\n    if (!node)\\n        return document;\\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n    if (root && root.host) {\\n        return root;\\n    }\\n    return node.ownerDocument;\\n}\\nfunction append_empty_stylesheet(node) {\\n    const style_element = element('style');\\n    append_stylesheet(get_root_for_style(node), style_element);\\n    return style_element.sheet;\\n}\\nfunction append_stylesheet(node, style) {\\n    append(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n    target.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n    node.parentNode.removeChild(node);\\n}\\nfunction element(name) {\\n    return document.createElement(name);\\n}\\nfunction svg_element(name) {\\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\\n}\\nfunction text(data) {\\n    return document.createTextNode(data);\\n}\\nfunction space() {\\n    return text(' ');\\n}\\nfunction listen(node, event, handler, options) {\\n    node.addEventListener(event, handler, options);\\n    return () => node.removeEventListener(event, handler, options);\\n}\\nfunction attr(node, attribute, value) {\\n    if (value == null)\\n        node.removeAttribute(attribute);\\n    else if (node.getAttribute(attribute) !== value)\\n        node.setAttribute(attribute, value);\\n}\\nfunction xlink_attr(node, attribute, value) {\\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\\n}\\nfunction children(element) {\\n    return Array.from(element.childNodes);\\n}\\nfunction set_input_value(input, value) {\\n    input.value = value == null ? '' : value;\\n}\\nfunction set_style(node, key, value, important) {\\n    if (value === null) {\\n        node.style.removeProperty(key);\\n    }\\n    else {\\n        node.style.setProperty(key, value, important ? 'important' : '');\\n    }\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n    const e = document.createEvent('CustomEvent');\\n    e.initCustomEvent(type, bubbles, cancelable, detail);\\n    return e;\\n}\\n\\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\\n// https://github.com/sveltejs/svelte/issues/3624\\nconst managed_styles = new Map();\\nlet active = 0;\\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\\nfunction hash(str) {\\n    let hash = 5381;\\n    let i = str.length;\\n    while (i--)\\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\\n    return hash >>> 0;\\n}\\nfunction create_style_information(doc, node) {\\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\\n    managed_styles.set(doc, info);\\n    return info;\\n}\\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\\n    const step = 16.666 / duration;\\n    let keyframes = '{\\\\n';\\n    for (let p = 0; p <= 1; p += step) {\\n        const t = a + (b - a) * ease(p);\\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\\\n`;\\n    }\\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\\\n}`;\\n    const name = `__svelte_${hash(rule)}_${uid}`;\\n    const doc = get_root_for_style(node);\\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\\n    if (!rules[name]) {\\n        rules[name] = true;\\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\\n    }\\n    const animation = node.style.animation || '';\\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\\n    active += 1;\\n    return name;\\n}\\nfunction delete_rule(node, name) {\\n    const previous = (node.style.animation || '').split(', ');\\n    const next = previous.filter(name\\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\\n    );\\n    const deleted = previous.length - next.length;\\n    if (deleted) {\\n        node.style.animation = next.join(', ');\\n        active -= deleted;\\n        if (!active)\\n            clear_rules();\\n    }\\n}\\nfunction clear_rules() {\\n    raf(() => {\\n        if (active)\\n            return;\\n        managed_styles.forEach(info => {\\n            const { stylesheet } = info;\\n            let i = stylesheet.cssRules.length;\\n            while (i--)\\n                stylesheet.deleteRule(i);\\n            info.rules = {};\\n        });\\n        managed_styles.clear();\\n    });\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n    current_component = component;\\n}\\nfunction get_current_component() {\\n    if (!current_component)\\n        throw new Error('Function called outside component initialization');\\n    return current_component;\\n}\\nfunction createEventDispatcher() {\\n    const component = get_current_component();\\n    return (type, detail, { cancelable = false } = {}) => {\\n        const callbacks = component.$$.callbacks[type];\\n        if (callbacks) {\\n            // TODO are there situations where events could be dispatched\\n            // in a server (non-DOM) environment?\\n            const event = custom_event(type, detail, { cancelable });\\n            callbacks.slice().forEach(fn => {\\n                fn.call(component, event);\\n            });\\n            return !event.defaultPrevented;\\n        }\\n        return true;\\n    };\\n}\\n// TODO figure out if we still want to support\\n// shorthand events, or if we want to implement\\n// a real bubbling mechanism\\nfunction bubble(component, event) {\\n    const callbacks = component.$$.callbacks[event.type];\\n    if (callbacks) {\\n        // @ts-ignore\\n        callbacks.slice().forEach(fn => fn.call(this, event));\\n    }\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n    if (!update_scheduled) {\\n        update_scheduled = true;\\n        resolved_promise.then(flush);\\n    }\\n}\\nfunction add_render_callback(fn) {\\n    render_callbacks.push(fn);\\n}\\nfunction add_flush_callback(fn) {\\n    flush_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n    const saved_component = current_component;\\n    do {\\n        // first, call beforeUpdate functions\\n        // and update components\\n        while (flushidx < dirty_components.length) {\\n            const component = dirty_components[flushidx];\\n            flushidx++;\\n            set_current_component(component);\\n            update(component.$$);\\n        }\\n        set_current_component(null);\\n        dirty_components.length = 0;\\n        flushidx = 0;\\n        while (binding_callbacks.length)\\n            binding_callbacks.pop()();\\n        // then, once components are updated, call\\n        // afterUpdate functions. This may cause\\n        // subsequent updates...\\n        for (let i = 0; i < render_callbacks.length; i += 1) {\\n            const callback = render_callbacks[i];\\n            if (!seen_callbacks.has(callback)) {\\n                // ...so guard against infinite loops\\n                seen_callbacks.add(callback);\\n                callback();\\n            }\\n        }\\n        render_callbacks.length = 0;\\n    } while (dirty_components.length);\\n    while (flush_callbacks.length) {\\n        flush_callbacks.pop()();\\n    }\\n    update_scheduled = false;\\n    seen_callbacks.clear();\\n    set_current_component(saved_component);\\n}\\nfunction update($$) {\\n    if ($$.fragment !== null) {\\n        $$.update();\\n        run_all($$.before_update);\\n        const dirty = $$.dirty;\\n        $$.dirty = [-1];\\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\\n        $$.after_update.forEach(add_render_callback);\\n    }\\n}\\n\\nlet promise;\\nfunction wait() {\\n    if (!promise) {\\n        promise = Promise.resolve();\\n        promise.then(() => {\\n            promise = null;\\n        });\\n    }\\n    return promise;\\n}\\nfunction dispatch(node, direction, kind) {\\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\\n}\\nconst outroing = new Set();\\nlet outros;\\nfunction group_outros() {\\n    outros = {\\n        r: 0,\\n        c: [],\\n        p: outros // parent group\\n    };\\n}\\nfunction check_outros() {\\n    if (!outros.r) {\\n        run_all(outros.c);\\n    }\\n    outros = outros.p;\\n}\\nfunction transition_in(block, local) {\\n    if (block && block.i) {\\n        outroing.delete(block);\\n        block.i(local);\\n    }\\n}\\nfunction transition_out(block, local, detach, callback) {\\n    if (block && block.o) {\\n        if (outroing.has(block))\\n            return;\\n        outroing.add(block);\\n        outros.c.push(() => {\\n            outroing.delete(block);\\n            if (callback) {\\n                if (detach)\\n                    block.d(1);\\n                callback();\\n            }\\n        });\\n        block.o(local);\\n    }\\n}\\nconst null_transition = { duration: 0 };\\nfunction create_bidirectional_transition(node, fn, params, intro) {\\n    let config = fn(node, params);\\n    let t = intro ? 0 : 1;\\n    let running_program = null;\\n    let pending_program = null;\\n    let animation_name = null;\\n    function clear_animation() {\\n        if (animation_name)\\n            delete_rule(node, animation_name);\\n    }\\n    function init(program, duration) {\\n        const d = (program.b - t);\\n        duration *= Math.abs(d);\\n        return {\\n            a: t,\\n            b: program.b,\\n            d,\\n            duration,\\n            start: program.start,\\n            end: program.start + duration,\\n            group: program.group\\n        };\\n    }\\n    function go(b) {\\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\\n        const program = {\\n            start: now() + delay,\\n            b\\n        };\\n        if (!b) {\\n            // @ts-ignore todo: improve typings\\n            program.group = outros;\\n            outros.r += 1;\\n        }\\n        if (running_program || pending_program) {\\n            pending_program = program;\\n        }\\n        else {\\n            // if this is an intro, and there's a delay, we need to do\\n            // an initial tick and/or apply CSS animation immediately\\n            if (css) {\\n                clear_animation();\\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\\n            }\\n            if (b)\\n                tick(0, 1);\\n            running_program = init(program, duration);\\n            add_render_callback(() => dispatch(node, b, 'start'));\\n            loop(now => {\\n                if (pending_program && now > pending_program.start) {\\n                    running_program = init(pending_program, duration);\\n                    pending_program = null;\\n                    dispatch(node, running_program.b, 'start');\\n                    if (css) {\\n                        clear_animation();\\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\\n                    }\\n                }\\n                if (running_program) {\\n                    if (now >= running_program.end) {\\n                        tick(t = running_program.b, 1 - t);\\n                        dispatch(node, running_program.b, 'end');\\n                        if (!pending_program) {\\n                            // we're done\\n                            if (running_program.b) {\\n                                // intro — we can tidy up immediately\\n                                clear_animation();\\n                            }\\n                            else {\\n                                // outro — needs to be coordinated\\n                                if (!--running_program.group.r)\\n                                    run_all(running_program.group.c);\\n                            }\\n                        }\\n                        running_program = null;\\n                    }\\n                    else if (now >= running_program.start) {\\n                        const p = now - running_program.start;\\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\\n                        tick(t, 1 - t);\\n                    }\\n                }\\n                return !!(running_program || pending_program);\\n            });\\n        }\\n    }\\n    return {\\n        run(b) {\\n            if (is_function(config)) {\\n                wait().then(() => {\\n                    // @ts-ignore\\n                    config = config();\\n                    go(b);\\n                });\\n            }\\n            else {\\n                go(b);\\n            }\\n        },\\n        end() {\\n            clear_animation();\\n            running_program = pending_program = null;\\n        }\\n    };\\n}\\n\\nfunction bind(component, name, callback) {\\n    const index = component.$$.props[name];\\n    if (index !== undefined) {\\n        component.$$.bound[index] = callback;\\n        callback(component.$$.ctx[index]);\\n    }\\n}\\nfunction create_component(block) {\\n    block && block.c();\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\\n    fragment && fragment.m(target, anchor);\\n    if (!customElement) {\\n        // onMount happens before the initial afterUpdate\\n        add_render_callback(() => {\\n            const new_on_destroy = on_mount.map(run).filter(is_function);\\n            if (on_destroy) {\\n                on_destroy.push(...new_on_destroy);\\n            }\\n            else {\\n                // Edge case - component was destroyed immediately,\\n                // most likely as a result of a binding initialising\\n                run_all(new_on_destroy);\\n            }\\n            component.$$.on_mount = [];\\n        });\\n    }\\n    after_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n    const $$ = component.$$;\\n    if ($$.fragment !== null) {\\n        run_all($$.on_destroy);\\n        $$.fragment && $$.fragment.d(detaching);\\n        // TODO null out other refs, including component.$$ (but need to\\n        // preserve final state?)\\n        $$.on_destroy = $$.fragment = null;\\n        $$.ctx = [];\\n    }\\n}\\nfunction make_dirty(component, i) {\\n    if (component.$$.dirty[0] === -1) {\\n        dirty_components.push(component);\\n        schedule_update();\\n        component.$$.dirty.fill(0);\\n    }\\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\\n}\\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\\n    const parent_component = current_component;\\n    set_current_component(component);\\n    const $$ = component.$$ = {\\n        fragment: null,\\n        ctx: null,\\n        // state\\n        props,\\n        update: noop,\\n        not_equal,\\n        bound: blank_object(),\\n        // lifecycle\\n        on_mount: [],\\n        on_destroy: [],\\n        on_disconnect: [],\\n        before_update: [],\\n        after_update: [],\\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n        // everything else\\n        callbacks: blank_object(),\\n        dirty,\\n        skip_bound: false,\\n        root: options.target || parent_component.$$.root\\n    };\\n    append_styles && append_styles($$.root);\\n    let ready = false;\\n    $$.ctx = instance\\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\\n            const value = rest.length ? rest[0] : ret;\\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\\n                if (!$$.skip_bound && $$.bound[i])\\n                    $$.bound[i](value);\\n                if (ready)\\n                    make_dirty(component, i);\\n            }\\n            return ret;\\n        })\\n        : [];\\n    $$.update();\\n    ready = true;\\n    run_all($$.before_update);\\n    // `false` as a special case of no DOM component\\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n    if (options.target) {\\n        if (options.hydrate) {\\n            const nodes = children(options.target);\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.l(nodes);\\n            nodes.forEach(detach);\\n        }\\n        else {\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.c();\\n        }\\n        if (options.intro)\\n            transition_in(component.$$.fragment);\\n        mount_component(component, options.target, options.anchor, options.customElement);\\n        flush();\\n    }\\n    set_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n    $destroy() {\\n        destroy_component(this, 1);\\n        this.$destroy = noop;\\n    }\\n    $on(type, callback) {\\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\\n        callbacks.push(callback);\\n        return () => {\\n            const index = callbacks.indexOf(callback);\\n            if (index !== -1)\\n                callbacks.splice(index, 1);\\n        };\\n    }\\n    $set($$props) {\\n        if (this.$$set && !is_empty($$props)) {\\n            this.$$.skip_bound = true;\\n            this.$$set($$props);\\n            this.$$.skip_bound = false;\\n        }\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Editable.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment$5(ctx) {\\n\\tlet span;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tattr(span, \\\"contenteditable\\\", \\\"\\\");\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"align-middle\\\");\\n\\t\\t\\tif (/*item*/ ctx[0] === void 0) add_render_callback(() => /*span_input_handler*/ ctx[5].call(span));\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\t/*span_binding*/ ctx[4](span);\\n\\n\\t\\t\\tif (/*item*/ ctx[0] !== void 0) {\\n\\t\\t\\t\\tspan.textContent = /*item*/ ctx[0];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(span, \\\"input\\\", /*span_input_handler*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(span, \\\"keydown\\\", /*handleEnter*/ ctx[2])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*item*/ 1 && /*item*/ ctx[0] !== span.textContent) {\\n\\t\\t\\t\\tspan.textContent = /*item*/ ctx[0];\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\t/*span_binding*/ ctx[4](null);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$4($$self, $$props, $$invalidate) {\\n\\tcreateEventDispatcher();\\n\\tlet { item } = $$props;\\n\\tlet { options = { singleLine: true } } = $$props;\\n\\tlet inputEl;\\n\\n\\t// by default, if Enter is pressed, the input is blurred\\n\\tconst handleEnter = e => {\\n\\t\\tif (e.keyCode === 13 && options.singleLine) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t\\tinputEl.blur();\\n\\t\\t}\\n\\t};\\n\\n\\tfunction span_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tinputEl = $$value;\\n\\t\\t\\t$$invalidate(1, inputEl);\\n\\t\\t});\\n\\t}\\n\\n\\tfunction span_input_handler() {\\n\\t\\titem = this.textContent;\\n\\t\\t$$invalidate(0, item);\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('item' in $$props) $$invalidate(0, item = $$props.item);\\n\\t\\tif ('options' in $$props) $$invalidate(3, options = $$props.options);\\n\\t};\\n\\n\\treturn [item, inputEl, handleEnter, options, span_binding, span_input_handler];\\n}\\n\\nclass Editable extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$4, create_fragment$5, safe_not_equal, { item: 0, options: 3 });\\n\\t}\\n\\n\\tget item() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset item(item) {\\n\\t\\tthis.$$set({ item });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget options() {\\n\\t\\treturn this.$$.ctx[3];\\n\\t}\\n\\n\\tset options(options) {\\n\\t\\tthis.$$set({ options });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icons.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment$4(ctx) {\\n\\tlet div;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tdiv.innerHTML = `<svg><symbol id=\\\"avatar\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M105 2a129 129 0 0 0 1 253c11 1 33 2 44 0 26-5 48-16 67-35a126 126 0 0 0 38-114A129 129 0 0 0 150 2c-10-2-35-2-45 0zm31 30c23 4 41 24 45 51l3 9 2 6c0 4-1 6-5 14l-7 15c-3 8-11 19-16 24s-5 7-2 13c5 10 13 16 35 23l16 5-3 4a117 117 0 0 1-151 0l-4-4 4-1 17-6c19-6 27-13 31-25l2-5-4-4c-5-6-12-16-15-23l-7-11c-4-6-7-14-7-18 0-3 3-9 5-9l1-3 2-11c6-26 26-43 50-45l8 1z\\\"></path></symbol><symbol id=\\\"address\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"M412 414a111 111 0 0 1 90-77v-40h31c7 0 13-6 13-13v-15c0-5-2-9-7-11L355 153c-4-2-8-2-12 0l-65 37v-13c0-5-4-9-9-9h-29c-5 0-8 4-8 9v39l-74 42c-4 2-7 7-7 11v15c0 7 6 13 13 13h31v180c0 12 9 21 20 21h203c-13-25-15-56-6-84z\\\"></path><path d=\\\"M592 412a81 81 0 0 0-109-36 82 82 0 0 0-36 109l61 108c5 9 18 9 23 0l61-108c12-22 12-49 0-73zm-73 72a35 35 0 1 1 0-70 35 35 0 1 1 0 70z\\\"></path></symbol><symbol id=\\\"email\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path d=\\\"m582.1 312.4-197.5-128c-4.3-2.8-10-2.8-14.4 0l-199 128c-3.8 2.4-7.8 6.6-7.8 11v230.3c0 7.3 9.3 15.6 16.6 15.6h394.5c7.3 0 14.1-8.3 14.1-15.6V323.4c0-4.4-2.7-8.6-6.4-11zm-385 35.2 113 73.3-113 103zm131.8 88 41.2 26.8a13.2 13.2 0 0 0 14.3 0l41.1-26.8 115 104.7H214zM451.5 421l113-73.3V524zm-74.3-209.8 173.1 112.3-173 112.3-173.1-112.3zm0 200.6c20.7 0 40.9-7.3 56.7-20.6A13.2 13.2 0 0 0 417 371a62 62 0 1 1 22.2-47.5c0 6-4.9 10.9-10.8 10.9a11 11 0 0 1-10.9-10v-.9a40.3 40.3 0 1 0-12.3 29 37 37 0 0 0 60.3-29 88.4 88.4 0 1 0-88.3 88.4zm0-74.3a14 14 0 1 1 0-28 14 14 0 0 1 0 28z\\\"></path></symbol><symbol id=\\\"phone\\\" class=\\\"icon\\\" width=\\\"32px\\\" height=\\\"32px\\\" viewBox=\\\"0 0 752 752\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"m587 561-3 3c-96 96-241-7-315-81S92 264 188 168l3-3 107 106-13 14a39 39 0 0 0-5 49 503 503 0 0 0 138 138c16 11 36 9 49-5l14-13zm-92-118 104 103c7-14 4-33-8-45l-51-51a39 39 0 0 0-45-7zM206 153l103 104c7-15 5-33-7-45l-51-51a39 39 0 0 0-45-8z\\\"></path></symbol><symbol id=\\\"arrow-left\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"19\\\" y1=\\\"12\\\" x2=\\\"5\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 19 5 12 12 5\\\"></polyline></symbol><symbol id=\\\"arrow-right\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 5 19 12 12 19\\\"></polyline></symbol><symbol id=\\\"arrow-up\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"19\\\" x2=\\\"12\\\" y2=\\\"5\\\"></line><polyline points=\\\"5 12 12 5 19 12\\\"></polyline></symbol><symbol id=\\\"arrow-down\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><polyline points=\\\"19 12 12 19 5 12\\\"></polyline></symbol><symbol id=\\\"check\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"20 6 9 17 4 12\\\"></polyline></symbol><symbol id=\\\"close\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"></line><line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"download\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15\\\"></path><polyline points=\\\"7 10 12 15 17 10\\\"></polyline><line x1=\\\"12\\\" y1=\\\"15\\\" x2=\\\"12\\\" y2=\\\"3\\\"></line></symbol><symbol id=\\\"edit\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\\\"></path><polygon points=\\\"18 2 22 6 12 16 8 16 8 12 18 2\\\"></polygon></symbol><symbol id=\\\"github\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5229 6.47715 22 12 22C17.5229 22 22 17.5229 22 12C22 6.47715 17.5229 2 12 2ZM0 12C0 5.3726 5.3726 0 12 0C18.6274 0 24 5.3726 24 12C24 18.6274 18.6274 24 12 24C5.3726 24 0 18.6274 0 12Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M9.59162 22.7357C9.49492 22.6109 9.49492 21.4986 9.59162 19.399C8.55572 19.4347 7.90122 19.3628 7.62812 19.1833C7.21852 18.9139 6.80842 18.0833 6.44457 17.4979C6.08072 16.9125 5.27312 16.8199 4.94702 16.6891C4.62091 16.5582 4.53905 16.0247 5.84562 16.4282C7.15222 16.8316 7.21592 17.9303 7.62812 18.1872C8.04032 18.4441 9.02572 18.3317 9.47242 18.1259C9.91907 17.9201 9.88622 17.1538 9.96587 16.8503C10.0666 16.5669 9.71162 16.5041 9.70382 16.5018C9.26777 16.5018 6.97697 16.0036 6.34772 13.7852C5.71852 11.5669 6.52907 10.117 6.96147 9.49369C7.24972 9.07814 7.22422 8.19254 6.88497 6.83679C8.11677 6.67939 9.06732 7.06709 9.73672 7.99999C9.73737 8.00534 10.6143 7.47854 12.0001 7.47854C13.386 7.47854 13.8777 7.90764 14.2571 7.99999C14.6365 8.09234 14.94 6.36699 17.2834 6.83679C16.7942 7.79839 16.3844 8.99999 16.6972 9.49369C17.0099 9.98739 18.2372 11.5573 17.4833 13.7852C16.9807 15.2706 15.9927 16.1761 14.5192 16.5018C14.3502 16.5557 14.2658 16.6427 14.2658 16.7627C14.2658 16.9427 14.4942 16.9624 14.8233 17.8058C15.0426 18.368 15.0585 19.9739 14.8708 22.6234C14.3953 22.7445 14.0254 22.8257 13.7611 22.8673C13.2924 22.9409 12.7835 22.9822 12.2834 22.9982C11.7834 23.0141 11.6098 23.0123 10.9185 22.948C10.4577 22.9051 10.0154 22.8343 9.59162 22.7357Z\\\" fill=\\\"currentColor\\\" stroke=\\\"none\\\"></path></symbol><symbol id=\\\"git-branch\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"6\\\" y1=\\\"3\\\" x2=\\\"6\\\" y2=\\\"15\\\"></line><circle cx=\\\"18\\\" cy=\\\"6\\\" r=\\\"3\\\"></circle><circle cx=\\\"6\\\" cy=\\\"18\\\" r=\\\"3\\\"></circle><path d=\\\"M18 9a9 9 0 0 1-9 9\\\"></path></symbol><symbol id=\\\"log-in\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M15 3H19A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H15\\\"></path><polyline points=\\\"10 17 15 12 10 7\\\"></polyline><line x1=\\\"15\\\" y1=\\\"12\\\" x2=\\\"3\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"maximize\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\\\"></path></symbol><symbol id=\\\"maximize-2\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><polyline points=\\\"15 3 21 3 21 9\\\"></polyline><polyline points=\\\"9 21 3 21 3 15\\\"></polyline><line x1=\\\"21\\\" y1=\\\"3\\\" x2=\\\"14\\\" y2=\\\"10\\\"></line><line x1=\\\"3\\\" y1=\\\"21\\\" x2=\\\"10\\\" y2=\\\"14\\\"></line></symbol><symbol id=\\\"menu\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"3\\\" y1=\\\"12\\\" x2=\\\"21\\\" y2=\\\"12\\\"></line><line x1=\\\"3\\\" y1=\\\"6\\\" x2=\\\"21\\\" y2=\\\"6\\\"></line><line x1=\\\"3\\\" y1=\\\"18\\\" x2=\\\"21\\\" y2=\\\"18\\\"></line></symbol><symbol id=\\\"message-square\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><g transform=\\\"translate(0, 1)\\\"><path d=\\\"M16.5 19H11V15H18V11H22V19H19.5L18 20.5L16.5 19Z\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M2 3H18V15H8.5L6.5 17L4.5 15H2V3Z\\\" fill=\\\"currentColor\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path><path d=\\\"M6 11H9\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path><path d=\\\"M6 7H12\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\"></path></g></symbol><symbol id=\\\"minus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"plus\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line></symbol><symbol id=\\\"save\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\\\"></path><polyline points=\\\"17 21 17 13 7 13 7 21\\\"></polyline><polyline points=\\\"7 3 7 8 15 8\\\"></polyline></symbol><symbol id=\\\"link\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M9,7L6,7A2 2 0 0 0 6,17L9,17\\\"></path><path d=\\\"M15,7L18,7A2 2 0 0 1 18,17L15,17\\\"></path><path d=\\\"M7,12L17,12\\\"></path></symbol><symbol id=\\\"chevron\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M2,7 L12,17 L20,7\\\"></path></symbol><symbol id=\\\"delete\\\" class=\\\"icon\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"currentColor\\\" stroke=\\\"none\\\" d=\\\"M22 4.2h-5.6L15 1.6c-.1-.2-.4-.4-.7-.4H9.6c-.2 0-.5.2-.6.4L7.6 4.2H2c-.4 0-.8.4-.8.8s.4.8.8.8h1.8V22c0 .4.3.8.8.8h15c.4 0 .8-.3.8-.8V5.8H22c.4 0 .8-.3.8-.8s-.4-.8-.8-.8zM10.8 16.5c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5zm4 0c0 .4-.3.8-.8.8s-.8-.3-.8-.8V10c0-.4.3-.8.8-.8s.8.3.8.8v6.5z\\\"></path></symbol></svg>`;\\n\\t\\t\\tset_style(div, \\\"display\\\", \\\"none\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t}\\n\\t};\\n}\\n\\nclass Icons extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, null, create_fragment$4, safe_not_equal, {});\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Icon.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$3(target) {\\n\\tappend_styles(target, \\\"svelte-qfptj0-ContactCard\\\", \\\".icon.svelte-qfptj0-ContactCard{position:relative;overflow:hidden;vertical-align:middle;-o-object-fit:contain;object-fit:contain;transform-origin:center center;stroke:currentColor;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;fill:currentColor}\\\");\\n}\\n\\nfunction create_fragment$3(ctx) {\\n\\tlet svg;\\n\\tlet use;\\n\\tlet use_xlink_href_value;\\n\\tlet t0;\\n\\tlet t1;\\n\\tlet icons;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);\\n\\ticons = new Icons({});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tsvg = svg_element(\\\"svg\\\");\\n\\t\\t\\tuse = svg_element(\\\"use\\\");\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tcreate_component(icons.$$.fragment);\\n\\t\\t\\txlink_attr(use, \\\"xlink:href\\\", use_xlink_href_value = \\\"#\\\" + /*name*/ ctx[0]);\\n\\t\\t\\tattr(svg, \\\"width\\\", /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, \\\"height\\\", /*size*/ ctx[1]);\\n\\t\\t\\tattr(svg, \\\"class\\\", \\\"icon  svelte-qfptj0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, svg, anchor);\\n\\t\\t\\tappend(svg, use);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, t1, anchor);\\n\\t\\t\\tmount_component(icons, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (!current || dirty & /*name*/ 1 && use_xlink_href_value !== (use_xlink_href_value = \\\"#\\\" + /*name*/ ctx[0])) {\\n\\t\\t\\t\\txlink_attr(use, \\\"xlink:href\\\", use_xlink_href_value);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, \\\"width\\\", /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!current || dirty & /*size*/ 2) {\\n\\t\\t\\t\\tattr(svg, \\\"height\\\", /*size*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[2],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[2])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\ttransition_in(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\ttransition_out(icons.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(svg);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t\\tif (detaching) detach(t1);\\n\\t\\t\\tdestroy_component(icons, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$3($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { name } = $$props;\\n\\tlet { size = 32 } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\\n\\t\\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [name, size, $$scope, slots];\\n}\\n\\nclass Icon extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, { name: 0, size: 1 }, add_css$3);\\n\\t}\\n\\n\\tget name() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset name(name) {\\n\\t\\tthis.$$set({ name });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget size() {\\n\\t\\treturn this.$$.ctx[1];\\n\\t}\\n\\n\\tset size(size) {\\n\\t\\tthis.$$set({ size });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Content.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$2(target) {\\n\\tappend_styles(target, \\\"svelte-rjokov-ContactCard\\\", \\\".svelte-rjokov-ContactCard,.svelte-rjokov-ContactCard::before,.svelte-rjokov-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-rjokov-ContactCard::before,.svelte-rjokov-ContactCard::after{--tw-content:''}.svelte-rjokov-ContactCard:-moz-focusring{outline:auto}.svelte-rjokov-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-rjokov-ContactCard::-webkit-inner-spin-button,.svelte-rjokov-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-rjokov-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-rjokov-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-rjokov-ContactCard:disabled{cursor:default}.svelte-rjokov-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-rjokov-ContactCard::-webkit-date-and-time-value{min-height:1.5em}.svelte-rjokov-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-rjokov-ContactCard,.svelte-rjokov-ContactCard::before,.svelte-rjokov-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-rjokov-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-rjokov-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.m-2.svelte-rjokov-ContactCard{margin:0.5rem}.flex.svelte-rjokov-ContactCard{display:flex}@-webkit-keyframes svelte-rjokov-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-rjokov-ContactCard-spin{to{transform:rotate(360deg)}}.items-center.svelte-rjokov-ContactCard{align-items:center}.justify-center.svelte-rjokov-ContactCard{justify-content:center}.bg-contain.svelte-rjokov-ContactCard{background-size:contain}.bg-no-repeat.svelte-rjokov-ContactCard{background-repeat:no-repeat}.text-center.svelte-rjokov-ContactCard{text-align:center}.align-middle.svelte-rjokov-ContactCard{vertical-align:middle}.text-slate-500.svelte-rjokov-ContactCard{--tw-text-opacity:1;color:rgb(100 116 139 / var(--tw-text-opacity))}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nconst get_first_slot_changes = dirty => ({});\\nconst get_first_slot_context = ctx => ({});\\n\\n// (10:21)      \\nfunction fallback_block$1(ctx) {\\n\\tlet div;\\n\\tlet icon;\\n\\tlet current;\\n\\ticon = new Icon({ props: { name: /*name*/ ctx[0] } });\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tcreate_component(icon.$$.fragment);\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"text-slate-500 svelte-rjokov-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\tmount_component(icon, div, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst icon_changes = {};\\n\\t\\t\\tif (dirty & /*name*/ 1) icon_changes.name = /*name*/ ctx[0];\\n\\t\\t\\ticon.$set(icon_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(icon.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(icon.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tdestroy_component(icon);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$2(ctx) {\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet t;\\n\\tlet div1;\\n\\tlet current;\\n\\tconst first_slot_template = /*#slots*/ ctx[2].first;\\n\\tconst first_slot = create_slot(first_slot_template, ctx, /*$$scope*/ ctx[1], get_first_slot_context);\\n\\tconst first_slot_or_fallback = first_slot || fallback_block$1(ctx);\\n\\tconst default_slot_template = /*#slots*/ ctx[2].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tif (first_slot_or_fallback) first_slot_or_fallback.c();\\n\\t\\t\\tt = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"align-middle svelte-rjokov-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"align-middle svelte-rjokov-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"flex align-middle items-center text-center justify-center bg-contain bg-no-repeat m-2 biggie svelte-rjokov-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div0);\\n\\n\\t\\t\\tif (first_slot_or_fallback) {\\n\\t\\t\\t\\tfirst_slot_or_fallback.m(div0, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div2, t);\\n\\t\\t\\tappend(div2, div1);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div1, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (first_slot) {\\n\\t\\t\\t\\tif (first_slot.p && (!current || dirty & /*$$scope*/ 2)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tfirst_slot,\\n\\t\\t\\t\\t\\t\\tfirst_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[1],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[1])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(first_slot_template, /*$$scope*/ ctx[1], dirty, get_first_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_first_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (first_slot_or_fallback && first_slot_or_fallback.p && (!current || dirty & /*name*/ 1)) {\\n\\t\\t\\t\\t\\tfirst_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 2)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[1],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[1])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[1], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(first_slot_or_fallback, local);\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(first_slot_or_fallback, local);\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t\\tif (first_slot_or_fallback) first_slot_or_fallback.d(detaching);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$2($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tlet { name = null } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(1, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [name, $$scope, slots];\\n}\\n\\nclass Content extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { name: 0 }, add_css$2);\\n\\t}\\n\\n\\tget name() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset name(name) {\\n\\t\\tthis.$$set({ name });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nfunction cubicOut(t) {\\n    const f = t - 1.0;\\n    return f * f * f + 1.0;\\n}\\nfunction quintOut(t) {\\n    return --t * t * t * t * t + 1;\\n}\\n\\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\\n    const style = getComputedStyle(node);\\n    const target_opacity = +style.opacity;\\n    const transform = style.transform === 'none' ? '' : style.transform;\\n    const od = target_opacity * (1 - opacity);\\n    return {\\n        delay,\\n        duration,\\n        easing,\\n        css: (t, u) => `\\n\\t\\t\\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\\n\\t\\t\\topacity: ${target_opacity - (od * u)}`\\n    };\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContextMenu.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$1(target) {\\n\\tappend_styles(target, \\\"svelte-9a28q0-ContactCard\\\", \\\".svelte-9a28q0-ContactCard,.svelte-9a28q0-ContactCard::before,.svelte-9a28q0-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-9a28q0-ContactCard::before,.svelte-9a28q0-ContactCard::after{--tw-content:''}b.svelte-9a28q0-ContactCard{font-weight:bolder}input.svelte-9a28q0-ContactCard{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}.svelte-9a28q0-ContactCard:-moz-focusring{outline:auto}.svelte-9a28q0-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-9a28q0-ContactCard::-webkit-inner-spin-button,.svelte-9a28q0-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-9a28q0-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-9a28q0-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}input.svelte-9a28q0-ContactCard::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-9a28q0-ContactCard::placeholder{opacity:1;color:#9CA3AF}.svelte-9a28q0-ContactCard:disabled{cursor:default}svg.svelte-9a28q0-ContactCard{display:block;vertical-align:middle}[type='text'].svelte-9a28q0-ContactCard{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6B7280;border-width:1px;border-radius:0px;padding-top:0.5rem;padding-right:0.75rem;padding-bottom:0.5rem;padding-left:0.75rem;font-size:1rem;line-height:1.5rem;--tw-shadow:0 0 #0000}[type='text'].svelte-9a28q0-ContactCard:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);border-color:#1C64F2}input.svelte-9a28q0-ContactCard::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-9a28q0-ContactCard::placeholder{color:#6B7280;opacity:1}.svelte-9a28q0-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-9a28q0-ContactCard::-webkit-date-and-time-value{min-height:1.5em}[type='checkbox'].svelte-9a28q0-ContactCard{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;-webkit-print-color-adjust:exact;color-adjust:exact;print-color-adjust:exact;display:inline-block;vertical-align:middle;background-origin:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-shrink:0;height:1rem;width:1rem;color:#1C64F2;background-color:#fff;border-color:#6B7280;border-width:1px;--tw-shadow:0 0 #0000}[type='checkbox'].svelte-9a28q0-ContactCard{border-radius:0px}[type='checkbox'].svelte-9a28q0-ContactCard:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:2px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)}[type='checkbox'].svelte-9a28q0-ContactCard:checked{border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}[type='checkbox'].svelte-9a28q0-ContactCard:checked{background-image:url(\\\\\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e\\\\\\\")}[type='checkbox'].svelte-9a28q0-ContactCard:indeterminate{background-image:url(\\\\\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e\\\\\\\");border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}[type='checkbox'].svelte-9a28q0-ContactCard:indeterminate:hover,[type='checkbox'].svelte-9a28q0-ContactCard:indeterminate:focus{border-color:transparent;background-color:currentColor}.svelte-9a28q0-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-9a28q0-ContactCard,.svelte-9a28q0-ContactCard::before,.svelte-9a28q0-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-9a28q0-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-9a28q0-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.z-50.svelte-9a28q0-ContactCard{z-index:50}.mx-4.svelte-9a28q0-ContactCard{margin-left:1rem;margin-right:1rem}.mx-1.svelte-9a28q0-ContactCard{margin-left:0.25rem;margin-right:0.25rem}.flex.svelte-9a28q0-ContactCard{display:flex}.h-10.svelte-9a28q0-ContactCard{height:2.5rem}.w-10.svelte-9a28q0-ContactCard{width:2.5rem}@-webkit-keyframes svelte-9a28q0-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-9a28q0-ContactCard-spin{to{transform:rotate(360deg)}}.flex-row.svelte-9a28q0-ContactCard{flex-direction:row}.flex-col.svelte-9a28q0-ContactCard{flex-direction:column}.justify-end.svelte-9a28q0-ContactCard{justify-content:flex-end}.rounded-sm.svelte-9a28q0-ContactCard{border-radius:0.125rem}.border.svelte-9a28q0-ContactCard{border-width:1px}.border-slate-300.svelte-9a28q0-ContactCard{--tw-border-opacity:1;border-color:rgb(203 213 225 / var(--tw-border-opacity))}.bg-slate-50.svelte-9a28q0-ContactCard{--tw-bg-opacity:1;background-color:rgb(248 250 252 / var(--tw-bg-opacity))}.p-4.svelte-9a28q0-ContactCard{padding:1rem}.text-left.svelte-9a28q0-ContactCard{text-align:left}.text-sm.svelte-9a28q0-ContactCard{font-size:0.875rem;line-height:1.25rem}.text-lg.svelte-9a28q0-ContactCard{font-size:1.125rem;line-height:1.75rem}.drop-shadow-lg.svelte-9a28q0-ContactCard{--tw-drop-shadow:drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\n// (68:1) {#if open}\\nfunction create_if_block$1(ctx) {\\n\\tlet div1;\\n\\tlet div0;\\n\\tlet current_block_type_index;\\n\\tlet if_block;\\n\\tlet div1_transition;\\n\\tlet current;\\n\\tconst if_block_creators = [create_if_block_1, create_else_block$1];\\n\\tconst if_blocks = [];\\n\\n\\tfunction select_block_type(ctx, dirty) {\\n\\t\\tif (!/*submitting*/ ctx[1]) return 0;\\n\\t\\treturn 1;\\n\\t}\\n\\n\\tcurrent_block_type_index = select_block_type(ctx);\\n\\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tif_block.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"text-left border-slate-300 svelte-9a28q0-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex flex-row justify-end z-50 bg-slate-50 border drop-shadow-lg p-4 mx-4 rounded-sm svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div1, anchor);\\n\\t\\t\\tappend(div1, div0);\\n\\t\\t\\tif_blocks[current_block_type_index].m(div0, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tlet previous_block_index = current_block_type_index;\\n\\t\\t\\tcurrent_block_type_index = select_block_type(ctx);\\n\\n\\t\\t\\tif (current_block_type_index === previous_block_index) {\\n\\t\\t\\t\\tif_blocks[current_block_type_index].p(ctx, dirty);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\\n\\t\\t\\t\\t\\tif_blocks[previous_block_index] = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t\\tif_block = if_blocks[current_block_type_index];\\n\\n\\t\\t\\t\\tif (!if_block) {\\n\\t\\t\\t\\t\\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\tif_block.m(div0, null);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\n\\t\\t\\tadd_render_callback(() => {\\n\\t\\t\\t\\tif (!div1_transition) div1_transition = create_bidirectional_transition(\\n\\t\\t\\t\\t\\tdiv1,\\n\\t\\t\\t\\t\\tfly,\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\t\\t\\tduration: 300,\\n\\t\\t\\t\\t\\t\\tx: 0,\\n\\t\\t\\t\\t\\t\\ty: -100,\\n\\t\\t\\t\\t\\t\\topacity: 0.1,\\n\\t\\t\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tdiv1_transition.run(1);\\n\\t\\t\\t});\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\n\\t\\t\\tif (!div1_transition) div1_transition = create_bidirectional_transition(\\n\\t\\t\\t\\tdiv1,\\n\\t\\t\\t\\tfly,\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\t\\tduration: 300,\\n\\t\\t\\t\\t\\tx: 0,\\n\\t\\t\\t\\t\\ty: -100,\\n\\t\\t\\t\\t\\topacity: 0.1,\\n\\t\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tfalse\\n\\t\\t\\t);\\n\\n\\t\\t\\tdiv1_transition.run(0);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div1);\\n\\t\\t\\tif_blocks[current_block_type_index].d();\\n\\t\\t\\tif (detaching && div1_transition) div1_transition.end();\\n\\t\\t}\\n\\t};\\n}\\n\\n// (94:4) {:else}\\nfunction create_else_block$1(ctx) {\\n\\tlet t;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tt = text(\\\"Requesting access...\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (74:4) {#if !submitting}\\nfunction create_if_block_1(ctx) {\\n\\tlet span;\\n\\tlet t3;\\n\\tlet content0;\\n\\tlet t4;\\n\\tlet content1;\\n\\tlet current;\\n\\n\\tcontent0 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: {\\n\\t\\t\\t\\t\\tfirst: [create_first_slot_1],\\n\\t\\t\\t\\t\\tdefault: [create_default_slot_1$1]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent1 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: {\\n\\t\\t\\t\\t\\tfirst: [create_first_slot],\\n\\t\\t\\t\\t\\tdefault: [create_default_slot$1]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.innerHTML = `Paste the <b class=\\\"svelte-9a28q0-ContactCard\\\">Public Key</b> you want to grant access`;\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tcreate_component(content0.$$.fragment);\\n\\t\\t\\tt4 = space();\\n\\t\\t\\tcreate_component(content1.$$.fragment);\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\tinsert(target, t3, anchor);\\n\\t\\t\\tmount_component(content0, target, anchor);\\n\\t\\t\\tinsert(target, t4, anchor);\\n\\t\\t\\tmount_component(content1, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst content0_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, targetPublicKey*/ 260) {\\n\\t\\t\\t\\tcontent0_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent0.$set(content0_changes);\\n\\t\\t\\tconst content1_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope*/ 256) {\\n\\t\\t\\t\\tcontent1_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent1.$set(content1_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(content0.$$.fragment, local);\\n\\t\\t\\ttransition_in(content1.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(content0.$$.fragment, local);\\n\\t\\t\\ttransition_out(content1.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\tif (detaching) detach(t3);\\n\\t\\t\\tdestroy_component(content0, detaching);\\n\\t\\t\\tif (detaching) detach(t4);\\n\\t\\t\\tdestroy_component(content1, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (76:5) <Content>\\nfunction create_default_slot_1$1(ctx) {\\n\\tlet input;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input, \\\"placeholder\\\", \\\"Their Public Key\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\t\\t\\tset_input_value(input, /*targetPublicKey*/ ctx[2]);\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input, \\\"input\\\", /*input_input_handler*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(input, \\\"keydown\\\", /*handleInput*/ ctx[4])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*targetPublicKey*/ 4 && input.value !== /*targetPublicKey*/ ctx[2]) {\\n\\t\\t\\t\\tset_input_value(input, /*targetPublicKey*/ ctx[2]);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (77:6) <svelte:fragment slot=\\\"first\\\">\\nfunction create_first_slot_1(ctx) {\\n\\tlet span;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.textContent = \\\"Grant Acess:\\\";\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm mx-1 text-lg svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (87:5) <Content>\\nfunction create_default_slot$1(ctx) {\\n\\tlet input;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input, \\\"placeholder\\\", \\\"douganderson444\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = listen(input, \\\"keydown\\\", /*handleInput*/ ctx[4]);\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\tdispose();\\n\\t\\t}\\n\\t};\\n}\\n\\n// (88:6) <svelte:fragment slot=\\\"first\\\">\\nfunction create_first_slot(ctx) {\\n\\tlet input;\\n\\tlet t0;\\n\\tlet span;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tspan.innerHTML = `Add <b class=\\\"svelte-9a28q0-ContactCard\\\">Contact</b>`;\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"checkbox\\\");\\n\\t\\t\\tinput.checked = true;\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-9a28q0-ContactCard\\\");\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sm mx-1 svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, input, anchor);\\n\\t\\t\\tinsert(target, t0, anchor);\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(input);\\n\\t\\t\\tif (detaching) detach(t0);\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$1(ctx) {\\n\\tlet div2;\\n\\tlet div1;\\n\\tlet div0;\\n\\tlet t;\\n\\tlet clickOutside_action;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tlet if_block = /*open*/ ctx[0] && create_if_block$1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tdiv0.innerHTML = `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 752 752\\\" class=\\\"svelte-9a28q0-ContactCard\\\"><path d=\\\"M346.9 153.4c-6.2 0-12.1 5.2-13.7 10.2l-12.4 43.5a176 176 0 0 0-25.2 10.4l-39.5-21.9c-5.3-3-12.7-2-17 2.4l-41 41.1a14.6 14.6 0 0 0-2.4 16.9l22 39.6a171 171 0 0 0-10.4 25l-43.5 12.5c-6 1.7-10.4 7.6-10.4 13.8v58.3c0 6 4.5 12 10.4 13.6L207 431c2.9 8.7 6.5 17 10.5 25.1L195.7 496a14.7 14.7 0 0 0 2.4 16.9l41 41.1a14.6 14.6 0 0 0 17 2.4l39.5-22c8.1 4.2 16.5 7.7 25.2 10.6l12.4 43.3a14.6 14.6 0 0 0 13.7 10.4h58.3c6 0 12-4.5 13.6-10.4l12.4-43.3c8.7-2.9 17.1-6.4 25.2-10.5l39.5 21.9c5.3 3 12.7 2 17-2.4l41-41.1a14.6 14.6 0 0 0 2.4-17l-22-39.6c4.2-8 7.7-16.4 10.6-25.1l43.3-12.3a14.6 14.6 0 0 0 10.4-13.6V347c0-6.2-4.4-12.1-10.4-13.8l-43.5-12.4c-2.8-8.7-6.3-17-10.3-25l21.9-39.7a14.7 14.7 0 0 0-2.4-16.9l-41-41.1a14.6 14.6 0 0 0-17-2.4l-39.5 21.9c-8-4.1-16.5-7.5-25.2-10.4l-12.4-43.5a14.6 14.6 0 0 0-13.6-10.2zm10.6 28.4h37L406 222c1.3 4.7 5.2 8.7 10 10 11.9 3.2 23.2 8 33.8 14 4.2 2.4 9.7 2.5 14 .2l36.6-20.5 26 26-20.4 36.6a14.5 14.5 0 0 0 0 14c6.1 10.6 11 22 14.3 34a14 14 0 0 0 9.7 9.9l40.3 11.4v36.9L530 406a14.5 14.5 0 0 0-9.7 9.8 149 149 0 0 1-14.3 34 14.5 14.5 0 0 0 0 14l20.5 36.6-26 26-36.8-20.5a14.5 14.5 0 0 0-13.9.1c-10.6 6-22 11-33.9 14.2a14.5 14.5 0 0 0-9.9 9.8l-11.4 40.3h-37L346.2 530a14.5 14.5 0 0 0-9.9-9.8c-12-3.3-23.3-8.1-33.9-14.2a14.5 14.5 0 0 0-13.9-.1l-36.7 20.4-26-25.9 20.4-36.7c2.3-4.2 2.3-9.7 0-13.9-6-10.6-11-22-14.2-34a14.5 14.5 0 0 0-9.8-9.8l-40.3-11.5v-36.9l40.3-11.4c4.6-1.3 8.5-5.2 9.8-10a149 149 0 0 1 14.2-34c2.3-4.2 2.3-9.6 0-13.9l-20.5-36.5 26-26 36.8 20.4c4.2 2.3 9.7 2.2 14-.2a146 146 0 0 1 33.8-14 15 15 0 0 0 10-10zm18.5 90c-57.4 0-104.2 46.8-104.2 104.2S318.6 480.2 376 480.2c57.4 0 104.2-46.8 104.2-104.2S433.4 271.8 376 271.8zm0 28.4c42 0 75.8 33.8 75.8 75.8S418 451.8 376 451.8 300.2 418 300.2 376s33.8-75.8 75.8-75.8z\\\" class=\\\"svelte-9a28q0-ContactCard\\\"></path></svg>`;\\n\\t\\t\\tt = space();\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"w-10 h-10 svelte-9a28q0-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex flex-row justify-end svelte-9a28q0-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"flex flex-col svelte-9a28q0-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, div0);\\n\\t\\t\\tappend(div2, t);\\n\\t\\t\\tif (if_block) if_block.m(div2, null);\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(div0, \\\"click\\\", /*openMenu*/ ctx[3]),\\n\\t\\t\\t\\t\\taction_destroyer(clickOutside_action = clickOutside.call(null, div2, {\\n\\t\\t\\t\\t\\t\\tenabled: /*open*/ ctx[0],\\n\\t\\t\\t\\t\\t\\tcb: /*clickOutside_function*/ ctx[6]\\n\\t\\t\\t\\t\\t}))\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (/*open*/ ctx[0]) {\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\n\\t\\t\\t\\t\\tif (dirty & /*open*/ 1) {\\n\\t\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block = create_if_block$1(ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\tif_block.m(div2, null);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (if_block) {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_block, 1, 1, () => {\\n\\t\\t\\t\\t\\tif_block = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (clickOutside_action && is_function(clickOutside_action.update) && dirty & /*open, submitting*/ 3) clickOutside_action.update.call(null, {\\n\\t\\t\\t\\tenabled: /*open*/ ctx[0],\\n\\t\\t\\t\\tcb: /*clickOutside_function*/ ctx[6]\\n\\t\\t\\t});\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t\\tif (if_block) if_block.d();\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction clickOutside(node, { enabled: initialEnabled, cb }) {\\n\\tconst handleOutsideClick = ({ target }) => {\\n\\t\\tif (!node.contains(target)) {\\n\\t\\t\\tcb();\\n\\t\\t}\\n\\t};\\n\\n\\tfunction update({ enabled }) {\\n\\t\\tif (enabled) {\\n\\t\\t\\twindow.addEventListener('click', handleOutsideClick);\\n\\t\\t} else {\\n\\t\\t\\twindow.removeEventListener('click', handleOutsideClick);\\n\\t\\t}\\n\\t}\\n\\n\\tupdate({ enabled: initialEnabled });\\n\\n\\treturn {\\n\\t\\tupdate,\\n\\t\\tdestroy() {\\n\\t\\t\\twindow.removeEventListener('click', handleOutsideClick);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$1($$self, $$props, $$invalidate) {\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet open = false;\\n\\tlet submitting;\\n\\tlet targetPublicKey;\\n\\n\\tfunction openMenu(e) {\\n\\t\\t$$invalidate(0, open = !open);\\n\\t}\\n\\n\\tfunction handleInput(e) {\\n\\t\\tif (e.code !== 'Enter') return;\\n\\t\\t$$invalidate(1, submitting = true);\\n\\t\\tdispatch('change', { targetPublicKey });\\n\\t}\\n\\n\\tfunction input_input_handler() {\\n\\t\\ttargetPublicKey = this.value;\\n\\t\\t$$invalidate(2, targetPublicKey);\\n\\t}\\n\\n\\tconst clickOutside_function = () => {\\n\\t\\t$$invalidate(0, open = false);\\n\\t\\t$$invalidate(1, submitting = false);\\n\\t};\\n\\n\\treturn [\\n\\t\\topen,\\n\\t\\tsubmitting,\\n\\t\\ttargetPublicKey,\\n\\t\\topenMenu,\\n\\t\\thandleInput,\\n\\t\\tinput_input_handler,\\n\\t\\tclickOutside_function\\n\\t];\\n}\\n\\nclass ContextMenu extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, {}, add_css$1);\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContactCard.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(target, \\\"svelte-111zx6r-ContactCard\\\", \\\".svelte-111zx6r-ContactCard,.svelte-111zx6r-ContactCard::before,.svelte-111zx6r-ContactCard::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-111zx6r-ContactCard::before,.svelte-111zx6r-ContactCard::after{--tw-content:''}input.svelte-111zx6r-ContactCard{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}.svelte-111zx6r-ContactCard:-moz-focusring{outline:auto}.svelte-111zx6r-ContactCard:-moz-ui-invalid{box-shadow:none}.svelte-111zx6r-ContactCard::-webkit-inner-spin-button,.svelte-111zx6r-ContactCard::-webkit-outer-spin-button{height:auto}.svelte-111zx6r-ContactCard::-webkit-search-decoration{-webkit-appearance:none}.svelte-111zx6r-ContactCard::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}blockquote.svelte-111zx6r-ContactCard,p.svelte-111zx6r-ContactCard{margin:0}input.svelte-111zx6r-ContactCard::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-111zx6r-ContactCard::placeholder{opacity:1;color:#9CA3AF}.svelte-111zx6r-ContactCard:disabled{cursor:default}img.svelte-111zx6r-ContactCard,svg.svelte-111zx6r-ContactCard{display:block;vertical-align:middle}img.svelte-111zx6r-ContactCard{max-width:100%;height:auto}input.svelte-111zx6r-ContactCard::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-111zx6r-ContactCard::placeholder{color:#6B7280;opacity:1}.svelte-111zx6r-ContactCard::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-111zx6r-ContactCard::-webkit-date-and-time-value{min-height:1.5em}[type='file'].svelte-111zx6r-ContactCard{background:unset;border-color:inherit;border-width:0;border-radius:0;padding:0;font-size:unset;line-height:inherit}[type='file'].svelte-111zx6r-ContactCard:focus{outline:1px auto inherit}input[type=file].svelte-111zx6r-ContactCard::-webkit-file-upload-button{color:white;background:#1F2937;border:0;font-weight:500;font-size:0.875rem;cursor:pointer;padding-top:0.625rem;padding-bottom:0.625rem;padding-left:2rem;padding-right:1rem;-webkit-margin-start:-1rem;margin-inline-start:-1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}input[type=file].svelte-111zx6r-ContactCard::file-selector-button{color:white;background:#1F2937;border:0;font-weight:500;font-size:0.875rem;cursor:pointer;padding-top:0.625rem;padding-bottom:0.625rem;padding-left:2rem;padding-right:1rem;-webkit-margin-start:-1rem;margin-inline-start:-1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}input[type=file].svelte-111zx6r-ContactCard::-webkit-file-upload-button:hover{background:#374151}input[type=file].svelte-111zx6r-ContactCard::file-selector-button:hover{background:#374151}.svelte-111zx6r-ContactCard{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-111zx6r-ContactCard,.svelte-111zx6r-ContactCard::before,.svelte-111zx6r-ContactCard::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-111zx6r-ContactCard::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-111zx6r-ContactCard::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.absolute.svelte-111zx6r-ContactCard{position:absolute}.relative.svelte-111zx6r-ContactCard{position:relative}.z-10.svelte-111zx6r-ContactCard{z-index:10}.m-auto.svelte-111zx6r-ContactCard{margin:auto}.my-2.svelte-111zx6r-ContactCard{margin-top:0.5rem;margin-bottom:0.5rem}.mx-auto.svelte-111zx6r-ContactCard{margin-left:auto;margin-right:auto}.mx-2.svelte-111zx6r-ContactCard{margin-left:0.5rem;margin-right:0.5rem}.-mt-20.svelte-111zx6r-ContactCard{margin-top:-5rem}.mt-5.svelte-111zx6r-ContactCard{margin-top:1.25rem}.mb-7.svelte-111zx6r-ContactCard{margin-bottom:1.75rem}.flex.svelte-111zx6r-ContactCard{display:flex}.h-24.svelte-111zx6r-ContactCard{height:6rem}.h-32.svelte-111zx6r-ContactCard{height:8rem}.w-96.svelte-111zx6r-ContactCard{width:24rem}.w-32.svelte-111zx6r-ContactCard{width:8rem}.max-w-lg.svelte-111zx6r-ContactCard{max-width:32rem}.max-w-none.svelte-111zx6r-ContactCard{max-width:none}.flex-none.svelte-111zx6r-ContactCard{flex:none}@-webkit-keyframes svelte-111zx6r-ContactCard-spin{to{transform:rotate(360deg)}}@keyframes svelte-111zx6r-ContactCard-spin{to{transform:rotate(360deg)}}.items-center.svelte-111zx6r-ContactCard{align-items:center}.justify-center.svelte-111zx6r-ContactCard{justify-content:center}.overflow-hidden.svelte-111zx6r-ContactCard{overflow:hidden}.rounded-2xl.svelte-111zx6r-ContactCard{border-radius:1rem}.rounded-full.svelte-111zx6r-ContactCard{border-radius:9999px}.bg-slate-100.svelte-111zx6r-ContactCard{--tw-bg-opacity:1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.bg-white.svelte-111zx6r-ContactCard{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-green-400.svelte-111zx6r-ContactCard{--tw-bg-opacity:1;background-color:rgb(49 196 141 / var(--tw-bg-opacity))}.fill-slate-500.svelte-111zx6r-ContactCard{fill:#64748b}.object-cover.svelte-111zx6r-ContactCard{-o-object-fit:cover;object-fit:cover}.px-3.svelte-111zx6r-ContactCard{padding-left:0.75rem;padding-right:0.75rem}.text-center.svelte-111zx6r-ContactCard{text-align:center}.text-xl.svelte-111zx6r-ContactCard{font-size:1.25rem;line-height:1.75rem}.text-base.svelte-111zx6r-ContactCard{font-size:1rem;line-height:1.5rem}.text-sky-500.svelte-111zx6r-ContactCard{--tw-text-opacity:1;color:rgb(14 165 233 / var(--tw-text-opacity))}.text-white.svelte-111zx6r-ContactCard{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.shadow-xl.svelte-111zx6r-ContactCard{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.drop-shadow-xl.svelte-111zx6r-ContactCard{--tw-drop-shadow:drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nconst get_phone_slot_changes = dirty => ({});\\nconst get_phone_slot_context = ctx => ({});\\nconst get_email_slot_changes = dirty => ({});\\nconst get_email_slot_context = ctx => ({});\\nconst get_address_slot_changes = dirty => ({});\\nconst get_address_slot_context = ctx => ({});\\nconst get_name_slot_changes = dirty => ({});\\nconst get_name_slot_context = ctx => ({});\\n\\n// (75:2) {:else}\\nfunction create_else_block(ctx) {\\n\\tlet div;\\n\\tlet img;\\n\\tlet img_src_value;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\timg = element(\\\"img\\\");\\n\\t\\t\\tattr(img, \\\"class\\\", \\\"rounded-full bg-white absolute max-w-none object-cover svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tif (!src_url_equal(img.src, img_src_value = /*profile*/ ctx[0].avatar)) attr(img, \\\"src\\\", img_src_value);\\n\\t\\t\\tattr(img, \\\"alt\\\", \\\"d\\\");\\n\\t\\t\\tset_style(img, \\\"width\\\", \\\"100%\\\");\\n\\t\\t\\tset_style(img, \\\"height\\\", \\\"100%\\\");\\n\\t\\t\\tset_style(img, \\\"transform-origin\\\", \\\"50% 50% 0px\\\");\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"relative z-10 overflow-hidden flex-none mx-auto w-32 h-32 drop-shadow-xl svelte-111zx6r-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\tappend(div, img);\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*profile*/ 1 && !src_url_equal(img.src, img_src_value = /*profile*/ ctx[0].avatar)) {\\n\\t\\t\\t\\tattr(img, \\\"src\\\", img_src_value);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (64:2) {#if !profile.avatar}\\nfunction create_if_block(ctx) {\\n\\tlet svg;\\n\\tlet path;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tsvg = svg_element(\\\"svg\\\");\\n\\t\\t\\tpath = svg_element(\\\"path\\\");\\n\\t\\t\\tattr(path, \\\"d\\\", \\\"M105 2a129 129 0 0 0 1 253c11 1 33 2 44 0 26-5 48-16 67-35a126 126 0 0 0 38-114A129 129 0 0 0 150 2c-10-2-35-2-45 0zm31 30c23 4 41 24 45 51l3 9 2 6c0 4-1 6-5 14l-7 15c-3 8-11 19-16 24s-5 7-2 13c5 10 13 16 35 23l16 5-3 4a117 117 0 0 1-151 0l-4-4 4-1 17-6c19-6 27-13 31-25l2-5-4-4c-5-6-12-16-15-23l-7-11c-4-6-7-14-7-18 0-3 3-9 5-9l1-3 2-11c6-26 26-43 50-45l8 1z\\\");\\n\\t\\t\\tattr(path, \\\"class\\\", \\\"svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(svg, \\\"class\\\", \\\"rounded-full bg-white shadow-xl drop-shadow-xl svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(svg, \\\"xmlns\\\", \\\"http://www.w3.org/2000/svg\\\");\\n\\t\\t\\tattr(svg, \\\"version\\\", \\\"1.0\\\");\\n\\t\\t\\tattr(svg, \\\"viewBox\\\", \\\"0 0 256 256\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, svg, anchor);\\n\\t\\t\\tappend(svg, path);\\n\\t\\t},\\n\\t\\tp: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(svg);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (87:20)      \\nfunction fallback_block_4(ctx) {\\n\\tlet editable0;\\n\\tlet updating_item;\\n\\tlet t;\\n\\tlet editable1;\\n\\tlet updating_item_1;\\n\\tlet current;\\n\\n\\tfunction editable0_item_binding(value) {\\n\\t\\t/*editable0_item_binding*/ ctx[8](value);\\n\\t}\\n\\n\\tlet editable0_props = {};\\n\\n\\tif (/*profile*/ ctx[0].firstName !== void 0) {\\n\\t\\teditable0_props.item = /*profile*/ ctx[0].firstName;\\n\\t}\\n\\n\\teditable0 = new Editable({ props: editable0_props });\\n\\tbinding_callbacks.push(() => bind(editable0, 'item', editable0_item_binding));\\n\\n\\tfunction editable1_item_binding(value) {\\n\\t\\t/*editable1_item_binding*/ ctx[9](value);\\n\\t}\\n\\n\\tlet editable1_props = {};\\n\\n\\tif (/*profile*/ ctx[0].lastName !== void 0) {\\n\\t\\teditable1_props.item = /*profile*/ ctx[0].lastName;\\n\\t}\\n\\n\\teditable1 = new Editable({ props: editable1_props });\\n\\tbinding_callbacks.push(() => bind(editable1, 'item', editable1_item_binding));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable0.$$.fragment);\\n\\t\\t\\tt = space();\\n\\t\\t\\tcreate_component(editable1.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable0, target, anchor);\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tmount_component(editable1, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable0_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable0_changes.item = /*profile*/ ctx[0].firstName;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable0.$set(editable0_changes);\\n\\t\\t\\tconst editable1_changes = {};\\n\\n\\t\\t\\tif (!updating_item_1 && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item_1 = true;\\n\\t\\t\\t\\teditable1_changes.item = /*profile*/ ctx[0].lastName;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item_1 = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable1.$set(editable1_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable0.$$.fragment, local);\\n\\t\\t\\ttransition_in(editable1.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable0.$$.fragment, local);\\n\\t\\t\\ttransition_out(editable1.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable0, detaching);\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t\\tdestroy_component(editable1, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (97:23)      \\nfunction fallback_block_3(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding(value) {\\n\\t\\t/*editable_item_binding*/ ctx[10](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].address !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].address;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].address;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (96:1) <Content name={'address'}>\\nfunction create_default_slot_2(ctx) {\\n\\tlet current;\\n\\tconst address_slot_template = /*#slots*/ ctx[3].address;\\n\\tconst address_slot = create_slot(address_slot_template, ctx, /*$$scope*/ ctx[14], get_address_slot_context);\\n\\tconst address_slot_or_fallback = address_slot || fallback_block_3(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (address_slot_or_fallback) address_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (address_slot_or_fallback) {\\n\\t\\t\\t\\taddress_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (address_slot) {\\n\\t\\t\\t\\tif (address_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\taddress_slot,\\n\\t\\t\\t\\t\\t\\taddress_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(address_slot_template, /*$$scope*/ ctx[14], dirty, get_address_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_address_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (address_slot_or_fallback && address_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\taddress_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(address_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(address_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (address_slot_or_fallback) address_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (103:21)      \\nfunction fallback_block_2(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_1(value) {\\n\\t\\t/*editable_item_binding_1*/ ctx[11](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].email !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].email;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_1));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].email;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (102:1) <Content name={'email'}>\\nfunction create_default_slot_1(ctx) {\\n\\tlet current;\\n\\tconst email_slot_template = /*#slots*/ ctx[3].email;\\n\\tconst email_slot = create_slot(email_slot_template, ctx, /*$$scope*/ ctx[14], get_email_slot_context);\\n\\tconst email_slot_or_fallback = email_slot || fallback_block_2(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (email_slot_or_fallback) email_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (email_slot_or_fallback) {\\n\\t\\t\\t\\temail_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (email_slot) {\\n\\t\\t\\t\\tif (email_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\temail_slot,\\n\\t\\t\\t\\t\\t\\temail_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(email_slot_template, /*$$scope*/ ctx[14], dirty, get_email_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_email_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (email_slot_or_fallback && email_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\temail_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(email_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(email_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (email_slot_or_fallback) email_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (109:21)      \\nfunction fallback_block_1(ctx) {\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_2(value) {\\n\\t\\t/*editable_item_binding_2*/ ctx[12](value);\\n\\t}\\n\\n\\tlet editable_props = {};\\n\\n\\tif (/*profile*/ ctx[0].phone !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].phone;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_2));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(editable, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].phone;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(editable, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (108:1) <Content name={'phone'}>\\nfunction create_default_slot(ctx) {\\n\\tlet current;\\n\\tconst phone_slot_template = /*#slots*/ ctx[3].phone;\\n\\tconst phone_slot = create_slot(phone_slot_template, ctx, /*$$scope*/ ctx[14], get_phone_slot_context);\\n\\tconst phone_slot_or_fallback = phone_slot || fallback_block_1(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (phone_slot_or_fallback) phone_slot_or_fallback.c();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (phone_slot_or_fallback) {\\n\\t\\t\\t\\tphone_slot_or_fallback.m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (phone_slot) {\\n\\t\\t\\t\\tif (phone_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tphone_slot,\\n\\t\\t\\t\\t\\t\\tphone_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(phone_slot_template, /*$$scope*/ ctx[14], dirty, get_phone_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_phone_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phone_slot_or_fallback && phone_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tphone_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(phone_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(phone_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (phone_slot_or_fallback) phone_slot_or_fallback.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (117:9)       \\nfunction fallback_block(ctx) {\\n\\tlet span;\\n\\tlet editable;\\n\\tlet updating_item;\\n\\tlet current;\\n\\n\\tfunction editable_item_binding_3(value) {\\n\\t\\t/*editable_item_binding_3*/ ctx[13](value);\\n\\t}\\n\\n\\tlet editable_props = { options: { singleLine: false } };\\n\\n\\tif (/*profile*/ ctx[0].notes !== void 0) {\\n\\t\\teditable_props.item = /*profile*/ ctx[0].notes;\\n\\t}\\n\\n\\teditable = new Editable({ props: editable_props });\\n\\tbinding_callbacks.push(() => bind(editable, 'item', editable_item_binding_3));\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tspan = element(\\\"span\\\");\\n\\t\\t\\tcreate_component(editable.$$.fragment);\\n\\t\\t\\tattr(span, \\\"class\\\", \\\"text-sky-500 svelte-111zx6r-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, span, anchor);\\n\\t\\t\\tmount_component(editable, span, null);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst editable_changes = {};\\n\\n\\t\\t\\tif (!updating_item && dirty & /*profile*/ 1) {\\n\\t\\t\\t\\tupdating_item = true;\\n\\t\\t\\t\\teditable_changes.item = /*profile*/ ctx[0].notes;\\n\\t\\t\\t\\tadd_flush_callback(() => updating_item = false);\\n\\t\\t\\t}\\n\\n\\t\\t\\teditable.$set(editable_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(editable.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(span);\\n\\t\\t\\tdestroy_component(editable);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment(ctx) {\\n\\tlet div3;\\n\\tlet div0;\\n\\tlet contextmenu;\\n\\tlet t0;\\n\\tlet input;\\n\\tlet t1;\\n\\tlet div1;\\n\\tlet t2;\\n\\tlet div2;\\n\\tlet t3;\\n\\tlet content0;\\n\\tlet t4;\\n\\tlet content1;\\n\\tlet t5;\\n\\tlet content2;\\n\\tlet t6;\\n\\tlet blockquote;\\n\\tlet p;\\n\\tlet t7;\\n\\tlet footer;\\n\\tlet current;\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tcontextmenu = new ContextMenu({});\\n\\tcontextmenu.$on(\\\"change\\\", /*change_handler*/ ctx[4]);\\n\\n\\tfunction select_block_type(ctx, dirty) {\\n\\t\\tif (!/*profile*/ ctx[0].avatar) return create_if_block;\\n\\t\\treturn create_else_block;\\n\\t}\\n\\n\\tlet current_block_type = select_block_type(ctx);\\n\\tlet if_block = current_block_type(ctx);\\n\\tconst name_slot_template = /*#slots*/ ctx[3].name;\\n\\tconst name_slot = create_slot(name_slot_template, ctx, /*$$scope*/ ctx[14], get_name_slot_context);\\n\\tconst name_slot_or_fallback = name_slot || fallback_block_4(ctx);\\n\\n\\tcontent0 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'address',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_2] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent1 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'email',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_1] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tcontent2 = new Content({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tname: 'phone',\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\tconst default_slot_template = /*#slots*/ ctx[3].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[14], null);\\n\\tconst default_slot_or_fallback = default_slot || fallback_block(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv3 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tcreate_component(contextmenu.$$.fragment);\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tinput = element(\\\"input\\\");\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tif_block.c();\\n\\t\\t\\tt2 = space();\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tif (name_slot_or_fallback) name_slot_or_fallback.c();\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tcreate_component(content0.$$.fragment);\\n\\t\\t\\tt4 = space();\\n\\t\\t\\tcreate_component(content1.$$.fragment);\\n\\t\\t\\tt5 = space();\\n\\t\\t\\tcreate_component(content2.$$.fragment);\\n\\t\\t\\tt6 = space();\\n\\t\\t\\tblockquote = element(\\\"blockquote\\\");\\n\\t\\t\\tp = element(\\\"p\\\");\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.c();\\n\\t\\t\\tt7 = space();\\n\\t\\t\\tfooter = element(\\\"footer\\\");\\n\\t\\t\\tfooter.textContent = \\\"Powered by PeerPiper\\\";\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"h-24 bg-white svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tset_style(input, \\\"display\\\", \\\"none\\\");\\n\\t\\t\\tattr(input, \\\"type\\\", \\\"file\\\");\\n\\t\\t\\tattr(input, \\\"accept\\\", \\\".jpg, .jpeg, .png\\\");\\n\\t\\t\\tattr(input, \\\"class\\\", \\\"svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"-mt-20 h-32 flex justify-center svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"mt-5 mb-7 px-3 text-center text-xl svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(p, \\\"class\\\", \\\"mx-2 mb-7 text-center text-base svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(blockquote, \\\"class\\\", \\\"svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(footer, \\\"class\\\", \\\"text-center bg-green-400 text-white svelte-111zx6r-ContactCard\\\");\\n\\t\\t\\tattr(div3, \\\"class\\\", \\\"m-auto fill-slate-500 my-2 w-96 max-w-lg items-center justify-center overflow-hidden rounded-2xl bg-slate-100 shadow-xl svelte-111zx6r-ContactCard\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div3, anchor);\\n\\t\\t\\tappend(div3, div0);\\n\\t\\t\\tmount_component(contextmenu, div0, null);\\n\\t\\t\\tappend(div3, t0);\\n\\t\\t\\tappend(div3, input);\\n\\t\\t\\t/*input_binding*/ ctx[6](input);\\n\\t\\t\\tappend(div3, t1);\\n\\t\\t\\tappend(div3, div1);\\n\\t\\t\\tif_block.m(div1, null);\\n\\t\\t\\tappend(div3, t2);\\n\\t\\t\\tappend(div3, div2);\\n\\n\\t\\t\\tif (name_slot_or_fallback) {\\n\\t\\t\\t\\tname_slot_or_fallback.m(div2, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div3, t3);\\n\\t\\t\\tmount_component(content0, div3, null);\\n\\t\\t\\tappend(div3, t4);\\n\\t\\t\\tmount_component(content1, div3, null);\\n\\t\\t\\tappend(div3, t5);\\n\\t\\t\\tmount_component(content2, div3, null);\\n\\t\\t\\tappend(div3, t6);\\n\\t\\t\\tappend(div3, blockquote);\\n\\t\\t\\tappend(blockquote, p);\\n\\n\\t\\t\\tif (default_slot_or_fallback) {\\n\\t\\t\\t\\tdefault_slot_or_fallback.m(p, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tappend(div3, t7);\\n\\t\\t\\tappend(div3, footer);\\n\\t\\t\\tcurrent = true;\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input, \\\"change\\\", /*change_handler_1*/ ctx[5]),\\n\\t\\t\\t\\t\\tlisten(div1, \\\"click\\\", /*click_handler*/ ctx[7])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\\n\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif_block.d(1);\\n\\t\\t\\t\\tif_block = current_block_type(ctx);\\n\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\tif_block.m(div1, null);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (name_slot) {\\n\\t\\t\\t\\tif (name_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tname_slot,\\n\\t\\t\\t\\t\\t\\tname_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(name_slot_template, /*$$scope*/ ctx[14], dirty, get_name_slot_changes),\\n\\t\\t\\t\\t\\t\\tget_name_slot_context\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (name_slot_or_fallback && name_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tname_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst content0_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent0_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent0.$set(content0_changes);\\n\\t\\t\\tconst content1_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent1_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent1.$set(content1_changes);\\n\\t\\t\\tconst content2_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, profile*/ 16385) {\\n\\t\\t\\t\\tcontent2_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontent2.$set(content2_changes);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16384)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[14],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[14])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[14], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (default_slot_or_fallback && default_slot_or_fallback.p && (!current || dirty & /*profile*/ 1)) {\\n\\t\\t\\t\\t\\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(contextmenu.$$.fragment, local);\\n\\t\\t\\ttransition_in(name_slot_or_fallback, local);\\n\\t\\t\\ttransition_in(content0.$$.fragment, local);\\n\\t\\t\\ttransition_in(content1.$$.fragment, local);\\n\\t\\t\\ttransition_in(content2.$$.fragment, local);\\n\\t\\t\\ttransition_in(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(contextmenu.$$.fragment, local);\\n\\t\\t\\ttransition_out(name_slot_or_fallback, local);\\n\\t\\t\\ttransition_out(content0.$$.fragment, local);\\n\\t\\t\\ttransition_out(content1.$$.fragment, local);\\n\\t\\t\\ttransition_out(content2.$$.fragment, local);\\n\\t\\t\\ttransition_out(default_slot_or_fallback, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div3);\\n\\t\\t\\tdestroy_component(contextmenu);\\n\\t\\t\\t/*input_binding*/ ctx[6](null);\\n\\t\\t\\tif_block.d();\\n\\t\\t\\tif (name_slot_or_fallback) name_slot_or_fallback.d(detaching);\\n\\t\\t\\tdestroy_component(content0);\\n\\t\\t\\tdestroy_component(content1);\\n\\t\\t\\tdestroy_component(content2);\\n\\t\\t\\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\n\\tlet defaultProfile = {\\n\\t\\tfirstName: 'FirstName',\\n\\t\\tlastName: 'Lastname',\\n\\t\\taddress: 'Unknown address',\\n\\t\\temail: 'Unknown email',\\n\\t\\tphone: 'No phone',\\n\\t\\tnotes: 'No notes',\\n\\t\\tavatar: null\\n\\t};\\n\\n\\tlet { profile = defaultProfile } = $$props;\\n\\tlet fileinput;\\n\\n\\tconst onFileSelected = e => {\\n\\t\\tlet image = e.target.files[0];\\n\\t\\tlet reader = new FileReader();\\n\\t\\treader.readAsDataURL(image);\\n\\n\\t\\treader.onload = e => {\\n\\t\\t\\t$$invalidate(0, profile.avatar = e.target.result, profile);\\n\\t\\t};\\n\\t};\\n\\n\\tfunction change_handler(event) {\\n\\t\\tbubble.call(this, $$self, event);\\n\\t}\\n\\n\\tconst change_handler_1 = e => onFileSelected(e);\\n\\n\\tfunction input_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\tfileinput = $$value;\\n\\t\\t\\t$$invalidate(1, fileinput);\\n\\t\\t});\\n\\t}\\n\\n\\tconst click_handler = () => {\\n\\t\\tfileinput.click();\\n\\t};\\n\\n\\tfunction editable0_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.firstName, value)) {\\n\\t\\t\\tprofile.firstName = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable1_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.lastName, value)) {\\n\\t\\t\\tprofile.lastName = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.address, value)) {\\n\\t\\t\\tprofile.address = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_1(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.email, value)) {\\n\\t\\t\\tprofile.email = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_2(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.phone, value)) {\\n\\t\\t\\tprofile.phone = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction editable_item_binding_3(value) {\\n\\t\\tif ($$self.$$.not_equal(profile.notes, value)) {\\n\\t\\t\\tprofile.notes = value;\\n\\t\\t\\t($$invalidate(0, profile), $$invalidate(16, defaultProfile));\\n\\t\\t}\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('profile' in $$props) $$invalidate(0, profile = $$props.profile);\\n\\t\\tif ('$$scope' in $$props) $$invalidate(14, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*profile*/ 1) {\\n\\t\\t\\t// this fires when todos change; let's emit an event to update any listeners consuming this component\\n\\t\\t\\tif (profile) {\\n\\t\\t\\t\\t$$invalidate(0, profile = Object.assign({}, defaultProfile, profile));\\n\\t\\t\\t\\tdispatch('change', { profile });\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [\\n\\t\\tprofile,\\n\\t\\tfileinput,\\n\\t\\tonFileSelected,\\n\\t\\tslots,\\n\\t\\tchange_handler,\\n\\t\\tchange_handler_1,\\n\\t\\tinput_binding,\\n\\t\\tclick_handler,\\n\\t\\teditable0_item_binding,\\n\\t\\teditable1_item_binding,\\n\\t\\teditable_item_binding,\\n\\t\\teditable_item_binding_1,\\n\\t\\teditable_item_binding_2,\\n\\t\\teditable_item_binding_3,\\n\\t\\t$$scope\\n\\t];\\n}\\n\\nclass ContactCard extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance, create_fragment, safe_not_equal, { profile: 0 }, add_css);\\n\\t}\\n\\n\\tget profile() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset profile(profile) {\\n\\t\\tthis.$$set({ profile });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nexport { ContactCard as default };\\n\"","export default \"function noop() { }\\nconst identity = x => x;\\nfunction run(fn) {\\n    return fn();\\n}\\nfunction blank_object() {\\n    return Object.create(null);\\n}\\nfunction run_all(fns) {\\n    fns.forEach(run);\\n}\\nfunction is_function(thing) {\\n    return typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\\n}\\nfunction is_empty(obj) {\\n    return Object.keys(obj).length === 0;\\n}\\n\\nconst is_client = typeof window !== 'undefined';\\nlet now = is_client\\n    ? () => window.performance.now()\\n    : () => Date.now();\\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\\n\\nconst tasks = new Set();\\nfunction run_tasks(now) {\\n    tasks.forEach(task => {\\n        if (!task.c(now)) {\\n            tasks.delete(task);\\n            task.f();\\n        }\\n    });\\n    if (tasks.size !== 0)\\n        raf(run_tasks);\\n}\\n/**\\n * Creates a new task that runs on each raf frame\\n * until it returns a falsy value or is aborted\\n */\\nfunction loop(callback) {\\n    let task;\\n    if (tasks.size === 0)\\n        raf(run_tasks);\\n    return {\\n        promise: new Promise(fulfill => {\\n            tasks.add(task = { c: callback, f: fulfill });\\n        }),\\n        abort() {\\n            tasks.delete(task);\\n        }\\n    };\\n}\\nfunction append(target, node) {\\n    target.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n    const append_styles_to = get_root_for_style(target);\\n    if (!append_styles_to.getElementById(style_sheet_id)) {\\n        const style = element('style');\\n        style.id = style_sheet_id;\\n        style.textContent = styles;\\n        append_stylesheet(append_styles_to, style);\\n    }\\n}\\nfunction get_root_for_style(node) {\\n    if (!node)\\n        return document;\\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n    if (root && root.host) {\\n        return root;\\n    }\\n    return node.ownerDocument;\\n}\\nfunction append_empty_stylesheet(node) {\\n    const style_element = element('style');\\n    append_stylesheet(get_root_for_style(node), style_element);\\n    return style_element.sheet;\\n}\\nfunction append_stylesheet(node, style) {\\n    append(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n    target.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n    node.parentNode.removeChild(node);\\n}\\nfunction element(name) {\\n    return document.createElement(name);\\n}\\nfunction text(data) {\\n    return document.createTextNode(data);\\n}\\nfunction space() {\\n    return text(' ');\\n}\\nfunction listen(node, event, handler, options) {\\n    node.addEventListener(event, handler, options);\\n    return () => node.removeEventListener(event, handler, options);\\n}\\nfunction attr(node, attribute, value) {\\n    if (value == null)\\n        node.removeAttribute(attribute);\\n    else if (node.getAttribute(attribute) !== value)\\n        node.setAttribute(attribute, value);\\n}\\nfunction children(element) {\\n    return Array.from(element.childNodes);\\n}\\nfunction set_data(text, data) {\\n    data = '' + data;\\n    if (text.wholeText !== data)\\n        text.data = data;\\n}\\nfunction set_input_value(input, value) {\\n    input.value = value == null ? '' : value;\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n    const e = document.createEvent('CustomEvent');\\n    e.initCustomEvent(type, bubbles, cancelable, detail);\\n    return e;\\n}\\n\\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\\n// https://github.com/sveltejs/svelte/issues/3624\\nconst managed_styles = new Map();\\nlet active = 0;\\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\\nfunction hash(str) {\\n    let hash = 5381;\\n    let i = str.length;\\n    while (i--)\\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\\n    return hash >>> 0;\\n}\\nfunction create_style_information(doc, node) {\\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\\n    managed_styles.set(doc, info);\\n    return info;\\n}\\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\\n    const step = 16.666 / duration;\\n    let keyframes = '{\\\\n';\\n    for (let p = 0; p <= 1; p += step) {\\n        const t = a + (b - a) * ease(p);\\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\\\n`;\\n    }\\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\\\n}`;\\n    const name = `__svelte_${hash(rule)}_${uid}`;\\n    const doc = get_root_for_style(node);\\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\\n    if (!rules[name]) {\\n        rules[name] = true;\\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\\n    }\\n    const animation = node.style.animation || '';\\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\\n    active += 1;\\n    return name;\\n}\\nfunction delete_rule(node, name) {\\n    const previous = (node.style.animation || '').split(', ');\\n    const next = previous.filter(name\\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\\n    );\\n    const deleted = previous.length - next.length;\\n    if (deleted) {\\n        node.style.animation = next.join(', ');\\n        active -= deleted;\\n        if (!active)\\n            clear_rules();\\n    }\\n}\\nfunction clear_rules() {\\n    raf(() => {\\n        if (active)\\n            return;\\n        managed_styles.forEach(info => {\\n            const { stylesheet } = info;\\n            let i = stylesheet.cssRules.length;\\n            while (i--)\\n                stylesheet.deleteRule(i);\\n            info.rules = {};\\n        });\\n        managed_styles.clear();\\n    });\\n}\\n\\nfunction create_animation(node, from, fn, params) {\\n    if (!from)\\n        return noop;\\n    const to = node.getBoundingClientRect();\\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\\n        return noop;\\n    const { delay = 0, duration = 300, easing = identity, \\n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\\n    start: start_time = now() + delay, \\n    // @ts-ignore todo:\\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\\n    let running = true;\\n    let started = false;\\n    let name;\\n    function start() {\\n        if (css) {\\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\\n        }\\n        if (!delay) {\\n            started = true;\\n        }\\n    }\\n    function stop() {\\n        if (css)\\n            delete_rule(node, name);\\n        running = false;\\n    }\\n    loop(now => {\\n        if (!started && now >= start_time) {\\n            started = true;\\n        }\\n        if (started && now >= end) {\\n            tick(1, 0);\\n            stop();\\n        }\\n        if (!running) {\\n            return false;\\n        }\\n        if (started) {\\n            const p = now - start_time;\\n            const t = 0 + 1 * easing(p / duration);\\n            tick(t, 1 - t);\\n        }\\n        return true;\\n    });\\n    start();\\n    tick(0, 1);\\n    return stop;\\n}\\nfunction fix_position(node) {\\n    const style = getComputedStyle(node);\\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\\n        const { width, height } = style;\\n        const a = node.getBoundingClientRect();\\n        node.style.position = 'absolute';\\n        node.style.width = width;\\n        node.style.height = height;\\n        add_transform(node, a);\\n    }\\n}\\nfunction add_transform(node, a) {\\n    const b = node.getBoundingClientRect();\\n    if (a.left !== b.left || a.top !== b.top) {\\n        const style = getComputedStyle(node);\\n        const transform = style.transform === 'none' ? '' : style.transform;\\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\\n    }\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n    current_component = component;\\n}\\nfunction get_current_component() {\\n    if (!current_component)\\n        throw new Error('Function called outside component initialization');\\n    return current_component;\\n}\\nfunction createEventDispatcher() {\\n    const component = get_current_component();\\n    return (type, detail, { cancelable = false } = {}) => {\\n        const callbacks = component.$$.callbacks[type];\\n        if (callbacks) {\\n            // TODO are there situations where events could be dispatched\\n            // in a server (non-DOM) environment?\\n            const event = custom_event(type, detail, { cancelable });\\n            callbacks.slice().forEach(fn => {\\n                fn.call(component, event);\\n            });\\n            return !event.defaultPrevented;\\n        }\\n        return true;\\n    };\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n    if (!update_scheduled) {\\n        update_scheduled = true;\\n        resolved_promise.then(flush);\\n    }\\n}\\nfunction add_render_callback(fn) {\\n    render_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n    const saved_component = current_component;\\n    do {\\n        // first, call beforeUpdate functions\\n        // and update components\\n        while (flushidx < dirty_components.length) {\\n            const component = dirty_components[flushidx];\\n            flushidx++;\\n            set_current_component(component);\\n            update(component.$$);\\n        }\\n        set_current_component(null);\\n        dirty_components.length = 0;\\n        flushidx = 0;\\n        while (binding_callbacks.length)\\n            binding_callbacks.pop()();\\n        // then, once components are updated, call\\n        // afterUpdate functions. This may cause\\n        // subsequent updates...\\n        for (let i = 0; i < render_callbacks.length; i += 1) {\\n            const callback = render_callbacks[i];\\n            if (!seen_callbacks.has(callback)) {\\n                // ...so guard against infinite loops\\n                seen_callbacks.add(callback);\\n                callback();\\n            }\\n        }\\n        render_callbacks.length = 0;\\n    } while (dirty_components.length);\\n    while (flush_callbacks.length) {\\n        flush_callbacks.pop()();\\n    }\\n    update_scheduled = false;\\n    seen_callbacks.clear();\\n    set_current_component(saved_component);\\n}\\nfunction update($$) {\\n    if ($$.fragment !== null) {\\n        $$.update();\\n        run_all($$.before_update);\\n        const dirty = $$.dirty;\\n        $$.dirty = [-1];\\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\\n        $$.after_update.forEach(add_render_callback);\\n    }\\n}\\nconst outroing = new Set();\\nfunction transition_in(block, local) {\\n    if (block && block.i) {\\n        outroing.delete(block);\\n        block.i(local);\\n    }\\n}\\n\\nfunction destroy_block(block, lookup) {\\n    block.d(1);\\n    lookup.delete(block.key);\\n}\\nfunction fix_and_destroy_block(block, lookup) {\\n    block.f();\\n    destroy_block(block, lookup);\\n}\\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\\n    let o = old_blocks.length;\\n    let n = list.length;\\n    let i = o;\\n    const old_indexes = {};\\n    while (i--)\\n        old_indexes[old_blocks[i].key] = i;\\n    const new_blocks = [];\\n    const new_lookup = new Map();\\n    const deltas = new Map();\\n    i = n;\\n    while (i--) {\\n        const child_ctx = get_context(ctx, list, i);\\n        const key = get_key(child_ctx);\\n        let block = lookup.get(key);\\n        if (!block) {\\n            block = create_each_block(key, child_ctx);\\n            block.c();\\n        }\\n        else if (dynamic) {\\n            block.p(child_ctx, dirty);\\n        }\\n        new_lookup.set(key, new_blocks[i] = block);\\n        if (key in old_indexes)\\n            deltas.set(key, Math.abs(i - old_indexes[key]));\\n    }\\n    const will_move = new Set();\\n    const did_move = new Set();\\n    function insert(block) {\\n        transition_in(block, 1);\\n        block.m(node, next);\\n        lookup.set(block.key, block);\\n        next = block.first;\\n        n--;\\n    }\\n    while (o && n) {\\n        const new_block = new_blocks[n - 1];\\n        const old_block = old_blocks[o - 1];\\n        const new_key = new_block.key;\\n        const old_key = old_block.key;\\n        if (new_block === old_block) {\\n            // do nothing\\n            next = new_block.first;\\n            o--;\\n            n--;\\n        }\\n        else if (!new_lookup.has(old_key)) {\\n            // remove old block\\n            destroy(old_block, lookup);\\n            o--;\\n        }\\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\\n            insert(new_block);\\n        }\\n        else if (did_move.has(old_key)) {\\n            o--;\\n        }\\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\\n            did_move.add(new_key);\\n            insert(new_block);\\n        }\\n        else {\\n            will_move.add(old_key);\\n            o--;\\n        }\\n    }\\n    while (o--) {\\n        const old_block = old_blocks[o];\\n        if (!new_lookup.has(old_block.key))\\n            destroy(old_block, lookup);\\n    }\\n    while (n)\\n        insert(new_blocks[n - 1]);\\n    return new_blocks;\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\\n    fragment && fragment.m(target, anchor);\\n    if (!customElement) {\\n        // onMount happens before the initial afterUpdate\\n        add_render_callback(() => {\\n            const new_on_destroy = on_mount.map(run).filter(is_function);\\n            if (on_destroy) {\\n                on_destroy.push(...new_on_destroy);\\n            }\\n            else {\\n                // Edge case - component was destroyed immediately,\\n                // most likely as a result of a binding initialising\\n                run_all(new_on_destroy);\\n            }\\n            component.$$.on_mount = [];\\n        });\\n    }\\n    after_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n    const $$ = component.$$;\\n    if ($$.fragment !== null) {\\n        run_all($$.on_destroy);\\n        $$.fragment && $$.fragment.d(detaching);\\n        // TODO null out other refs, including component.$$ (but need to\\n        // preserve final state?)\\n        $$.on_destroy = $$.fragment = null;\\n        $$.ctx = [];\\n    }\\n}\\nfunction make_dirty(component, i) {\\n    if (component.$$.dirty[0] === -1) {\\n        dirty_components.push(component);\\n        schedule_update();\\n        component.$$.dirty.fill(0);\\n    }\\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\\n}\\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\\n    const parent_component = current_component;\\n    set_current_component(component);\\n    const $$ = component.$$ = {\\n        fragment: null,\\n        ctx: null,\\n        // state\\n        props,\\n        update: noop,\\n        not_equal,\\n        bound: blank_object(),\\n        // lifecycle\\n        on_mount: [],\\n        on_destroy: [],\\n        on_disconnect: [],\\n        before_update: [],\\n        after_update: [],\\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n        // everything else\\n        callbacks: blank_object(),\\n        dirty,\\n        skip_bound: false,\\n        root: options.target || parent_component.$$.root\\n    };\\n    append_styles && append_styles($$.root);\\n    let ready = false;\\n    $$.ctx = instance\\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\\n            const value = rest.length ? rest[0] : ret;\\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\\n                if (!$$.skip_bound && $$.bound[i])\\n                    $$.bound[i](value);\\n                if (ready)\\n                    make_dirty(component, i);\\n            }\\n            return ret;\\n        })\\n        : [];\\n    $$.update();\\n    ready = true;\\n    run_all($$.before_update);\\n    // `false` as a special case of no DOM component\\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n    if (options.target) {\\n        if (options.hydrate) {\\n            const nodes = children(options.target);\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.l(nodes);\\n            nodes.forEach(detach);\\n        }\\n        else {\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.c();\\n        }\\n        if (options.intro)\\n            transition_in(component.$$.fragment);\\n        mount_component(component, options.target, options.anchor, options.customElement);\\n        flush();\\n    }\\n    set_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n    $destroy() {\\n        destroy_component(this, 1);\\n        this.$destroy = noop;\\n    }\\n    $on(type, callback) {\\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\\n        callbacks.push(callback);\\n        return () => {\\n            const index = callbacks.indexOf(callback);\\n            if (index !== -1)\\n                callbacks.splice(index, 1);\\n        };\\n    }\\n    $set($$props) {\\n        if (this.$$set && !is_empty($$props)) {\\n            this.$$.skip_bound = true;\\n            this.$$set($$props);\\n            this.$$.skip_bound = false;\\n        }\\n    }\\n}\\n\\nfunction cubicOut(t) {\\n    const f = t - 1.0;\\n    return f * f * f + 1.0;\\n}\\nfunction quintOut(t) {\\n    return --t * t * t * t * t + 1;\\n}\\n\\nfunction flip(node, { from, to }, params = {}) {\\n    const style = getComputedStyle(node);\\n    const transform = style.transform === 'none' ? '' : style.transform;\\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\\n    return {\\n        delay,\\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\\n        easing,\\n        css: (t, u) => {\\n            const x = u * dx;\\n            const y = u * dy;\\n            const sx = t + u * from.width / to.width;\\n            const sy = t + u * from.height / to.height;\\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\\n        }\\n    };\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ContactList.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(target, \\\"svelte-umbyh9-ContactList\\\", \\\".svelte-umbyh9-ContactList,.svelte-umbyh9-ContactList::before,.svelte-umbyh9-ContactList::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-umbyh9-ContactList::before,.svelte-umbyh9-ContactList::after{--tw-content:''}button.svelte-umbyh9-ContactList,input.svelte-umbyh9-ContactList{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button.svelte-umbyh9-ContactList{text-transform:none}button.svelte-umbyh9-ContactList{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-umbyh9-ContactList:-moz-focusring{outline:auto}.svelte-umbyh9-ContactList:-moz-ui-invalid{box-shadow:none}.svelte-umbyh9-ContactList::-webkit-inner-spin-button,.svelte-umbyh9-ContactList::-webkit-outer-spin-button{height:auto}.svelte-umbyh9-ContactList::-webkit-search-decoration{-webkit-appearance:none}.svelte-umbyh9-ContactList::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}input.svelte-umbyh9-ContactList::-moz-placeholder{opacity:1;color:#9CA3AF}input.svelte-umbyh9-ContactList::placeholder{opacity:1;color:#9CA3AF}button.svelte-umbyh9-ContactList{cursor:pointer}.svelte-umbyh9-ContactList:disabled{cursor:default}[type='text'].svelte-umbyh9-ContactList{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6B7280;border-width:1px;border-radius:0px;padding-top:0.5rem;padding-right:0.75rem;padding-bottom:0.5rem;padding-left:0.75rem;font-size:1rem;line-height:1.5rem;--tw-shadow:0 0 #0000}[type='text'].svelte-umbyh9-ContactList:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#1C64F2;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);border-color:#1C64F2}input.svelte-umbyh9-ContactList::-moz-placeholder{color:#6B7280;opacity:1}input.svelte-umbyh9-ContactList::placeholder{color:#6B7280;opacity:1}.svelte-umbyh9-ContactList::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-umbyh9-ContactList::-webkit-date-and-time-value{min-height:1.5em}.svelte-umbyh9-ContactList{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-umbyh9-ContactList,.svelte-umbyh9-ContactList::before,.svelte-umbyh9-ContactList::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-umbyh9-ContactList::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-umbyh9-ContactList::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.my-4.svelte-umbyh9-ContactList{margin-top:1rem;margin-bottom:1rem}.mx-4.svelte-umbyh9-ContactList{margin-left:1rem;margin-right:1rem}.ml-4.svelte-umbyh9-ContactList{margin-left:1rem}.mr-4.svelte-umbyh9-ContactList{margin-right:1rem}.flex.svelte-umbyh9-ContactList{display:flex}.w-96.svelte-umbyh9-ContactList{width:24rem}.w-full.svelte-umbyh9-ContactList{width:100%}.flex-1.svelte-umbyh9-ContactList{flex:1 1 0%}@-webkit-keyframes svelte-umbyh9-ContactList-spin{to{transform:rotate(360deg)}}@keyframes svelte-umbyh9-ContactList-spin{to{transform:rotate(360deg)}}.flex-row.svelte-umbyh9-ContactList{flex-direction:row}.items-center.svelte-umbyh9-ContactList{align-items:center}.rounded.svelte-umbyh9-ContactList{border-radius:0.25rem}.border-r-gray-400.svelte-umbyh9-ContactList{--tw-border-opacity:1;border-right-color:rgb(156 163 175 / var(--tw-border-opacity))}.bg-gray-50.svelte-umbyh9-ContactList{--tw-bg-opacity:1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-gray-100.svelte-umbyh9-ContactList{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-blue-500.svelte-umbyh9-ContactList{--tw-bg-opacity:1;background-color:rgb(63 131 248 / var(--tw-bg-opacity))}.p-4.svelte-umbyh9-ContactList{padding:1rem}.py-2.svelte-umbyh9-ContactList{padding-top:0.5rem;padding-bottom:0.5rem}.px-4.svelte-umbyh9-ContactList{padding-left:1rem;padding-right:1rem}.font-sans.svelte-umbyh9-ContactList{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.font-mono.svelte-umbyh9-ContactList{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\\\\\"Liberation Mono\\\\\\\", \\\\\\\"Courier New\\\\\\\", monospace}.font-bold.svelte-umbyh9-ContactList{font-weight:700}.text-white.svelte-umbyh9-ContactList{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.shadow-xl.svelte-umbyh9-ContactList{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.hover\\\\\\\\:bg-blue-700.svelte-umbyh9-ContactList:hover{--tw-bg-opacity:1;background-color:rgb(26 86 219 / var(--tw-bg-opacity))}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nfunction get_each_context(ctx, list, i) {\\n\\tconst child_ctx = ctx.slice();\\n\\tchild_ctx[8] = list[i];\\n\\treturn child_ctx;\\n}\\n\\n// (45:1) {#each contacts as contact (contact)}\\nfunction create_each_block(key_1, ctx) {\\n\\tlet div2;\\n\\tlet div0;\\n\\tlet t0_value = /*contact*/ ctx[8].handle + \\\"\\\";\\n\\tlet t0;\\n\\tlet t1;\\n\\tlet div1;\\n\\tlet t2_value = /*contact*/ ctx[8].pubkey + \\\"\\\";\\n\\tlet t2;\\n\\tlet t3;\\n\\tlet rect;\\n\\tlet stop_animation = noop;\\n\\n\\treturn {\\n\\t\\tkey: key_1,\\n\\t\\tfirst: null,\\n\\t\\tc() {\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tt0 = text(t0_value);\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tt2 = text(t2_value);\\n\\t\\t\\tt3 = space();\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"flex-1 font-sans bg-gray-100 ml-4 p-4 border-r-gray-400 svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex-1 font-mono bg-gray-100 mr-4 p-4  svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"flex flex-row mx-4 bg-gray-50 rounded p-4  svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tthis.first = div2;\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div2, anchor);\\n\\t\\t\\tappend(div2, div0);\\n\\t\\t\\tappend(div0, t0);\\n\\t\\t\\tappend(div2, t1);\\n\\t\\t\\tappend(div2, div1);\\n\\t\\t\\tappend(div1, t2);\\n\\t\\t\\tappend(div2, t3);\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tif (dirty & /*contacts*/ 1 && t0_value !== (t0_value = /*contact*/ ctx[8].handle + \\\"\\\")) set_data(t0, t0_value);\\n\\t\\t\\tif (dirty & /*contacts*/ 1 && t2_value !== (t2_value = /*contact*/ ctx[8].pubkey + \\\"\\\")) set_data(t2, t2_value);\\n\\t\\t},\\n\\t\\tr() {\\n\\t\\t\\trect = div2.getBoundingClientRect();\\n\\t\\t},\\n\\t\\tf() {\\n\\t\\t\\tfix_position(div2);\\n\\t\\t\\tstop_animation();\\n\\t\\t},\\n\\t\\ta() {\\n\\t\\t\\tstop_animation();\\n\\n\\t\\t\\tstop_animation = create_animation(div2, rect, flip, {\\n\\t\\t\\t\\tdelay: 250,\\n\\t\\t\\t\\tduration: 750,\\n\\t\\t\\t\\teasing: quintOut\\n\\t\\t\\t});\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div2);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment(ctx) {\\n\\tlet div4;\\n\\tlet div3;\\n\\tlet div0;\\n\\tlet input0;\\n\\tlet t0;\\n\\tlet div1;\\n\\tlet input1;\\n\\tlet t1;\\n\\tlet div2;\\n\\tlet button;\\n\\tlet t3;\\n\\tlet each_blocks = [];\\n\\tlet each_1_lookup = new Map();\\n\\tlet mounted;\\n\\tlet dispose;\\n\\tlet each_value = /*contacts*/ ctx[0];\\n\\tconst get_key = ctx => /*contact*/ ctx[8];\\n\\n\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\tlet child_ctx = get_each_context(ctx, each_value, i);\\n\\t\\tlet key = get_key(child_ctx);\\n\\t\\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\\n\\t}\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv4 = element(\\\"div\\\");\\n\\t\\t\\tdiv3 = element(\\\"div\\\");\\n\\t\\t\\tdiv0 = element(\\\"div\\\");\\n\\t\\t\\tinput0 = element(\\\"input\\\");\\n\\t\\t\\tt0 = space();\\n\\t\\t\\tdiv1 = element(\\\"div\\\");\\n\\t\\t\\tinput1 = element(\\\"input\\\");\\n\\t\\t\\tt1 = space();\\n\\t\\t\\tdiv2 = element(\\\"div\\\");\\n\\t\\t\\tbutton = element(\\\"button\\\");\\n\\t\\t\\tbutton.textContent = \\\"Add\\\";\\n\\t\\t\\tt3 = space();\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t}\\n\\n\\t\\t\\tattr(input0, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input0, \\\"class\\\", \\\"w-full svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div0, \\\"class\\\", \\\"flex-1 font-sans bg-gray-100 ml-4 p-4 border-r-gray-400 svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(input1, \\\"type\\\", \\\"text\\\");\\n\\t\\t\\tattr(input1, \\\"class\\\", \\\"w-full svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div1, \\\"class\\\", \\\"flex-1 font-mono bg-gray-100 mr-4 p-4  svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(button, \\\"class\\\", \\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow-xl svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div2, \\\"class\\\", \\\"svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div3, \\\"class\\\", \\\"flex flex-row mx-4 bg-gray-50 rounded p-4 items-center svelte-umbyh9-ContactList\\\");\\n\\t\\t\\tattr(div4, \\\"class\\\", \\\"my-4 w-96 svelte-umbyh9-ContactList\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div4, anchor);\\n\\t\\t\\tappend(div4, div3);\\n\\t\\t\\tappend(div3, div0);\\n\\t\\t\\tappend(div0, input0);\\n\\t\\t\\tset_input_value(input0, /*handle*/ ctx[1]);\\n\\t\\t\\tappend(div3, t0);\\n\\t\\t\\tappend(div3, div1);\\n\\t\\t\\tappend(div1, input1);\\n\\t\\t\\tset_input_value(input1, /*pubkey*/ ctx[2]);\\n\\t\\t\\tappend(div3, t1);\\n\\t\\t\\tappend(div3, div2);\\n\\t\\t\\tappend(div2, button);\\n\\t\\t\\tappend(div4, t3);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].m(div4, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!mounted) {\\n\\t\\t\\t\\tdispose = [\\n\\t\\t\\t\\t\\tlisten(input0, \\\"input\\\", /*input0_input_handler*/ ctx[3]),\\n\\t\\t\\t\\t\\tlisten(input1, \\\"input\\\", /*input1_input_handler*/ ctx[4]),\\n\\t\\t\\t\\t\\tlisten(button, \\\"click\\\", /*click_handler*/ ctx[5])\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\tmounted = true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*handle*/ 2 && input0.value !== /*handle*/ ctx[1]) {\\n\\t\\t\\t\\tset_input_value(input0, /*handle*/ ctx[1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*pubkey*/ 4 && input1.value !== /*pubkey*/ ctx[2]) {\\n\\t\\t\\t\\tset_input_value(input1, /*pubkey*/ ctx[2]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty & /*contacts*/ 1) {\\n\\t\\t\\t\\teach_value = /*contacts*/ ctx[0];\\n\\t\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();\\n\\t\\t\\t\\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div4, fix_and_destroy_block, create_each_block, null, get_each_context);\\n\\t\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div4);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].d();\\n\\t\\t\\t}\\n\\n\\t\\t\\tmounted = false;\\n\\t\\t\\trun_all(dispose);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet handle, pubkey;\\n\\n\\tlet defaultContact = {\\n\\t\\tpubkey: 'GnHDprayyzahnWjDqvQ9AGWsmjojWymVNztGHNr4S7an',\\n\\t\\thandle: 'douganderson444'\\n\\t};\\n\\n\\tlet { contacts = [defaultContact] } = $$props;\\n\\n\\tfunction input0_input_handler() {\\n\\t\\thandle = this.value;\\n\\t\\t$$invalidate(1, handle);\\n\\t}\\n\\n\\tfunction input1_input_handler() {\\n\\t\\tpubkey = this.value;\\n\\t\\t$$invalidate(2, pubkey);\\n\\t}\\n\\n\\tconst click_handler = () => {\\n\\t\\tif (!handle || !pubkey) return;\\n\\t\\t$$invalidate(0, contacts = [{ handle, pubkey }, ...contacts]);\\n\\t};\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('contacts' in $$props) $$invalidate(0, contacts = $$props.contacts);\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*contacts*/ 1) {\\n\\t\\t\\t// this fires when todos change; let's emit an event to update any listeners consuming this component\\n\\t\\t\\tif (contacts) {\\n\\t\\t\\t\\tconsole.log('Chg', { contacts });\\n\\t\\t\\t\\tdispatch('change', { contacts });\\n\\t\\t\\t\\tdispatch('loadContacts', contacts);\\n\\t\\t\\t\\tconsole.log('loadedContacts');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn [\\n\\t\\tcontacts,\\n\\t\\thandle,\\n\\t\\tpubkey,\\n\\t\\tinput0_input_handler,\\n\\t\\tinput1_input_handler,\\n\\t\\tclick_handler\\n\\t];\\n}\\n\\nclass ContactList extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance, create_fragment, safe_not_equal, { contacts: 0 }, add_css);\\n\\t}\\n\\n\\tget contacts() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset contacts(contacts) {\\n\\t\\tthis.$$set({ contacts });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nexport { ContactList as default };\\n\"","<script>\r\n\t/**\r\n\t * Allows a user to do 2 things:\r\n\t * 1. Load a new es module and associate it with a tag\r\n\t * 2. Decrypt existing Tag Node data for initial display, by passing the data to the slot\r\n\t */\r\n\r\n\t// TEMPORARY: until we load from ID, IPFS, Arweave, or URL\r\n\t// @ts-ignore\r\n\timport ContactCard from '../../../../compiled/@peerpiper/ContactCard.svelte.js?raw';\r\n\t// @ts-ignore\r\n\timport ContactList from '../../../../compiled/@peerpiper/ContactList.svelte.js?raw';\r\n\r\n\texport let tagNodes;\r\n\texport let decryptTagNode;\r\n\r\n\tlet params;\r\n\r\n\tif (tagNodes) {\r\n\t\t// iterate through tagNodes for each tag, await decryptTagNode (tag) then set the params object key of tag to the result\r\n\t\tconst promises = Object.keys(tagNodes).map(async (tag) => {\r\n\t\t\tif (tag === 'prev') return null;\r\n\t\t\tconst decrypted = await decryptTagNode(tag);\r\n\t\t\tif (!decrypted.hasOwnProperty('esModule') || !decrypted.hasOwnProperty('props')) return null;\r\n\r\n\t\t\treturn [\r\n\t\t\t\t[tag],\r\n\t\t\t\t{\r\n\t\t\t\t\tesModule: decrypted.esModule,\r\n\t\t\t\t\tprops: decrypted.props\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tPromise.all(promises).then((result) => {\r\n\t\t\tconsole.log({ result }, Object.fromEntries(result.filter((r) => r)));\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tparams = Object.fromEntries(result.filter((r) => r));\r\n\t\t});\r\n\t} else {\r\n\t\t// default vals\r\n\t\tparams = {\r\n\t\t\tContacts: {\r\n\t\t\t\tesModule: ContactList\r\n\t\t\t},\r\n\t\t\tProfile: {\r\n\t\t\t\tesModule: ContactCard\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tlet tagValue, esModuleValue;\r\n\r\n\tfunction handleNewTag(e) {\r\n\t\tparams[tagValue] = {\r\n\t\t\tesModule: esModuleValue,\r\n\t\t\tprops: {}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<!-- <div>\r\n\t<div class=\"p-4\">\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h1 class=\"text-2xl font-bold\">Set Tag Value</h1>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclass=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n\t\t\t\t\ton:click={handleNewTag}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"p-4\">\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h2 class=\"text-xl font-bold\">Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Tag\"\r\n\t\t\t\t\tbind:value={tagValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"flex justify-between\">\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<h2 class=\"text-xl font-bold\">Module</h2>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Module\"\r\n\t\t\t\t\tbind:value={esModuleValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n\r\n{#if params}\r\n\t<slot {params} />\r\n{/if}\r\n","export default \"function noop() { }\\nfunction assign(tar, src) {\\n    // @ts-ignore\\n    for (const k in src)\\n        tar[k] = src[k];\\n    return tar;\\n}\\nfunction run(fn) {\\n    return fn();\\n}\\nfunction blank_object() {\\n    return Object.create(null);\\n}\\nfunction run_all(fns) {\\n    fns.forEach(run);\\n}\\nfunction is_function(thing) {\\n    return typeof thing === 'function';\\n}\\nfunction safe_not_equal(a, b) {\\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\\n}\\nfunction is_empty(obj) {\\n    return Object.keys(obj).length === 0;\\n}\\nfunction create_slot(definition, ctx, $$scope, fn) {\\n    if (definition) {\\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\\n        return definition[0](slot_ctx);\\n    }\\n}\\nfunction get_slot_context(definition, ctx, $$scope, fn) {\\n    return definition[1] && fn\\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\\n        : $$scope.ctx;\\n}\\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\\n    if (definition[2] && fn) {\\n        const lets = definition[2](fn(dirty));\\n        if ($$scope.dirty === undefined) {\\n            return lets;\\n        }\\n        if (typeof lets === 'object') {\\n            const merged = [];\\n            const len = Math.max($$scope.dirty.length, lets.length);\\n            for (let i = 0; i < len; i += 1) {\\n                merged[i] = $$scope.dirty[i] | lets[i];\\n            }\\n            return merged;\\n        }\\n        return $$scope.dirty | lets;\\n    }\\n    return $$scope.dirty;\\n}\\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\\n    if (slot_changes) {\\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\\n        slot.p(slot_context, slot_changes);\\n    }\\n}\\nfunction get_all_dirty_from_scope($$scope) {\\n    if ($$scope.ctx.length > 32) {\\n        const dirty = [];\\n        const length = $$scope.ctx.length / 32;\\n        for (let i = 0; i < length; i++) {\\n            dirty[i] = -1;\\n        }\\n        return dirty;\\n    }\\n    return -1;\\n}\\nfunction append(target, node) {\\n    target.appendChild(node);\\n}\\nfunction append_styles(target, style_sheet_id, styles) {\\n    const append_styles_to = get_root_for_style(target);\\n    if (!append_styles_to.getElementById(style_sheet_id)) {\\n        const style = element('style');\\n        style.id = style_sheet_id;\\n        style.textContent = styles;\\n        append_stylesheet(append_styles_to, style);\\n    }\\n}\\nfunction get_root_for_style(node) {\\n    if (!node)\\n        return document;\\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\\n    if (root && root.host) {\\n        return root;\\n    }\\n    return node.ownerDocument;\\n}\\nfunction append_stylesheet(node, style) {\\n    append(node.head || node, style);\\n}\\nfunction insert(target, node, anchor) {\\n    target.insertBefore(node, anchor || null);\\n}\\nfunction detach(node) {\\n    node.parentNode.removeChild(node);\\n}\\nfunction destroy_each(iterations, detaching) {\\n    for (let i = 0; i < iterations.length; i += 1) {\\n        if (iterations[i])\\n            iterations[i].d(detaching);\\n    }\\n}\\nfunction element(name) {\\n    return document.createElement(name);\\n}\\nfunction svg_element(name) {\\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\\n}\\nfunction text(data) {\\n    return document.createTextNode(data);\\n}\\nfunction space() {\\n    return text(' ');\\n}\\nfunction empty() {\\n    return text('');\\n}\\nfunction attr(node, attribute, value) {\\n    if (value == null)\\n        node.removeAttribute(attribute);\\n    else if (node.getAttribute(attribute) !== value)\\n        node.setAttribute(attribute, value);\\n}\\nfunction children(element) {\\n    return Array.from(element.childNodes);\\n}\\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\\n    const e = document.createEvent('CustomEvent');\\n    e.initCustomEvent(type, bubbles, cancelable, detail);\\n    return e;\\n}\\nclass HtmlTag {\\n    constructor(is_svg = false) {\\n        this.is_svg = false;\\n        this.is_svg = is_svg;\\n        this.e = this.n = null;\\n    }\\n    c(html) {\\n        this.h(html);\\n    }\\n    m(html, target, anchor = null) {\\n        if (!this.e) {\\n            if (this.is_svg)\\n                this.e = svg_element(target.nodeName);\\n            else\\n                this.e = element(target.nodeName);\\n            this.t = target;\\n            this.c(html);\\n        }\\n        this.i(anchor);\\n    }\\n    h(html) {\\n        this.e.innerHTML = html;\\n        this.n = Array.from(this.e.childNodes);\\n    }\\n    i(anchor) {\\n        for (let i = 0; i < this.n.length; i += 1) {\\n            insert(this.t, this.n[i], anchor);\\n        }\\n    }\\n    p(html) {\\n        this.d();\\n        this.h(html);\\n        this.i(this.a);\\n    }\\n    d() {\\n        this.n.forEach(detach);\\n    }\\n}\\n\\nlet current_component;\\nfunction set_current_component(component) {\\n    current_component = component;\\n}\\nfunction get_current_component() {\\n    if (!current_component)\\n        throw new Error('Function called outside component initialization');\\n    return current_component;\\n}\\nfunction onMount(fn) {\\n    get_current_component().$$.on_mount.push(fn);\\n}\\nfunction onDestroy(fn) {\\n    get_current_component().$$.on_destroy.push(fn);\\n}\\nfunction createEventDispatcher() {\\n    const component = get_current_component();\\n    return (type, detail, { cancelable = false } = {}) => {\\n        const callbacks = component.$$.callbacks[type];\\n        if (callbacks) {\\n            // TODO are there situations where events could be dispatched\\n            // in a server (non-DOM) environment?\\n            const event = custom_event(type, detail, { cancelable });\\n            callbacks.slice().forEach(fn => {\\n                fn.call(component, event);\\n            });\\n            return !event.defaultPrevented;\\n        }\\n        return true;\\n    };\\n}\\n\\nconst dirty_components = [];\\nconst binding_callbacks = [];\\nconst render_callbacks = [];\\nconst flush_callbacks = [];\\nconst resolved_promise = Promise.resolve();\\nlet update_scheduled = false;\\nfunction schedule_update() {\\n    if (!update_scheduled) {\\n        update_scheduled = true;\\n        resolved_promise.then(flush);\\n    }\\n}\\nfunction add_render_callback(fn) {\\n    render_callbacks.push(fn);\\n}\\n// flush() calls callbacks in this order:\\n// 1. All beforeUpdate callbacks, in order: parents before children\\n// 2. All bind:this callbacks, in reverse order: children before parents.\\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\\n//    for afterUpdates called during the initial onMount, which are called in\\n//    reverse order: children before parents.\\n// Since callbacks might update component values, which could trigger another\\n// call to flush(), the following steps guard against this:\\n// 1. During beforeUpdate, any updated components will be added to the\\n//    dirty_components array and will cause a reentrant call to flush(). Because\\n//    the flush index is kept outside the function, the reentrant call will pick\\n//    up where the earlier call left off and go through all dirty components. The\\n//    current_component value is saved and restored so that the reentrant call will\\n//    not interfere with the \\\"parent\\\" flush() call.\\n// 2. bind:this callbacks cannot trigger new flush() calls.\\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\\n//    callback called a second time; the seen_callbacks set, outside the flush()\\n//    function, guarantees this behavior.\\nconst seen_callbacks = new Set();\\nlet flushidx = 0; // Do *not* move this inside the flush() function\\nfunction flush() {\\n    const saved_component = current_component;\\n    do {\\n        // first, call beforeUpdate functions\\n        // and update components\\n        while (flushidx < dirty_components.length) {\\n            const component = dirty_components[flushidx];\\n            flushidx++;\\n            set_current_component(component);\\n            update(component.$$);\\n        }\\n        set_current_component(null);\\n        dirty_components.length = 0;\\n        flushidx = 0;\\n        while (binding_callbacks.length)\\n            binding_callbacks.pop()();\\n        // then, once components are updated, call\\n        // afterUpdate functions. This may cause\\n        // subsequent updates...\\n        for (let i = 0; i < render_callbacks.length; i += 1) {\\n            const callback = render_callbacks[i];\\n            if (!seen_callbacks.has(callback)) {\\n                // ...so guard against infinite loops\\n                seen_callbacks.add(callback);\\n                callback();\\n            }\\n        }\\n        render_callbacks.length = 0;\\n    } while (dirty_components.length);\\n    while (flush_callbacks.length) {\\n        flush_callbacks.pop()();\\n    }\\n    update_scheduled = false;\\n    seen_callbacks.clear();\\n    set_current_component(saved_component);\\n}\\nfunction update($$) {\\n    if ($$.fragment !== null) {\\n        $$.update();\\n        run_all($$.before_update);\\n        const dirty = $$.dirty;\\n        $$.dirty = [-1];\\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\\n        $$.after_update.forEach(add_render_callback);\\n    }\\n}\\nconst outroing = new Set();\\nlet outros;\\nfunction group_outros() {\\n    outros = {\\n        r: 0,\\n        c: [],\\n        p: outros // parent group\\n    };\\n}\\nfunction check_outros() {\\n    if (!outros.r) {\\n        run_all(outros.c);\\n    }\\n    outros = outros.p;\\n}\\nfunction transition_in(block, local) {\\n    if (block && block.i) {\\n        outroing.delete(block);\\n        block.i(local);\\n    }\\n}\\nfunction transition_out(block, local, detach, callback) {\\n    if (block && block.o) {\\n        if (outroing.has(block))\\n            return;\\n        outroing.add(block);\\n        outros.c.push(() => {\\n            outroing.delete(block);\\n            if (callback) {\\n                if (detach)\\n                    block.d(1);\\n                callback();\\n            }\\n        });\\n        block.o(local);\\n    }\\n}\\nfunction create_component(block) {\\n    block && block.c();\\n}\\nfunction mount_component(component, target, anchor, customElement) {\\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\\n    fragment && fragment.m(target, anchor);\\n    if (!customElement) {\\n        // onMount happens before the initial afterUpdate\\n        add_render_callback(() => {\\n            const new_on_destroy = on_mount.map(run).filter(is_function);\\n            if (on_destroy) {\\n                on_destroy.push(...new_on_destroy);\\n            }\\n            else {\\n                // Edge case - component was destroyed immediately,\\n                // most likely as a result of a binding initialising\\n                run_all(new_on_destroy);\\n            }\\n            component.$$.on_mount = [];\\n        });\\n    }\\n    after_update.forEach(add_render_callback);\\n}\\nfunction destroy_component(component, detaching) {\\n    const $$ = component.$$;\\n    if ($$.fragment !== null) {\\n        run_all($$.on_destroy);\\n        $$.fragment && $$.fragment.d(detaching);\\n        // TODO null out other refs, including component.$$ (but need to\\n        // preserve final state?)\\n        $$.on_destroy = $$.fragment = null;\\n        $$.ctx = [];\\n    }\\n}\\nfunction make_dirty(component, i) {\\n    if (component.$$.dirty[0] === -1) {\\n        dirty_components.push(component);\\n        schedule_update();\\n        component.$$.dirty.fill(0);\\n    }\\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\\n}\\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\\n    const parent_component = current_component;\\n    set_current_component(component);\\n    const $$ = component.$$ = {\\n        fragment: null,\\n        ctx: null,\\n        // state\\n        props,\\n        update: noop,\\n        not_equal,\\n        bound: blank_object(),\\n        // lifecycle\\n        on_mount: [],\\n        on_destroy: [],\\n        on_disconnect: [],\\n        before_update: [],\\n        after_update: [],\\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\\n        // everything else\\n        callbacks: blank_object(),\\n        dirty,\\n        skip_bound: false,\\n        root: options.target || parent_component.$$.root\\n    };\\n    append_styles && append_styles($$.root);\\n    let ready = false;\\n    $$.ctx = instance\\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\\n            const value = rest.length ? rest[0] : ret;\\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\\n                if (!$$.skip_bound && $$.bound[i])\\n                    $$.bound[i](value);\\n                if (ready)\\n                    make_dirty(component, i);\\n            }\\n            return ret;\\n        })\\n        : [];\\n    $$.update();\\n    ready = true;\\n    run_all($$.before_update);\\n    // `false` as a special case of no DOM component\\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\\n    if (options.target) {\\n        if (options.hydrate) {\\n            const nodes = children(options.target);\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.l(nodes);\\n            nodes.forEach(detach);\\n        }\\n        else {\\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\\n            $$.fragment && $$.fragment.c();\\n        }\\n        if (options.intro)\\n            transition_in(component.$$.fragment);\\n        mount_component(component, options.target, options.anchor, options.customElement);\\n        flush();\\n    }\\n    set_current_component(parent_component);\\n}\\n/**\\n * Base class for Svelte components. Used when dev=false.\\n */\\nclass SvelteComponent {\\n    $destroy() {\\n        destroy_component(this, 1);\\n        this.$destroy = noop;\\n    }\\n    $on(type, callback) {\\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\\n        callbacks.push(callback);\\n        return () => {\\n            const index = callbacks.indexOf(callback);\\n            if (index !== -1)\\n                callbacks.splice(index, 1);\\n        };\\n    }\\n    $set($$props) {\\n        if (this.$$set && !is_empty($$props)) {\\n            this.$$.skip_bound = true;\\n            this.$$set($$props);\\n            this.$$.skip_bound = false;\\n        }\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\OutterWraper.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css$1(target) {\\n\\tappend_styles(target, \\\"svelte-q5cgiz-TagManager\\\", \\\"@tailwind base;@tailwind components;@tailwind utilities;.svelte-q5cgiz-TagManager,.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{--tw-content:''}.svelte-q5cgiz-TagManager:-moz-focusring{outline:auto}.svelte-q5cgiz-TagManager:-moz-ui-invalid{box-shadow:none}.svelte-q5cgiz-TagManager::-webkit-inner-spin-button,.svelte-q5cgiz-TagManager::-webkit-outer-spin-button{height:auto}.svelte-q5cgiz-TagManager::-webkit-search-decoration{-webkit-appearance:none}.svelte-q5cgiz-TagManager::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-q5cgiz-TagManager:disabled{cursor:default}.svelte-q5cgiz-TagManager::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-q5cgiz-TagManager::-webkit-date-and-time-value{min-height:1.5em}.svelte-q5cgiz-TagManager{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-q5cgiz-TagManager,.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-q5cgiz-TagManager::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-q5cgiz-TagManager::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.flex.svelte-q5cgiz-TagManager{display:flex}@-webkit-keyframes svelte-q5cgiz-TagManager-spin{to{transform:rotate(360deg)}}@keyframes svelte-q5cgiz-TagManager-spin{to{transform:rotate(360deg)}}.flex-col.svelte-q5cgiz-TagManager{flex-direction:column}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nfunction create_fragment$3(ctx) {\\n\\tlet div;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[1].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"flex flex-col svelte-q5cgiz-TagManager\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[0],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$3($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [$$scope, slots];\\n}\\n\\nclass OutterWraper extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, {}, add_css$1);\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\Wrapper.svelte generated by Svelte v3.48.0 */\\n\\nfunction add_css(target) {\\n\\tappend_styles(target, \\\"svelte-q5cgiz-TagManager\\\", \\\"@tailwind base;@tailwind components;@tailwind utilities;.svelte-q5cgiz-TagManager,.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#E5E7EB}.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{--tw-content:''}.svelte-q5cgiz-TagManager:-moz-focusring{outline:auto}.svelte-q5cgiz-TagManager:-moz-ui-invalid{box-shadow:none}.svelte-q5cgiz-TagManager::-webkit-inner-spin-button,.svelte-q5cgiz-TagManager::-webkit-outer-spin-button{height:auto}.svelte-q5cgiz-TagManager::-webkit-search-decoration{-webkit-appearance:none}.svelte-q5cgiz-TagManager::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-q5cgiz-TagManager:disabled{cursor:default}.svelte-q5cgiz-TagManager::-webkit-datetime-edit-fields-wrapper{padding:0}.svelte-q5cgiz-TagManager::-webkit-date-and-time-value{min-height:1.5em}.svelte-q5cgiz-TagManager{font-family:ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\\\\\"Segoe UI\\\\\\\", Roboto, \\\\\\\"Helvetica Neue\\\\\\\", Arial, \\\\\\\"Noto Sans\\\\\\\", sans-serif, \\\\\\\"Apple Color Emoji\\\\\\\", \\\\\\\"Segoe UI Emoji\\\\\\\", \\\\\\\"Segoe UI Symbol\\\\\\\", \\\\\\\"Noto Color Emoji\\\\\\\"}.svelte-q5cgiz-TagManager,.svelte-q5cgiz-TagManager::before,.svelte-q5cgiz-TagManager::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-q5cgiz-TagManager::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.svelte-q5cgiz-TagManager::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(63 131 248 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  }.flex-1.svelte-q5cgiz-TagManager{flex:1 1 0%}@-webkit-keyframes svelte-q5cgiz-TagManager-spin{to{transform:rotate(360deg)}}@keyframes svelte-q5cgiz-TagManager-spin{to{transform:rotate(360deg)}}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}\\\");\\n}\\n\\nfunction create_fragment$2(ctx) {\\n\\tlet div;\\n\\tlet current;\\n\\tconst default_slot_template = /*#slots*/ ctx[1].default;\\n\\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\tif (default_slot) default_slot.c();\\n\\t\\t\\tattr(div, \\\"class\\\", \\\"flex-1 svelte-q5cgiz-TagManager\\\");\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tinsert(target, div, anchor);\\n\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tdefault_slot.m(div, null);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (default_slot) {\\n\\t\\t\\t\\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\\n\\t\\t\\t\\t\\tupdate_slot_base(\\n\\t\\t\\t\\t\\t\\tdefault_slot,\\n\\t\\t\\t\\t\\t\\tdefault_slot_template,\\n\\t\\t\\t\\t\\t\\tctx,\\n\\t\\t\\t\\t\\t\\t/*$$scope*/ ctx[0],\\n\\t\\t\\t\\t\\t\\t!current\\n\\t\\t\\t\\t\\t\\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\\n\\t\\t\\t\\t\\t\\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\\n\\t\\t\\t\\t\\t\\tnull\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(default_slot, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(default_slot, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\tif (default_slot) default_slot.d(detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$2($$self, $$props, $$invalidate) {\\n\\tlet { $$slots: slots = {}, $$scope } = $$props;\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\\n\\t};\\n\\n\\treturn [$$scope, slots];\\n}\\n\\nclass Wrapper extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, {}, add_css);\\n\\t}\\n}\\n\\nfunction canonicalize(obj) {\\n    var buffer = '';\\n    serialize(obj);\\n    return buffer;\\n    function serialize(object) {\\n        if (object === null ||\\n            typeof object !== 'object' ||\\n            object.toJSON != null) {\\n            /////////////////////////////////////////////////\\n            // Primitive data type - Use ES6/JSON          //\\n            /////////////////////////////////////////////////\\n            buffer += JSON.stringify(object);\\n            // } else if (object instanceof Date) {\\n            //   buffer += JSON.stringify(object);\\n        }\\n        else if (Array.isArray(object)) {\\n            /////////////////////////////////////////////////\\n            // Array - Maintain element order              //\\n            /////////////////////////////////////////////////\\n            buffer += '[';\\n            var next_1 = false;\\n            object.forEach(function (element) {\\n                if (next_1) {\\n                    buffer += ',';\\n                }\\n                next_1 = true;\\n                /////////////////////////////////////////\\n                // Array element - Recursive expansion //\\n                /////////////////////////////////////////\\n                serialize(element);\\n            });\\n            buffer += ']';\\n        }\\n        else {\\n            /////////////////////////////////////////////////\\n            // Object - Sort properties before serializing //\\n            /////////////////////////////////////////////////\\n            buffer += '{';\\n            var vKeys = Object.keys(object).sort();\\n            vKeys.forEach(function (property, index) { return addProp(object, property, index); });\\n            buffer += '}';\\n        }\\n    }\\n    function addProp(object, property, index) {\\n        if (index > 0) {\\n            buffer += ',';\\n        }\\n        ///////////////////////////////////////////////\\n        // Property names are strings - Use ES6/JSON //\\n        ///////////////////////////////////////////////\\n        buffer += JSON.stringify(property);\\n        buffer += ':';\\n        //////////////////////////////////////////\\n        // Property value - Recursive expansion //\\n        //////////////////////////////////////////\\n        serialize(object[property]);\\n    }\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\TagManager.svelte generated by Svelte v3.48.0 */\\n\\nfunction get_each_context(ctx, list, i) {\\n\\tconst child_ctx = ctx.slice();\\n\\tchild_ctx[5] = list[i][0];\\n\\tchild_ctx[6] = list[i][1].esModule;\\n\\tchild_ctx[7] = list[i][1].props !== undefined ? list[i][1].props : {};\\n\\treturn child_ctx;\\n}\\n\\n// (27:0) {#if ComponentMounter && params && Object.entries(params).length > 0}\\nfunction create_if_block(ctx) {\\n\\tlet outterwraper;\\n\\tlet current;\\n\\n\\toutterwraper = new OutterWraper({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(outterwraper.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(outterwraper, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst outterwraper_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, params, ComponentMounter*/ 1027) {\\n\\t\\t\\t\\toutterwraper_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\toutterwraper.$set(outterwraper_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(outterwraper.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(outterwraper.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(outterwraper, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (31:3) <ComponentWrapper>\\nfunction create_default_slot_1(ctx) {\\n\\tlet switch_instance;\\n\\tlet t;\\n\\tlet current;\\n\\n\\tfunction change_handler(...args) {\\n\\t\\treturn /*change_handler*/ ctx[4](/*props*/ ctx[7], /*tag*/ ctx[5], /*esModule*/ ctx[6], ...args);\\n\\t}\\n\\n\\tvar switch_value = /*ComponentMounter*/ ctx[1];\\n\\n\\tfunction switch_props(ctx) {\\n\\t\\treturn {\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tesModule: /*esModule*/ ctx[6],\\n\\t\\t\\t\\tprops: /*props*/ ctx[7]\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\tif (switch_value) {\\n\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\tswitch_instance.$on(\\\"change\\\", change_handler);\\n\\t}\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (switch_instance) create_component(switch_instance.$$.fragment);\\n\\t\\t\\tt = space();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\tmount_component(switch_instance, target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(new_ctx, dirty) {\\n\\t\\t\\tctx = new_ctx;\\n\\t\\t\\tconst switch_instance_changes = {};\\n\\t\\t\\tif (dirty & /*params*/ 1) switch_instance_changes.esModule = /*esModule*/ ctx[6];\\n\\t\\t\\tif (dirty & /*params*/ 1) switch_instance_changes.props = /*props*/ ctx[7];\\n\\n\\t\\t\\tif (switch_value !== (switch_value = /*ComponentMounter*/ ctx[1])) {\\n\\t\\t\\t\\tif (switch_instance) {\\n\\t\\t\\t\\t\\tgroup_outros();\\n\\t\\t\\t\\t\\tconst old_component = switch_instance;\\n\\n\\t\\t\\t\\t\\ttransition_out(old_component.$$.fragment, 1, 0, () => {\\n\\t\\t\\t\\t\\t\\tdestroy_component(old_component, 1);\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (switch_value) {\\n\\t\\t\\t\\t\\tswitch_instance = new switch_value(switch_props(ctx));\\n\\t\\t\\t\\t\\tswitch_instance.$on(\\\"change\\\", change_handler);\\n\\t\\t\\t\\t\\tcreate_component(switch_instance.$$.fragment);\\n\\t\\t\\t\\t\\ttransition_in(switch_instance.$$.fragment, 1);\\n\\t\\t\\t\\t\\tmount_component(switch_instance, t.parentNode, t);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tswitch_instance = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (switch_value) {\\n\\t\\t\\t\\tswitch_instance.$set(switch_instance_changes);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (switch_instance) destroy_component(switch_instance, detaching);\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (29:2) {#each [...Object.entries(params)] as [tag, { esModule, props = { }\\nfunction create_each_block(ctx) {\\n\\tlet componentwrapper;\\n\\tlet current;\\n\\n\\tcomponentwrapper = new Wrapper({\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\t$$slots: { default: [create_default_slot_1] },\\n\\t\\t\\t\\t$$scope: { ctx }\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tcreate_component(componentwrapper.$$.fragment);\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tmount_component(componentwrapper, target, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tconst componentwrapper_changes = {};\\n\\n\\t\\t\\tif (dirty & /*$$scope, ComponentMounter, params*/ 1027) {\\n\\t\\t\\t\\tcomponentwrapper_changes.$$scope = { dirty, ctx };\\n\\t\\t\\t}\\n\\n\\t\\t\\tcomponentwrapper.$set(componentwrapper_changes);\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(componentwrapper.$$.fragment, local);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(componentwrapper.$$.fragment, local);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_component(componentwrapper, detaching);\\n\\t\\t}\\n\\t};\\n}\\n\\n// (28:1) <OutterWraper>\\nfunction create_default_slot(ctx) {\\n\\tlet each_1_anchor;\\n\\tlet current;\\n\\tlet each_value = [...Object.entries(/*params*/ ctx[0])];\\n\\tlet each_blocks = [];\\n\\n\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\\n\\t}\\n\\n\\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\\n\\t\\teach_blocks[i] = null;\\n\\t});\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t}\\n\\n\\t\\t\\teach_1_anchor = empty();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\teach_blocks[i].m(target, anchor);\\n\\t\\t\\t}\\n\\n\\t\\t\\tinsert(target, each_1_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, dirty) {\\n\\t\\t\\tif (dirty & /*ComponentMounter, Object, params, dispatch, canonicalize, update, JSON*/ 15) {\\n\\t\\t\\t\\teach_value = [...Object.entries(/*params*/ ctx[0])];\\n\\t\\t\\t\\tlet i;\\n\\n\\t\\t\\t\\tfor (i = 0; i < each_value.length; i += 1) {\\n\\t\\t\\t\\t\\tconst child_ctx = get_each_context(ctx, each_value, i);\\n\\n\\t\\t\\t\\t\\tif (each_blocks[i]) {\\n\\t\\t\\t\\t\\t\\teach_blocks[i].p(child_ctx, dirty);\\n\\t\\t\\t\\t\\t\\ttransition_in(each_blocks[i], 1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\teach_blocks[i] = create_each_block(child_ctx);\\n\\t\\t\\t\\t\\t\\teach_blocks[i].c();\\n\\t\\t\\t\\t\\t\\ttransition_in(each_blocks[i], 1);\\n\\t\\t\\t\\t\\t\\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\t\\tout(i);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\n\\t\\t\\tfor (let i = 0; i < each_value.length; i += 1) {\\n\\t\\t\\t\\ttransition_in(each_blocks[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\teach_blocks = each_blocks.filter(Boolean);\\n\\n\\t\\t\\tfor (let i = 0; i < each_blocks.length; i += 1) {\\n\\t\\t\\t\\ttransition_out(each_blocks[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tdestroy_each(each_blocks, detaching);\\n\\t\\t\\tif (detaching) detach(each_1_anchor);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction create_fragment$1(ctx) {\\n\\tlet show_if = /*ComponentMounter*/ ctx[1] && /*params*/ ctx[0] && Object.entries(/*params*/ ctx[0]).length > 0;\\n\\tlet if_block_anchor;\\n\\tlet current;\\n\\tlet if_block = show_if && create_if_block(ctx);\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\tif (if_block) if_block.c();\\n\\t\\t\\tif_block_anchor = empty();\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\tif (if_block) if_block.m(target, anchor);\\n\\t\\t\\tinsert(target, if_block_anchor, anchor);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*ComponentMounter, params*/ 3) show_if = /*ComponentMounter*/ ctx[1] && /*params*/ ctx[0] && Object.entries(/*params*/ ctx[0]).length > 0;\\n\\n\\t\\t\\tif (show_if) {\\n\\t\\t\\t\\tif (if_block) {\\n\\t\\t\\t\\t\\tif_block.p(ctx, dirty);\\n\\n\\t\\t\\t\\t\\tif (dirty & /*ComponentMounter, params*/ 3) {\\n\\t\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif_block = create_if_block(ctx);\\n\\t\\t\\t\\t\\tif_block.c();\\n\\t\\t\\t\\t\\ttransition_in(if_block, 1);\\n\\t\\t\\t\\t\\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (if_block) {\\n\\t\\t\\t\\tgroup_outros();\\n\\n\\t\\t\\t\\ttransition_out(if_block, 1, 1, () => {\\n\\t\\t\\t\\t\\tif_block = null;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tcheck_outros();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ti(local) {\\n\\t\\t\\tif (current) return;\\n\\t\\t\\ttransition_in(if_block);\\n\\t\\t\\tcurrent = true;\\n\\t\\t},\\n\\t\\to(local) {\\n\\t\\t\\ttransition_out(if_block);\\n\\t\\t\\tcurrent = false;\\n\\t\\t},\\n\\t\\td(detaching) {\\n\\t\\t\\tif (if_block) if_block.d(detaching);\\n\\t\\t\\tif (detaching) detach(if_block_anchor);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance$1($$self, $$props, $$invalidate) {\\n\\tlet { params } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet ComponentMounter;\\n\\n\\tonMount(async () => {\\n\\t\\t// not SSR compatible\\n\\t\\t$$invalidate(1, ComponentMounter = (await Promise.resolve().then(function () { return ComponentMounter$1; })).default);\\n\\t});\\n\\n\\t// sends update for each individual tag as they change\\n\\tfunction update({ tag, value }) {\\n\\t\\t$$invalidate(0, params[tag] = Object.assign({}, params[tag], { ...value }), params);\\n\\n\\t\\t// dispatch update for this tag\\n\\t\\tdispatch('change', { tag, props: { ...params[tag] } });\\n\\t}\\n\\n\\tconst change_handler = (props, tag, esModule, e) => {\\n\\t\\t// loading contacts?\\n\\t\\tif (e.detail.contacts) dispatch('change', { contacts: e.detail.contacts });\\n\\n\\t\\t// cleanse and compare\\n\\t\\tcanonicalize(e.detail) != canonicalize(props) && update({\\n\\t\\t\\ttag,\\n\\t\\t\\tvalue: {\\n\\t\\t\\t\\tesModule,\\n\\t\\t\\t\\tprops: JSON.parse(canonicalize(e.detail))\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('params' in $$props) $$invalidate(0, params = $$props.params);\\n\\t};\\n\\n\\treturn [params, ComponentMounter, dispatch, update, change_handler];\\n}\\n\\nclass TagManager extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { params: 0 });\\n\\t}\\n\\n\\tget params() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset params(params) {\\n\\t\\tthis.$$set({ params });\\n\\t\\tflush();\\n\\t}\\n}\\n\\n/* src\\\\lib\\\\components\\\\@peerpiper\\\\ComponentMounter.svelte generated by Svelte v3.48.0 */\\n\\nfunction create_fragment(ctx) {\\n\\tlet html_tag;\\n\\tlet html_anchor;\\n\\tlet t;\\n\\tlet div;\\n\\n\\treturn {\\n\\t\\tc() {\\n\\t\\t\\thtml_tag = new HtmlTag(false);\\n\\t\\t\\thtml_anchor = empty();\\n\\t\\t\\tt = space();\\n\\t\\t\\tdiv = element(\\\"div\\\");\\n\\t\\t\\thtml_tag.a = html_anchor;\\n\\t\\t},\\n\\t\\tm(target, anchor) {\\n\\t\\t\\thtml_tag.m(/*css*/ ctx[0], document.head);\\n\\t\\t\\tappend(document.head, html_anchor);\\n\\t\\t\\tinsert(target, t, anchor);\\n\\t\\t\\tinsert(target, div, anchor);\\n\\t\\t\\t/*div_binding*/ ctx[6](div);\\n\\t\\t},\\n\\t\\tp(ctx, [dirty]) {\\n\\t\\t\\tif (dirty & /*css*/ 1) html_tag.p(/*css*/ ctx[0]);\\n\\t\\t},\\n\\t\\ti: noop,\\n\\t\\to: noop,\\n\\t\\td(detaching) {\\n\\t\\t\\tdetach(html_anchor);\\n\\t\\t\\tif (detaching) html_tag.d();\\n\\t\\t\\tif (detaching) detach(t);\\n\\t\\t\\tif (detaching) detach(div);\\n\\t\\t\\t/*div_binding*/ ctx[6](null);\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction instance($$self, $$props, $$invalidate) {\\n\\tlet { esModule } = $$props;\\n\\tlet { props } = $$props;\\n\\tlet { css } = $$props;\\n\\tconst dispatch = createEventDispatcher();\\n\\tlet component; // the esModule component to be mounted in this gateway\\n\\tlet url;\\n\\tlet target; // where we mount this component\\n\\tlet mounted;\\n\\n\\tasync function loadEsModuleComponent() {\\n\\t\\t$$invalidate(0, css = css ? `<style>${css}<\\\\/style>` : '');\\n\\n\\t\\t// cleanup from prior loads\\n\\t\\tif (component) {\\n\\t\\t\\tcomponent.$destroy();\\n\\t\\t\\tURL.revokeObjectURL(url); // memory management\\n\\t\\t}\\n\\n\\t\\tconst blob = new Blob([esModule], { type: 'text/javascript' });\\n\\t\\turl = URL.createObjectURL(blob);\\n\\n\\t\\tconst App = (await import(/* @vite-ignore */\\n\\t\\turl)).default;\\n\\n\\t\\tif (!App || !target) return;\\n\\t\\t$$invalidate(1, target.innerHTML = '', target);\\n\\t\\t$$invalidate(4, component = new App({ target, props: {} }));\\n\\n\\t\\t// get the default values of component for each of the keys of component.$$.props\\n\\t\\t// this way the parent component can deduce the schema of the data\\n\\t\\tconst initProps = component['$$'].props;\\n\\n\\t\\tlet inits = {};\\n\\n\\t\\tObject.keys(initProps).map(k => {\\n\\t\\t\\tinits[k] = component[k]; // load default initial props\\n\\t\\t});\\n\\n\\t\\tlet allProps = Object.assign(inits, props);\\n\\t\\tdispatch('change', allProps); // trigger \\\"rendered\\\" in Gateway, plus push any default values to the db to save\\n\\n\\t\\t// on change, Pass props message up to iframe parent so it can be saved/updated\\n\\t\\tcomponent.$on('change', event => {\\n\\t\\t\\tdispatch('change', event.detail);\\n\\t\\t});\\n\\n\\t\\tsetProps(allProps); // set them after we emit the defaults back to the user to save/display\\n\\t} // if (url) URL.revokeObjectURL(url); // memory management\\n\\n\\tfunction setProps(props) {\\n\\t\\tif (!component) return;\\n\\t\\tcomponent.$set({ ...props });\\n\\t}\\n\\n\\tonMount(() => {\\n\\t\\t$$invalidate(5, mounted = true);\\n\\t});\\n\\n\\tonDestroy(() => {\\n\\t\\tif (component) component.$destroy();\\n\\t\\tif (url) URL.revokeObjectURL(url); // memory management\\n\\t});\\n\\n\\tfunction div_binding($$value) {\\n\\t\\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\\n\\t\\t\\ttarget = $$value;\\n\\t\\t\\t$$invalidate(1, target);\\n\\t\\t});\\n\\t}\\n\\n\\t$$self.$$set = $$props => {\\n\\t\\tif ('esModule' in $$props) $$invalidate(2, esModule = $$props.esModule);\\n\\t\\tif ('props' in $$props) $$invalidate(3, props = $$props.props);\\n\\t\\tif ('css' in $$props) $$invalidate(0, css = $$props.css);\\n\\t};\\n\\n\\t$$self.$$.update = () => {\\n\\t\\tif ($$self.$$.dirty & /*mounted, esModule*/ 36) {\\n\\t\\t\\tif (mounted && esModule) loadEsModuleComponent();\\n\\t\\t}\\n\\n\\t\\tif ($$self.$$.dirty & /*component, props*/ 24) {\\n\\t\\t\\tif (component && props) setProps();\\n\\t\\t}\\n\\t};\\n\\n\\treturn [css, target, esModule, props, component, mounted, div_binding];\\n}\\n\\nclass ComponentMounter extends SvelteComponent {\\n\\tconstructor(options) {\\n\\t\\tsuper();\\n\\t\\tinit(this, options, instance, create_fragment, safe_not_equal, { esModule: 2, props: 3, css: 0 });\\n\\t}\\n\\n\\tget esModule() {\\n\\t\\treturn this.$$.ctx[2];\\n\\t}\\n\\n\\tset esModule(esModule) {\\n\\t\\tthis.$$set({ esModule });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget props() {\\n\\t\\treturn this.$$.ctx[3];\\n\\t}\\n\\n\\tset props(props) {\\n\\t\\tthis.$$set({ props });\\n\\t\\tflush();\\n\\t}\\n\\n\\tget css() {\\n\\t\\treturn this.$$.ctx[0];\\n\\t}\\n\\n\\tset css(css) {\\n\\t\\tthis.$$set({ css });\\n\\t\\tflush();\\n\\t}\\n}\\n\\nvar ComponentMounter$1 = /*#__PURE__*/Object.freeze({\\n    __proto__: null,\\n    'default': ComponentMounter\\n});\\n\\nexport { TagManager as default };\\n\"","<script>\r\n\timport PiperNet from './templates/Hypns/PiperNet.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let openHypns;\r\n\r\n\tlet contacts;\r\n\tfunction handleLoadContacts(e) {\r\n\t\t// get props fron e.detail, iterate through each contact, and update the contact's props\r\n\t\tcontacts = e.detail\r\n\t\t\t.map((contact) => {\r\n\t\t\t\tconst vpk = validatePubKey(contact.pubkey);\r\n\t\t\t\tif (!vpk) return null;\r\n\r\n\t\t\t\treturn { pubkey: vpk, handle: contact.handle };\r\n\t\t\t})\r\n\t\t\t.filter((contact) => contact);\r\n\r\n\t\tconsole.log('Piper Manager handleLoadContacts', contacts);\r\n\t}\r\n</script>\r\n\r\n{#if contacts}\r\n\t{#each contacts as contact}\r\n\t\t<div class=\"block\">\r\n\t\t\t<PiperNet pubkey={contact.pubkey} handle={contact.handle} {openHypns} />\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n\r\n<slot {handleLoadContacts} />\r\n","<script>\r\n\timport { Gateway, FetchComponent } from '@douganderson444/svelte-component-gateway';\r\n\timport Proxcryptor from './Proxcryptor.svelte';\r\n\timport IPFSManager from './IPFSManager.svelte';\r\n\r\n\timport { Peerpiper } from '@peerpiper/awesome-peerpiper-components';\r\n\timport TagManager from '../../../awesome-peerpiper-components/compiled/@peerpiper/TagManager.svelte.js?raw';\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport HypnsManager from './HypnsManager.svelte';\r\n\timport PiperNetManager from './PiperNetManager.svelte';\r\n\r\n\texport let wallet = null; // possible the user has their own wallet?\r\n\r\n\t//props\r\n\tlet Web3WalletMenu;\r\n\tlet rootCID;\r\n\tlet openHypns;\r\n\tlet handleLoadContacts;\r\n\r\n\t// Option A, get compoennts from url\r\n\tlet url =\r\n\t\t'https://raw.githubusercontent.com/PeerPiper/awesome-peerpiper-components/master/compiled/@peerpiper/ContactCard.svelte.js';\r\n\r\n\t// Option B, get component from library\r\n\t// let component = '../../';\r\n\r\n\tlet start = Date.now();\r\n\r\n\tonMount(async () => {\r\n\t\tif (!wallet) {\r\n\t\t\t// @ts-ignore\r\n\t\t\t({ Web3WalletMenu } = await import('@peerpiper/svelte-web3-wallet-connector'));\r\n\t\t}\r\n\t});\r\n\r\n\tfunction refresh() {\r\n\t\tglobalThis.ipfsNode.stop();\r\n\t\tglobalThis.ipfsNode = null;\r\n\t\tglobalThis.location.reload();\r\n\t\treturn 'Reloading page...';\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\" />\r\n</svelte:head>\r\n<!-- First, you need a wallet -->\r\n{#if Web3WalletMenu}\r\n\t<svelte:component this={Web3WalletMenu} bind:wallet />\r\n{/if}\r\n\r\n<!-- HypnsManager for YOUR details...  -->\r\n<!-- When there is data saved to ILPD, why not save it to PipeNet?  -->\r\n\r\n<div class=\"m-2 p-2 border bg-slate-400 rounded text-slate-300\">\r\n\t<HypnsManager {wallet} {rootCID} bind:openHypns />\r\n</div>\r\n\r\n<!-- PiperNetManager for your CONTACTS details -->\r\n<!-- listens for updates in contacts, then listens for updates on PiperNet  -->\r\n<PiperNetManager let:handleLoadContacts {openHypns}>\r\n\t<!-- IPFS Manager will only load the slot content once it's a had a chance to load the rootCID, if any  -->\r\n\t<!-- IPFS Manager passes both ipfs and rootCID back to this component once intiialized -->\r\n\t<!-- IPFS Manager will also pass the preferred tag to load up (current defaults to first entry in rootCID object) -->\r\n\t<IPFSManager let:ipfsNode bind:rootCID let:tagNodes>\r\n\t\t<!-- <DataDisplay {ipfsNode} {rootCID} /> -->\r\n\t\t<!-- Fetch gets the component from the interwebs and passes it back up here through let:component  -->\r\n\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t<!-- <FetchComponent {url} let:component> -->\r\n\t\t{!ipfsNode ? refresh() : ''}\r\n\t\t{!wallet ? 'Connect to PeerPiper Wallet' : ''}\r\n\r\n\t\t<!-- // TODO: Refresh the component when the rootCID changes  -->\r\n\t\t<div class=\"flex flex-1\">\r\n\t\t\t{#if ipfsNode && wallet}\r\n\t\t\t\t<!-- on:change bubbles the emited 'change' event to the parent component, if bind:props isn't avail -->\r\n\t\t\t\t<!-- <Proxcryptor\r\n\t\t\t\t\tproxcryptor={wallet?.proxcryptor}\r\n\t\t\t\t\ttag={'Contacts'}\r\n\t\t\t\t\t{ipfsNode}\r\n\t\t\t\t\t{rootCID}\r\n\t\t\t\t\tlet:props\r\n\t\t\t\t\tlet:handleChange\r\n\t\t\t\t\ton:rootCID={(e) => (rootCID = e.detail)}>\r\n\t\t\t\t-->\r\n\r\n\t\t\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t\t\t<!-- <PeerContacts {props} on:change={handleChange} /> -->\r\n\t\t\t\t<!-- </Proxcryptor> -->\r\n\t\t\t\t{#if TagManager}\r\n\t\t\t\t\t<Proxcryptor\r\n\t\t\t\t\t\tproxcryptor={wallet?.proxcryptor}\r\n\t\t\t\t\t\t{ipfsNode}\r\n\t\t\t\t\t\t{rootCID}\r\n\t\t\t\t\t\tlet:decryptTagNode\r\n\t\t\t\t\t\tlet:handleTagChange\r\n\t\t\t\t\t\ton:rootCID={(e) => (rootCID = e.detail)}\r\n\t\t\t\t\t\ton:loadContacts={handleLoadContacts}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<!-- Publishing our latest rootCID to a public Key -->\r\n\t\t\t\t\t\t<!-- Getting the latest rootCID for Contacts... -->\r\n\t\t\t\t\t\t<Peerpiper.TagConfig {tagNodes} {decryptTagNode} let:params>\r\n\t\t\t\t\t\t\t<!-- TODO: Get the component from the decrypted rootCID object  -->\r\n\t\t\t\t\t\t\t<Gateway esModule={TagManager} props={{ params }} on:change={handleTagChange} />\r\n\t\t\t\t\t\t</Peerpiper.TagConfig>\r\n\t\t\t\t\t</Proxcryptor>\r\n\t\t\t\t{/if}\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<!-- </FetchComponent> -->\r\n\t</IPFSManager>\r\n</PiperNetManager>\r\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\n\timport App from '$lib/App.svelte';\n\timport Demo from '$lib/Demo.svelte';\n\n\tonMount(async () => {});\n</script>\n\n<!-- <App /> -->\n\n<Demo />\n"],"file":"pages/index.svelte-217df75d.js"}