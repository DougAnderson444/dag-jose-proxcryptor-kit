{"version":3,"file":"stores-bdc5e892.js","sources":["../../../../../runtime/app/stores.js"],"sourcesContent":["import { getContext } from 'svelte';\nimport { browser } from './env.js';\nimport '../env.js';\n\n// TODO remove this (for 1.0? after 1.0?)\nlet warned = false;\nfunction stores() {\n\tif (!warned) {\n\t\tconsole.error('stores() is deprecated; use getStores() instead');\n\t\twarned = true;\n\t}\n\treturn getStores();\n}\n\n/**\n * @type {import('$app/stores').getStores}\n */\nconst getStores = () => {\n\tconst stores = getContext('__svelte__');\n\n\treturn {\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t// TODO remove this (for 1.0? after 1.0?)\n\t\t// @ts-expect-error - deprecated, not part of type definitions, but still callable\n\t\tget preloading() {\n\t\t\tconsole.error('stores.preloading is deprecated; use stores.navigating instead');\n\t\t\treturn {\n\t\t\t\tsubscribe: stores.navigating.subscribe\n\t\t\t};\n\t\t},\n\t\tsession: stores.session,\n\t\tupdated: stores.updated\n\t};\n};\n\n/** @type {typeof import('$app/stores').page} */\nconst page = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @type {typeof import('$app/stores').navigating} */\nconst navigating = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @param {string} verb */\nconst throw_error = (verb) => {\n\tthrow new Error(\n\t\tbrowser\n\t\t\t? `Cannot ${verb} session store before subscribing`\n\t\t\t: `Can only ${verb} session store in browser`\n\t);\n};\n\n/** @type {typeof import('$app/stores').session} */\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (browser) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: () => throw_error('set'),\n\tupdate: () => throw_error('update')\n};\n\n/** @type {typeof import('$app/stores').updated} */\nconst updated = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().updated;\n\n\t\tif (browser) {\n\t\t\tupdated.check = store.check;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tcheck: () => throw_error('check')\n};\n\nexport { getStores, navigating, page, session, stores, updated };\n"],"names":[],"mappings":";AAiBA,MAAM,YAAY,MAAM;AACvB,QAAM,SAAS,WAAW,YAAY;AAEtC,SAAO;AAAA,IACN,MAAM;AAAA,MACL,WAAW,OAAO,KAAK;AAAA,IACvB;AAAA,IACD,YAAY;AAAA,MACX,WAAW,OAAO,WAAW;AAAA,IAC7B;AAAA,IAGD,IAAI,aAAa;AAChB,cAAQ,MAAM,gEAAgE;AAC9E,aAAO;AAAA,QACN,WAAW,OAAO,WAAW;AAAA,MACjC;AAAA,IACG;AAAA,IACD,SAAS,OAAO;AAAA,IAChB,SAAS,OAAO;AAAA,EAClB;AACA;AAGK,MAAC,OAAO;AAAA,EAEZ,UAAU,IAAI;AACb,UAAM,QAAQ,UAAW,EAAC;AAC1B,WAAO,MAAM,UAAU,EAAE;AAAA,EACzB;AACF;;"}