{"version":3,"file":"index-65d5a0ec.js","sources":["../../../../../src/lib/templates/Basic/Profile.svelte","../../../../../src/lib/utils/index.js","../../../../../src/lib/templates/Contacts/ContactCard.svelte","../../../../../src/lib/templates/Hypns/PiperNet.svelte","../../../../../src/lib/templates/Contacts/GetTags.svelte","../../../../../src/lib/TagAccess.svelte","../../../../../src/lib/graphics/ShareIcon.svelte","../../../../../src/lib/templates/ShareTagWith.svelte","../../../../../src/lib/stores.js","../../../../../src/lib/Common.svelte","../../../../../src/lib/DAGJose.svelte","../../../../../src/lib/QRCode.svelte","../../../../runtime/app/navigation.js","../../../../../src/lib/graphics/Modal.svelte","../../../../../src/lib/graphics/QRCodeIcon.svelte","../../../../../src/lib/HypnsManager.svelte","../../../../../src/lib/TagValue.svelte","../../../../../src/lib/graphics/scanIcon.svelte","../../../../../src/lib/components/nav/SearchResults.svelte","../../../../../src/lib/components/nav/Search.svelte","../../../../../src/lib/templates/Contacts/ShowContacts.svelte","../../../../../src/lib/templates/Contacts/Contacts.svelte","../../../../../src/lib/components/index.js","../../../../../src/lib/components/ShowRoot.svelte","../../../../../src/lib/App.svelte","../../../../../src/routes/index.svelte"],"sourcesContent":["<script>\r\n\t// Basic template to show how to interact with the proxcryptor Parent component\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\r\n\t// Component props passed in from Parent Component\r\n\t// will also reactively update if updated in parent\r\n\texport let decryptedData;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst tag = 'Profile';\r\n\tlet schema;\r\n\tlet value;\r\n</script>\r\n\r\n<div transition:slide={{ delay: 100, duration: 400, easing: quintOut }}>\r\n\t<h3>{tag}</h3>\r\n\t<slot>\r\n\t\t<textarea bind:value />\r\n\t</slot>\r\n\r\n\t<div class=\"submit\">\r\n\t\t<button\r\n\t\t\ton:click|preventDefault={() => dispatch('handleSubmit', { tag, data: { value, schema } })}\r\n\t\t\t>Post</button\r\n\t\t>\r\n\t</div>\r\n</div>\r\n\r\n{#if decryptedData}\r\n\t{@html JSON.stringify(decryptedData, null, 2)}\r\n{/if}\r\n","import b64 from 'base64-js';\r\nimport bs58 from 'bs58';\r\n\r\nconst ROOT_CID = '__ROOT_CID';\r\nconst PUBLIC_KEY_BYTES = 32;\r\n\r\n// Pre-Init\r\nconst LUT_HEX_4b = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\r\nconst LUT_HEX_8b = new Array(0x100);\r\nfor (let n = 0; n < 0x100; n++) {\r\n\tLUT_HEX_8b[n] = `${LUT_HEX_4b[(n >>> 4) & 0xf]}${LUT_HEX_4b[n & 0xf]}`;\r\n}\r\n// End Pre-Init\r\nexport function bufftoHex(buffer) {\r\n\tlet out = '';\r\n\tfor (let idx = 0, edx = buffer.length; idx < edx; idx++) {\r\n\t\tout += LUT_HEX_8b[buffer[idx]];\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nexport function validatePubKey(pubKey) {\r\n\t// console.log('Validating', { pubKey });\r\n\r\n\tif (!pubKey) return;\r\n\r\n\t// base64 / base64URL\r\n\ttry {\r\n\t\tlet pubKeyBytes = b64.toByteArray(pubKey);\r\n\r\n\t\tif (pubKeyBytes.length === PUBLIC_KEY_BYTES) {\r\n\t\t\treturn pubKeyBytes;\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// console.log('Not base 64');\r\n\t}\r\n\r\n\t// base58 / base58BTC\r\n\ttry {\r\n\t\tlet b58Bytes = bs58.decode(pubKey);\r\n\t\t// console.log({ b58Bytes });\r\n\r\n\t\tif (b58Bytes.length === PUBLIC_KEY_BYTES) {\r\n\t\t\treturn b58Bytes;\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// console.log('Not base 58');\r\n\t}\r\n\r\n\t// hex\r\n\tconst fromHexString = (hexString) =>\r\n\t\tnew Uint8Array(hexString.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\r\n\tlet hexb58Bytes = fromHexString(pubKey);\r\n\r\n\tif (hexb58Bytes.length === PUBLIC_KEY_BYTES) {\r\n\t\treturn hexb58Bytes;\r\n\t}\r\n\r\n\tconsole.warn('Not any supported encodings :( ');\r\n\r\n\treturn false;\r\n}\r\n\r\nexport async function hexDigestMessage(message) {\r\n\tconst msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\r\n\tconst hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\r\n\tconst hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\r\n\tconst hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\r\n\treturn hashHex;\r\n}\r\n","<article class=\"contact-card\">\r\n\t<h2>\r\n\t\t<slot name=\"handle\">\r\n\t\t\t<span class=\"missing\">Unknown handle</span>\r\n\t\t</slot>\r\n\t</h2>\r\n\r\n\t<div class=\"address\">\r\n\t\t<slot name=\"publicKey\">\r\n\t\t\t<span class=\"missing\">Unknown publicKey</span>\r\n\t\t</slot>\r\n\t</div>\r\n\r\n\t<div class=\"email\">\r\n\t\t<slot name=\"latest\">\r\n\t\t\t<span class=\"missing\">Unknown latest value</span>\r\n\t\t</slot>\r\n\t</div>\r\n</article>\r\n\r\n<style>\r\n\t.contact-card {\r\n\t\tmin-width: 300px;\r\n\t\tborder: 1px solid #aaa;\r\n\t\tborder-radius: 2px;\r\n\t\tbox-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 1em;\r\n\t\tbackground: lemonchiffon;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0 0 0.2em 0;\r\n\t\tmargin: 0 0 1em 0;\r\n\t\tborder-bottom: 1px solid #008000;\r\n\t}\r\n\r\n\t.address,\r\n\t.email {\r\n\t\tpadding: 0 0 0 1.5em;\r\n\t\tbackground: 0 0 no-repeat;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tmargin: 0 0 0.5em 0;\r\n\t\tline-height: 1.2;\r\n\t}\r\n\r\n\t/* .address {\r\n\t\tbackground-image: url(/tutorial/icons/map-marker.svg);\r\n\t}\r\n\t.email {\r\n\t\tbackground-image: url(/tutorial/icons/email.svg);\r\n\t} */\r\n\t.missing {\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// open a Hypns instance for this public key and show the latest\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport { bufftoHex } from '../../utils/index';\r\n\r\n\texport let pubKey;\r\n\texport let openHypns;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet latestHypns;\r\n\r\n\tlet hypnsInstance;\r\n\tlet instanceReady;\r\n\r\n\t$: if (!!pubKey && openHypns) handleOpen(pubKey);\r\n\r\n\tasync function handleOpen(pubKey) {\r\n\t\tlet publicKeyHex = bufftoHex(pubKey);\r\n\r\n\t\t// should update you whenever the other guy publishes an updated value\r\n\t\tconst onUpdate = (val) => {\r\n\t\t\tconsole.log('Update from ', { hypnsInstance });\r\n\t\t\tlatestHypns = val.ipld;\r\n\t\t};\r\n\r\n\t\tconst onMessage = (msg) => {\r\n\t\t\tdispatch('newContact', msg);\r\n\t\t};\r\n\r\n\t\thypnsInstance = await openHypns({ pubKeyHex: publicKeyHex, onUpdate, onMessage });\r\n\t\tlatestHypns = hypnsInstance.latest; // intialize\r\n\t}\r\n</script>\r\n\r\n{#if !hypnsInstance}\r\n\tLoading hypnsInstance...\r\n{:else}\r\n\t{#await hypnsInstance}\r\n\t\tGetting instance ready...\r\n\t{:then}\r\n\t\t<h3>✔️ Connected to PiperNet</h3>\r\n\t\t{#if latestHypns}\r\n\t\t\t✔️ Lastest Saved Root: {latestHypns}\r\n\t\t\t<slot {latestHypns} />\r\n\t\t{:else}\r\n\t\t\t⚠️ No latest value available.\r\n\t\t{/if}\r\n\t{:catch error}\r\n\t\tProblem connecting to Pipernet\r\n\t{/await}\r\n{/if}\r\n","<script>\r\n\texport let rootCID;\r\n\texport let getTagNodes;\r\n\r\n\tlet tagNodes;\r\n\r\n\t$: rootCID && processRootCID();\r\n\r\n\tasync function processRootCID() {\r\n\t\ttagNodes = await getTagNodes(rootCID);\r\n\t}\r\n</script>\r\n\r\n{#if tagNodes}\r\n\t{#await tagNodes}\r\n\t\tLoading tags\r\n\t{:then tagNodes}\r\n\t\t{#each tagNodes as tagNode}\r\n\t\t\t<slot {tagNode} />\r\n\t\t{/each}\r\n\t{/await}\r\n{/if}\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let tag;\r\n\texport let pubKey;\r\n\texport let checkAccess;\r\n\r\n\tlet accessCode;\r\n\tlet checked;\r\n\r\n\t$: if (!!tag && !!pubKey) doCheck();\r\n\r\n\tasync function doCheck() {\r\n\t\tconsole.log(`Checking access to ${tag} for `, { pubKey });\r\n\t\taccessCode = await checkAccess(tag, pubKey);\r\n\t\tchecked = true;\r\n\t}\r\n\r\n\tonMount(async () => {});\r\n</script>\r\n\r\n<div>\r\n\t{#if checked && accessCode}\r\n\t\t✔️ You have has access to their {tag}\r\n\t{:else}\r\n\t\t✖️ You have no access to {tag}\r\n\t{/if}\r\n</div>\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" viewBox=\"0 0 477.8 477.8\"\r\n\t><path\r\n\t\td=\"M367.75 288.5c-25 0-47.8 9.7-64.7 25.5l-65.2-39.4c3.7-11.2 5.7-23.1 5.7-35.6 0-12.4-2-24.4-5.7-35.6l65.3-39.5c16.9 15.8 39.7 25.5 64.7 25.5 52.3 0 94.7-42.4 94.7-94.7S420.15 0 367.85 0s-94.7 42.4-94.7 94.7c0 8.7 1.2 17.2 3.4 25.2l-65.3 39.5c-20.7-21.3-49.8-34.6-81.9-34.6-63 0-114.1 51.1-114.1 114.1S66.35 353 129.35 353c32.1 0 61.1-13.3 81.9-34.6l65.3 39.5c-2.2 8-3.4 16.5-3.4 25.2 0 52.3 42.4 94.7 94.7 94.7s94.7-42.4 94.7-94.7-42.5-94.6-94.8-94.6zM92.15 239c0 9.4-7.6 17-17 17s-17-7.6-17-17c0-39.3 32-71.3 71.3-71.3 9.4 0 17 7.6 17 17s-7.6 17-17 17c-20.6.1-37.3 16.8-37.3 37.3z\"\r\n\t/></svg\r\n>\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: 1em;\r\n\t\theight: auto;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport '$lib/search.css';\r\n\timport ShareIcon from '$lib/graphics/ShareIcon.svelte';\r\n\r\n\t//pass in props about what is being shared\r\n\texport let tag;\r\n\texport let setAccess;\r\n\texport let contacts;\r\n\r\n\t// export let contacts = []; // a @handle: pubkey mapping\r\n\r\n\tlet target;\r\n\tlet value;\r\n\tlet promiseToAllow;\r\n\tlet shared;\r\n\r\n\t$: if (value && contacts && contacts.length) {\r\n\t\tconsole.log({ contacts });\r\n\t\tlet match = contacts?.find((contact) => contact.handle === value);\r\n\t\ttarget = match || null;\r\n\t}\r\n\tfunction handleGrantAccess(_event) {\r\n\t\t// take value and add to this tag's reKey list\r\n\t\tpromiseToAllow = setAccess(tag, target.pubKey);\r\n\t}\r\n</script>\r\n\r\n<div>\r\n\t<div class=\"share\">\r\n\t\t<div class=\"share-item\">\r\n\t\t\t<ShareIcon />\r\n\t\t</div>\r\n\r\n\t\t<input class=\"share-item\" bind:value placeholder=\"Share {tag} with:\" />\r\n\t</div>\r\n\t<div>\r\n\t\t{#if target}\r\n\t\t\t✔️ Matched {target.handle} <button on:click={handleGrantAccess}>Grant Access</button>\r\n\t\t{:else if value}\r\n\t\t\t✖️ No matches for {value}\r\n\t\t{/if}\r\n\t</div>\r\n\r\n\t{#if promiseToAllow}\r\n\t\t{#await promiseToAllow}\r\n\t\t\tGranting access...\r\n\t\t{:then _}\r\n\t\t\tAccess Granted to {value}\r\n\t\t{/await}\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.share {\r\n\t\tpadding: 1em 0;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t}\r\n\t.share-item {\r\n\t\tmargin: 0.5em;\r\n\t}\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n","import { writable } from 'svelte/store';\r\n\r\nexport const rootCID = writable(null);\r\nexport const ipfsNode = writable(null);\r\nexport const CID = writable(null);\r\n\r\nexport const contacts = writable([]);\r\n","<script>\r\n\timport ShareTagWith from '$lib/templates/ShareTagWith.svelte';\r\n\timport { contacts } from '$lib/stores';\r\n\r\n\texport let getTagNode;\r\n\texport let decrypt;\r\n\texport let tag;\r\n\texport let rootCID;\r\n\texport let setAccess;\r\n\r\n\tlet tagNode;\r\n\tlet decryptedData = [];\r\n\tlet currentRoodCID;\r\n\tlet ready;\r\n\r\n\t// refresh on changes in tag or rootCID\r\n\t$: if (tag && rootCID && currentRoodCID !== rootCID) refreshedRootCID(); // trigger refresh whenever rootCID changes\r\n\r\n\texport async function refreshedRootCID() {\r\n\t\tconsole.log({ tag });\r\n\t\tready = false;\r\n\t\tcurrentRoodCID = rootCID;\r\n\t\ttagNode = await getTagNode(tag);\r\n\t\tconsole.log(tag, { tagNode });\r\n\t\tif (tagNode && tagNode.hasOwnProperty('encryptedData')) decryptedData = await decrypt(tagNode);\r\n\t\tready = true;\r\n\t}\r\n</script>\r\n\r\n{#if ready && tagNode && decryptedData}\r\n\t{#await decryptedData}\r\n\t\tDecrypting...\r\n\t{:then decryptedData}\r\n\t\t<!-- TODO: if no contacts, redirect to Contacts component so they can be decrypted  -->\r\n\t\t<ShareTagWith {tag} {setAccess} contacts={$contacts} />\r\n\r\n\t\t<slot {decryptedData} {refreshedRootCID} />\r\n\t{/await}\r\n{:else}\r\n\t<!-- No existing {tag} data yet: just show data entry portion, no data display (there's nothing to display yet) -->\r\n\t<slot decryptedData={null} {refreshedRootCID} />\r\n{/if}\r\n","<script lang=\"ts\">\r\n\t/*\r\n\tAll this component does is connect IPLD + proxcryptor + Saving Component Template so they can work together\r\n\t*/\r\n\timport { onMount, setContext } from 'svelte';\r\n\timport Basic from './templates/Basic/Profile.svelte';\r\n\timport Contacts from './templates/Contacts/_Contacts.svelte';\r\n\r\n\timport Common from './Common.svelte';\r\n\r\n\texport let rootCID;\r\n\texport let proxcryptor; // pass in a proxy re-encryptor prop\r\n\texport let ipfsNode; // pass in an instance of ipfs\r\n\texport let CID; // pass in https://github.com/multiformats/js-multiformats#interfaces\r\n\texport let tag;\r\n\r\n\tconst ROOT_CID = '__ROOT_CID__'; // Database key\r\n\r\n\tlet loaded = false;\r\n\r\n\t// functions\r\n\tlet handleRootCIDUpdate;\r\n\tlet loadRootCID;\r\n\r\n\tlet joseCryptor;\r\n\tlet setJoseCryptor;\r\n\tlet decryptFromTagNode;\r\n\r\n\tlet setAccess, checkAccess;\r\n\r\n\tlet getTagNodes;\r\n\r\n\texport let refreshedRootCID;\r\n\r\n\t//  onSubmitted gets bound to, and overwritten by active component\r\n\texport let onSubmitted = () => {}; // optional callback by child component to run after tx submitted\r\n\r\n\tonMount(async () => {\r\n\t\tconst { ImmortalDB } = await import('immortal-db');\r\n\r\n\t\tconst { DagJoseCryptor } = await import('./dagjosecryptor');\r\n\r\n\t\t// parse and use cached root CIDs, if saved\r\n\t\tloadRootCID = async () => {\r\n\t\t\tif (rootCID) return true;\r\n\t\t\tlet res = await ImmortalDB.get(ROOT_CID);\r\n\r\n\t\t\tif (!res) {\r\n\t\t\t\trootCID = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\trootCID = CID.asCID(res) || CID.parse(res);\r\n\t\t\tconsole.log('rootCID set in loadRootCID');\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tawait loadRootCID();\r\n\r\n\t\t// use the portal proxcryptor to encrypt the DAG JOSEs\r\n\t\tsetJoseCryptor = async () => {\r\n\t\t\tjoseCryptor = new DagJoseCryptor(ipfsNode, proxcryptor, rootCID); //refesh when updated\r\n\t\t\tif (!rootCID) loaded = true;\r\n\t\t};\r\n\r\n\t\thandleRootCIDUpdate = async () => {\r\n\t\t\trootCID = joseCryptor.rootCID;\r\n\t\t\tconsole.log('Updating rootCID', { rootCID: rootCID.toString() });\r\n\t\t\tImmortalDB.set(ROOT_CID, rootCID.toString());\r\n\t\t\tloaded = true;\r\n\t\t};\r\n\t});\r\n\r\n\t// set the cryptor once the proxcryptor is connected and available\r\n\t$: if (proxcryptor && setJoseCryptor) setJoseCryptor();\r\n\r\n\t// update the rootCID as req'd\r\n\t$: if (joseCryptor && joseCryptor.rootCID && handleRootCIDUpdate) handleRootCIDUpdate();\r\n\r\n\tlet decrypt = async (data) => await joseCryptor.selfDecrypt(data);\r\n\r\n\tconst handleSubmit = async function (event) {\r\n\t\tlet tag = event.detail.tag || null;\r\n\t\tlet schema = event.detail.data.schema || '';\r\n\t\tlet value = event.detail.data.value || null;\r\n\r\n\t\tif (!tag || !value) return; // TODO: Handle missing vals better\r\n\r\n\t\tconsole.log('Put: ', { tag, value });\r\n\r\n\t\tawait joseCryptor.put(value, tag, schema);\r\n\t\tjoseCryptor = joseCryptor; // refresh UI?\r\n\r\n\t\tonSubmitted(); // update selected component\r\n\t\trefreshedRootCID();\r\n\t};\r\n\r\n\t// save access function to a svelte store so it can be used by any component, any time\r\n\t// allows access to tag by someone's PublicKey\r\n\tsetAccess = async (tag: string, targetPublicKey: Uint8Array) => {\r\n\t\t// allow access to this tag by this public key\r\n\t\tawait joseCryptor.setTagReKeys(tag, targetPublicKey);\r\n\t\tjoseCryptor = joseCryptor; // triggers this.rootCID to fire\r\n\t};\r\n\r\n\tcheckAccess = async (tag: string, targetPublicKey: Uint8Array) => {\r\n\t\t// pass in someone's pubkey to see if they've got access to this tag data\r\n\t\treturn await joseCryptor.checkAccess(tag, targetPublicKey);\r\n\t};\r\n\r\n\tdecryptFromTagNode = async (tagNode) => {\r\n\t\treturn await joseCryptor.decryptFromTagNode(tagNode);\r\n\t};\r\n\r\n\tgetTagNodes = async () => {\r\n\t\tif (!ipfsNode || !rootCID) return;\r\n\r\n\t\tconst root = await ipfsNode.dag.get(rootCID);\r\n\t\tconst promises = Object.entries(root.value).map(async ([key, val]) => {\r\n\t\t\tif (key === 'prev' || !val) return null;\r\n\t\t\tlet fields = await ipfsNode.dag.get(val);\r\n\t\t\treturn fields.value; // https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/DAG.md#ipfsdaggetcid-options\r\n\t\t});\r\n\r\n\t\tconst result = await Promise.all(promises);\r\n\t\treturn result.filter((r) => r); // filter out null values\r\n\t};\r\n\r\n\tasync function getTagNode(tag, root = rootCID) {\r\n\t\tif (!root || !ipfsNode || !tag) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst cid = (await ipfsNode.dag.get(root, { path: `/${tag}`, localResolve: true })).value;\r\n\t\t\tlet tagNode = (await ipfsNode.dag.get(cid, { localResolve: true })).value;\r\n\t\t\treturn tagNode;\r\n\t\t} catch (error) {\r\n\t\t\t// tag may not exist yet, or maybe the user is typing\r\n\t\t\tconsole.warn(`${tag} no DAG data`);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script>\r\n\t\tglobal = globalThis; // for solana web3 repo\r\n\t</script>\r\n</svelte:head>\r\n\r\n<div class=\"main\">\r\n\t{#if proxcryptor && loaded}\r\n\t\t<div class=\"\">\r\n\t\t\t<slot\r\n\t\t\t\t{handleSubmit}\r\n\t\t\t\t{decrypt}\r\n\t\t\t\t{getTagNodes}\r\n\t\t\t\t{getTagNode}\r\n\t\t\t\t{checkAccess}\r\n\t\t\t\t{setAccess}\r\n\t\t\t\t{decryptFromTagNode}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{:else}\r\n\t\tConnect with the Wallet to save encrypted messages.\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.main {\r\n\t\twidth: 100%;\r\n\t\t/* max-width: var(--column-width); */\r\n\t\tmargin-top: var(--column-margin-top);\r\n\t\tpadding: var(--column-margin-top);\r\n\t\tline-height: 1;\r\n\t\tbackground-color: #e0ede0;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport { fade } from 'svelte/transition';\r\n\timport QRCode from 'qrcode';\r\n\r\n\texport let value;\r\n\r\n\tlet canvas;\r\n\tlet visible = false;\r\n\r\n\tasync function showQR() {\r\n\t\tQRCode.toCanvas(canvas, value); // Draws qr code symbol to canvas.\r\n\t\tvisible = true;\r\n\t}\r\n\r\n\tonMount(() => showQR());\r\n</script>\r\n\r\n<div class=\"wrapper\">\r\n\t<div class=\"qr-slot\">\r\n\t\t<slot>[QR Code]</slot>\r\n\t</div>\r\n\t<canvas hidden={!visible} transition:fade bind:this={canvas} />\r\n</div>\r\n\r\n<style>\r\n\t.wrapper {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex-direction: column;\r\n\t}\r\n\tcanvas {\r\n\t\tborder: 1px solid black;\r\n\t\tz-index: 1;\r\n\t\tmargin: 10% auto;\r\n\t}\r\n\tdiv.qr-slot {\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n","import { renderer, router } from '../client/singletons.js';\nimport { g as get_base_uri } from '../chunks/utils.js';\n\n/**\n * @param {string} name\n */\nfunction guard(name) {\n\treturn () => {\n\t\tthrow new Error(`Cannot call ${name}(...) on the server`);\n\t};\n}\n\nconst disableScrollHandling = import.meta.env.SSR\n\t? guard('disableScrollHandling')\n\t: disableScrollHandling_;\nconst goto = import.meta.env.SSR ? guard('goto') : goto_;\nconst invalidate = import.meta.env.SSR ? guard('invalidate') : invalidate_;\nconst prefetch = import.meta.env.SSR ? guard('prefetch') : prefetch_;\nconst prefetchRoutes = import.meta.env.SSR ? guard('prefetchRoutes') : prefetchRoutes_;\nconst beforeNavigate = import.meta.env.SSR ? () => {} : beforeNavigate_;\nconst afterNavigate = import.meta.env.SSR ? () => {} : afterNavigate_;\n\n/**\n * @type {import('$app/navigation').goto}\n */\nasync function disableScrollHandling_() {\n\trenderer.disable_scroll_handling();\n}\n\n/**\n * @type {import('$app/navigation').goto}\n */\nasync function goto_(href, opts) {\n\treturn router.goto(href, opts, []);\n}\n\n/**\n * @type {import('$app/navigation').invalidate}\n */\nasync function invalidate_(resource) {\n\tconst { href } = new URL(resource, location.href);\n\treturn router.renderer.invalidate(href);\n}\n\n/**\n * @type {import('$app/navigation').prefetch}\n */\nfunction prefetch_(href) {\n\treturn router.prefetch(new URL(href, get_base_uri(document)));\n}\n\n/**\n * @type {import('$app/navigation').prefetchRoutes}\n */\nasync function prefetchRoutes_(pathnames) {\n\tconst matching = pathnames\n\t\t? router.routes.filter((route) => pathnames.some((pathname) => route[0].test(pathname)))\n\t\t: router.routes;\n\n\tconst promises = matching.map((r) => Promise.all(r[1].map((load) => load())));\n\n\tawait Promise.all(promises);\n}\n\n/**\n * @type {import('$app/navigation').beforeNavigate}\n */\nfunction beforeNavigate_(fn) {\n\tif (router) router.before_navigate(fn);\n}\n\n/**\n * @type {import('$app/navigation').afterNavigate}\n */\nfunction afterNavigate_(fn) {\n\tif (router) router.after_navigate(fn);\n}\n\nexport { afterNavigate, beforeNavigate, disableScrollHandling, goto, invalidate, prefetch, prefetchRoutes };\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\texport let modal;\r\n\t$: modal && console.log({ modal });\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\tconst handleClose = () => {\r\n\t\tmodal = false;\r\n\t\tconsole.log('Closing', { modal });\r\n\t\tdispatch('closeModal', null);\r\n\t};\r\n</script>\r\n\r\n<!-- The Modal -->\r\n<div class:modal class:hide={!modal}>\r\n\t<!-- Modal content -->\r\n\t<div class=\"modal-content\">\r\n\t\t<span class=\"close\" on:click={handleClose}>&times;</span>\r\n\t\t<div>\r\n\t\t\t<slot />\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<!-- <svelte:window on:click={handleClose} /> -->\r\n<style>\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n\t/* The Modal (background) */\r\n\t.modal {\r\n\t\tdisplay: block; /* Hidden by default */\r\n\t\tposition: fixed; /* Stay in place */\r\n\t\tz-index: 99999; /* Sit on top */\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%; /* Full width */\r\n\t\theight: 100%; /* Full height */\r\n\t\toverflow: auto; /* Enable scroll if needed */\r\n\t\tbackground-color: rgb(0, 0, 0); /* Fallback color */\r\n\t\tbackground-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\r\n\t}\r\n\r\n\t/* Modal Content/Box */\r\n\t.modal-content {\r\n\t\tbackground-color: #fefefe;\r\n\t\tmargin: 15% auto; /* 15% from the top and centered */\r\n\t\tpadding: 20px;\r\n\t\tborder: 1px solid #888;\r\n\t\twidth: 80%; /* Could be more or less, depending on screen size */\r\n\t}\r\n\r\n\t/* The Close Button */\r\n\t.close {\r\n\t\tcolor: #aaa;\r\n\t\tfloat: right;\r\n\t\tfont-size: 3.5em;\r\n\t\tfont-weight: bold;\r\n\t\tline-height: 0.5;\r\n\t\tpadding: 0.25em;\r\n\t}\r\n\r\n\t.close:hover,\r\n\t.close:focus {\r\n\t\tcolor: black;\r\n\t\ttext-decoration: none;\r\n\t\tcursor: pointer;\r\n\t}\r\n</style>\r\n","<script>\r\n\texport let showQR = false;\r\n</script>\r\n\r\n<div on:click={() => (showQR = true)}>\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"150\" viewBox=\"0 0 39.69 39.69\"\r\n\t\t><path\r\n\t\t\td=\"M19.05 38.56a18.94 18.94 0 0 1-17.03-13.1 18.95 18.95 0 0 1 6.7-20.94A18.92 18.92 0 0 1 34.3 32.07a18.84 18.84 0 0 1-15.25 6.5zm3-.8a18.28 18.28 0 0 0 16.11-16.68A18.23 18.23 0 0 0 18.64 1.53a18.21 18.21 0 0 0-7.02 34.28 18.23 18.23 0 0 0 6.93 2c.6.06 2.91.02 3.5-.05zM9.69 30.6a.97.97 0 0 1-.44-.43c-.07-.14-.08-.3-.08-4.57 0-4.83-.01-4.54.23-4.81.26-.3-.02-.28 4.4-.29h4.23c.7-.02.97.16 1.12.75.05.2.06.74.06 4.35 0 2.81-.02 4.18-.05 4.32-.07.36-.26.62-.5.72-.08.02-1.48.04-4.46.04-4.14 0-4.36 0-4.5-.08zm7.63-5v-3.18h-6.29v6.36h6.29zm4.03 5.01c-.26-.13-.4-.35-.48-.7-.03-.12-.05-1.52-.05-4.44 0-4.23 0-4.27.08-4.45a.83.83 0 0 1 .47-.42c.11-.04.66-.06 2.89-.07H27V24.37h1.96v-1.63c0-.9.01-1.77.03-1.93l.02-.3h.51c.76 0 1.1.13 1.26.48.09.19.1.84.05 3.75l-.03 1.68h-3.09l-3.09-.02v-.72l-.02-.73h-1.93v5.72h-.6c-.48 0-.64-.02-.73-.07zm3.3-.58c-.02-.36-.02-.87 0-1.14l.01-.5h2.08v2.29h-2.08l-.02-.65zm4.04 0v-1.14l.02-.5h2.16v.79c0 .74-.01.8-.1.98-.1.2-.27.38-.47.46-.1.04-.33.06-.86.06h-.73ZM10.07 18.82a1.38 1.38 0 0 1-.7-.27c-.2-.2-.2 0-.2-4.78 0-4.34 0-4.44.08-4.59.1-.19.27-.36.44-.44.12-.06.53-.06 4.53-.06 4.93 0 4.55-.03 4.77.29.22.31.22.3.22 4.82 0 3.62 0 4.16-.06 4.36-.08.32-.2.5-.43.6l-.18.1h-4.11c-2.27 0-4.23-.02-4.36-.03zm7.25-5.07v-3.18h-6.29v6.37h6.29zm4.17 5.07c-.31-.06-.53-.34-.62-.77-.06-.3-.06-8.4 0-8.65.05-.23.16-.45.26-.54.2-.2.04-.18 4.72-.18 4.26 0 4.37 0 4.51.07.2.1.4.35.46.54.03.1.04 1.3.04 4.49v4.33l-.09.2a.88.88 0 0 1-.46.46c-.15.06-.52.07-4.43.07-2.35 0-4.33 0-4.39-.02zm7.48-5.07v-3.18h-3.13l-3.14.02V16.89c.01.04.68.05 3.15.05h3.12z\"\r\n\t\t/><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"1.03\"\r\n\t\t\td=\"M17.43 37.63a18.6 18.6 0 0 1-8.87-3.9 24.2 24.2 0 0 1-3.08-3.23 18.44 18.44 0 0 1-3.43-8.33c-.21-1.43-.14-4.53.13-5.83.84-3.98 2.5-7 5.3-9.72a17.9 17.9 0 0 1 9.04-4.74c1.11-.24 1.32-.25 3.5-.25 2.5 0 3.3.1 5.05.62 3.14.94 5.65 2.47 7.96 4.84a18.16 18.16 0 0 1 4.82 9.18c.28 1.4.35 4.37.13 5.87a17.82 17.82 0 0 1-4.91 10.08 17.96 17.96 0 0 1-10.48 5.41 25.5 25.5 0 0 1-5.16 0zm1.36-7c.08-.04.21-.2.3-.35.12-.25.14-.82.15-4.65 0-3.22-.02-4.43-.1-4.6-.25-.55-.14-.54-4.98-.54-2.8 0-4.5.04-4.6.1-.4.2-.4.31-.44 4.59-.01 2.25 0 4.31.03 4.58.04.34.13.56.28.7l.21.22h4.5c2.48 0 4.57-.03 4.65-.06zm3.96-2.77v-2.82h1.82v1.46h6.24l.06-1.44c.09-2.08.07-3.56-.04-3.96-.12-.45-.5-.62-1.3-.59l-.55.03-.03 1.89-.02 1.88h-1.91V20.5h-2.71c-2.85 0-3.2.05-3.4.4-.14.23-.22 5.88-.12 7.95.06 1.2.08 1.32.3 1.57.2.26.25.27.94.27h.72zm4 1.64v-1.18H25.7c-1.2 0-1.14-.07-1.14 1.18s-.07 1.18 1.14 1.18h1.04zm3.74 1.08c.3-.16.44-.64.44-1.49v-.77H28.66v2.36h.82c.46 0 .9-.04 1.01-.1zM18.95 18.6c.22-.26.23-.31.3-2.34.04-1.14.04-3.18 0-4.53-.05-2.11-.08-2.48-.22-2.72l-.16-.28-4.6-.03c-5.17-.02-4.9-.06-5.08.66-.1.42-.1 8.15 0 8.78.04.35.1.43.37.57.29.14.71.16 4.74.16h4.43l.22-.27zm11.67-.04.31-.31v-4.22c0-2.31-.04-4.4-.08-4.62-.15-.77.12-.73-5.01-.73-4.26 0-4.54.01-4.74.17-.18.15-.21.29-.27 1.11-.1 1.19-.1 5.15-.02 7 .05 1.29.07 1.4.28 1.65l.22.26h9z\"\r\n\t\t/><path d=\"M15.29 25.68V24.5h-1.04c-1.2 0-1.14-.07-1.14 1.18s-.07 1.18 1.14 1.18h1.04z\" /><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\td=\"M22.75 13.78V10.7l.28-.06c.16-.03 1.55-.06 3.1-.06h2.8v6.28h-6.18zM11.1 13.72v-3.14H17.3v6.28h-6.18ZM11.1 25.63V22.5H17.3v6.27h-6.18Z\"\r\n\t\t/><path\r\n\t\t\td=\"M12.83 24.13h2.73v2.73h-2.73zM12.93 12.4h2.73v2.73h-2.73zM24.29 12.31h2.73v2.73h-2.73z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"1.54\"\r\n\t\t\td=\"M17.42 38.36A18.94 18.94 0 0 1 1.33 22.15c-.16-1.2-.18-3.55-.04-4.66.44-3.54 1.89-7 4.04-9.64.59-.71 2.26-2.37 2.98-2.95A19.1 19.1 0 0 1 17.54.99c1.3-.17 3.68-.17 4.95 0 3.7.49 7.33 2.14 9.94 4.52a18.65 18.65 0 0 1 6.41 14.15A18.87 18.87 0 0 1 22.2 38.4c-1.04.13-3.77.1-4.78-.04zm4.35-1.13a17.6 17.6 0 0 0 11.37-5.77 17.3 17.3 0 0 0 4.44-13.34 17.58 17.58 0 0 0-12.02-15.2c-2.03-.68-2.27-.72-5.18-.77-2.5-.04-2.63-.03-3.73.2A17.76 17.76 0 0 0 2.6 16.76c-.11.64-.15 1.4-.16 3 0 1.97.02 2.22.25 3.3.34 1.61.78 2.9 1.51 4.38a15.62 15.62 0 0 0 2.6 3.88 17.22 17.22 0 0 0 7.77 5.11c.68.22 1.58.48 2 .56 1.45.3 3.4.38 5.2.23z\"\r\n\t\t/></svg\r\n\t>\r\n</div>\r\n\r\n{#if showQR}\r\n\t<slot />\r\n{/if}\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: auto;\r\n\t\theight: 4em;\r\n\t\tdisplay: block;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport QRCode from './QRCode.svelte';\r\n\r\n\timport { bufftoHex } from './utils/index';\r\n\timport { goto } from '$app/navigation';\r\n\r\n\timport Modal from '$lib/graphics/Modal.svelte';\r\n\timport QrCodeIcon from '$lib/graphics/QRCodeIcon.svelte';\r\n\r\n\texport let rootCID;\r\n\texport let wallet; // use the same wallet object that the proxcryptor is using, for convenience\r\n\r\n\tlet hypnsNode;\r\n\tlet HyPNSComponent, latestHypns;\r\n\tlet hypnsInstance, publish;\r\n\r\n\tlet myPublicKeyHex;\r\n\tlet connectKeyPhrase = 'letsConnect';\r\n\tlet showQR;\r\n\r\n\tlet opts = {\r\n\t\tpersist: true,\r\n\t\tswarmOpts: {\r\n\t\t\tannounceLocalAddress: true,\r\n\t\t\twsProxy: [\r\n\t\t\t\t// 'ws:localhost:3001/proxy', // try localhost first, checking for local hypns-super-peer\r\n\t\t\t\t// 'wss://hypns-super-peer.douganderson444.repl.co/proxy',\r\n\t\t\t\t// \"wss://super.peerpiper.io:49777\",\r\n\t\t\t\t'wss://hyperswarm.mauve.moe',\r\n\t\t\t\t'wss://geut-webrtc-signal-v3.glitch.me',\r\n\t\t\t\t'wss://geut-webrtc-signal-v3.herokuapp.com'\r\n\t\t\t]\r\n\t\t}\r\n\t};\r\n\r\n\tonMount(async () => {\r\n\t\t// wake up REPL\r\n\t\t// try {\r\n\t\t// \tfetch('https://hypns-super-peer.douganderson444.repl.co', {\r\n\t\t// \t\tmethod: 'POST'\r\n\t\t// \t}).then((response) => console.log('2 ', response));\r\n\t\t// } catch (error) {}\r\n\r\n\t\timport('hypns-svelte-component').then((module) => {\r\n\t\t\tHyPNSComponent = module.default;\r\n\t\t});\r\n\t});\r\n\r\n\t$: wallet && hypnsNode && initHypns();\r\n\r\n\tasync function initHypns() {\r\n\t\t// open a HyPNS feed using the hex encoding of this users Ed25519 key\r\n\t\tconst pk: Uint8Array = await wallet.proxcryptor.getPublicKey();\r\n\t\t// convert to hex for hypercore-protocol\r\n\t\tmyPublicKeyHex = bufftoHex(pk);\r\n\r\n\t\t// take the wallet and pass it into hypns\r\n\t\tconsole.log('Opening ', { myPublicKeyHex });\r\n\r\n\t\tconst onUpdate = (val) => {\r\n\t\t\tconsole.log('Update from ', { hypnsInstance });\r\n\t\t\tlatestHypns = val.ipld;\r\n\t\t};\r\n\r\n\t\t// handle message on my channel from others who have added me\r\n\t\tconst onMessage = async (msg) => {\r\n\t\t\t// offer to add as contact\r\n\t\t\t// contacts.pubKey = msg.pubkeyHex\r\n\t\t\tconsole.log(`redirect to ${location.origin + location.pathname}?add=${msg.pubKeyHex}`);\r\n\t\t\tawait goto(`${location.origin + location.pathname}?add=${msg.pubKeyHex}`);\r\n\t\t};\r\n\r\n\t\thypnsInstance = await openHypns({ pubKeyHex: myPublicKeyHex, wallet, onUpdate, onMessage });\r\n\t\tlatestHypns = hypnsInstance.latest;\r\n\r\n\t\t// since we passed in a wallet, we can write\r\n\t\tpublish = () => {\r\n\t\t\thypnsInstance.publish({ ipld: rootCID.toV1().toString() });\r\n\t\t};\r\n\t\tconsole.log('Opened ', { hypnsInstance });\r\n\t}\r\n\r\n\t// an open fn we can use everywhere\r\n\texport const openHypns = async function ({\r\n\t\tpubKeyHex,\r\n\t\twallet = null,\r\n\t\tonUpdate = (val) => {},\r\n\t\tonMessage = (val) => {\r\n\t\t\tconsole.log('Default onMessage');\r\n\t\t}\r\n\t}) {\r\n\t\tconsole.log('open Hypns', pubKeyHex);\r\n\t\tconst hypnsInstance = await hypnsNode.open({ keypair: { publicKey: pubKeyHex }, wallet });\r\n\t\thypnsInstance.on('update', onUpdate);\r\n\r\n\t\tawait hypnsInstance.ready();\r\n\r\n\t\t// use p2p extensions\r\n\t\t// https://github.com/hypercore-protocol/hypercore#ext--feedregisterextensionname-handlers\r\n\t\tconst extension = hypnsInstance.network.networker.registerExtension(connectKeyPhrase, {\r\n\t\t\t// Set the encoding type for messages\r\n\t\t\tencoding: 'json',\r\n\t\t\tonmessage: (message, peer) => {\r\n\t\t\t\t// Recieved messages will be automatically decoded\r\n\t\t\t\tconsole.log('Got msg from peer!', { message }, { peer });\r\n\t\t\t\tconsole.log({ onMessage });\r\n\t\t\t\t// join their swarm\r\n\t\t\t\t// add to contacts\r\n\t\t\t\t// replicate core\r\n\t\t\t\tonMessage(message);\r\n\t\t\t\tif (message.pubKeyHex && !hypnsNode.instances.has(message.pubKeyHex)) {\r\n\t\t\t\t\topenHypns({ pubKeyHex: message.pubKeyHex, onUpdate });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Already connected to ', message.pubKeyHex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thypnsInstance.network.networker.once('peer-add', (peer) => {\r\n\t\t\tconsole.log('Added a peer! Sending', myPublicKeyHex, { peer });\r\n\t\t\textension.send({ pubKeyHex: myPublicKeyHex }, peer);\r\n\t\t});\r\n\r\n\t\treturn hypnsInstance;\r\n\t};\r\n\r\n\tasync function handlePublish() {\r\n\t\tpublish();\r\n\t}\r\n</script>\r\n\r\n{#if HyPNSComponent}\r\n\t<svelte:component this={HyPNSComponent} bind:hypnsNode {opts} />\r\n\t<div class=\"main\">\r\n\t\t{#if !hypnsNode}\r\n\t\t\tLoading Hypns...\r\n\t\t{:else if hypnsInstance}\r\n\t\t\t{#await hypnsInstance}\r\n\t\t\t\tLoading instance...\r\n\t\t\t{:then hypnsInstance}\r\n\t\t\t\t<div style=\"display:flex; flex-direction:row; align-items: center;\">\r\n\t\t\t\t\t<h3>✔️ Connected to PiperNet</h3>\r\n\t\t\t\t\t<div class=\"scan-icon\">\r\n\t\t\t\t\t\t<QrCodeIcon bind:showQR>\r\n\t\t\t\t\t\t\t<Modal bind:modal={showQR}>\r\n\t\t\t\t\t\t\t\t<QRCode value={JSON.stringify({ pubKeyHex: myPublicKeyHex })}\r\n\t\t\t\t\t\t\t\t\t>Others Scan this from their PeerPiper to Connect to You</QRCode\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</QrCodeIcon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{latestHypns ? 'Last Pinned: ' + latestHypns : ''}\r\n\t\t\t\t</div>\r\n\t\t\t\t{#if rootCID && rootCID?.toV1().toString() === latestHypns}\r\n\t\t\t\t\t<h3>✔️ PiperNet up to date</h3>\r\n\t\t\t\t{:else if rootCID}\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t⚠️ PiperNet needs updating <button\r\n\t\t\t\t\t\t\ton:click={handlePublish}\r\n\t\t\t\t\t\t\tdisabled={!rootCID || !publish}>Update</button\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t{/if}\r\n\r\n\t\t\t\t<!-- <smaller>hypns://{publicKeyHex?.toUpperCase()}</smaller><br /> \r\n\t\t\t\t\tConnect with others: [<a href=\"{location.origin + location.pathname}?add={myPublicKeyHex}\"\r\n\t\t\t\t\t\t>Link</a\r\n\t\t\t\t\t>] <QRCode value={`${location.origin + location.pathname}?add=${myPublicKeyHex}`}>\r\n\t\t\t\t\t\t[ Add to Contacts]\r\n\t\t\t\t\t</QRCode>-->\r\n\t\t\t{/await}\r\n\t\t{/if}\r\n\t</div>\r\n{/if}\r\n\r\n<slot />\r\n\r\n<style>\r\n\tdiv.main {\r\n\t\tdisplay: block;\r\n\t\tborder: 1px solid rgb(196, 196, 196);\r\n\t\tbackground-color: rgb(15, 15, 15);\r\n\t\toverflow-wrap: break-word;\r\n\t\tword-break: break-word;\r\n\t\twidth: 100%;\r\n\t\tpadding: var(--column-margin-top);\r\n\t\tcolor: aliceblue;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tmargin: 1.62em;\r\n\t\tpadding: 1.62em;\r\n\t\tbackground-color: green;\r\n\t}\r\n\t.scan-icon {\r\n\t\tmargin: 0.1em 0.5em;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let decryptFromTagNode;\r\n\texport let tagNode;\r\n\r\n\tlet data;\r\n\tlet checked;\r\n\r\n\t$: if (tagNode) getData();\r\n\r\n\tasync function getData() {\r\n\t\tconsole.log(`Decrypting data on ${tagNode.tag} `);\r\n\t\tdata = await decryptFromTagNode(tagNode);\r\n\t\tchecked = true;\r\n\t}\r\n\r\n\tonMount(async () => {});\r\n</script>\r\n\r\n<div>\r\n\t{#if data}\r\n\t\t{#await data}\r\n\t\t\taccessing tagNode...\r\n\t\t{:then data}\r\n\t\t\t{data}\r\n\t\t{/await}\r\n\t{:else}\r\n\t\t✖️ You have no access to {tagNode.tag}\r\n\t{/if}\r\n</div>\r\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\texport let scan;\r\n\tfunction handleClick(e) {\r\n\t\tscan = true;\r\n\t\tdispatch('click', true);\r\n\t}\r\n</script>\r\n\r\n<div on:click={handleClick}>\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"150\" viewBox=\"0 0 39.69 39.69\"\r\n\t\t><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"2.65\"\r\n\t\t\td=\"M7.36 33A18.2 18.2 0 0 1 6.65 7.3a18.2 18.2 0 0 1 25.71-.71 18.2 18.2 0 0 1 .72 25.7 18.2 18.2 0 0 1-25.71.74\"\r\n\t\t/><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\td=\"M13.87 8.51c0-.27.1-.5.29-.68.28-.27.32-.27 5.22-.27h4.95l.27.29c.16.17.26.44.26.68v.4H13.87zM14.14 29.02a1.07 1.07 0 0 1-.27-.68v-.4H20.76l.05.69.04.67h-3.22c-3.2 0-3.22 0-3.5-.28zM17.94 13.53h.98v1.06h-.98z\"\r\n\t\t/><path\r\n\t\t\tfill=\"#fff\"\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26\"\r\n\t\t\td=\"M17.41 13.53h.98v1.06h-.98zM19.8 13.52h.98v1.06h-.98zM17.41 16.08h.98v1.06h-.98zM19.78 16.08h.98v1.06h-.98z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26458\"\r\n\t\t\td=\"M18.08 33.81c-.4-.03-.9-.12-1.1-.19-.34-.11-.4-.16-.66-.64a10.5 10.5 0 0 1-.98-1.9c0-.11.2-.12 3.11-.12h3.12l.2.2c.18.17.23.18.4.1a.8.8 0 0 0 .3-.34c.13-.27.11-.39-.15-1.1-.12-.32-.13-.25.18-1.45.1-.38.66-.96 1.93-1.98 1.87-1.5 2.22-1.98 2.22-2.98 0-.36-.04-.52-.22-.82-.25-.45-.44-.57-1.86-1.2-1.16-.51-1.67-.82-1.95-1.16-.2-.23-.25-.4-.15-.56.07-.1 1.1-.25 1.74-.25.62 0 1.61.19 2.2.4.95.36 2.1 1.2 2.35 1.71.4.78.39 1.92-.03 4.65-.39 2.57-.55 3.2-1.1 4.27-.93 1.82-2.56 2.84-5.18 3.25-.85.14-3.32.2-4.37.11z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\".26458\"\r\n\t\t\td=\"M14.19 29.04c-.18-.18-.24-.32-.28-.65l-.05-.42h6.95v.54c0 .3.02.6.05.66.04.1-.28.11-3.2.11H14.4Z\"\r\n\t\t/><path\r\n\t\t\tstroke=\"#000\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-linejoin=\"round\"\r\n\t\t\tstroke-width=\"1.0001124\"\r\n\t\t\td=\"M17.56 16.61v-.36h.7v.73h-.7zM19.91 16.62v-.38h.69V17h-.69ZM19.94 14.04v-.38h.7v.76h-.7ZM17.56 14.07v-.38h.7v.76h-.7Z\"\r\n\t\t/><g\r\n\t\t\t><path\r\n\t\t\t\td=\"M16 34.56c.8-.8.59-.83 1.18-.8 11.36 1.14 11.05-4.42 11.72-8.48.38-2.25.28-3.5-.41-4.24-5.51-1.7-6.34-2.86-2.26 1.3.3.37.41.67.41 1.14 0 .55-.2.99-.72 1.57-.94 1.06-3.5 2.51-3.5 3.46 0 .47-.42.85-.12 1.41.3.57.29.96-.06 1.24-.3.23-.26.18-.5-.1l-.14-.17h-6.33v.17c0 .35 1.02 1.88 1.32 2.48 2.4.76 1.93 1.4-.58 1.02-.67-4.3-6.2-7.49-6.23-8.68-.03-1.18.94-1.37.94-1.37l-1.18-.96c-.56-1.84.41-1.91 1.1-2.2-.89-1.06-1.27-1.87-.42-2.74.83-.64 1.21-.63 2.04-.08l.04-5.7c.04-5.16 0-5.07.32-5.67.3-.55.92-.98 1.58-1.1.43-.09 9.95-.08 10.39 0a2.4 2.4 0 0 1 1.58 1.13c.3.51.29.43.29 6.37v5.52l.3.1A4.67 4.67 0 0 1 29.22 21c.44.72.62 1.49.57 2.44-.04.64-.4 2.84-.63 3.9-1.17 5.8-.13 7.57-13.16 7.21zm4.9-5.5a6.58 6.58 0 0 1-.03-.7v-.43h-7v.96l.22.22.22.22h6.63zm-8.69-3.36c-.3-.46-1.07-1.04-1.63-.4-.56.65 0 .98.6 1.64.46.5.56.58 1.12 1.06-.03-.84-.05-1.72-.09-2.3zm13.27-3.2c-2.2-1.86-5.66-3.09-1.41-3.79l.88.03v-8.27H13.87v15.95h7.49c1.28-2.73 3.93-2.86 4.12-3.93zm-10.5-3.36c-.33.1-.35-.38-.35-1.38 0-.75.02-.92.1-1.08.2-.36.7-.5 1.06-.28.29.17.36.34.4.87l.03.47h.41c.25 0 .48.03.57.08.5.26.57.88.14 1.26l-.2.17h-.98c-.9 0-1-.17-1.18-.11zm5.87-.1c-.19-.2-.21-.25-.21-.5 0-.56.3-.8 1-.8h.45v-.45c0-.52.08-.73.35-.9.36-.21.89-.08 1.08.28.06.13.08.37.08 1.11.12 1.42-.71 1.47-1.54 1.47h-.99Zm-5.87-4.73c-.3-.18-.35-.38-.35-1.38 0-1.41.07-1.48 1.48-1.48.7 0 .97.02 1.09.08.49.26.57.86.17 1.24-.16.15-.2.17-.67.19l-.5.02v.31c0 .5-.08.74-.3.95-.17.15-.24.18-.47.18a.9.9 0 0 1-.45-.11zm7.46 0c-.25-.16-.32-.3-.35-.84l-.03-.48-.47-.03c-.51-.03-.66-.08-.84-.31-.16-.2-.16-.64 0-.87.21-.3.35-.33 1.38-.33.83 0 .96.02 1.12.11.32.2.35.34.35 1.39 0 .83-.01.96-.1 1.12a.78.78 0 0 1-1.06.24zm-10.2 8.82.01-.78-.82-.5c-.77-.3-2.07.61-1.25 1.64.6.48 1.45.93 2.07 1.27l-.01-1.63zm0-3.21v-.85c-.38-.43-1.3-1.07-1.93.13-.64 1.2.68 1.83 1.94 2.1zm12.7-11.28c0-.46-.08-.7-.3-.9l-.2-.18H14.31l-.22.22-.22.22v.96h11.08v-.32z\"\r\n\t\t\t/><path\r\n\t\t\t\tstroke=\"#000\"\r\n\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\tstroke-width=\".26458\"\r\n\t\t\t\td=\"M11.38 27.08c-.93-.95-1.06-1.15-.94-1.45.28-.66.93-.74 1.48-.16l.26.27.05 1.08c.03.59.03 1.07 0 1.07-.02 0-.4-.36-.85-.81zM11.48 24.28c-1.03-.6-1.3-.82-1.44-1.15-.19-.48.02-.89.6-1.18.36-.18.65-.14 1.12.15l.43.27v1.15l-.01 1.16-.7-.4zM11.57 21.07c-.9-.32-1.37-.76-1.37-1.27 0-.56.57-1.25 1.02-1.25.21 0 .58.17.81.38.16.15.16.2.16 1.24 0 .6-.02 1.08-.05 1.08a6.2 6.2 0 0 1-.57-.18z\"\r\n\t\t\t/><path\r\n\t\t\t\tstroke=\"#000\"\r\n\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\tstroke-width=\".0740824\"\r\n\t\t\t\td=\"M14.1 29.04c-.2-.21-.23-.29-.23-.66v-.41h6.94v.32c0 .17.02.47.05.65l.04.34h-6.56Z\"\r\n\t\t\t/></g\r\n\t\t></svg\r\n\t>\r\n</div>\r\n{#if scan}\r\n\t<slot />\r\n{/if}\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: auto;\r\n\t\theight: 4em;\r\n\t\tdisplay: block;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Modal from '$lib/graphics/Modal.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let handle;\r\n\texport let pubKey;\r\n\texport let source;\r\n\r\n\texport let handleAddContact;\r\n</script>\r\n\r\n<Modal modal={true}>\r\n\t<div class=\"SearchResults\">\r\n\t\t<h1 contenteditable=\"true\" bind:innerHTML={handle}>{handle}</h1>\r\n\t\t<div class=\"pubkey\" style=\"font-size: .6em\">\r\n\t\t\t{pubKey}\r\n\t\t</div>\r\n\t\t<div class=\"buttons\" />\r\n\t\t<button on:click={handleAddContact(pubKey.toString(), handle)}>Add Contact</button>\r\n\t\t<button>Grant Access to Tag(s)</button>\r\n\t\t<button>Request Access</button>\r\n\t</div>\r\n</Modal>\r\n\r\n<style>\r\n\th1 {\r\n\t\tborder: 1px dashed grey;\r\n\t\tpadding: 0.5em;\r\n\t\tbackground-color: antiquewhite;\r\n\t}\r\n\t.pubkey {\r\n\t\tpadding: 0px;\r\n\t}\r\n\tdiv.SearchResults {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-evenly;\r\n\t\tmargin: 1.62em;\r\n\t\talign-items: stretch;\r\n\t}\r\n\t.buttons {\r\n\t}\r\n\tbutton {\r\n\t\tpadding: 1.62em;\r\n\t\tmargin: 1.62em;\r\n\t\tbackground-color: rgb(46, 199, 61);\r\n\t\twidth: auto;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport SearchResults from './SearchResults.svelte';\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\texport let handle = 'DougAnderson44';\r\n\texport let value = 'DougAnderson44';\r\n\texport let pubKey;\r\n\texport let handleAddContact;\r\n\r\n\tlet SNSWrapper;\r\n\tlet valid;\r\n\tlet inputElement;\r\n\r\n\t$: value && handleInput();\r\n\t$: pubKey && handleValidate(pubKey);\r\n\r\n\tonMount(async () => {\r\n\t\tconst Buffer = await import('buffer'); // Solana Web3.js uses Buffers instead of UInt8Array =/\r\n\t\tglobal.Buffer = Buffer.Buffer;\r\n\r\n\t\tconst process = await import('process');\r\n\t\tglobal.process = process;\r\n\r\n\t\t({ SNSWrapper } = await import('@douganderson444/svelte-solana-name-service'));\r\n\r\n\t\tlet params = new URLSearchParams(location.search);\r\n\t\tif (params.has('add')) {\r\n\t\t\tpubKey = params.get('add');\r\n\t\t\tinputElement.focus();\r\n\t\t}\r\n\t});\r\n\r\n\tfunction handleInput() {\r\n\t\thandle = value; // trigger check registry\r\n\t\t// in the meantime, check whether this is a valid public key\r\n\t\thandleValidate(value);\r\n\t}\r\n\r\n\tfunction handleValidate(value) {\r\n\t\t// console.log(`Validating`, { value });\r\n\r\n\t\tif (!value) return; // TODO: Handle better\r\n\t\t// <!-- defined by schema -->\r\n\t\tconst valBytes = validatePubKey(value.toString());\r\n\t\t// console.log({ valBytes });\r\n\t\tif (valBytes) {\r\n\t\t\t// console.log('Valid', { value: value.toString() });\r\n\t\t\tvalid = true;\r\n\t\t\tpubKey = value.toString();\r\n\t\t} else valid = false;\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<!-- font awesome css  -->\r\n\t<link\r\n\t\trel=\"stylesheet\"\r\n\t\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\"\r\n\t\tintegrity=\"sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==\"\r\n\t\tcrossorigin=\"anonymous\"\r\n\t\treferrerpolicy=\"no-referrer\"\r\n\t/>\r\n</svelte:head>\r\n{#if SNSWrapper}\r\n\t<!-- Pass in handle, get pubKey back  -->\r\n\t<svelte:component this={SNSWrapper} {handle} bind:pubKey />\r\n{/if}\r\n\r\n<div class=\"sb-example-1\">\r\n\t<div class=\"search\">\r\n\t\t<input\r\n\t\t\tclass=\"searchTerm\"\r\n\t\t\tbind:value\r\n\t\t\tplaceholder=\"@handle or Public Key\"\r\n\t\t\tbind:this={inputElement}\r\n\t\t\ton:input={handleInput}\r\n\t\t\ton:change={handleInput}\r\n\t\t\ton:focus={handleInput}\r\n\t\t/>\r\n\t\t<button type=\"submit\" class=\"searchButton\" on:click={() => {}}>\r\n\t\t\t<i class=\"fa fa-search\" />\r\n\t\t</button>\r\n\t</div>\r\n\t<div class=\"validity\">\r\n\t\t{valid ? '✔️ Valid ' + pubKey.toString() : ''}\r\n\t</div>\r\n</div>\r\n\r\n{#if pubKey && valid}\r\n\t<SearchResults {handle} {pubKey} source={null} {handleAddContact} />\r\n{/if}\r\n\r\n<style>\r\n\t.validity {\r\n\t\tmargin: 0.25em 0;\r\n\t}\r\n\tinput {\r\n\t\tpadding: 0.3em;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\t.sb-example-1 {\r\n\t\twidth: 100%;\r\n\t}\r\n\t.sb-example-1 .search {\r\n\t\twidth: 100%;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.sb-example-1 .searchTerm {\r\n\t\twidth: 100%;\r\n\t\tborder: 3px solid #2ec73d;\r\n\t\tborder-right: none;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 5px 0 0 5px;\r\n\t\toutline: none;\r\n\t\tcolor: #9dbfaf;\r\n\t}\r\n\t.sb-example-1 .searchTerm:focus {\r\n\t\tcolor: #2ec73d;\r\n\t}\r\n\t.sb-example-1 .searchButton {\r\n\t\twidth: 40px;\r\n\t\theight: 50px;\r\n\t\tborder: 1px solid #2ec73d;\r\n\t\tbackground: #2ec73d;\r\n\t\ttext-align: center;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 0 5px 5px 0;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 20px;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount, tick, createEventDispatcher } from 'svelte';\r\n\r\n\timport { contacts } from '$lib/stores';\r\n\r\n\timport ContactCard from './ContactCard.svelte';\r\n\timport PiperNet from '../Hypns/PiperNet.svelte';\r\n\timport GetTags from './GetTags.svelte';\r\n\timport TagAccess from '$lib/TagAccess.svelte';\r\n\timport TagValue from '$lib/TagValue.svelte';\r\n\r\n\texport let decryptedData;\r\n\texport let openHypns;\r\n\texport let getTagNodes;\r\n\texport let checkAccess;\r\n\texport let decryptFromTagNode;\r\n\r\n\tconsole.log('ShowContacts', { decryptedData });\r\n\t$: decryptedData && console.log({ decryptedData });\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tfunction handleMessenger(event) {\r\n\t\tconsole.log(\"handleMessenger pubKey to rx'd msg value\", { event });\r\n\t\tdispatch('incomingPubKey', { pubKeyHex: event.detail.pubKeyHex });\r\n\t}\r\n</script>\r\n\r\n{#if decryptedData}\r\n\t<!-- defined by schema -->\r\n\t{#each decryptedData as { handle, pubKey }}\r\n\t\t<div class=\"card-container\">\r\n\t\t\t<ContactCard>\r\n\t\t\t\t<span slot=\"handle\">\r\n\t\t\t\t\t{handle}\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span slot=\"publicKey\">\r\n\t\t\t\t\tPubKey: <small>{pubKey}</small>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span slot=\"latest\">\r\n\t\t\t\t\t<PiperNet {pubKey} {openHypns} let:latestHypns on:onMessage={handleMessenger}>\r\n\t\t\t\t\t\t<!-- once root CID appears, get tag details then show tag access -->\r\n\t\t\t\t\t\t<GetTags rootCID={latestHypns} {getTagNodes} let:tagNode>\r\n\t\t\t\t\t\t\t{#if tagNode.tag}\r\n\t\t\t\t\t\t\t\t<TagAccess tag={tagNode.tag} {pubKey} {checkAccess} />\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t\t{#if tagNode.tag === 'Profile'}\r\n\t\t\t\t\t\t\t\t<TagValue {tagNode} {decryptFromTagNode} />\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t</GetTags>\r\n\t\t\t\t\t</PiperNet>\r\n\t\t\t\t</span>\r\n\t\t\t</ContactCard>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n","<script>\r\n\t// Basic template to show how to add Contact with the proxcryptor Parent component\r\n\timport { page } from '$app/stores';\r\n\r\n\timport { onMount, tick, createEventDispatcher } from 'svelte';\r\n\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\r\n\timport { validatePubKey } from '$lib/utils/index';\r\n\r\n\timport ContactCard from './ContactCard.svelte';\r\n\timport PiperNet from '../Hypns/PiperNet.svelte';\r\n\timport GetTags from './GetTags.svelte';\r\n\timport TagAccess from '$lib/TagAccess.svelte';\r\n\r\n\timport { contacts } from '$lib/stores';\r\n\timport TagValue from '$lib/TagValue.svelte';\r\n\r\n\timport { Scanner } from 'qrcode-scanner-svelte';\r\n\timport ScanIcon from '$lib/graphics/scanIcon.svelte';\r\n\timport Modal from '$lib/graphics/Modal.svelte';\r\n\timport Search from '$lib/components/nav/Search.svelte';\r\n\timport ShowContacts from './ShowContacts.svelte';\r\n\r\n\t// Component props passed in from Parent Component\r\n\t// will also reactively update if updated in parent\r\n\texport let getTagNodes;\r\n\texport let openHypns;\r\n\texport let checkAccess;\r\n\texport let decryptedData;\r\n\texport let decryptFromTagNode;\r\n\r\n\t$: if (decryptedData) $contacts = decryptedData;\r\n\t$: $contacts && console.log($contacts);\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst tag = 'Contacts';\r\n\r\n\tlet schema;\r\n\tlet handle, pubKey, pubKeyInput;\r\n\tlet tagNode;\r\n\tlet submitting;\r\n\tlet mounted;\r\n\tlet scan;\r\n\tlet stopMediaStream;\r\n\t$: selected = scan ? Scanner : null;\r\n\t$: selected && console.log({ selected });\r\n\t$: scan && console.log({ scan });\r\n\r\n\tonMount(async () => {\r\n\t\t// check if this is a search params loaded page\r\n\t\tlet params = new URLSearchParams(location.search);\r\n\t\tif ($page.url.searchParams.has('add')) {\r\n\t\t\tpubKey = $page.url.searchParams.get('add');\r\n\t\t\tawait tick();\r\n\t\t\tpubKeyInput.focus();\r\n\t\t} else if (params.has('add')) {\r\n\t\t\tpubKey = params.get('add');\r\n\t\t\tawait tick();\r\n\t\t\tpubKeyInput.focus();\r\n\t\t}\r\n\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\texport function onSubmitted() {\r\n\t\tsubmitting = false;\r\n\t\thandle = '';\r\n\t\tpubKey = '';\r\n\t}\r\n\r\n\tasync function handleAddContact(pK = pubKey, name = handle) {\r\n\t\tconsole.log('Adding ', { name }, { pK });\r\n\t\tif (!name || !pK) return; // TODO: Handle better\r\n\t\t// <!-- defined by schema -->\r\n\t\tconst bytes = validatePubKey(pK);\r\n\t\tconsole.log('Adding bytes', { bytes });\r\n\r\n\t\tlet value;\r\n\r\n\t\tif (decryptedData && decryptedData.length)\r\n\t\t\tvalue = [...decryptedData, { handle: name, pubKey: new Uint8Array(bytes) }];\r\n\t\telse value = [{ handle: name, pubKey: new Uint8Array(bytes) }];\r\n\r\n\t\tconsole.log('Adding value', { value });\r\n\t\tsubmitting = true;\r\n\t\tdispatch('handleSubmit', { tag, data: { value, schema } });\r\n\t}\r\n\r\n\tfunction handleConnect(key) {\r\n\t\tpubKey = key;\r\n\t}\r\n\tfunction handleMessenger(event) {\r\n\t\tconsole.log(\"Setting pubKey to rx'd msg value\", { event });\r\n\t\tpubKey = event.detail.pubKeyHex;\r\n\t}\r\n\tfunction handleModalClose() {\r\n\t\tconsole.log('Got close modal');\r\n\t\tscan = false;\r\n\t\t// selected?.stopMediaStream();\r\n\t\t// selected = null;\r\n\t\tconsole.log({ scan }, { selected });\r\n\t}\r\n</script>\r\n\r\n{#if decryptedData}\r\n\t<ShowContacts\r\n\t\t{decryptedData}\r\n\t\t{getTagNodes}\r\n\t\t{openHypns}\r\n\t\t{checkAccess}\r\n\t\t{decryptFromTagNode}\r\n\t\ton:incomingPubKey={handleMessenger}\r\n\t/>\r\n{/if}\r\n<div class=\"searchBar\">\r\n\t<div class=\"scan-icon\" style=\"width: 100%\">\r\n\t\t<Search bind:handle bind:pubKey {handleAddContact} />\r\n\t</div>\r\n\t<div class=\"scan-icon\">\r\n\t\t<ScanIcon\r\n\t\t\t{scan}\r\n\t\t\ton:click={() => {\r\n\t\t\t\tconsole.log('scan clicked');\r\n\t\t\t\tscan = true;\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Modal modal={scan} on:closeModal={handleModalClose}>\r\n\t\t\t\t<svelte:component\r\n\t\t\t\t\tthis={selected}\r\n\t\t\t\t\tbind:result={pubKey}\r\n\t\t\t\t\ton:successfulScan={(data) => {\r\n\t\t\t\t\t\tconst parsed = JSON.parse(data.detail);\r\n\t\t\t\t\t\tconsole.log(`Scanned `, { parsed });\r\n\t\t\t\t\t\thandleConnect(parsed.pubKeyHex);\r\n\t\t\t\t\t\tscan = false;\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t</ScanIcon>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.searchBar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tflex-wrap: nowrap;\r\n\t}\r\n\t.card-container {\r\n\t\tmargin: 1em 0;\r\n\t}\r\n\t.data-entry {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0.5em;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 1.62em;\r\n\t}\r\n\t.item {\r\n\t\tflex: 1;\r\n\t\tmargin: 0.5em 0;\r\n\t\tpadding: 0.5em 0;\r\n\t}\r\n\tinput {\r\n\t\tpadding: 1.62em;\r\n\t\tmargin: 1.62em 0;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.entry-item {\r\n\t\tdisplay: inline-flex;\r\n\t\tflex-wrap: nowrap;\r\n\t\talign-items: center;\r\n\t\tflex-direction: row;\r\n\t\twidth: 100%;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t.scan-icon {\r\n\t\tmargin: 1em 0 1em 1em;\r\n\t}\r\n</style>\r\n","import ShowContacts from '$lib/templates/Contacts/ShowContacts.svelte';\r\nimport Profile from '$lib/templates/Basic/Profile.svelte';\r\n\r\nconst CONTACTS = 'Contacts';\r\nconst PROFILE = 'Profile';\r\n\r\nexport const Components = {\r\n\t[PROFILE]: { name: PROFILE, component: Profile, tag: PROFILE },\r\n\t[CONTACTS]: { name: CONTACTS, component: ShowContacts, tag: CONTACTS }\r\n};\r\n","<script>\r\n\texport let rootCID;\r\n</script>\r\n\r\n{#if rootCID}\r\n\t✔️ IPLD Data Saved to: <a href=\"https://dweb.link/api/v0/dag/get?arg={rootCID}\" target=\"_blank\">\r\n\t\t{rootCID}</a\r\n\t>\r\n\t<br />\r\n{/if}\r\n","<script lang=\"ts\">\n\timport { onMount, setContext } from 'svelte';\n\n\timport DagJose from './DAGJose.svelte';\n\timport HypnsManager from './HypnsManager.svelte';\n\timport Contacts from '$lib/templates/Contacts/Contacts.svelte';\n\n\timport { Components } from '$lib/components/index';\n\timport ShowRoot from './components/ShowRoot.svelte';\n\timport Common from './Common.svelte';\n\n\texport let wallet = null;\n\texport let rootCID = null;\n\n\tlet active = Components['Profile']; // needs to open on contacts so that they are loaded into the svelte store $contacts\n\n\tlet inputUrl = 'https://peerpiper.github.io/iframe-wallet-engine'; // = 'https://wallet.peerpiper.io/'; // can be changed by any user\n\n\tlet ipfsNode, CID;\n\tlet nodeId;\n\n\tlet openHypns;\n\n\tlet Web3WalletMenu;\n\n\tlet start = Date.now();\n\n\tlet onSubmitted; // only here to pass from svelte:component to DAGJose component\n\tlet refreshedRootCID;\n\n\tonMount(async () => {\n\t\t// load asyncs in parallel\n\t\tif (!wallet) loadWallet();\n\t\tif (!ipfsNode) loadIPFS();\n\n\t\tasync function loadWallet() {\n\t\t\t// @ts-ignore\n\t\t\t({ Web3WalletMenu } = await import('@peerpiper/svelte-web3-wallet-connector'));\n\t\t}\n\n\t\tasync function loadIPFS() {\n\t\t\t// setup IPFS\n\n\t\t\t// const IPFSmodule = await import('ipfs-browser-global');\n\t\t\t// CID = IPFSmodule.CID;\n\t\t\t// const config = {};\n\t\t\t// await IPFSmodule.default(config);\n\t\t\t// @ts-ignore\n\t\t\t// console.log({ ipfs }, { IPFSmodule });\n\t\t\t// @ts-ignore\n\t\t\t// ipfsNode = ipfs;\n\n\t\t\t// setup IPFS\n\t\t\tconst IPFSmodule = await import('../modules/ipfs-core-0.14.0/ipfs-core.js');\n\t\t\tconst IPFS = IPFSmodule.default;\n\t\t\tCID = IPFS.CID;\n\t\t\tipfsNode = await IPFS.create({\n\t\t\t\t// repo: 'dag-jose-proxcryptor'\n\t\t\t});\n\t\t\tconsole.log(`Loaded in ${(Date.now() - start) / 1000}s`, { ipfsNode });\n\t\t\tconst identity = await ipfsNode.id();\n\t\t\tnodeId = identity.id;\n\t\t\tconsole.info('NodeId', nodeId);\n\t\t}\n\n\t\treturn () => ipfsNode.stop();\n\t});\n</script>\n\n<div class=\"\">\n\t<!-- First, you need a wallet -->\n\t{#if Web3WalletMenu}\n\t\t<svelte:component this={Web3WalletMenu} bind:wallet {inputUrl} />\n\t{:else}\n\t\tLoading Web3 Wallet...<br />\n\t{/if}\n\n\t<!-- When there is data saved to ILPD, why not save it to PipeNet?  -->\n\t<HypnsManager {wallet} {rootCID} bind:openHypns />\n\n\t<div>\n\t\t<select bind:value={active} class=\"form-control\">\n\t\t\t{#each Object.entries(Components) as [key, value]}\n\t\t\t\t<option {value}>{key}</option>\n\t\t\t{/each}\n\t\t</select>\n\t</div>\n\t<ShowRoot {rootCID} />\n\n\t<!-- Then you need a way to encrypt/decrypt the data to IPLD  -->\n\t{#if wallet && wallet.proxcryptor && ipfsNode && CID}\n\t\t<DagJose\n\t\t\tproxcryptor={wallet.proxcryptor}\n\t\t\t{ipfsNode}\n\t\t\t{CID}\n\t\t\tbind:rootCID\n\t\t\t{refreshedRootCID}\n\t\t\ttag={active.tag}\n\t\t\t{onSubmitted}\n\t\t\tlet:getTagNodes\n\t\t\tlet:getTagNode\n\t\t\tlet:checkAccess\n\t\t\tlet:setAccess\n\t\t\tlet:handleSubmit\n\t\t\tlet:decryptFromTagNode\n\t\t\tlet:decrypt\n\t\t>\n\t\t\t<Common\n\t\t\t\t{getTagNode}\n\t\t\t\t{decrypt}\n\t\t\t\ttag={active.tag}\n\t\t\t\t{rootCID}\n\t\t\t\t{setAccess}\n\t\t\t\tlet:decryptedData\n\t\t\t\tbind:refreshedRootCID\n\t\t\t>\n\t\t\t\t<svelte:component\n\t\t\t\t\tthis={active.component}\n\t\t\t\t\ton:handleSubmit={handleSubmit}\n\t\t\t\t\tbind:onSubmitted\n\t\t\t\t\t{decryptedData}\n\t\t\t\t\t{getTagNodes}\n\t\t\t\t\t{checkAccess}\n\t\t\t\t\t{setAccess}\n\t\t\t\t\t{openHypns}\n\t\t\t\t\t{decryptFromTagNode}\n\t\t\t\t/>\n\t\t\t</Common>\n\n\t\t\t<Common\n\t\t\t\t{getTagNode}\n\t\t\t\t{decrypt}\n\t\t\t\ttag={'Contacts'}\n\t\t\t\t{rootCID}\n\t\t\t\t{setAccess}\n\t\t\t\tlet:decryptedData\n\t\t\t\tbind:refreshedRootCID\n\t\t\t>\n\t\t\t\t<!-- Every page needs contacts, that's kinda the point of this app  -->\n\t\t\t\t<Contacts\n\t\t\t\t\t{getTagNodes}\n\t\t\t\t\t{openHypns}\n\t\t\t\t\t{checkAccess}\n\t\t\t\t\t{decryptedData}\n\t\t\t\t\t{decryptFromTagNode}\n\t\t\t\t\ton:handleSubmit={handleSubmit}\n\t\t\t\t/>\n\t\t\t</Common>\n\t\t</DagJose>\n\t{:else}\n\t\tLoading IPFS...<br />\n\t{/if}\n</div>\n\n<style>\n</style>\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\n\timport App from '$lib/App.svelte';\n\n\tonMount(async () => {});\n</script>\n\n<svelte:head>\n\t<script>\n\t\tglobal = globalThis; // for solana web3 repo\n\t</script>\n</svelte:head>\n\n<App />\n\n<style>\n</style>\n"],"names":["tag","b64","QRCode"],"mappings":"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"}