{"version":3,"file":"elliptic-eff0a372.js","sources":["../../../../../__vite-browser-external","../../../../../node_modules/js-sha3/src/sha3.js","../../../../../node_modules/bn.js/lib/bn.js","../../../../../node_modules/minimalistic-assert/index.js","../../../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../../node_modules/elliptic/lib/elliptic/utils.js","../../../../../node_modules/brorand/index.js","../../../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../../../node_modules/inherits/inherits_browser.js","../../../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../../../node_modules/elliptic/lib/elliptic/curve/mont.js","../../../../../node_modules/elliptic/lib/elliptic/curve/edwards.js","../../../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../../../node_modules/hash.js/lib/hash/utils.js","../../../../../node_modules/hash.js/lib/hash/common.js","../../../../../node_modules/hash.js/lib/hash/sha/common.js","../../../../../node_modules/hash.js/lib/hash/sha/1.js","../../../../../node_modules/hash.js/lib/hash/sha/256.js","../../../../../node_modules/hash.js/lib/hash/sha/224.js","../../../../../node_modules/hash.js/lib/hash/sha/512.js","../../../../../node_modules/hash.js/lib/hash/sha/384.js","../../../../../node_modules/hash.js/lib/hash/sha.js","../../../../../node_modules/hash.js/lib/hash/ripemd.js","../../../../../node_modules/hash.js/lib/hash/hmac.js","../../../../../node_modules/hash.js/lib/hash.js","../../../../../node_modules/elliptic/lib/elliptic/curves.js","../../../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../../node_modules/elliptic/lib/elliptic/ec/index.js","../../../../../node_modules/elliptic/lib/elliptic/eddsa/key.js","../../../../../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../../../../node_modules/elliptic/lib/elliptic/eddsa/index.js","../../../../../node_modules/elliptic/lib/elliptic.js"],"sourcesContent":["export default {}","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n"],"names":["global","this","assert","require$$0","require$$1","require$$2","r","brorandModule","BN","utils","inherits_browserModule","inherits","Base","require$$3","Point","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","ch32","maj32","ft_1","s0_256","s1_256","g0_256","g1_256","common","shaCommon","SHA256","SHA512","require$$4","curve","hash","HmacDRBG","key","KeyPair","Signature","signature","curves","require$$5","require$$6","parseBytes","cachedProperty"],"mappings":"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I;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EACpD;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACrD;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EACpD;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA;AAGvD,IAAI,KAAK;AAAA,EACP;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EACrD;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EACpD;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EACrD;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;A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"}