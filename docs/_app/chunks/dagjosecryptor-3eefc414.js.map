{"version":3,"file":"dagjosecryptor-3eefc414.js","sources":["../../../../../node_modules/@stablelib/random/lib/source/browser.js","../../../../../node_modules/@stablelib/wipe/lib/wipe.js","../../../../../node_modules/@stablelib/random/lib/source/node.js","../../../../../node_modules/@stablelib/random/lib/source/system.js","../../../../../node_modules/@stablelib/int/lib/int.js","../../../../../node_modules/@stablelib/binary/lib/binary.js","../../../../../node_modules/@stablelib/random/lib/random.js","../../../../../node_modules/uint8arrays/esm/src/concat.js","../../../../../node_modules/multiformats/esm/vendor/base-x.js","../../../../../node_modules/multiformats/esm/src/bytes.js","../../../../../node_modules/multiformats/esm/src/bases/base.js","../../../../../node_modules/multiformats/esm/src/bases/identity.js","../../../../../node_modules/multiformats/esm/src/bases/base2.js","../../../../../node_modules/multiformats/esm/src/bases/base8.js","../../../../../node_modules/multiformats/esm/src/bases/base10.js","../../../../../node_modules/multiformats/esm/src/bases/base16.js","../../../../../node_modules/multiformats/esm/src/bases/base32.js","../../../../../node_modules/multiformats/esm/src/bases/base36.js","../../../../../node_modules/multiformats/esm/src/bases/base58.js","../../../../../node_modules/multiformats/esm/src/bases/base64.js","../../../../../node_modules/multiformats/esm/vendor/varint.js","../../../../../node_modules/multiformats/esm/src/varint.js","../../../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../../../node_modules/multiformats/esm/src/codecs/json.js","../../../../../node_modules/multiformats/esm/src/basics.js","../../../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../../../node_modules/uint8arrays/esm/src/from-string.js","../../../../../node_modules/uint8arrays/esm/src/to-string.js","../../../../../node_modules/@stablelib/sha256/lib/sha256.js","../../../../../node_modules/@stablelib/sha512/lib/sha512.js","../../../../../node_modules/@stablelib/ed25519/lib/ed25519.js","../../../../../node_modules/bech32/dist/index.js","../../../../../node_modules/@stablelib/x25519/lib/x25519.js","../../../../../node_modules/@stablelib/chacha/lib/chacha.js","../../../../../node_modules/@stablelib/xchacha20/lib/xchacha20.js","../../../../../node_modules/@stablelib/constant-time/lib/constant-time.js","../../../../../node_modules/@stablelib/poly1305/lib/poly1305.js","../../../../../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js","../../../../../node_modules/@stablelib/xchacha20poly1305/lib/xchacha20poly1305.js","../../../../../node_modules/did-jwt/lib/index.module.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/vendor/varint.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/varint.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bytes.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/vendor/base-x.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bases/base.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bases/base58.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bases/base32.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/cid.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/hashes/hasher.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/block.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/hashes/identity.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bases/base64.js","../../../../../node_modules/dag-jose-utils/node_modules/multiformats/esm/src/bases/base64-browser.js","../../../../../node_modules/cborg/esm/lib/is.js","../../../../../node_modules/cborg/esm/lib/token.js","../../../../../node_modules/cborg/esm/lib/byte-utils.js","../../../../../node_modules/cborg/esm/lib/bl.js","../../../../../node_modules/cborg/esm/lib/common.js","../../../../../node_modules/cborg/esm/lib/0uint.js","../../../../../node_modules/cborg/esm/lib/1negint.js","../../../../../node_modules/cborg/esm/lib/2bytes.js","../../../../../node_modules/cborg/esm/lib/3string.js","../../../../../node_modules/cborg/esm/lib/4array.js","../../../../../node_modules/cborg/esm/lib/5map.js","../../../../../node_modules/cborg/esm/lib/6tag.js","../../../../../node_modules/cborg/esm/lib/7float.js","../../../../../node_modules/cborg/esm/lib/jump.js","../../../../../node_modules/cborg/esm/lib/encode.js","../../../../../node_modules/cborg/esm/lib/decode.js","../../../../../node_modules/dag-jose-utils/node_modules/@ipld/dag-cbor/esm/index.js","../../../../../node_modules/dag-jose-utils/lib/index.js","../../../../../node_modules/cborg/esm/lib/json/encode.js","../../../../../node_modules/@ipld/dag-json/esm/index.js","../../../../../src/lib/dagjosecryptor.ts"],"sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QUOTA = 65536;\nvar BrowserRandomSource = /** @class */ (function () {\n    function BrowserRandomSource() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        var browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    BrowserRandomSource.prototype.randomBytes = function (length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        var out = new Uint8Array(length);\n        for (var i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    };\n    return BrowserRandomSource;\n}());\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nfunction wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\nexports.wipe = wipe;\n//# sourceMappingURL=wipe.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar NodeRandomSource = /** @class */ (function () {\n    function NodeRandomSource() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        if (typeof require !== \"undefined\") {\n            var nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n    NodeRandomSource.prototype.randomBytes = function (length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n        // Get random bytes (result is Buffer).\n        var buffer = this._crypto.randomBytes(length);\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n        // Allocate output array.\n        var out = new Uint8Array(length);\n        // Copy bytes from buffer to output.\n        for (var i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n        // Cleanup.\n        wipe_1.wipe(buffer);\n        return out;\n    };\n    return NodeRandomSource;\n}());\nexports.NodeRandomSource = NodeRandomSource;\n//# sourceMappingURL=node.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browser_1 = require(\"./browser\");\nvar node_1 = require(\"./node\");\nvar SystemRandomSource = /** @class */ (function () {\n    function SystemRandomSource() {\n        this.isAvailable = false;\n        this.name = \"\";\n        // Try browser.\n        this._source = new browser_1.BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n        // If no browser source, try Node.\n        this._source = new node_1.NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n        // No sources, we're out of options.\n    }\n    SystemRandomSource.prototype.randomBytes = function (length) {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    };\n    return SystemRandomSource;\n}());\nexports.SystemRandomSource = SystemRandomSource;\n//# sourceMappingURL=system.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package int provides helper functions for integerss.\n */\n// Shim using 16-bit pieces.\nfunction imulShim(a, b) {\n    var ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    var bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexports.mul = Math.imul || imulShim;\n/** 32-bit integer addition.  */\nfunction add(a, b) {\n    return (a + b) | 0;\n}\nexports.add = add;\n/**  32-bit integer subtraction.  */\nfunction sub(a, b) {\n    return (a - b) | 0;\n}\nexports.sub = sub;\n/** 32-bit integer left rotation */\nfunction rotl(x, n) {\n    return x << n | x >>> (32 - n);\n}\nexports.rotl = rotl;\n/** 32-bit integer left rotation */\nfunction rotr(x, n) {\n    return x << (32 - n) | x >>> n;\n}\nexports.rotr = rotr;\nfunction isIntegerShim(n) {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexports.isInteger = Number.isInteger || isIntegerShim;\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexports.isSafeInteger = function (n) {\n    return exports.isInteger(n) && (n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER);\n};\n//# sourceMappingURL=int.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\nvar int_1 = require(\"@stablelib/int\");\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\nexports.readInt16BE = readInt16BE;\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\nexports.readUint16BE = readUint16BE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\nexports.readInt16LE = readInt16LE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\nexports.readUint16LE = readUint16LE;\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\nexports.writeUint16BE = writeUint16BE;\nexports.writeInt16BE = writeUint16BE;\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\nexports.writeUint16LE = writeUint16LE;\nexports.writeInt16LE = writeUint16LE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\nexports.readInt32BE = readInt32BE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\nexports.readUint32BE = readUint32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\nexports.readInt32LE = readInt32LE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\nexports.readUint32LE = readUint32LE;\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\nexports.writeUint32BE = writeUint32BE;\nexports.writeInt32BE = writeUint32BE;\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\nexports.writeUint32LE = writeUint32LE;\nexports.writeInt32LE = writeUint32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readInt32BE(array, offset);\n    var lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64BE = readInt64BE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readUint32BE(array, offset);\n    var lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64BE = readUint64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readInt32LE(array, offset);\n    var hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64LE = readInt64LE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readUint32LE(array, offset);\n    var hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64LE = readUint64LE;\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64BE = writeUint64BE;\nexports.writeInt64BE = writeUint64BE;\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64LE = writeUint64LE;\nexports.writeInt64LE = writeUint64LE;\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintBE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintBE = readUintBE;\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintLE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintLE = readUintLE;\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintBE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintBE = writeUintBE;\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintLE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintLE = writeUintLE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\nexports.readFloat32BE = readFloat32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\nexports.readFloat32LE = readFloat32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\nexports.readFloat64BE = readFloat64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\nexports.readFloat64LE = readFloat64LE;\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\nexports.writeFloat32BE = writeFloat32BE;\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\nexports.writeFloat32LE = writeFloat32LE;\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\nexports.writeFloat64BE = writeFloat64BE;\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\nexports.writeFloat64LE = writeFloat64LE;\n//# sourceMappingURL=binary.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar system_1 = require(\"./source/system\");\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.defaultRandomSource = new system_1.SystemRandomSource();\nfunction randomBytes(length, prng) {\n    if (prng === void 0) { prng = exports.defaultRandomSource; }\n    return prng.randomBytes(length);\n}\nexports.randomBytes = randomBytes;\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nfunction randomUint32(prng) {\n    if (prng === void 0) { prng = exports.defaultRandomSource; }\n    // Generate 4-byte random buffer.\n    var buf = randomBytes(4, prng);\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    var result = binary_1.readUint32LE(buf);\n    // Clean the buffer.\n    wipe_1.wipe(buf);\n    return result;\n}\nexports.randomUint32 = randomUint32;\n/** 62 alphanumeric characters for default charset of randomString() */\nvar ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomString(length, charset, prng) {\n    if (charset === void 0) { charset = ALPHANUMERIC; }\n    if (prng === void 0) { prng = exports.defaultRandomSource; }\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    var out = '';\n    var charsLen = charset.length;\n    var maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        var buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (var i = 0; i < buf.length && length > 0; i++) {\n            var randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe_1.wipe(buf);\n    }\n    return out;\n}\nexports.randomString = randomString;\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomStringForEntropy(bits, charset, prng) {\n    if (charset === void 0) { charset = ALPHANUMERIC; }\n    if (prng === void 0) { prng = exports.defaultRandomSource; }\n    var length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\nexports.randomStringForEntropy = randomStringForEntropy;\n//# sourceMappingURL=random.js.map","export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 32;\nexports.BLOCK_SIZE = 64;\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nvar SHA256 = /** @class */ (function () {\n    function SHA256() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._state = new Int32Array(8); // hash state\n        this._temp = new Int32Array(64); // temporary state\n        this._buffer = new Uint8Array(128); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA256.prototype._initState = function () {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA256.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA256.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._temp);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA256.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA256.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 4; i++) {\n            binary_1.writeUint32BE(this._state[i], out, i * 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA256.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    SHA256.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    SHA256.prototype.restoreState = function (savedState) {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA256.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA256;\n}());\nexports.SHA256 = SHA256;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    while (len >= 64) {\n        var a = v[0];\n        var b = v[1];\n        var c = v[2];\n        var d = v[3];\n        var e = v[4];\n        var f = v[5];\n        var g = v[6];\n        var h = v[7];\n        for (var i = 0; i < 16; i++) {\n            var j = pos + i * 4;\n            w[i] = binary_1.readUint32BE(p, j);\n        }\n        for (var i = 16; i < 64; i++) {\n            var u = w[i - 2];\n            var t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            var t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (var i = 0; i < 64; i++) {\n            var t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            var t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA256();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 64;\nexports.BLOCK_SIZE = 128;\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nvar SHA512 = /** @class */ (function () {\n    function SHA512() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._stateHi = new Int32Array(8); // hash state, high bytes\n        this._stateLo = new Int32Array(8); // hash state, low bytes\n        this._tempHi = new Int32Array(16); // temporary state, high bytes\n        this._tempLo = new Int32Array(16); // temporary state, low bytes\n        this._buffer = new Uint8Array(256); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA512.prototype._initState = function () {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA512.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA512.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._tempHi);\n        wipe_1.wipe(this._tempLo);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA512.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA512.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 8; i++) {\n            binary_1.writeUint32BE(this._stateHi[i], out, i * 8);\n            binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA512.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    SHA512.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    SHA512.prototype.restoreState = function (savedState) {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA512.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.stateHi);\n        wipe_1.wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA512;\n}());\nexports.SHA512 = SHA512;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\nfunction hashBlocks(wh, wl, hh, hl, m, pos, len) {\n    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n    var h, l;\n    var th, tl;\n    var a, b, c, d;\n    while (len >= 128) {\n        for (var i = 0; i < 16; i++) {\n            var j = 8 * i + pos;\n            wh[i] = binary_1.readUint32BE(m, j);\n            wl[i] = binary_1.readUint32BE(m, j + 4);\n        }\n        for (var i = 0; i < 80; i++) {\n            var bh0 = ah0;\n            var bh1 = ah1;\n            var bh2 = ah2;\n            var bh3 = ah3;\n            var bh4 = ah4;\n            var bh5 = ah5;\n            var bh6 = ah6;\n            var bh7 = ah7;\n            var bl0 = al0;\n            var bl1 = al1;\n            var bl2 = al2;\n            var bl3 = al3;\n            var bl4 = al4;\n            var bl5 = al5;\n            var bl6 = al6;\n            var bl7 = al7;\n            // add\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n            // add\n            h = th;\n            l = tl;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n            // add\n            h = bh3;\n            l = bl3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = th;\n            l = tl;\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n            if (i % 16 === 15) {\n                for (var j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n                    a = l & 0xffff;\n                    b = l >>> 16;\n                    c = h & 0xffff;\n                    d = h >>> 16;\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n        // add\n        h = ah0;\n        l = al0;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[0];\n        l = hl[0];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n        h = ah1;\n        l = al1;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[1];\n        l = hl[1];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n        h = ah2;\n        l = al2;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[2];\n        l = hl[2];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n        h = ah3;\n        l = al3;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[3];\n        l = hl[3];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n        h = ah4;\n        l = al4;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[4];\n        l = hl[4];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n        h = ah5;\n        l = al5;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[5];\n        l = hl[5];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n        h = ah6;\n        l = al6;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[6];\n        l = hl[6];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n        h = ah7;\n        l = al7;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[7];\n        l = hl[7];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n        pos += 128;\n        len -= 128;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA512();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\nvar random_1 = require(\"@stablelib/random\");\nvar sha512_1 = require(\"@stablelib/sha512\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.SIGNATURE_LENGTH = 64;\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 64;\nexports.SEED_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    var r = new Float64Array(16);\n    if (init) {\n        for (var i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nvar _9 = new Uint8Array(32);\n_9[0] = 9;\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\nvar D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\nvar X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\nvar Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\nvar I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\nfunction set25519(r, a) {\n    for (var i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\nfunction car25519(o) {\n    var c = 1;\n    for (var i = 0; i < 16; i++) {\n        var v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    var c = ~(b - 1);\n    for (var i = 0; i < 16; i++) {\n        var t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    var m = gf();\n    var t = gf();\n    for (var i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (var j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (var i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        var b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (var i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction verify32(x, y) {\n    var d = 0;\n    for (var i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction neq25519(a, b) {\n    var c = new Uint8Array(32);\n    var d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\nfunction par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\nfunction unpack25519(o, n) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction edadd(p, q) {\n    var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\nfunction cswap(p, q, b) {\n    for (var i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\nfunction pack(r, p) {\n    var tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\nfunction scalarmult(p, q, s) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (var i = 255; i >= 0; --i) {\n        var b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\nfunction scalarbase(p, s) {\n    var q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n// Generates key pair from secret 32-byte seed.\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SEED_LENGTH) {\n        throw new Error(\"ed25519: seed must be \" + exports.SEED_LENGTH + \" bytes\");\n    }\n    var d = sha512_1.hash(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    var publicKey = new Uint8Array(32);\n    var p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n    var secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return {\n        publicKey: publicKey,\n        secretKey: secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    var seed = random_1.randomBytes(32, prng);\n    var result = generateKeyPairFromSeed(seed);\n    wipe_1.wipe(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\nfunction extractPublicKeyFromSecretKey(secretKey) {\n    if (secretKey.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(\"ed25519: secret key must be \" + exports.SECRET_KEY_LENGTH + \" bytes\");\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\nexports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;\nvar L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\nfunction modL(r, x) {\n    var carry;\n    var i;\n    var j;\n    var k;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\nfunction reduce(r) {\n    var x = new Float64Array(64);\n    for (var i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (var i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n// Returns 64-byte signature of the message under the 64-byte secret key.\nfunction sign(secretKey, message) {\n    var x = new Float64Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    var d = sha512_1.hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    var signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n    var hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    var r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    var h = hs.digest();\n    reduce(h);\n    for (var i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (var i = 0; i < 32; i++) {\n        for (var j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n    return signature;\n}\nexports.sign = sign;\nfunction unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\nfunction verify(publicKey, message, signature) {\n    var t = new Uint8Array(32);\n    var p = [gf(), gf(), gf(), gf()];\n    var q = [gf(), gf(), gf(), gf()];\n    if (signature.length !== exports.SIGNATURE_LENGTH) {\n        throw new Error(\"ed25519: signature must be \" + exports.SIGNATURE_LENGTH + \" bytes\");\n    }\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n    var hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    var h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\nexports.verify = verify;\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nfunction convertPublicKeyToX25519(publicKey) {\n    var q = [gf(), gf(), gf(), gf()];\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    var a = gf();\n    var b = gf();\n    var y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n    var z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\nexports.convertPublicKeyToX25519 = convertPublicKeyToX25519;\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nfunction convertSecretKeyToX25519(secretKey) {\n    var d = sha512_1.hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    var o = new Uint8Array(d.subarray(0, 32));\n    wipe_1.wipe(d);\n    return o;\n}\nexports.convertSecretKeyToX25519 = convertSecretKeyToX25519;\n//# sourceMappingURL=ed25519.js.map","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package x25519 implements X25519 key agreement.\n */\nvar random_1 = require(\"@stablelib/random\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    var r = new Float64Array(16);\n    if (init) {\n        for (var i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nvar _9 = new Uint8Array(32);\n_9[0] = 9;\nvar _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n    var c = 1;\n    for (var i = 0; i < 16; i++) {\n        var v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    var c = ~(b - 1);\n    for (var i = 0; i < 16; i++) {\n        var t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    var m = gf();\n    var t = gf();\n    for (var i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (var j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (var i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        var b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (var i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction unpack25519(o, n) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n    var c = gf();\n    for (var i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (var i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (var i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\nfunction scalarMult(n, p) {\n    var z = new Uint8Array(32);\n    var x = new Float64Array(80);\n    var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (var i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (var i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n    a[0] = d[0] = 1;\n    for (var i = 254; i >= 0; --i) {\n        var r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (var i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    var x32 = x.subarray(32);\n    var x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    var q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n    return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(\"x25519: seed must be \" + exports.SECRET_KEY_LENGTH + \" bytes\");\n    }\n    var secretKey = new Uint8Array(seed);\n    var publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey: publicKey,\n        secretKey: secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    var seed = random_1.randomBytes(32, prng);\n    var result = generateKeyPairFromSeed(seed);\n    wipe_1.wipe(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey, rejectZero) {\n    if (rejectZero === void 0) { rejectZero = false; }\n    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n    var result = scalarMult(mySecretKey, theirPublicKey);\n    if (rejectZero) {\n        var zeros = 0;\n        for (var i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n    return result;\n}\nexports.sharedKey = sharedKey;\n//# sourceMappingURL=x25519.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package chacha implements ChaCha stream cipher.\n */\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n// Number of ChaCha rounds (ChaCha20).\nvar ROUNDS = 20;\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out, input, key) {\n    var j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    var j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    var j2 = 0x79622D32; // \"2-by\"\n    var j3 = 0x6B206574; // \"te k\"\n    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    var j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    var j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    var j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    var j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n    var x0 = j0;\n    var x1 = j1;\n    var x2 = j2;\n    var x3 = j3;\n    var x4 = j4;\n    var x5 = j5;\n    var x6 = j6;\n    var x7 = j7;\n    var x8 = j8;\n    var x9 = j9;\n    var x10 = j10;\n    var x11 = j11;\n    var x12 = j12;\n    var x13 = j13;\n    var x14 = j14;\n    var x15 = j15;\n    for (var i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    binary_1.writeUint32LE(x0 + j0 | 0, out, 0);\n    binary_1.writeUint32LE(x1 + j1 | 0, out, 4);\n    binary_1.writeUint32LE(x2 + j2 | 0, out, 8);\n    binary_1.writeUint32LE(x3 + j3 | 0, out, 12);\n    binary_1.writeUint32LE(x4 + j4 | 0, out, 16);\n    binary_1.writeUint32LE(x5 + j5 | 0, out, 20);\n    binary_1.writeUint32LE(x6 + j6 | 0, out, 24);\n    binary_1.writeUint32LE(x7 + j7 | 0, out, 28);\n    binary_1.writeUint32LE(x8 + j8 | 0, out, 32);\n    binary_1.writeUint32LE(x9 + j9 | 0, out, 36);\n    binary_1.writeUint32LE(x10 + j10 | 0, out, 40);\n    binary_1.writeUint32LE(x11 + j11 | 0, out, 44);\n    binary_1.writeUint32LE(x12 + j12 | 0, out, 48);\n    binary_1.writeUint32LE(x13 + j13 | 0, out, 52);\n    binary_1.writeUint32LE(x14 + j14 | 0, out, 56);\n    binary_1.writeUint32LE(x15 + j15 | 0, out, 60);\n}\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nfunction streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n    var nc;\n    var counterLength;\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    }\n    else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n    // Allocate temporary space for ChaCha block.\n    var block = new Uint8Array(64);\n    for (var i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n        // XOR block bytes with src into dst.\n        for (var j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n    // Cleanup temporary space.\n    wipe_1.wipe(block);\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe_1.wipe(nc);\n    }\n    return dst;\n}\nexports.streamXOR = streamXOR;\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nfunction stream(key, nonce, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    wipe_1.wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\nexports.stream = stream;\nfunction incrementCounter(counter, pos, len) {\n    var carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n//# sourceMappingURL=chacha.js.map","\"use strict\";\n// Copyright (C) 2019 Kyle Den Hartog\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package xchacha20 implements XChaCha20 stream cipher.\n */\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar chacha_1 = require(\"@stablelib/chacha\");\n// Number of ChaCha rounds (ChaCha20).\nvar ROUNDS = 20;\n/**\n * Encrypt src with XChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * Nonce length is set in such a way that given it's generated via a CSPRNG\n * then there's little concern of collision for roughly 2^96 messages while\n * reusing a secret key and not encountering nonce reuse vulnerabilities.\n */\nfunction streamXOR(key, nonce, src, dst) {\n    if (nonce.length !== 24) {\n        throw new Error(\"XChaCha20 nonce must be 24 bytes\");\n    }\n    // Use HChaCha one-way function to transform first 16 bytes of\n    // 24-byte extended nonce and key into a new key for Salsa\n    // stream -- \"subkey\".\n    var subkey = hchacha(key, nonce.subarray(0, 16), new Uint8Array(32));\n    // Use last 8 bytes of 24-byte extended nonce as an actual nonce prefixed by 4 zero bytes,\n    // and a subkey derived in the previous step as key to encrypt.\n    var modifiedNonce = new Uint8Array(12);\n    modifiedNonce.set(nonce.subarray(16), 4);\n    // If nonceInplaceCounterLength > 0, we'll still pass the correct\n    // nonce || counter, as we don't limit the end of nonce subarray.\n    var result = chacha_1.streamXOR(subkey, modifiedNonce, src, dst);\n    // Clean subkey.\n    wipe_1.wipe(subkey);\n    return result;\n}\nexports.streamXOR = streamXOR;\n/**\n * Generate XChaCha20 stream for the given 32-byte key and 12-byte\n * nonce (last 8 bytes of 24 byte nonce prefixed with 4 zero bytes)\n * and write it into dst and return it.\n *\n * Nonces MUST be generated using an CSPRNG to generate a sufficiently\n * random nonce such that a collision is highly unlikely to occur.\n *\n * stream is like streamXOR with all-zero src.\n */\nfunction stream(key, nonce, dst) {\n    wipe_1.wipe(dst);\n    return streamXOR(key, nonce, dst, dst);\n}\nexports.stream = stream;\n/**\n * HChaCha is a one-way function used in XChaCha to extend nonce.\n *\n * It takes 32-byte key and 16-byte src and writes 32-byte result\n * into dst and returns it.\n */\nfunction hchacha(key, src, dst) {\n    var j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    var j1 = 0x3320646e; // \"nd 3\"     for 32-byte keys\n    var j2 = 0x79622d32; // \"2-by\"\n    var j3 = 0x6b206574; // \"te k\"\n    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    var j12 = (src[3] << 24) | (src[2] << 16) | (src[1] << 8) | src[0];\n    var j13 = (src[7] << 24) | (src[6] << 16) | (src[5] << 8) | src[4];\n    var j14 = (src[11] << 24) | (src[10] << 16) | (src[9] << 8) | src[8];\n    var j15 = (src[15] << 24) | (src[14] << 16) | (src[13] << 8) | src[12];\n    var x0 = j0;\n    var x1 = j1;\n    var x2 = j2;\n    var x3 = j3;\n    var x4 = j4;\n    var x5 = j5;\n    var x6 = j6;\n    var x7 = j7;\n    var x8 = j8;\n    var x9 = j9;\n    var x10 = j10;\n    var x11 = j11;\n    var x12 = j12;\n    var x13 = j13;\n    var x14 = j14;\n    var x15 = j15;\n    for (var i = 0; i < ROUNDS; i += 2) {\n        x0 = (x0 + x4) | 0;\n        x12 ^= x0;\n        x12 = (x12 >>> (32 - 16)) | (x12 << 16);\n        x8 = (x8 + x12) | 0;\n        x4 ^= x8;\n        x4 = (x4 >>> (32 - 12)) | (x4 << 12);\n        x1 = (x1 + x5) | 0;\n        x13 ^= x1;\n        x13 = (x13 >>> (32 - 16)) | (x13 << 16);\n        x9 = (x9 + x13) | 0;\n        x5 ^= x9;\n        x5 = (x5 >>> (32 - 12)) | (x5 << 12);\n        x2 = (x2 + x6) | 0;\n        x14 ^= x2;\n        x14 = (x14 >>> (32 - 16)) | (x14 << 16);\n        x10 = (x10 + x14) | 0;\n        x6 ^= x10;\n        x6 = (x6 >>> (32 - 12)) | (x6 << 12);\n        x3 = (x3 + x7) | 0;\n        x15 ^= x3;\n        x15 = (x15 >>> (32 - 16)) | (x15 << 16);\n        x11 = (x11 + x15) | 0;\n        x7 ^= x11;\n        x7 = (x7 >>> (32 - 12)) | (x7 << 12);\n        x2 = (x2 + x6) | 0;\n        x14 ^= x2;\n        x14 = (x14 >>> (32 - 8)) | (x14 << 8);\n        x10 = (x10 + x14) | 0;\n        x6 ^= x10;\n        x6 = (x6 >>> (32 - 7)) | (x6 << 7);\n        x3 = (x3 + x7) | 0;\n        x15 ^= x3;\n        x15 = (x15 >>> (32 - 8)) | (x15 << 8);\n        x11 = (x11 + x15) | 0;\n        x7 ^= x11;\n        x7 = (x7 >>> (32 - 7)) | (x7 << 7);\n        x1 = (x1 + x5) | 0;\n        x13 ^= x1;\n        x13 = (x13 >>> (32 - 8)) | (x13 << 8);\n        x9 = (x9 + x13) | 0;\n        x5 ^= x9;\n        x5 = (x5 >>> (32 - 7)) | (x5 << 7);\n        x0 = (x0 + x4) | 0;\n        x12 ^= x0;\n        x12 = (x12 >>> (32 - 8)) | (x12 << 8);\n        x8 = (x8 + x12) | 0;\n        x4 ^= x8;\n        x4 = (x4 >>> (32 - 7)) | (x4 << 7);\n        x0 = (x0 + x5) | 0;\n        x15 ^= x0;\n        x15 = (x15 >>> (32 - 16)) | (x15 << 16);\n        x10 = (x10 + x15) | 0;\n        x5 ^= x10;\n        x5 = (x5 >>> (32 - 12)) | (x5 << 12);\n        x1 = (x1 + x6) | 0;\n        x12 ^= x1;\n        x12 = (x12 >>> (32 - 16)) | (x12 << 16);\n        x11 = (x11 + x12) | 0;\n        x6 ^= x11;\n        x6 = (x6 >>> (32 - 12)) | (x6 << 12);\n        x2 = (x2 + x7) | 0;\n        x13 ^= x2;\n        x13 = (x13 >>> (32 - 16)) | (x13 << 16);\n        x8 = (x8 + x13) | 0;\n        x7 ^= x8;\n        x7 = (x7 >>> (32 - 12)) | (x7 << 12);\n        x3 = (x3 + x4) | 0;\n        x14 ^= x3;\n        x14 = (x14 >>> (32 - 16)) | (x14 << 16);\n        x9 = (x9 + x14) | 0;\n        x4 ^= x9;\n        x4 = (x4 >>> (32 - 12)) | (x4 << 12);\n        x2 = (x2 + x7) | 0;\n        x13 ^= x2;\n        x13 = (x13 >>> (32 - 8)) | (x13 << 8);\n        x8 = (x8 + x13) | 0;\n        x7 ^= x8;\n        x7 = (x7 >>> (32 - 7)) | (x7 << 7);\n        x3 = (x3 + x4) | 0;\n        x14 ^= x3;\n        x14 = (x14 >>> (32 - 8)) | (x14 << 8);\n        x9 = (x9 + x14) | 0;\n        x4 ^= x9;\n        x4 = (x4 >>> (32 - 7)) | (x4 << 7);\n        x1 = (x1 + x6) | 0;\n        x12 ^= x1;\n        x12 = (x12 >>> (32 - 8)) | (x12 << 8);\n        x11 = (x11 + x12) | 0;\n        x6 ^= x11;\n        x6 = (x6 >>> (32 - 7)) | (x6 << 7);\n        x0 = (x0 + x5) | 0;\n        x15 ^= x0;\n        x15 = (x15 >>> (32 - 8)) | (x15 << 8);\n        x10 = (x10 + x15) | 0;\n        x5 ^= x10;\n        x5 = (x5 >>> (32 - 7)) | (x5 << 7);\n    }\n    binary_1.writeUint32LE(x0, dst, 0);\n    binary_1.writeUint32LE(x1, dst, 4);\n    binary_1.writeUint32LE(x2, dst, 8);\n    binary_1.writeUint32LE(x3, dst, 12);\n    binary_1.writeUint32LE(x12, dst, 16);\n    binary_1.writeUint32LE(x13, dst, 20);\n    binary_1.writeUint32LE(x14, dst, 24);\n    binary_1.writeUint32LE(x15, dst, 28);\n    return dst;\n}\nexports.hchacha = hchacha;\n//# sourceMappingURL=xchacha20.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nfunction select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\nexports.select = select;\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nfunction lessOrEqual(a, b) {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\nexports.lessOrEqual = lessOrEqual;\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nfunction compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\nexports.compare = compare;\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nfunction equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\nexports.equal = equal;\n//# sourceMappingURL=constant-time.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 16;\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nvar Poly1305 = /** @class */ (function () {\n    function Poly1305(key) {\n        this.digestLength = exports.DIGEST_LENGTH;\n        this._buffer = new Uint8Array(16);\n        this._r = new Uint16Array(10);\n        this._h = new Uint16Array(10);\n        this._pad = new Uint16Array(8);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = false;\n        var t0 = key[0] | key[1] << 8;\n        this._r[0] = (t0) & 0x1fff;\n        var t1 = key[2] | key[3] << 8;\n        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        var t2 = key[4] | key[5] << 8;\n        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        var t3 = key[6] | key[7] << 8;\n        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        var t4 = key[8] | key[9] << 8;\n        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        var t5 = key[10] | key[11] << 8;\n        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        var t6 = key[12] | key[13] << 8;\n        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        var t7 = key[14] | key[15] << 8;\n        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n    Poly1305.prototype._blocks = function (m, mpos, bytes) {\n        var hibit = this._fin ? 0 : 1 << 11;\n        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];\n        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];\n        while (bytes >= 16) {\n            var t0 = m[mpos + 0] | m[mpos + 1] << 8;\n            h0 += (t0) & 0x1fff;\n            var t1 = m[mpos + 2] | m[mpos + 3] << 8;\n            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            var t2 = m[mpos + 4] | m[mpos + 5] << 8;\n            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            var t3 = m[mpos + 6] | m[mpos + 7] << 8;\n            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            var t4 = m[mpos + 8] | m[mpos + 9] << 8;\n            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            var t5 = m[mpos + 10] | m[mpos + 11] << 8;\n            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            var t6 = m[mpos + 12] | m[mpos + 13] << 8;\n            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            var t7 = m[mpos + 14] | m[mpos + 15] << 8;\n            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n            var c = 0;\n            var d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13);\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13);\n            d0 &= 0x1fff;\n            var d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13);\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13);\n            d1 &= 0x1fff;\n            var d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13);\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13);\n            d2 &= 0x1fff;\n            var d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13);\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13);\n            d3 &= 0x1fff;\n            var d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13);\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13);\n            d4 &= 0x1fff;\n            var d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13);\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13);\n            d5 &= 0x1fff;\n            var d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13);\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13);\n            d6 &= 0x1fff;\n            var d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13);\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13);\n            d7 &= 0x1fff;\n            var d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13);\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13);\n            d8 &= 0x1fff;\n            var d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13);\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13);\n            d9 &= 0x1fff;\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    };\n    Poly1305.prototype.finish = function (mac, macpos) {\n        if (macpos === void 0) { macpos = 0; }\n        var g = new Uint16Array(10);\n        var c;\n        var mask;\n        var f;\n        var i;\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n        this._finished = true;\n        return this;\n    };\n    Poly1305.prototype.update = function (m) {\n        var mpos = 0;\n        var bytes = m.length;\n        var want;\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (var i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for (var i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n        return this;\n    };\n    Poly1305.prototype.digest = function () {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        var mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    };\n    Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._r);\n        wipe_1.wipe(this._h);\n        wipe_1.wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    };\n    return Poly1305;\n}());\nexports.Poly1305 = Poly1305;\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nfunction oneTimeAuth(key, data) {\n    var h = new Poly1305(key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.oneTimeAuth = oneTimeAuth;\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nfunction equal(a, b) {\n    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {\n        return false;\n    }\n    return constant_time_1.equal(a, b);\n}\nexports.equal = equal;\n//# sourceMappingURL=poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chacha_1 = require(\"@stablelib/chacha\");\nvar poly1305_1 = require(\"@stablelib/poly1305\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar binary_1 = require(\"@stablelib/binary\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nexports.KEY_LENGTH = 32;\nexports.NONCE_LENGTH = 12;\nexports.TAG_LENGTH = 16;\nvar ZEROS = new Uint8Array(16);\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nvar ChaCha20Poly1305 = /** @class */ (function () {\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    function ChaCha20Poly1305(key) {\n        this.nonceLength = exports.NONCE_LENGTH;\n        this.tagLength = exports.TAG_LENGTH;\n        if (key.length !== exports.KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Allocate space for sealed ciphertext.\n        var resultLength = plaintext.length + this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Encrypt plaintext.\n        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        var calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n        // Constant-time compare tags and return null if they differ.\n        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n        // Allocate space for decrypted plaintext.\n        var resultLength = sealed.length - this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Decrypt.\n        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    ChaCha20Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._key);\n        return this;\n    };\n    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {\n        // Initialize Poly1305 with authKey.\n        var h = new poly1305_1.Poly1305(authKey);\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        var length = new Uint8Array(8);\n        if (associatedData) {\n            binary_1.writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n        // Authenticate length of ciphertext.\n        binary_1.writeUint64LE(ciphertext.length, length);\n        h.update(length);\n        // Get tag and copy it into tagOut.\n        var tag = h.digest();\n        for (var i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n        // Cleanup.\n        h.clean();\n        wipe_1.wipe(tag);\n        wipe_1.wipe(length);\n    };\n    return ChaCha20Poly1305;\n}());\nexports.ChaCha20Poly1305 = ChaCha20Poly1305;\n//# sourceMappingURL=chacha20poly1305.js.map","\"use strict\";\n// Copyright (C) 2019 Kyle Den Hartog\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xchacha20_1 = require(\"@stablelib/xchacha20\");\nvar chacha20poly1305_1 = require(\"@stablelib/chacha20poly1305\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.KEY_LENGTH = 32;\nexports.NONCE_LENGTH = 24;\nexports.TAG_LENGTH = 16;\n/**\n * XChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in draft-irtf-cfrg-xchacha-01.\n * See https://tools.ietf.org/html/draft-irtf-cfrg-xchacha-01\n */\nvar XChaCha20Poly1305 = /** @class */ (function () {\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    function XChaCha20Poly1305(key) {\n        this.nonceLength = exports.NONCE_LENGTH;\n        this.tagLength = exports.TAG_LENGTH;\n        if (key.length !== exports.KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * draft-irtf-cfrg-xchacha-01 defines a 24 byte nonce (192 bits) which\n     * uses the first 16 bytes of the nonce and the secret key with\n     * HChaCha to generate an initial subkey. The last 8 bytes of the nonce\n     * are then prefixed with 4 zero bytes and then provided with the subkey\n     * to the ChaCha20Poly1305 implementation.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    XChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {\n        if (nonce.length !== 24) {\n            throw new Error(\"XChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Use HSalsa one-way function to transform first 16 bytes of\n        // 24-byte extended nonce and key into a new key for Salsa\n        // stream -- \"subkey\".\n        var subKey = xchacha20_1.hchacha(this._key, nonce.subarray(0, 16), new Uint8Array(32));\n        // Use last 8 bytes of 24-byte extended nonce as an actual nonce prefixed by 4 zero bytes,\n        // and a subkey derived in the previous step as key to encrypt.\n        var modifiedNonce = new Uint8Array(12);\n        modifiedNonce.set(nonce.subarray(16), 4);\n        var chaChaPoly = new chacha20poly1305_1.ChaCha20Poly1305(subKey);\n        var result = chaChaPoly.seal(modifiedNonce, plaintext, associatedData, dst);\n        wipe_1.wipe(subKey);\n        wipe_1.wipe(modifiedNonce);\n        chaChaPoly.clean();\n        return result;\n    };\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * draft-irtf-cfrg-xchacha-01 defines a 24 byte nonce (192 bits) which\n     * then uses the first 16 bytes of the nonce and the secret key with\n     * Hchacha to generate an initial subkey. The last 8 bytes of the nonce\n     * are then prefixed with 4 zero bytes and then provided with the subkey\n     * to the chacha20poly1305 implementation.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    XChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {\n        if (nonce.length !== 24) {\n            throw new Error(\"XChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        /**\n        * Generate subKey by using HChaCha20 function as defined\n        * in section 2 step 1 of draft-irtf-cfrg-xchacha-01\n        */\n        var subKey = xchacha20_1.hchacha(this._key, nonce.subarray(0, 16), new Uint8Array(32));\n        /**\n        * Generate Nonce as defined - remaining 8 bytes of the nonce prefixed with\n        * 4 zero bytes\n        */\n        var modifiedNonce = new Uint8Array(12);\n        modifiedNonce.set(nonce.subarray(16), 4);\n        /**\n         * Authenticate and decrypt by calling into chacha20poly1305.\n         */\n        var chaChaPoly = new chacha20poly1305_1.ChaCha20Poly1305(subKey);\n        var result = chaChaPoly.open(modifiedNonce, sealed, associatedData, dst);\n        wipe_1.wipe(subKey);\n        wipe_1.wipe(modifiedNonce);\n        chaChaPoly.clean();\n        return result;\n    };\n    XChaCha20Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._key);\n        return this;\n    };\n    return XChaCha20Poly1305;\n}());\nexports.XChaCha20Poly1305 = XChaCha20Poly1305;\n//# sourceMappingURL=xchacha20poly1305.js.map","import * as u8a from 'uint8arrays';\nimport { fromString } from 'uint8arrays';\nimport { bases } from 'multiformats/basics';\nimport { hash } from '@stablelib/sha256';\nimport sha3 from 'js-sha3';\nimport elliptic from 'elliptic';\nimport { sign, verify } from '@stablelib/ed25519';\nimport canonicalizeData from 'canonicalize';\nimport { bech32 } from 'bech32';\nimport { sharedKey, generateKeyPair } from '@stablelib/x25519';\nimport { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305';\nimport { randomBytes } from '@stablelib/random';\nimport { fromString as fromString$1 } from 'uint8arrays/from-string';\n\nfunction bytesToBase64url(b) {\n  return u8a.toString(b, 'base64url');\n}\nfunction base64ToBytes(s) {\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  return u8a.fromString(inputBase64Url, 'base64url');\n}\nfunction base58ToBytes(s) {\n  return u8a.fromString(s, 'base58btc');\n}\nfunction bytesToBase58(b) {\n  return u8a.toString(b, 'base58btc');\n}\nfunction hexToBytes(s) {\n  const input = s.startsWith('0x') ? s.substring(2) : s;\n  return u8a.fromString(input.toLowerCase(), 'base16');\n}\nfunction encodeBase64url(s) {\n  return bytesToBase64url(u8a.fromString(s));\n}\nfunction decodeBase64url(s) {\n  return u8a.toString(base64ToBytes(s));\n}\nfunction bytesToHex(b) {\n  return u8a.toString(b, 'base16');\n}\nfunction stringToBytes(s) {\n  return u8a.fromString(s);\n}\nfunction toJose({\n  r,\n  s,\n  recoveryParam\n}, recoverable) {\n  const jose = new Uint8Array(recoverable ? 65 : 64);\n  jose.set(u8a.fromString(r, 'base16'), 0);\n  jose.set(u8a.fromString(s, 'base16'), 32);\n\n  if (recoverable) {\n    if (typeof recoveryParam === 'undefined') {\n      throw new Error('Signer did not return a recoveryParam');\n    }\n\n    jose[64] = recoveryParam;\n  }\n\n  return bytesToBase64url(jose);\n}\nfunction fromJose(signature) {\n  const signatureBytes = base64ToBytes(signature);\n\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`);\n  }\n\n  const r = bytesToHex(signatureBytes.slice(0, 32));\n  const s = bytesToHex(signatureBytes.slice(32, 64));\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined;\n  return {\n    r,\n    s,\n    recoveryParam\n  };\n}\nfunction toSealed(ciphertext, tag) {\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)]);\n}\nconst hexMatcher = /^(0x)?([a-fA-F0-9]{64}|[a-fA-F0-9]{128})$/;\nconst base58Matcher = /^([1-9A-HJ-NP-Za-km-z]{44}|[1-9A-HJ-NP-Za-km-z]{88})$/;\nconst base64Matcher = /^([0-9a-zA-Z=\\-_+/]{43}|[0-9a-zA-Z=\\-_+/]{86})(={0,2})$/;\n/**\r\n * Parses a private key and returns the Uint8Array representation.\r\n * This method uses an heuristic to determine the key encoding to then be able to parse it into 32 or 64 bytes.\r\n *\r\n * @param input a 32 or 64 byte key presented either as a Uint8Array or as a hex, base64, or base58btc encoded string\r\n *\r\n * @throws TypeError('Invalid private key format') if the key doesn't match any of the accepted formats or length\r\n */\n\nfunction parseKey(input) {\n  if (typeof input === 'string') {\n    if (hexMatcher.test(input)) {\n      return hexToBytes(input);\n    } else if (base58Matcher.test(input)) {\n      return base58ToBytes(input);\n    } else if (base64Matcher.test(input)) {\n      return base64ToBytes(input);\n    } else {\n      throw TypeError('bad_key: Invalid private key format');\n    }\n  } else if (input instanceof Uint8Array) {\n    return input;\n  } else {\n    throw TypeError('bad_key: Invalid private key format');\n  }\n}\nfunction leftpad(data, size = 64) {\n  if (data.length === size) return data;\n  return '0'.repeat(size - data.length) + data;\n}\n\nfunction sha256(payload) {\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload;\n  return hash(data);\n}\nfunction keccak(data) {\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data));\n}\nfunction toEthereumAddress(hexPublicKey) {\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16');\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`;\n}\n\nfunction writeUint32BE(value, array = new Uint8Array(4)) {\n  const encoded = u8a.fromString(value.toString(), 'base10');\n  array.set(encoded, 4 - encoded.length);\n  return array;\n}\n\nconst lengthAndInput = input => u8a.concat([writeUint32BE(input.length), input]); // This implementation of concatKDF was inspired by these two implementations:\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\n\n\nfunction concatKDF(secret, keyLen, alg, producerInfo, consumerInfo) {\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`);\n  const value = u8a.concat([lengthAndInput(u8a.fromString(alg)), lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), writeUint32BE(keyLen)]); // since our key lenght is 256 we only have to do one round\n\n  const roundNumber = 1;\n  return hash(u8a.concat([writeUint32BE(roundNumber), secret, value]));\n}\n\nconst secp256k1$1 = new elliptic.ec('secp256k1');\n/**\r\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array` or encoded as `base64`, `base58`, or `hex` string\r\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\n\nfunction ES256KSigner(privateKey, recoverable = false) {\n  const privateKeyBytes = parseKey(privateKey);\n\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`);\n  }\n\n  const keyPair = secp256k1$1.keyFromPrivate(privateKeyBytes);\n  return function (data) {\n    try {\n      const {\n        r,\n        s,\n        recoveryParam\n      } = keyPair.sign(sha256(data));\n      return Promise.resolve(toJose({\n        r: leftpad(r.toString('hex')),\n        s: leftpad(s.toString('hex')),\n        recoveryParam\n      }, recoverable));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The SimpleSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\r\n *  signer(data, (err, signature) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\n\nfunction SimpleSigner(hexPrivateKey) {\n  const signer = ES256KSigner(hexPrivateKey, true);\n  return function (data) {\n    try {\n      return Promise.resolve(signer(data)).then(fromJose);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The EllipticSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                        a configured signer function\r\n */\n\nfunction EllipticSigner(hexPrivateKey) {\n  return ES256KSigner(hexPrivateKey);\n}\n\n/**\r\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array` or encoded as `base64`, `base58`, or `hex` string\r\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\n\nfunction EdDSASigner(secretKey) {\n  const privateKeyBytes = parseKey(secretKey);\n\n  if (privateKeyBytes.length !== 64) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`);\n  }\n\n  return function (data) {\n    try {\n      const dataBytes = typeof data === 'string' ? stringToBytes(data) : data;\n      const sig = sign(privateKeyBytes, dataBytes);\n      return Promise.resolve(bytesToBase64url(sig));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\n/**\r\n * @deprecated Please use EdDSASigner\r\n *\r\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\r\n *\r\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\r\n *\r\n *  @example\r\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\r\n *  const data: string = '...'\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\n\nfunction NaclSigner(base64PrivateKey) {\n  return EdDSASigner(base64PrivateKey);\n}\n\nfunction instanceOfEcdsaSignature(object) {\n  return typeof object === 'object' && 'r' in object && 's' in object;\n}\n\nfunction ES256KSignerAlg(recoverable) {\n  return function sign(payload, signer) {\n    try {\n      return Promise.resolve(signer(payload)).then(function (signature) {\n        if (instanceOfEcdsaSignature(signature)) {\n          return toJose(signature, recoverable);\n        } else {\n          if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\n            throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`);\n          }\n\n          return signature;\n        }\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\nfunction Ed25519SignerAlg() {\n  return function sign(payload, signer) {\n    try {\n      return Promise.resolve(signer(payload)).then(function (signature) {\n        if (!instanceOfEcdsaSignature(signature)) {\n          return signature;\n        } else {\n          throw new Error('invalid_config: expected a signer function that returns a string instead of signature object');\n        }\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\nconst algorithms$1 = {\n  ES256K: ES256KSignerAlg(),\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': ES256KSignerAlg(true),\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: Ed25519SignerAlg(),\n  EdDSA: Ed25519SignerAlg()\n};\n\nfunction SignerAlg(alg) {\n  const impl = algorithms$1[alg];\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`);\n  return impl;\n}\n\n// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\nconst zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nconst zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nconst sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nconst sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];\n\nfunction rotl(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction fn1(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn2(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn3(a, b, c, d, e, m, k, s) {\n  return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn4(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn5(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;\n}\n\nclass Ripemd160 {\n  // state\n  constructor(blockSize = 64) {\n    this._a = 0x67452301;\n    this._b = 0xefcdab89;\n    this._c = 0x98badcfe;\n    this._d = 0x10325476;\n    this._e = 0xc3d2e1f0;\n    this._blockOffset = 0;\n    this._block = void 0;\n    this._blockSize = void 0;\n    this._length = [0, 0, 0, 0];\n    this._finalized = void 0;\n\n    this.update = data => {\n      if (this._finalized) throw new Error('Digest already called'); // consume data\n\n      const block = this._block;\n      let offset = 0;\n\n      while (this._blockOffset + data.length - offset >= this._blockSize) {\n        for (let i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];\n\n        this._update();\n\n        this._blockOffset = 0;\n      }\n\n      while (offset < data.length) block[this._blockOffset++] = data[offset++]; // update length\n\n\n      for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n        this._length[j] += carry;\n        carry = this._length[j] / 0x0100000000 | 0;\n        if (carry > 0) this._length[j] -= 0x0100000000 * carry;\n      }\n\n      return this;\n    };\n\n    this.digest = () => {\n      if (this._finalized) throw new Error('Digest already called');\n      this._finalized = true;\n\n      const digest = this._digest(); // reset state\n\n\n      this._block.fill(0);\n\n      this._blockOffset = 0;\n\n      for (let i = 0; i < 4; ++i) this._length[i] = 0;\n\n      return digest;\n    };\n\n    this._update = () => {\n      const words = new Array(16);\n      const temp = new DataView(this._block.buffer);\n\n      for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true);\n\n      let al = this._a | 0;\n      let bl = this._b | 0;\n      let cl = this._c | 0;\n      let dl = this._d | 0;\n      let el = this._e | 0;\n      let ar = this._a | 0;\n      let br = this._b | 0;\n      let cr = this._c | 0;\n      let dr = this._d | 0;\n      let er = this._e | 0; // computation\n\n      for (let i = 0; i < 80; i += 1) {\n        let tl;\n        let tr;\n\n        if (i < 16) {\n          tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n          tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n        } else if (i < 32) {\n          tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n          tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n        } else if (i < 48) {\n          tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n          tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n        } else if (i < 64) {\n          tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n          tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n        } else {\n          // if (i<80) {\n          tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n          tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n        }\n\n        al = el;\n        el = dl;\n        dl = rotl(cl, 10);\n        cl = bl;\n        bl = tl;\n        ar = er;\n        er = dr;\n        dr = rotl(cr, 10);\n        cr = br;\n        br = tr;\n      } // update state\n\n\n      const t = this._b + cl + dr | 0;\n      this._b = this._c + dl + er | 0;\n      this._c = this._d + el + ar | 0;\n      this._d = this._e + al + br | 0;\n      this._e = this._a + bl + cr | 0;\n      this._a = t;\n    };\n\n    this._digest = () => {\n      // create padding and handle blocks\n      this._block[this._blockOffset++] = 0x80;\n\n      if (this._blockOffset > 56) {\n        this._block.fill(0, this._blockOffset, 64);\n\n        this._update();\n\n        this._blockOffset = 0;\n      }\n\n      this._block.fill(0, this._blockOffset, 56);\n\n      const temp = new DataView(this._block.buffer);\n      temp.setUint32(56, this._length[0], true);\n      temp.setUint32(60, this._length[1], true);\n      this._block = new Uint8Array(temp.buffer);\n\n      this._update(); // produce result\n\n\n      const buffer = new DataView(new Uint8Array(20).buffer);\n      buffer.setInt32(0, this._a, true);\n      buffer.setInt32(4, this._b, true);\n      buffer.setInt32(8, this._c, true);\n      buffer.setInt32(12, this._d, true);\n      buffer.setInt32(16, this._e, true);\n      return new Uint8Array(buffer.buffer);\n    };\n\n    this._block = new Uint8Array(blockSize);\n    this._blockSize = blockSize;\n    this._blockOffset = 0;\n    this._length = [0, 0, 0, 0];\n    this._finalized = false;\n  }\n\n}\n\nconst publicKeyToAddress$1 = (publicKey, otherAddress) => {\n  // Use the same version/prefix byte as the given address.\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex');\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex');\n  const publicKeyHash = new Ripemd160().update(sha256(publicKeyBuffer)).digest();\n  const step1 = version + u8a.toString(publicKeyHash, 'hex');\n  const step2 = sha256(u8a.fromString(step1, 'hex'));\n  const step3 = sha256(step2);\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8);\n  const step4 = step1 + checksum;\n  return bytesToBase58(u8a.fromString(step4, 'hex'));\n};\n\nconst EC = elliptic.ec;\nconst publicKeyToAddress = (publicKey, prefix) => {\n  const ec = new EC('secp256k1');\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true);\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex');\n  const hash = new Ripemd160().update(sha256(publicKeyBuffer)).digest();\n  const words = bech32.toWords(hash);\n  return bech32.encode(prefix, words).replace(prefix, '');\n};\n\nconst verifyBlockchainAccountId = (publicKey, blockchainAccountId) => {\n  if (blockchainAccountId) {\n    const chain = blockchainAccountId.split(':');\n\n    switch (chain[0]) {\n      case 'bip122':\n        chain[chain.length - 1] = publicKeyToAddress$1(publicKey, chain[chain.length - 1]);\n        break;\n\n      case 'cosmos':\n        chain[chain.length - 1] = publicKeyToAddress(publicKey, chain[1]);\n        break;\n\n      case 'eip155':\n        chain[chain.length - 1] = toEthereumAddress(publicKey);\n        break;\n\n      default:\n        return false;\n    }\n\n    return chain.join(':') === blockchainAccountId;\n  }\n\n  return false;\n};\n\nconst secp256k1 = new elliptic.ec('secp256k1'); // converts a JOSE signature to it's components\n\nfunction toSignatureObject(signature, recoverable = false) {\n  const rawSig = base64ToBytes(signature);\n\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\n    throw new Error('wrong signature length');\n  }\n\n  const r = bytesToHex(rawSig.slice(0, 32));\n  const s = bytesToHex(rawSig.slice(32, 64));\n  const sigObj = {\n    r,\n    s\n  };\n\n  if (recoverable) {\n    sigObj.recoveryParam = rawSig[64];\n  }\n\n  return sigObj;\n}\n\nfunction extractPublicKeyBytes(pk) {\n  if (pk.publicKeyBase58) {\n    return base58ToBytes(pk.publicKeyBase58);\n  } else if (pk.publicKeyBase64) {\n    return base64ToBytes(pk.publicKeyBase64);\n  } else if (pk.publicKeyHex) {\n    return hexToBytes(pk.publicKeyHex);\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(secp256k1.keyFromPublic({\n      x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n      y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y))\n    }).getPublic('hex'));\n  } else if (pk.publicKeyMultibase) {\n    const {\n      base16,\n      base58btc,\n      base64,\n      base64url\n    } = bases;\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)));\n    return baseDecoder.decode(pk.publicKeyMultibase);\n  }\n\n  return new Uint8Array();\n}\n\nfunction verifyES256K(data, signature, authenticators) {\n  const hash = sha256(data);\n  const sigObj = toSignatureObject(signature);\n  const fullPublicKeys = authenticators.filter(({\n    ethereumAddress,\n    blockchainAccountId\n  }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined';\n  });\n  const blockchainAddressKeys = authenticators.filter(({\n    ethereumAddress,\n    blockchainAccountId\n  }) => {\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined';\n  });\n  let signer = fullPublicKeys.find(pk => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk);\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, sigObj);\n    } catch (err) {\n      return false;\n    }\n  });\n\n  if (!signer && blockchainAddressKeys.length > 0) {\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys);\n  }\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT');\n  return signer;\n}\nfunction verifyRecoverableES256K(data, signature, authenticators) {\n  let signatures;\n\n  if (signature.length > 86) {\n    signatures = [toSignatureObject(signature, true)];\n  } else {\n    const so = toSignatureObject(signature, false);\n    signatures = [{ ...so,\n      recoveryParam: 0\n    }, { ...so,\n      recoveryParam: 1\n    }];\n  }\n\n  const checkSignatureAgainstSigner = sigObj => {\n    const hash = sha256(data); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    const recoveredKey = secp256k1.recoverPubKey(hash, sigObj, sigObj.recoveryParam);\n    const recoveredPublicKeyHex = recoveredKey.encode('hex');\n    const recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);\n    const recoveredAddress = toEthereumAddress(recoveredPublicKeyHex);\n    const signer = authenticators.find(pk => {\n      var _pk$ethereumAddress, _pk$blockchainAccount, _pk$blockchainAccount2;\n\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk));\n      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || ((_pk$ethereumAddress = pk.ethereumAddress) == null ? void 0 : _pk$ethereumAddress.toLowerCase()) === recoveredAddress || ((_pk$blockchainAccount = pk.blockchainAccountId) == null ? void 0 : (_pk$blockchainAccount2 = _pk$blockchainAccount.split('@eip155')) == null ? void 0 : _pk$blockchainAccount2[0].toLowerCase()) === recoveredAddress || // CAIP-2\n      verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\n      ;\n    });\n    return signer;\n  };\n\n  const signer = signatures.map(checkSignatureAgainstSigner).filter(key => typeof key !== 'undefined');\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT');\n  return signer[0];\n}\nfunction verifyEd25519(data, signature, authenticators) {\n  const clear = stringToBytes(data);\n  const sig = base64ToBytes(signature);\n  const signer = authenticators.find(pk => {\n    return verify(extractPublicKeyBytes(pk), clear, sig);\n  });\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT');\n  return signer;\n}\nconst algorithms = {\n  ES256K: verifyES256K,\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': verifyRecoverableES256K,\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: verifyEd25519,\n  EdDSA: verifyEd25519\n};\n\nfunction VerifierAlgorithm(alg) {\n  const impl = algorithms[alg];\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`);\n  return impl;\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject;\n\n/**\r\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of provided DID\r\n *\r\n *  @example\r\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\r\n *      const payload = obj.payload\r\n *      const profile = obj.profile\r\n *      const jwt = obj.jwt\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {String}            alg                a JWT algorithm\r\n *  @param    {String}            did                a Decentralized IDentifier (DID) to lookup\r\n *  @param    {Boolean}           auth               Restrict public keys to ones specifically listed in the 'authentication' section of DID document\r\n *  @return   {Promise<DIDAuthenticator>}               a promise which resolves with a response object containing an array of authenticators or if non exist rejects with an error\r\n */\nconst resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {\n  try {\n    const types = SUPPORTED_PUBLIC_KEY_TYPES[alg];\n\n    if (!types || types.length === 0) {\n      throw new Error(`not_supported: No supported signature types for algorithm ${alg}`);\n    }\n\n    let didResult;\n    return Promise.resolve(resolver.resolve(issuer, {\n      accept: DID_JSON\n    })).then(function (result) {\n      var _didResult$didResolut, _didResult, _didResult$didDocumen, _didResult2, _didResult2$didDocume;\n\n      // support legacy resolvers that do not produce DIDResolutionResult\n      if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\n        didResult = {\n          didDocument: result,\n          didDocumentMetadata: {},\n          didResolutionMetadata: {\n            contentType: DID_JSON\n          }\n        };\n      } else {\n        didResult = result;\n      }\n\n      if ((_didResult$didResolut = didResult.didResolutionMetadata) != null && _didResult$didResolut.error || didResult.didDocument == null) {\n        const {\n          error,\n          message\n        } = didResult.didResolutionMetadata;\n        throw new Error(`resolver_error: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`);\n      }\n\n      const getPublicKeyById = (verificationMethods, pubid) => {\n        const filtered = verificationMethods.filter(({\n          id\n        }) => pubid === id);\n        return filtered.length > 0 ? filtered[0] : null;\n      };\n\n      let publicKeysToCheck = [...(((_didResult = didResult) == null ? void 0 : (_didResult$didDocumen = _didResult.didDocument) == null ? void 0 : _didResult$didDocumen.verificationMethod) || []), ...(((_didResult2 = didResult) == null ? void 0 : (_didResult2$didDocume = _didResult2.didDocument) == null ? void 0 : _didResult2$didDocume.publicKey) || [])];\n\n      if (typeof proofPurpose === 'string') {\n        var _didResult3;\n\n        // support legacy DID Documents that do not list assertionMethod\n        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames((_didResult3 = didResult) == null ? void 0 : _didResult3.didDocument).includes('assertionMethod')) {\n          didResult.didDocument = { ...didResult.didDocument\n          };\n          didResult.didDocument.assertionMethod = [...publicKeysToCheck.map(pk => pk.id)];\n        }\n\n        publicKeysToCheck = (didResult.didDocument[proofPurpose] || []).map(verificationMethod => {\n          if (typeof verificationMethod === 'string') {\n            return getPublicKeyById(publicKeysToCheck, verificationMethod);\n          } else if (typeof verificationMethod.publicKey === 'string') {\n            // this is a legacy format\n            return getPublicKeyById(publicKeysToCheck, verificationMethod.publicKey);\n          } else {\n            return verificationMethod;\n          }\n        }).filter(key => key != null);\n      }\n\n      const authenticators = publicKeysToCheck.filter(({\n        type\n      }) => types.find(supported => supported === type));\n\n      if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\n        throw new Error(`no_suitable_keys: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`);\n      }\n\n      if (!authenticators || authenticators.length === 0) {\n        throw new Error(`no_suitable_keys: DID document for ${issuer} does not have public keys for ${alg}`);\n      }\n\n      return {\n        authenticators,\n        issuer,\n        didResolutionResult: didResult\n      };\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\n/**\r\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\r\n *  and the did doc of the issuer of the JWT.\r\n *\r\n *  @example\r\n *  verifyJWT('did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}).then(obj => {\r\n *      const did = obj.did // DID of signer\r\n *      const payload = obj.payload\r\n *      const doc = obj.doc // DID Document of signer\r\n *      const jwt = obj.jwt\r\n *      const signerKeyId = obj.signerKeyId // ID of key in DID document that signed JWT\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @param    {Object}            [options]           an unsigned credential object\r\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the DID document (for Authentication purposes)\r\n *  @param    {String}            options.audience    DID of the recipient of the JWT\r\n *  @param    {String}            options.callbackUrl callback url in JWT\r\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an error\r\n */\nconst verifyJWT = function (jwt, options = {\n  resolver: undefined,\n  auth: undefined,\n  audience: undefined,\n  callbackUrl: undefined,\n  skewTime: undefined,\n  proofPurpose: undefined\n}) {\n  try {\n    if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured');\n    const {\n      payload,\n      header,\n      signature,\n      data\n    } = decodeJWT(jwt);\n    const proofPurpose = Object.prototype.hasOwnProperty.call(options, 'auth') ? options.auth ? 'authentication' : undefined : options.proofPurpose;\n\n    if (!payload.iss) {\n      throw new Error('invalid_jwt: JWT iss is required');\n    }\n\n    let did = '';\n\n    if (payload.iss === SELF_ISSUED_V2) {\n      if (!payload.sub) {\n        throw new Error('invalid_jwt: JWT sub is required');\n      }\n\n      if (typeof payload.sub_jwk === 'undefined') {\n        did = payload.sub;\n      } else {\n        did = (header.kid || '').split('#')[0];\n      }\n    } else if (payload.iss === SELF_ISSUED_V0_1) {\n      if (!payload.did) {\n        throw new Error('invalid_jwt: JWT did is required');\n      }\n\n      did = payload.did;\n    } else {\n      did = payload.iss;\n    }\n\n    if (!did) {\n      throw new Error(`invalid_jwt: No DID has been found in the JWT`);\n    }\n\n    return Promise.resolve(resolveAuthenticator(options.resolver, header.alg, did, proofPurpose)).then(function ({\n      didResolutionResult,\n      authenticators,\n      issuer\n    }) {\n      return Promise.resolve(verifyJWSDecoded({\n        header,\n        data,\n        signature\n      }, authenticators)).then(function (signer) {\n        const now = Math.floor(Date.now() / 1000);\n        const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW;\n\n        if (signer) {\n          const nowSkewed = now + skewTime;\n\n          if (payload.nbf) {\n            if (payload.nbf > nowSkewed) {\n              throw new Error(`invalid_jwt: JWT not valid before nbf: ${payload.nbf}`);\n            }\n          } else if (payload.iat && payload.iat > nowSkewed) {\n            throw new Error(`invalid_jwt: JWT not valid yet (issued in the future) iat: ${payload.iat}`);\n          }\n\n          if (payload.exp && payload.exp <= now - skewTime) {\n            throw new Error(`invalid_jwt: JWT has expired: exp: ${payload.exp} < now: ${now}`);\n          }\n\n          if (payload.aud) {\n            if (!options.audience && !options.callbackUrl) {\n              throw new Error('invalid_config: JWT audience is required but your app address has not been configured');\n            }\n\n            const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n            const matchedAudience = audArray.find(item => options.audience === item || options.callbackUrl === item);\n\n            if (typeof matchedAudience === 'undefined') {\n              throw new Error(`invalid_config: JWT audience does not match your DID or callback url`);\n            }\n          }\n\n          return {\n            payload,\n            didResolutionResult,\n            issuer,\n            signer,\n            jwt\n          };\n        }\n\n        throw new Error(`invalid_signature: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`);\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\n/**\r\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is over.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {Object}            payload               payload object\r\n *  @param    {Object}            [options]             an unsigned credential object\r\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\r\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports: [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K.\r\n *                                                      Please use `header.alg` to specify the algorithm\r\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\r\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\r\n *  @param    {Object}            header                optional object to specify or customize the JWT header\r\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or rejects with an error\r\n */\nconst createJWT = function (payload, {\n  issuer,\n  signer,\n  alg,\n  expiresIn,\n  canonicalize\n}, header = {}) {\n  try {\n    if (!signer) throw new Error('missing_signer: No Signer functionality has been configured');\n    if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured');\n    if (!header.typ) header.typ = 'JWT';\n    if (!header.alg) header.alg = alg;\n    const timestamps = {\n      iat: Math.floor(Date.now() / 1000),\n      exp: undefined\n    };\n\n    if (expiresIn) {\n      if (typeof expiresIn === 'number') {\n        timestamps.exp = (payload.nbf || timestamps.iat) + Math.floor(expiresIn);\n      } else {\n        throw new Error('invalid_argument: JWT expiresIn is not a number');\n      }\n    }\n\n    const fullPayload = { ...timestamps,\n      ...payload,\n      iss: issuer\n    };\n    return createJWS(fullPayload, signer, header, {\n      canonicalize\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\n/**\r\n *  Creates a signed JWS given a payload, a signer, and an optional header.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const jws = await createJWS({ my: 'payload' }, signer)\r\n *\r\n *  @param    {Object}            payload           payload object\r\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\r\n *  @param    {Object}            header            optional object to specify or customize the JWS header\r\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\r\n *                                                    payload properties\r\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\r\n */\nconst createJWS = function (payload, signer, header = {}, options = {}) {\n  try {\n    if (!header.alg) header.alg = defaultAlg;\n    const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize);\n    const signingInput = [encodeSection(header, options.canonicalize), encodedPayload].join('.');\n    const jwtSigner = SignerAlg(header.alg);\n    return Promise.resolve(jwtSigner(signingInput, signer)).then(function (signature) {\n      return [signingInput, signature].join('.');\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\nconst SUPPORTED_PUBLIC_KEY_TYPES = {\n  ES256K: ['EcdsaSecp256k1VerificationKey2019',\n  /**\r\n   * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n   */\n  'EcdsaSecp256k1RecoveryMethod2020',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'Secp256k1VerificationKey2018',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'Secp256k1SignatureVerificationKey2018',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'EcdsaPublicKeySecp256k1'],\n  'ES256K-R': ['EcdsaSecp256k1VerificationKey2019',\n  /**\r\n   * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n   */\n  'EcdsaSecp256k1RecoveryMethod2020',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'Secp256k1VerificationKey2018',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'Secp256k1SignatureVerificationKey2018',\n  /**\r\n   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is not an ethereumAddress\r\n   */\n  'EcdsaPublicKeySecp256k1'],\n  Ed25519: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018'],\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018']\n};\nconst SELF_ISSUED_V2 = 'https://self-issued.me/v2';\nconst SELF_ISSUED_V0_1 = 'https://self-issued.me';\nconst defaultAlg = 'ES256K';\nconst DID_JSON = 'application/did+json'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction encodeSection(data, shouldCanonicalize = false) {\n  if (shouldCanonicalize) {\n    return encodeBase64url(canonicalizeData(data));\n  } else {\n    return encodeBase64url(JSON.stringify(data));\n  }\n}\n\nconst NBF_SKEW = 300;\n\nfunction decodeJWS(jws) {\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/);\n\n  if (parts) {\n    return {\n      header: JSON.parse(decodeBase64url(parts[1])),\n      payload: parts[2],\n      signature: parts[3],\n      data: `${parts[1]}.${parts[2]}`\n    };\n  }\n\n  throw new Error('invalid_argument: Incorrect format JWS');\n}\n/**  @module did-jwt/JWT */\n\n/**\r\n *  Decodes a JWT and returns an object representing the payload\r\n *\r\n *  @example\r\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @return   {Object}                               a JS object representing the decoded JWT\r\n */\n\n\nfunction decodeJWT(jwt) {\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT');\n\n  try {\n    const jws = decodeJWS(jwt);\n    const decodedJwt = Object.assign(jws, {\n      payload: JSON.parse(decodeBase64url(jws.payload))\n    });\n    return decodedJwt;\n  } catch (e) {\n    throw new Error('invalid_argument: Incorrect format JWT');\n  }\n}\n\nfunction verifyJWSDecoded({\n  header,\n  data,\n  signature\n}, pubKeys) {\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys];\n  const signer = VerifierAlgorithm(header.alg)(data, signature, pubKeys);\n  return signer;\n}\n/**\r\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\r\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\r\n *\r\n *  @example\r\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\r\n *\r\n *  @param    {String}                          jws         A JWS string to verify\r\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\r\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\r\n */\n\n\nfunction verifyJWS(jws, pubKeys) {\n  const jwsDecoded = decodeJWS(jws);\n  return verifyJWSDecoded(jwsDecoded, pubKeys);\n}\n\nfunction _for(test, update, body) {\n  var stage;\n\n  for (;;) {\n    var shouldContinue = test();\n\n    if (_isSettledPact(shouldContinue)) {\n      shouldContinue = shouldContinue.v;\n    }\n\n    if (!shouldContinue) {\n      return result;\n    }\n\n    if (shouldContinue.then) {\n      stage = 0;\n      break;\n    }\n\n    var result = body();\n\n    if (result && result.then) {\n      if (_isSettledPact(result)) {\n        result = result.s;\n      } else {\n        stage = 1;\n        break;\n      }\n    }\n\n    if (update) {\n      var updateValue = update();\n\n      if (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n        stage = 2;\n        break;\n      }\n    }\n  }\n\n  var pact = new _Pact();\n\n  var reject = _settle.bind(null, pact, 2);\n\n  (stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n  return pact;\n\n  function _resumeAfterBody(value) {\n    result = value;\n\n    do {\n      if (update) {\n        updateValue = update();\n\n        if (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n          updateValue.then(_resumeAfterUpdate).then(void 0, reject);\n          return;\n        }\n      }\n\n      shouldContinue = test();\n\n      if (!shouldContinue || _isSettledPact(shouldContinue) && !shouldContinue.v) {\n        _settle(pact, 1, result);\n\n        return;\n      }\n\n      if (shouldContinue.then) {\n        shouldContinue.then(_resumeAfterTest).then(void 0, reject);\n        return;\n      }\n\n      result = body();\n\n      if (_isSettledPact(result)) {\n        result = result.v;\n      }\n    } while (!result || !result.then);\n\n    result.then(_resumeAfterBody).then(void 0, reject);\n  }\n\n  function _resumeAfterTest(shouldContinue) {\n    if (shouldContinue) {\n      result = body();\n\n      if (result && result.then) {\n        result.then(_resumeAfterBody).then(void 0, reject);\n      } else {\n        _resumeAfterBody(result);\n      }\n    } else {\n      _settle(pact, 1, result);\n    }\n  }\n\n  function _resumeAfterUpdate() {\n    if (shouldContinue = test()) {\n      if (shouldContinue.then) {\n        shouldContinue.then(_resumeAfterTest).then(void 0, reject);\n      } else {\n        _resumeAfterTest(shouldContinue);\n      }\n    } else {\n      _settle(pact, 1, result);\n    }\n  }\n}\n\nconst decryptJWE = function (jwe, decrypter) {\n  try {\n    let _exit;\n\n    function _temp5(_result) {\n      if (_exit) ;\n      if (cleartext === null) throw new Error('failure: Failed to decrypt');\n      return cleartext;\n    }\n\n    validateJWE(jwe);\n    const protHeader = JSON.parse(decodeBase64url(jwe.protected));\n    if (protHeader.enc !== decrypter.enc) throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`);\n    const sealed = toSealed(jwe.ciphertext, jwe.tag);\n    const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected);\n    let cleartext = null;\n\n    const _temp4 = function () {\n      if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\n        return Promise.resolve(decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)).then(function (_decrypter$decrypt) {\n          cleartext = _decrypter$decrypt;\n        });\n      } else return function () {\n        if (!jwe.recipients || jwe.recipients.length === 0) {\n          throw new Error('bad_jwe: missing recipients');\n        } else {\n          let i = 0;\n          return _for(function () {\n            return !cleartext && i < jwe.recipients.length;\n          }, function () {\n            return i++;\n          }, function () {\n            const recipient = jwe.recipients[i];\n            Object.assign(recipient.header, protHeader);\n\n            const _temp3 = function () {\n              if (recipient.header.alg === decrypter.alg) {\n                return Promise.resolve(decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)).then(function (_decrypter$decrypt2) {\n                  cleartext = _decrypter$decrypt2;\n                });\n              }\n            }();\n\n            if (_temp3 && _temp3.then) return _temp3.then(function () {});\n          });\n        }\n      }();\n    }();\n\n    return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp5) : _temp5(_temp4));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nconst _iteratorSymbol = typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\n\nfunction _settle(pact, state, value) {\n  if (!pact.s) {\n    if (value instanceof _Pact) {\n      if (value.s) {\n        if (state & 1) {\n          state = value.s;\n        }\n\n        value = value.v;\n      } else {\n        value.o = _settle.bind(null, pact, state);\n        return;\n      }\n    }\n\n    if (value && value.then) {\n      value.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n      return;\n    }\n\n    pact.s = state;\n    pact.v = value;\n    const observer = pact.o;\n\n    if (observer) {\n      observer(pact);\n    }\n  }\n}\n\nconst _Pact = /*#__PURE__*/function () {\n  function _Pact() {}\n\n  _Pact.prototype.then = function (onFulfilled, onRejected) {\n    const result = new _Pact();\n    const state = this.s;\n\n    if (state) {\n      const callback = state & 1 ? onFulfilled : onRejected;\n\n      if (callback) {\n        try {\n          _settle(result, 1, callback(this.v));\n        } catch (e) {\n          _settle(result, 2, e);\n        }\n\n        return result;\n      } else {\n        return this;\n      }\n    }\n\n    this.o = function (_this) {\n      try {\n        const value = _this.v;\n\n        if (_this.s & 1) {\n          _settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n        } else if (onRejected) {\n          _settle(result, 1, onRejected(value));\n        } else {\n          _settle(result, 2, value);\n        }\n      } catch (e) {\n        _settle(result, 2, e);\n      }\n    };\n\n    return result;\n  };\n\n  return _Pact;\n}();\n\nfunction _isSettledPact(thenable) {\n  return thenable instanceof _Pact && thenable.s & 1;\n}\n\nfunction _forTo(array, body, check) {\n  var i = -1,\n      pact,\n      reject;\n\n  function _cycle(result) {\n    try {\n      while (++i < array.length && (!check || !check())) {\n        result = body(i);\n\n        if (result && result.then) {\n          if (_isSettledPact(result)) {\n            result = result.v;\n          } else {\n            result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n            return;\n          }\n        }\n      }\n\n      if (pact) {\n        _settle(pact, 1, result);\n      } else {\n        pact = result;\n      }\n    } catch (e) {\n      _settle(pact || (pact = new _Pact()), 2, e);\n    }\n  }\n\n  _cycle();\n\n  return pact;\n}\n\nfunction _forOf(target, body, check) {\n  if (typeof target[_iteratorSymbol] === \"function\") {\n    var iterator = target[_iteratorSymbol](),\n        step,\n        pact,\n        reject;\n\n    function _cycle(result) {\n      try {\n        while (!(step = iterator.next()).done && (!check || !check())) {\n          result = body(step.value);\n\n          if (result && result.then) {\n            if (_isSettledPact(result)) {\n              result = result.v;\n            } else {\n              result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n              return;\n            }\n          }\n        }\n\n        if (pact) {\n          _settle(pact, 1, result);\n        } else {\n          pact = result;\n        }\n      } catch (e) {\n        _settle(pact || (pact = new _Pact()), 2, e);\n      }\n    }\n\n    _cycle();\n\n    if (iterator.return) {\n      var _fixup = function (value) {\n        try {\n          if (!step.done) {\n            iterator.return();\n          }\n        } catch (e) {}\n\n        return value;\n      };\n\n      if (pact && pact.then) {\n        return pact.then(_fixup, function (e) {\n          throw _fixup(e);\n        });\n      }\n\n      _fixup();\n    }\n\n    return pact;\n  } // No support for Symbol.iterator\n\n\n  // No support for Symbol.iterator\n  if (!(\"length\" in target)) {\n    throw new TypeError(\"Object is not iterable\");\n  } // Handle live collections properly\n\n\n  // Handle live collections properly\n  var values = [];\n\n  for (var i = 0; i < target.length; i++) {\n    values.push(target[i]);\n  }\n\n  return _forTo(values, function (i) {\n    return body(values[i]);\n  }, check);\n}\n\nfunction validateJWE(jwe) {\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\n    throw new Error('bad_jwe: missing properties');\n  }\n\n  if (jwe.recipients) {\n    jwe.recipients.map(rec => {\n      if (!(rec.header && rec.encrypted_key)) {\n        throw new Error('bad_jwe: malformed recipients');\n      }\n    });\n  }\n}\n\nfunction encodeJWE({\n  ciphertext,\n  tag,\n  iv,\n  protectedHeader,\n  recipient\n}, aad) {\n  const jwe = {\n    protected: protectedHeader,\n    iv: bytesToBase64url(iv),\n    ciphertext: bytesToBase64url(ciphertext),\n    tag: bytesToBase64url(tag)\n  };\n  if (aad) jwe.aad = bytesToBase64url(aad);\n  if (recipient) jwe.recipients = [recipient];\n  return jwe;\n}\n\nconst createJWE = function (cleartext, encrypters, protectedHeader = {}, aad) {\n  try {\n    if (encrypters[0].alg === 'dir') {\n      if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.');\n      return Promise.resolve(encrypters[0].encrypt(cleartext, protectedHeader, aad)).then(function (encryptionResult) {\n        return encodeJWE(encryptionResult, aad);\n      });\n    } else {\n      const tmpEnc = encrypters[0].enc;\n\n      if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\n        throw new Error('invalid_argument: Incompatible encrypters passed');\n      }\n\n      let cek;\n      let jwe;\n\n      const _temp2 = _forOf(encrypters, function (encrypter) {\n        const _temp = function () {\n          if (!cek) {\n            return Promise.resolve(encrypter.encrypt(cleartext, protectedHeader, aad)).then(function (encryptionResult) {\n              cek = encryptionResult.cek;\n              jwe = encodeJWE(encryptionResult, aad);\n            });\n          } else {\n            return Promise.resolve(encrypter.encryptCek == null ? void 0 : encrypter.encryptCek(cek)).then(function (recipient) {\n              if (recipient) {\n                var _jwe, _jwe$recipients;\n\n                (_jwe = jwe) == null ? void 0 : (_jwe$recipients = _jwe.recipients) == null ? void 0 : _jwe$recipients.push(recipient);\n              }\n            });\n          }\n        }();\n\n        if (_temp && _temp.then) return _temp.then(function () {});\n      });\n\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {\n        return jwe;\n      }) : jwe);\n    }\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\n/**\r\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\r\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\r\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\r\n *\r\n * @throws 'invalid_argument:...' if the secret key size is wrong\r\n */\n\nfunction createX25519ECDH(mySecretKey) {\n  if (mySecretKey.length !== 32) {\n    throw new Error('invalid_argument: incorrect secret key length for X25519');\n  }\n\n  return function (theirPublicKey) {\n    try {\n      if (theirPublicKey.length !== 32) {\n        throw new Error('invalid_argument: incorrect publicKey key length for X25519');\n      }\n\n      return Promise.resolve(sharedKey(mySecretKey, theirPublicKey));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\n/**\r\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender private key to encrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientPublicKey the byte array representing the recipient public key\r\n * @param senderSecret either a Uint8Array representing the sender secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\n\nconst resolveX25519Encrypters = function (dids, resolver) {\n  try {\n    const encryptersForDID = function (did, resolved = []) {\n      try {\n        return Promise.resolve(resolver.resolve(did)).then(function ({\n          didResolutionMetadata,\n          didDocument\n        }) {\n          function _temp4() {\n            var _didDocument$keyAgree, _didDocument$keyAgree2;\n\n            const agreementKeys = (_didDocument$keyAgree = didDocument.keyAgreement) == null ? void 0 : (_didDocument$keyAgree2 = _didDocument$keyAgree.map(key => {\n              if (typeof key === 'string') {\n                return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(pk => pk.id === key);\n              }\n\n              return key;\n            })) == null ? void 0 : _didDocument$keyAgree2.filter(key => typeof key !== 'undefined');\n            const pks = (agreementKeys == null ? void 0 : agreementKeys.filter(key => {\n              // TODO: should be able to use non base58 keys too\n              return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58);\n            })) ?? [];\n            if (!pks.length && !controllerEncrypters.length) throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);\n            return pks.map(pk => x25519Encrypter(base58ToBytes(pk.publicKeyBase58), pk.id)).concat(...controllerEncrypters);\n          }\n\n          resolved.push(did);\n\n          if (didResolutionMetadata != null && didResolutionMetadata.error || didDocument == null) {\n            throw new Error(`resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`);\n          }\n\n          let controllerEncrypters = [];\n\n          if (!didDocument.controller && !didDocument.keyAgreement) {\n            throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);\n          }\n\n          const _temp3 = function () {\n            if (didDocument.controller) {\n              let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller];\n              controllers = controllers.filter(c => !resolved.includes(c));\n              const encrypterPromises = controllers.map(did => encryptersForDID(did, resolved).catch(() => {\n                return [];\n              }));\n              return Promise.resolve(Promise.all(encrypterPromises)).then(function (encrypterArrays) {\n                controllerEncrypters = [].concat(...encrypterArrays);\n              });\n            }\n          }();\n\n          return _temp3 && _temp3.then ? _temp3.then(_temp4) : _temp4(_temp3);\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    const encrypterPromises = dids.map(did => encryptersForDID(did));\n    return Promise.resolve(Promise.all(encrypterPromises)).then(function (encrypterArrays) {\n      const flattenedArray = [].concat(...encrypterArrays);\n      return flattenedArray;\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\nfunction createAuthEncrypter(recipientPublicKey, senderSecret, options = {}) {\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options);\n}\n/**\r\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\r\n *\r\n * @param publicKey the byte array representing the recipient public key\r\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\n\nfunction createAnonEncrypter(publicKey, options = {}) {\n  return x25519Encrypter(publicKey, options == null ? void 0 : options.kid);\n}\n/**\r\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender public key to decrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param senderPublicKey the byte array representing the sender public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\n\nfunction createAuthDecrypter(recipientSecret, senderPublicKey) {\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey);\n}\n/**\r\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\n\nfunction createAnonDecrypter(recipientSecret) {\n  return x25519Decrypter(recipientSecret);\n}\n\nfunction xc20pEncrypter(key) {\n  const cipher = new XChaCha20Poly1305(key);\n  return (cleartext, aad) => {\n    const iv = randomBytes(cipher.nonceLength);\n    const sealed = cipher.seal(iv, cleartext, aad);\n    return {\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\n      iv\n    };\n  };\n}\n\nfunction xc20pDirEncrypter(key) {\n  const encrypt = function (cleartext, protectedHeader = {}, aad) {\n    try {\n      const protHeader = encodeBase64url(JSON.stringify(Object.assign({\n        alg\n      }, protectedHeader, {\n        enc\n      })));\n      const encodedAad = fromString$1(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader);\n      return Promise.resolve({ ...xc20pEncrypt(cleartext, encodedAad),\n        protectedHeader: protHeader\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const xc20pEncrypt = xc20pEncrypter(key);\n  const enc = 'XC20P';\n  const alg = 'dir';\n  return {\n    alg,\n    enc,\n    encrypt\n  };\n}\nfunction xc20pDirDecrypter(key) {\n  const decrypt = function (sealed, iv, aad) {\n    try {\n      return Promise.resolve(cipher.open(iv, sealed, aad));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const cipher = new XChaCha20Poly1305(key);\n  return {\n    alg: 'dir',\n    enc: 'XC20P',\n    decrypt\n  };\n}\nfunction x25519Encrypter(publicKey, kid) {\n  const encrypt = function (cleartext, protectedHeader = {}, aad) {\n    try {\n      // we won't want alg to be set to dir from xc20pDirEncrypter\n      Object.assign(protectedHeader, {\n        alg: undefined\n      }); // Content Encryption Key\n\n      const cek = randomBytes(32);\n      return Promise.resolve(xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)).then(function (_xc20pDirEncrypter$en) {\n        return Promise.resolve(encryptCek(cek)).then(function (_encryptCek) {\n          return { ..._xc20pDirEncrypter$en,\n            recipient: _encryptCek,\n            cek\n          };\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const encryptCek = function (cek) {\n    try {\n      const epk = generateKeyPair();\n      const sharedSecret = sharedKey(epk.secretKey, publicKey); // Key Encryption Key\n\n      const kek = concatKDF(sharedSecret, keyLen, alg);\n      const res = xc20pEncrypter(kek)(cek);\n      const recipient = {\n        encrypted_key: bytesToBase64url(res.ciphertext),\n        header: {\n          alg,\n          iv: bytesToBase64url(res.iv),\n          tag: bytesToBase64url(res.tag),\n          epk: {\n            kty: 'OKP',\n            crv,\n            x: bytesToBase64url(epk.publicKey)\n          }\n        }\n      };\n      if (kid) recipient.header.kid = kid;\n      return Promise.resolve(recipient);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const alg = 'ECDH-ES+XC20PKW';\n  const keyLen = 256;\n  const crv = 'X25519';\n  return {\n    alg,\n    enc: 'XC20P',\n    encrypt,\n    encryptCek\n  };\n}\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\n\nfunction xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options = {}) {\n  const encrypt = function (cleartext, protectedHeader = {}, aad) {\n    try {\n      // we won't want alg to be set to dir from xc20pDirEncrypter\n      Object.assign(protectedHeader, {\n        alg: undefined\n      }); // Content Encryption Key\n\n      const cek = randomBytes(32);\n      return Promise.resolve(xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)).then(function (_xc20pDirEncrypter$en2) {\n        return Promise.resolve(encryptCek(cek)).then(function (_encryptCek2) {\n          return { ..._xc20pDirEncrypter$en2,\n            recipient: _encryptCek2,\n            cek\n          };\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const encryptCek = function (cek) {\n    try {\n      function _temp2() {\n        const sharedSecret = new Uint8Array(zE.length + zS.length);\n        sharedSecret.set(zE);\n        sharedSecret.set(zS, zE.length); // Key Encryption Key\n\n        const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo);\n        const res = xc20pEncrypter(kek)(cek);\n        const recipient = {\n          encrypted_key: bytesToBase64url(res.ciphertext),\n          header: {\n            alg,\n            iv: bytesToBase64url(res.iv),\n            tag: bytesToBase64url(res.tag),\n            epk: {\n              kty: 'OKP',\n              crv,\n              x: bytesToBase64url(epk.publicKey)\n            }\n          }\n        };\n        if (options.kid) recipient.header.kid = options.kid;\n        if (options.apu) recipient.header.apu = options.apu;\n        if (options.apv) recipient.header.apv = options.apv;\n        return recipient;\n      }\n\n      const epk = generateKeyPair();\n      const zE = sharedKey(epk.secretKey, recipientPublicKey); // ECDH-1PU requires additional shared secret between\n      // static key of sender and static key of recipient\n\n      let zS;\n\n      const _temp = function () {\n        if (senderSecret instanceof Uint8Array) {\n          zS = sharedKey(senderSecret, recipientPublicKey);\n        } else {\n          return Promise.resolve(senderSecret(recipientPublicKey)).then(function (_senderSecret) {\n            zS = _senderSecret;\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const alg = 'ECDH-1PU+XC20PKW';\n  const keyLen = 256;\n  const crv = 'X25519';\n  let partyUInfo;\n  let partyVInfo;\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu);\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv);\n  return {\n    alg,\n    enc: 'XC20P',\n    encrypt,\n    encryptCek\n  };\n}\n\nfunction validateHeader(header) {\n  if (!(header && header.epk && header.iv && header.tag)) {\n    throw new Error('bad_jwe: malformed header');\n  }\n}\n\nfunction x25519Decrypter(receiverSecret) {\n  const decrypt = function (sealed, iv, aad, recipient) {\n    try {\n      var _recipient, _recipient$header$epk;\n\n      function _temp6() {\n        // Key Encryption Key\n        const kek = concatKDF(sharedSecret, keyLen, alg); // Content Encryption Key\n\n        const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag);\n        return Promise.resolve(xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))).then(function (cek) {\n          return cek === null ? null : xc20pDirDecrypter(cek).decrypt(sealed, iv, aad);\n        });\n      }\n\n      validateHeader((_recipient = recipient) == null ? void 0 : _recipient.header);\n      recipient = recipient;\n      if (((_recipient$header$epk = recipient.header.epk) == null ? void 0 : _recipient$header$epk.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);\n      const publicKey = base64ToBytes(recipient.header.epk.x);\n      let sharedSecret;\n\n      const _temp5 = function () {\n        if (receiverSecret instanceof Uint8Array) {\n          sharedSecret = sharedKey(receiverSecret, publicKey);\n        } else {\n          return Promise.resolve(receiverSecret(publicKey)).then(function (_receiverSecret) {\n            sharedSecret = _receiverSecret;\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp6) : _temp6(_temp5));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const alg = 'ECDH-ES+XC20PKW';\n  const keyLen = 256;\n  const crv = 'X25519';\n  return {\n    alg,\n    enc: 'XC20P',\n    decrypt\n  };\n}\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\n\nfunction xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey) {\n  const decrypt = function (sealed, iv, aad, recipient) {\n    try {\n      var _recipient$header$epk2;\n\n      function _temp8() {\n        const sharedSecret = new Uint8Array(zE.length + zS.length);\n        sharedSecret.set(zE);\n        sharedSecret.set(zS, zE.length); // Key Encryption Key\n\n        let producerInfo;\n        let consumerInfo;\n        if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu);\n        if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv);\n        const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo); // Content Encryption Key\n\n        const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag);\n        return Promise.resolve(xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))).then(function (cek) {\n          return cek === null ? null : xc20pDirDecrypter(cek).decrypt(sealed, iv, aad);\n        });\n      }\n\n      recipient = recipient;\n      validateHeader(recipient.header);\n      if (((_recipient$header$epk2 = recipient.header.epk) == null ? void 0 : _recipient$header$epk2.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between\n      // static key of sender and static key of recipient\n\n      const publicKey = base64ToBytes(recipient.header.epk.x);\n      let zE;\n      let zS;\n\n      const _temp7 = function () {\n        if (recipientSecret instanceof Uint8Array) {\n          zE = sharedKey(recipientSecret, publicKey);\n          zS = sharedKey(recipientSecret, senderPublicKey);\n        } else {\n          return Promise.resolve(recipientSecret(publicKey)).then(function (_recipientSecret) {\n            zE = _recipientSecret;\n            return Promise.resolve(recipientSecret(senderPublicKey)).then(function (_recipientSecret2) {\n              zS = _recipientSecret2;\n            });\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp8) : _temp8(_temp7));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const alg = 'ECDH-1PU+XC20PKW';\n  const keyLen = 256;\n  const crv = 'X25519';\n  return {\n    alg,\n    enc: 'XC20P',\n    decrypt\n  };\n}\n\nexport { ES256KSigner, EdDSASigner, EllipticSigner, NaclSigner, SimpleSigner, createAnonDecrypter, createAnonEncrypter, createAuthDecrypter, createAuthEncrypter, createJWE, createJWS, createJWT, createX25519ECDH, decodeJWT, decryptJWE, resolveX25519Encrypters, toEthereumAddress, verifyJWS, verifyJWT, x25519Decrypter, x25519Encrypter, xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2, xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2, xc20pDirDecrypter, xc20pDirEncrypter };\n//# sourceMappingURL=index.module.js.map\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error('Non-base' + BASE + ' character');\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","class Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    const decoders = {\n      [this.prefix]: this,\n      ...decoder.decoders || { [decoder.prefix]: decoder }\n    };\n    return new ComposedDecoder(decoders);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    const other = decoder.decoders || { [decoder.prefix]: decoder };\n    return new ComposedDecoder({\n      ...this.decoders,\n      ...other\n    });\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const withAlphabet = ({name, prefix, encode, decode, alphabet}) => from({\n  name,\n  prefix,\n  encode: input => encode(input, alphabet),\n  decode: input => {\n    for (const char of input) {\n      if (alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid ${ name } character`);\n      }\n    }\n    return decode(input, alphabet);\n  }\n});\nexport const withSettings = ({name, prefix, settings, encode, decode}) => from({\n  name,\n  prefix,\n  encode: input => encode(input, settings),\n  decode: input => decode(input, settings)\n});\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);","import baseX from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nimport { from } from './base.js';\nconst implement = alphabet => {\n  const {encode, decode} = baseX(alphabet);\n  return {\n    encode,\n    decode: text => coerce(decode(text))\n  };\n};\nexport const base58btc = from({\n  name: 'base58btc',\n  prefix: 'z',\n  ...implement('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz')\n});\nexport const base58flickr = from({\n  name: 'base58flickr',\n  prefix: 'Z',\n  ...implement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ')\n});","import { withAlphabet } from './base.js';\nfunction decode(input, alphabet) {\n  input = input.replace(/=/g, '');\n  const length = input.length;\n  let bits = 0;\n  let value = 0;\n  let index = 0;\n  const output = new Uint8Array(length * 5 / 8 | 0);\n  for (let i = 0; i < length; i++) {\n    value = value << 5 | alphabet.indexOf(input[i]);\n    bits += 5;\n    if (bits >= 8) {\n      output[index++] = value >>> bits - 8 & 255;\n      bits -= 8;\n    }\n  }\n  return output;\n}\nfunction encode(buffer, alphabet) {\n  const length = buffer.byteLength;\n  const view = new Uint8Array(buffer);\n  const padding = alphabet.indexOf('=') === alphabet.length - 1;\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1);\n  }\n  let bits = 0;\n  let value = 0;\n  let output = '';\n  for (let i = 0; i < length; i++) {\n    value = value << 8 | view[i];\n    bits += 8;\n    while (bits >= 5) {\n      output += alphabet[value >>> bits - 5 & 31];\n      bits -= 5;\n    }\n  }\n  if (bits > 0) {\n    output += alphabet[value << 5 - bits & 31];\n  }\n  if (padding) {\n    while (output.length % 8 !== 0) {\n      output += '=';\n    }\n  }\n  return output;\n}\nexport const base32 = withAlphabet({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  encode,\n  decode\n});\nexport const base32pad = withAlphabet({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  encode,\n  decode\n});\nexport const base32hex = withAlphabet({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  encode,\n  decode\n});\nexport const base32hexpad = withAlphabet({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  encode,\n  decode\n});\nexport const base32z = withAlphabet({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  encode,\n  decode\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    } else if (version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base56btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\nexport const __browser = true;","import { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const identity = from({\n  name: 'identity',\n  code: 0,\n  encode: input => coerce(input)\n});","import { withSettings } from './base.js';\nconst alphabetSettings = alphabet => ({\n  alphabet,\n  padding: alphabet.indexOf('=') > -1,\n  url: alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n});\nexport default b64 => {\n  const encode = (input, {url, padding}) => {\n    let output = b64.encode(input);\n    if (url) {\n      output = output.replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n    const pad = output.indexOf('=');\n    if (pad > 0 && !padding) {\n      output = output.substring(0, pad);\n    }\n    return output;\n  };\n  const decode = (input, {alphabet}) => {\n    for (const char of input) {\n      if (alphabet.indexOf(char) < 0) {\n        throw new Error('invalid base64 character');\n      }\n    }\n    return b64.decode(input);\n  };\n  const codec = ({name, prefix, alphabet}) => withSettings({\n    name,\n    prefix,\n    settings: alphabetSettings(alphabet),\n    decode,\n    encode\n  });\n  return {\n    b64,\n    __browser: b64.__browser,\n    base64: codec({\n      name: 'base64',\n      prefix: 'm',\n      alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    }),\n    base64pad: codec({\n      name: 'base64pad',\n      prefix: 'M',\n      alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n    }),\n    base64url: codec({\n      name: 'base64url',\n      prefix: 'u',\n      alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'\n    }),\n    base64urlpad: codec({\n      name: 'base64urlpad',\n      prefix: 'U',\n      alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_='\n    })\n  };\n};","import b64 from './base64.js';\nconst {base64, base64pad, base64url, base64urlpad, __browser} = b64({\n  encode: b => btoa(b.reduce((p, c) => p + String.fromCharCode(c), '')),\n  decode: str => Uint8Array.from(atob(str), c => c.charCodeAt(0)),\n  __browser: true\n});\nexport {\n  base64,\n  base64pad,\n  base64url,\n  base64urlpad,\n  __browser\n};","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { toString } from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  return new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n}\nexport function decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  let decoded;\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[Type.uint.major] = encodeUint;\ncborEncoders[Type.negint.major] = encodeNegint;\ncborEncoders[Type.bytes.major] = encodeBytes;\ncborEncoders[Type.string.major] = encodeString;\ncborEncoders[Type.array.major] = encodeArray;\ncborEncoders[Type.map.major] = encodeMap;\ncborEncoders[Type.tag.major] = encodeTag;\ncborEncoders[Type.float.major] = encodeFloat;\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeCleartext = exports.prepareCleartext = exports.decodeIdentityCID = exports.encodeIdentityCID = exports.toJWSStrings = exports.toJWSPayload = exports.encodePayload = void 0;\nconst Block = __importStar(require(\"multiformats/block\"));\nconst cid_1 = require(\"multiformats/cid\");\nconst sha2_1 = require(\"multiformats/hashes/sha2\");\nconst identity_1 = require(\"multiformats/hashes/identity\");\nconst base64_1 = require(\"multiformats/bases/base64\");\nconst dagCBOR = __importStar(require(\"@ipld/dag-cbor\"));\nconst ENC_BLOCK_SIZE = 24;\nfunction encodePayload(payload) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const block = yield Block.encode({ value: payload, codec: dagCBOR, hasher: sha2_1.sha256 });\n        return {\n            cid: block.cid,\n            linkedBlock: block.bytes,\n        };\n    });\n}\nexports.encodePayload = encodePayload;\nfunction toJWSPayload(payload) {\n    let cid = cid_1.CID.asCID(payload);\n    if (!cid) {\n        cid = cid_1.CID.asCID(payload.cid);\n    }\n    if (!cid) {\n        throw new Error('Payload must be an EncodedPayload or a CID');\n    }\n    return base64_1.base64url.encode(cid.bytes).slice(1);\n}\nexports.toJWSPayload = toJWSPayload;\nfunction toJWSStrings(jose) {\n    if (typeof jose === 'object' &&\n        typeof jose.payload === 'string' &&\n        Array.isArray(jose.signatures)) {\n        return jose.signatures.map((signature) => {\n            if (typeof signature !== 'object' ||\n                typeof signature.protected !== 'string' ||\n                typeof signature.signature !== 'string') {\n                throw new Error('Object must be a DagJWS');\n            }\n            return `${signature.protected}.${jose.payload}.${signature.signature}`;\n        }, []);\n    }\n    throw new Error('Object must be a DagJWS');\n}\nexports.toJWSStrings = toJWSStrings;\nfunction pad(b, blockSize = ENC_BLOCK_SIZE) {\n    const padLen = (blockSize - (b.length % blockSize)) % blockSize;\n    const bytes = new Uint8Array(b.length + padLen);\n    bytes.set(b, 0);\n    return bytes;\n}\nfunction encodeIdentityCID(obj) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const block = yield Block.encode({ value: obj, codec: dagCBOR, hasher: identity_1.identity });\n        return block.cid;\n    });\n}\nexports.encodeIdentityCID = encodeIdentityCID;\nfunction decodeIdentityCID(cid) {\n    cid = cid_1.CID.asCID(cid);\n    if (cid.code !== dagCBOR.code)\n        throw new Error('CID codec must be dag-cbor');\n    if (cid.multihash.code !== identity_1.identity.code)\n        throw new Error('CID must use identity multihash');\n    return dagCBOR.decode(cid.multihash.digest);\n}\nexports.decodeIdentityCID = decodeIdentityCID;\nfunction prepareCleartext(cleartext, blockSize) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return pad((yield encodeIdentityCID(cleartext)).bytes, blockSize);\n    });\n}\nexports.prepareCleartext = prepareCleartext;\nfunction decodeCleartext(b) {\n    return decodeIdentityCID(cid_1.CID.decodeFirst(b)[0]);\n}\nexports.decodeCleartext = decodeCleartext;\n//# sourceMappingURL=index.js.map","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};","import { randomBytes } from '@stablelib/random';\r\n// import * as hash from 'hash.js';\r\nimport { hexDigestMessage } from './utils/index';\r\n\r\n// JWT & utilities\r\nimport { xc20pDirEncrypter, xc20pDirDecrypter, decryptJWE, createJWE } from 'did-jwt';\r\nimport { decodeCleartext, prepareCleartext } from 'dag-jose-utils';\r\n// import * as dagJose from 'dag-jose';\r\nimport * as dagJson from '@ipld/dag-json';\r\n\r\nconst textEncoder = new TextEncoder();\r\nconst textDecoder = new TextDecoder();\r\n\r\nconst REKEYS = 'reKeys';\r\n\r\nimport type { EncryptedPackage } from './types';\r\n\r\nexport class DagJoseCryptor {\r\n\tconstructor(ipfs, proxcryptor, cid?: CID) {\r\n\t\tthis.ipfs = ipfs;\r\n\t\tthis.proxcryptor = proxcryptor;\r\n\t\tthis.rootCID = cid;\r\n\t}\r\n\r\n\tasync updateDag(currentRootCID, tag, newEntry): CID {\r\n\t\t// new Entry CID\r\n\t\tconst newCID = await this.ipfs.dag.put(newEntry, {\r\n\t\t\tpin: true,\r\n\t\t\tformat: dagJson.code // only dagCbor gets served via go-ipfs http right now\r\n\t\t});\r\n\r\n\t\t// get current object from given root\r\n\t\tconst exisitingData = currentRootCID ? await this.ipfs.dag.get(currentRootCID) : {};\r\n\r\n\t\tlet data = {\r\n\t\t\t...exisitingData.value, // keep exisiting data\r\n\t\t\t[tag]: newCID, // push new data onto this object, overwriting if necessary\r\n\t\t\tprev: currentRootCID || false // link to previous data, if existed\r\n\t\t};\r\n\r\n\t\t// save it to the DAG rollup\r\n\t\tconst newRootCID = await this.ipfs.dag.put(data, {\r\n\t\t\tformat: dagJson.code // isnt this the default now anyway?\r\n\t\t});\r\n\r\n\t\treturn newRootCID;\r\n\t}\r\n\r\n\tasync getHashedTags(tag: string, targetPublicKey: Uint8Array): Uint8Array {\r\n\t\t// get senders publicKey\r\n\t\tconst senderPubKey: Uint8Array = await this.proxcryptor.getPublicKey(); // get current/active proxcryptor publicKey\r\n\r\n\t\tconst tagArray: Uint8Array = textEncoder.encode(tag);\r\n\r\n\t\t// TODO: asymmetrically encrypt for their public key instead? Lookup will be longer though\r\n\t\tconst input = new Uint8Array([...tagArray, ...targetPublicKey, ...senderPubKey]);\r\n\r\n\t\t// const hashedPubkeys = hash.sha256().update(input).digest('hex');\r\n\t\t// crypto.subtle.digest('SHA-256', input);\r\n\t\tconst hashedPubkeys = await hexDigestMessage(input);\r\n\t\treturn hashedPubkeys;\r\n\t}\r\n\r\n\tasync getTagReKeysNode(tag) {\r\n\t\tif (!tag) return;\r\n\t\t// get current list of rekeys\r\n\t\tconst resTagNode = await this.ipfs.dag.get(this.rootCID, { path: `/${tag}` });\r\n\t\tlet tagNode = resTagNode.value;\r\n\t\tconst reKeyNode = tagNode[REKEYS];\r\n\t\treturn { reKeyNode, tagNode };\r\n\t}\r\n\r\n\tasync setTagReKeys(tag: string, targetPublicKey: Uint8Array) {\r\n\t\t// put key is special because it is not encrypted\r\n\t\t// but gets added to rootCID\r\n\t\t// so targets can access their decryption keys\r\n\t\t// key = hash(target public key + tag) <-- would be the same across apps, correlation possible\r\n\t\t// key = hash(sender public key + target public key + tag) <-- unique across apps\r\n\t\tif (!tag) return;\r\n\r\n\t\tconst hashedPubkeys = await this.getHashedTags(tag, targetPublicKey); // hex string\r\n\r\n\t\tlet { reKeyNode, tagNode } = await this.getTagReKeysNode(tag);\r\n\r\n\t\t// generate a re-encryption key for this targetPublicKey\r\n\t\tconst targetsReKey = await this.proxcryptor.generateReKey(targetPublicKey, tag);\r\n\r\n\t\t// now reencrypt using the encrypted msg + reKey\r\n\t\tconst targetsReEncryptedKey = await this.proxcryptor.reEncrypt(\r\n\t\t\ttargetPublicKey,\r\n\t\t\ttagNode.encryptedKey,\r\n\t\t\ttargetsReKey\r\n\t\t);\r\n\r\n\t\t// lookup dictionary: Map of (key=hash, value=reEncrKey)\r\n\t\treKeyNode[hashedPubkeys] = targetsReEncryptedKey;\r\n\r\n\t\t// update reKeyNode in Tag object\r\n\t\ttagNode = { ...tagNode, [REKEYS]: reKeyNode };\r\n\r\n\t\t// update CID rollup\r\n\t\tthis.rootCID = await this.updateDag(this.rootCID, tag, tagNode);\r\n\t\treturn this.rootCID;\r\n\t}\r\n\r\n\tasync checkAccess(tag: string, targetPublicKey: Uint8Array) {\r\n\t\tif (!tag) return;\r\n\r\n\t\t// check if this target is on the ReKey list\r\n\t\tconst hashedPubkeys = await this.getHashedTags(tag, targetPublicKey); // hex string\r\n\t\tlet { reKeyNode, tagNode } = await this.getTagReKeysNode(tag);\r\n\r\n\t\t// lookup in dictionary: Map of (key=hash, value=reEncrKey)\r\n\t\tif (hashedPubkeys in reKeyNode) return reKeyNode[hashedPubkeys]; // access was granted\r\n\t\t// else\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync decryptFromTagNode(tagNode) {\r\n\t\t/**\r\n\t\tJust need to decrypt it using the de-proxcryptor, here's how:\r\n\t\t1. Get the reKey from the tagNode that matches the hashTag of this pubkey\r\n\t\thashTag comes from proxcryptor.getHashedTags()\r\n\t\t2. Take that reKey together with the cid of the Tag and call proxcryptor.get(cid, reKey)\r\n\t\t3. Result is the decrypted data\r\n\t\t*/\r\n\t\tconst pubKey = await this.proxcryptor.getPublicKey();\r\n\t\tconst hashTag = await this.getHashedTags(tagNode.tag, pubKey);\r\n\r\n\t\t// validate\r\n\t\tif (!(hashTag in tagNode[REKEYS])) return false; // no reKey avaialble to decrypt for this prox public_key\r\n\r\n\t\t// lookUp\r\n\t\tconst reKey = tagNode[REKEYS][hashTag];\r\n\t\treturn await this.get(tagNode.encryptedData, reKey);\r\n\t}\r\n\r\n\tasync put(secretz: object, tag: string, schema = {}) {\r\n\t\t// Create a key, encrypt and store a block, then load and decrypt it:\r\n\t\tconst symmetricKey = randomBytes(32); // our random secret key\r\n\t\tconst selfEncryptedSymmetricKey = await this.proxcryptor.selfEncrypt(symmetricKey, tag);\r\n\t\tconst cid = await this.storeDAGEncrypted(secretz, symmetricKey); // for when arweave can put DAG objects, see https://github.com/ArweaveTeam/arweave/pull/338\r\n\t\t// const cid = await this.storeIPFSEncrypted(secretz, symmetricKey);\r\n\r\n\t\t// pin encryptedData cid\r\n\t\tlet pinned = await this.ipfs.pin.add(cid, { recursive: true });\r\n\r\n\t\tlet prev = false;\r\n\t\ttry {\r\n\t\t\tlet res = await this.ipfs.dag.resolve(`${this.rootCID}/${tag}`);\r\n\t\t\tprev = res.cid;\r\n\t\t} catch (error) {\r\n\t\t\tprev = false;\r\n\t\t}\r\n\t\tconst newEntry = {\r\n\t\t\ttag,\r\n\t\t\tschema,\r\n\t\t\ttimestamp: +new Date(), // unary to milliseconds string\r\n\t\t\tencryptedData: cid, // link to the encryptedData saved in IPLD/IPFS\r\n\t\t\tencryptedKey: selfEncryptedSymmetricKey, // the tranform reCryptable symmetric key\r\n\t\t\t[REKEYS]: {}, // new blank map for reCryptabled keys\r\n\t\t\tprev\r\n\t\t};\r\n\r\n\t\tthis.rootCID = await this.updateDag(this.rootCID, tag, newEntry);\r\n\t}\r\n\r\n\tasync get(cid, re_encrypted_message) {\r\n\t\t// decrypt\r\n\t\tconst symmetricKey = await this.proxcryptor.reDecrypt(re_encrypted_message);\r\n\t\tconst decoded = await this.loadEncrypted(cid, symmetricKey);\r\n\t\treturn decoded;\r\n\t}\r\n\r\n\tasync selfDecrypt(data) {\r\n\t\ttry {\r\n\t\t\tconst symmetricKey = await this.proxcryptor.selfDecrypt(data.encryptedKey);\r\n\t\t\tconst decoded = await this.loadEncrypted(data.encryptedData, symmetricKey); // waits until arweave supports DAG put\r\n\t\t\t// const decoded = await this.loadIPFSEncrypted(data.encryptedData, symmetricKey);\r\n\t\t\treturn decoded;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('In selfDecrypt', error);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// Encrypt and store a payload using a secret key:\r\n\tstoreDAGEncrypted = async (payload, key) => {\r\n\t\tconst jwe = await this.makeJWE(payload, key);\r\n\t\t/* Let IPFS store the bytes using the DAG-JOSE codec and return a CID\r\n\t\t * Note: here it is format: codecName\r\n\t\t * In ipfs.create({ipld: { codecs: codec }}) (used to be format, but name changed)\r\n\t\t * Changes to storeCodec/inputCodec in upcomign chg  https://github.com/ipfs/js-ipfs/blob/a960d28d4689c794889f91c9307f0aeb0d6a45f3/docs/core-api/DAG.md\r\n\t\t */\r\n\t\tconst cid = await this.ipfs.dag.put(jwe, {\r\n\t\t\t// TODO: Wait until ipfs-go codec lands? https://github.com/ipfs/js-ipfs/pull/3917\r\n\t\t\t// format: 'dag-jose' // dagJose.code, // codec code ensures this jose CID is saved\r\n\t\t\thashAlg: 'sha2-256'\r\n\t\t});\r\n\t\treturn cid;\r\n\t};\r\n\r\n\tstoreIPFSEncrypted = async (payload, key) => {\r\n\t\tconst jwe = await this.makeJWE(payload, key);\r\n\t\tconst res = await this.ipfs.add(JSON.stringify(jwe), {\r\n\t\t\tcidVersion: 1,\r\n\t\t\tpin: true\r\n\t\t});\r\n\t\treturn res.cid;\r\n\t};\r\n\r\n\tmakeJWE = async (payload, key) => {\r\n\t\t// self enct\r\n\t\tconst dirEncrypter = xc20pDirEncrypter(key);\r\n\t\t// prepares a cleartext object to be encrypted in a JWE\r\n\t\tconst cleartext = await prepareCleartext(payload);\r\n\t\t// encrypt into JWE container layout using secret key\r\n\t\tconst jwe = await createJWE(cleartext, [dirEncrypter]);\r\n\t\treturn jwe;\r\n\t};\r\n\r\n\t// Load an encrypted block from a CID and decrypt the payload using a secret key:\r\n\tloadEncrypted = async (cid, key) => {\r\n\t\tconst dirDecrypter = xc20pDirDecrypter(key);\r\n\t\tconst retrieved = await this.ipfs.dag.get(cid);\r\n\t\tconst decryptedData = await decryptJWE(retrieved.value, dirDecrypter);\r\n\t\treturn decodeCleartext(decryptedData);\r\n\t};\r\n}\r\n"],"names":["wipe_1","require$$0","require","require$$1","require$$2","src","base","_brrp__multiformats_scope_baseX","coerce","fromString","toString","ComposedDecoder","Encoder","Decoder","from","Codec","basex","decode","encode","identity","base32","base58btc","base64","base64pad","base64url","base64urlpad","encode_1","MSB","REST","MSBALL","INT","read","MSB$1","REST$1","N1","N2","N3","N4","N5","N6","N7","N8","N9","length","varint","_brrp_varint","encodeTo","encodingLength","create","varint.encodingLength","varint.encodeTo","Digest","Hasher","Digest.create","sha","sha256","sha512","code","name","base2","base8","base10","base16","base36","bases","binary_1","ROUNDS","streamXOR","stream","compare","require$$3","require$$4","u8a.toString","u8a.fromString","u8a.concat","XChaCha20Poly1305","randomBytes","equals","varint.decode","equalBytes","baseX","readonly","Digest.equals","Digest.decode","Digest.Digest","Block","binary.equals","__browser","isBuffer","textEncoder","uint.readUint8","uint.readUint16","uint.readUint32","uint.readUint64","uint.encodeUintValue","uint.uintBoundaries","toToken","uint.encodeUint","uint.decodeUint8","uint.decodeUint16","uint.decodeUint32","uint.decodeUint64","negint.decodeNegint8","negint.decodeNegint16","negint.decodeNegint32","negint.decodeNegint64","bytes.decodeBytesCompact","bytes.decodeBytes8","bytes.decodeBytes16","bytes.decodeBytes32","bytes.decodeBytes64","string.decodeStringCompact","string.decodeString8","string.decodeString16","string.decodeString32","string.decodeString64","array.decodeArrayCompact","array.decodeArray8","array.decodeArray16","array.decodeArray32","array.decodeArray64","array.decodeArrayIndefinite","map.decodeMapCompact","map.decodeMap8","map.decodeMap16","map.decodeMap32","map.decodeMap64","map.decodeMapIndefinite","tag.decodeTagCompact","tag.decodeTag8","tag.decodeTag16","tag.decodeTag32","tag.decodeTag64","float.decodeUndefined","float.decodeFloat16","float.decodeFloat32","float.decodeFloat64","float.decodeBreak","cborg.Token","cborg.Type","cborg.encode","cborg.decode","this","prepareCleartext","decodeCleartext","dagJson.code"],"mappings":"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UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AACX,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;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,UAAM,IAAI;AACV,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,QAAI,EAAE;AACN,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AACX,UAAM,KAAK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"}